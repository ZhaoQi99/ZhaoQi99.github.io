{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/fxr/10_141_10_245_openvpn_remote_access_l3.ovpn","path":"fxr/10_141_10_245_openvpn_remote_access_l3.ovpn","modified":0,"renderable":0},{"_id":"source/fxr/desktop-ukvmhed_openvpn_remote_access_l3.ovpn","path":"fxr/desktop-ukvmhed_openvpn_remote_access_l3.ovpn","modified":0,"renderable":0},{"_id":"source/fxr/snnu1_openvpn_remote_access_l3.ovpn","path":"fxr/snnu1_openvpn_remote_access_l3.ovpn","modified":0,"renderable":0},{"_id":"source/images/20170821012136233.jpg","path":"images/20170821012136233.jpg","modified":0,"renderable":0},{"_id":"source/images/20170823002504047.jpg","path":"images/20170823002504047.jpg","modified":0,"renderable":0},{"_id":"source/images/20171119110410660.jpg","path":"images/20171119110410660.jpg","modified":0,"renderable":0},{"_id":"source/images/20171202204712994.jpg","path":"images/20171202204712994.jpg","modified":0,"renderable":0},{"_id":"source/images/20171205201558358.jpg","path":"images/20171205201558358.jpg","modified":0,"renderable":0},{"_id":"source/images/20171205201607868.jpg","path":"images/20171205201607868.jpg","modified":0,"renderable":0},{"_id":"source/images/20171205201613806.jpg","path":"images/20171205201613806.jpg","modified":0,"renderable":0},{"_id":"source/images/20171205201625796.jpg","path":"images/20171205201625796.jpg","modified":0,"renderable":0},{"_id":"source/images/20180212230359.jpg","path":"images/20180212230359.jpg","modified":0,"renderable":0},{"_id":"source/images/20171205202005054.jpg","path":"images/20171205202005054.jpg","modified":0,"renderable":0},{"_id":"source/images/20180410113516.jpg","path":"images/20180410113516.jpg","modified":0,"renderable":0},{"_id":"source/images/20180410113758.jpg","path":"images/20180410113758.jpg","modified":0,"renderable":0},{"_id":"source/images/20180410115944.jpg","path":"images/20180410115944.jpg","modified":0,"renderable":0},{"_id":"source/images/20180410140626.jpg","path":"images/20180410140626.jpg","modified":0,"renderable":0},{"_id":"source/images/20180426015859.jpg","path":"images/20180426015859.jpg","modified":0,"renderable":0},{"_id":"source/images/20180410140910.jpg","path":"images/20180410140910.jpg","modified":0,"renderable":0},{"_id":"source/images/6630868754095812824.jpg","path":"images/6630868754095812824.jpg","modified":0,"renderable":0},{"_id":"source/images/Banker's Algorithm1.jpg","path":"images/Banker's Algorithm1.jpg","modified":0,"renderable":0},{"_id":"source/images/Banker's Algorithm3.jpg","path":"images/Banker's Algorithm3.jpg","modified":0,"renderable":0},{"_id":"source/images/Banker's Algorithm2.jpg","path":"images/Banker's Algorithm2.jpg","modified":0,"renderable":0},{"_id":"source/images/Screenshot_2018-03-13-09-32-23-47.jpg","path":"images/Screenshot_2018-03-13-09-32-23-47.jpg","modified":0,"renderable":0},{"_id":"source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":0},{"_id":"source/images/securitycode.jpg","path":"images/securitycode.jpg","modified":0,"renderable":0},{"_id":"source/images/send_email.jpg","path":"images/send_email.jpg","modified":0,"renderable":0},{"_id":"source/images/trainticket1.jpg","path":"images/trainticket1.jpg","modified":0,"renderable":0},{"_id":"source/images/trainticket2.jpg","path":"images/trainticket2.jpg","modified":0,"renderable":0},{"_id":"source/images/20180213013700.jpg","path":"images/20180213013700.jpg","modified":0,"renderable":0},{"_id":"source/images/20180213014855.jpg","path":"images/20180213014855.jpg","modified":0,"renderable":0},{"_id":"source/images/20180410134752.jpg","path":"images/20180410134752.jpg","modified":0,"renderable":0},{"_id":"source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":0},{"_id":"source/images/spiderticket2.jpg","path":"images/spiderticket2.jpg","modified":0,"renderable":0},{"_id":"source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":0},{"_id":"source/images/20180212235815.jpg","path":"images/20180212235815.jpg","modified":0,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0},{"_id":"themes/next-7.0.1/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"source/images/spiderticket.jpg","path":"images/spiderticket.jpg","modified":0,"renderable":0},{"_id":"source/images/20180410134416.jpg","path":"images/20180410134416.jpg","modified":0,"renderable":0},{"_id":"themes/next-7.0.1/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/next-boot.js","path":"js/src/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/LICENSE","path":"lib/algolia-instant-search/LICENSE","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/README.md","path":"lib/algolia-instant-search/README.md","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/instantsearch.min.css.map","path":"lib/algolia-instant-search/instantsearch.min.css.map","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fancybox/README.md","path":"lib/fancybox/README.md","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/LICENSE","path":"lib/jquery_lazyload/LICENSE","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/README.md","path":"lib/pace/README.md","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/reading_progress/package.json","path":"lib/reading_progress/package.json","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/reading_progress/reading_progress.min.js","path":"lib/reading_progress/reading_progress.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/images/trainticket3.jpg","path":"images/trainticket3.jpg","modified":0,"renderable":0},{"_id":"themes/next-7.0.1/source/lib/fancybox/LICENSE","path":"lib/fancybox/LICENSE","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"source/fxr/pic1.gif","path":"fxr/pic1.gif","modified":0,"renderable":0},{"_id":"themes/next-7.0.1/source/js/src/schemes/muse.js","path":"js/src/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/docs/ALGOLIA-SEARCH.CN.md","path":"lib/algolia-instant-search/docs/ALGOLIA-SEARCH.CN.md","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/docs/ALGOLIA-SEARCH.md","path":"lib/algolia-instant-search/docs/ALGOLIA-SEARCH.md","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fancybox/source/jquery.fancybox.min.css","path":"lib/fancybox/source/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fancybox/source/jquery.fancybox.min.js","path":"lib/fancybox/source/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"source/images/about/b.jpg","path":"images/about/b.jpg","modified":0,"renderable":0},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165911.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165911.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170037.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170037.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165744.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165744.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165717.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165717.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165712.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165712.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165949.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165949.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165649.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165649.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724153430.jpg","path":"images/Ubuntu Server 16.04/IMG20180724153430.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170940.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170940.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724153454.jpg","path":"images/Ubuntu Server 16.04/IMG20180724153454.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170434.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170434.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170318.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170318.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134519.jpg","path":"images/Ubuntu Server 16.04/IMG20180724134519.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134545.jpg","path":"images/Ubuntu Server 16.04/IMG20180724134545.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170442.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170442.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724153439.jpg","path":"images/Ubuntu Server 16.04/IMG20180724153439.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170555.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170555.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170325.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170325.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170342.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170342.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170421.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170421.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170452.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170452.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170737.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170737.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170157.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170157.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134421.jpg","path":"images/Ubuntu Server 16.04/IMG20180724134421.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724153448.jpg","path":"images/Ubuntu Server 16.04/IMG20180724153448.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170255.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170255.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170145.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170145.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170137.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170137.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724154325.jpg","path":"images/Ubuntu Server 16.04/IMG20180724154325.jpg","modified":0,"renderable":0},{"_id":"source/images/about/a.jpg","path":"images/about/a.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165725.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165725.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170228.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170228.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170121.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170121.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170234.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170234.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134100.jpg","path":"images/Ubuntu Server 16.04/IMG20180724134100.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170359.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170359.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170331.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170331.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134039.jpg","path":"images/Ubuntu Server 16.04/IMG20180724134039.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170208.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170208.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165801.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165801.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165615.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165615.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170544.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170544.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165919.jpg","path":"images/Ubuntu Server 16.04/IMG20180723165919.jpg","modified":0,"renderable":0},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170657.jpg","path":"images/Ubuntu Server 16.04/IMG20180723170657.jpg","modified":0,"renderable":0},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/instantsearch.min.js.map","path":"lib/algolia-instant-search/instantsearch.min.js.map","modified":0,"renderable":1},{"_id":"source/fxr/openvpn-install-2.4.6-I602.exe","path":"fxr/openvpn-install-2.4.6-I602.exe","modified":0,"renderable":0}],"Cache":[{"_id":"source/404.html","hash":"54880c15bdaf3bf985f05d5b5d9b163fef9a7f08","modified":1553769916792},{"_id":"source/CNAME","hash":"c22c1c610849413db9e06679826d042566f1bc64","modified":1553769916793},{"_id":"source/baidu_verify_XnApqVNrb7.html","hash":"1dc796039888c1d5242d5fbf5463a77849777cf4","modified":1553769916822},{"_id":"source/baidu_verify_hIGNFAMYa1.html","hash":"c4e93d3fb4aad8861d7ad3c377e16c35a404cd83","modified":1553769916823},{"_id":"source/robots.txt","hash":"82ee595176d13055e1315986c9bee82f99cc6c9a","modified":1553769917408},{"_id":"themes/next-7.0.1/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1553754161642},{"_id":"themes/next-7.0.1/.all-contributorsrc","hash":"8c7dcfc8c65a2679c94b7dd2371b7ef5dda69fec","modified":1553754161641},{"_id":"themes/next-7.0.1/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1553754161644},{"_id":"themes/next-7.0.1/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1553754161643},{"_id":"themes/next-7.0.1/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1553754161644},{"_id":"themes/next-7.0.1/.gitignore","hash":"3558a8b174618c7a643aceb13233edd729813f9a","modified":1553754161654},{"_id":"themes/next-7.0.1/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1553754161655},{"_id":"themes/next-7.0.1/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1553754161656},{"_id":"themes/next-7.0.1/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1553754161656},{"_id":"themes/next-7.0.1/README.md","hash":"bb264f1ca8853eef0d4f1f8f15bd8c707d15b3ca","modified":1553754161657},{"_id":"themes/next-7.0.1/bower.json","hash":"1be57277396806031619b0f625cbeba0224a7cb5","modified":1553754161659},{"_id":"themes/next-7.0.1/_config.yml","hash":"cd06ab81226d98ac297de2624c1746bce3ddd2fd","modified":1553769632661},{"_id":"themes/next-7.0.1/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1553754161660},{"_id":"themes/next-7.0.1/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1553754161680},{"_id":"themes/next-7.0.1/package.json","hash":"f3b4ef65214cec9c37acd10ef080526fb1ea14bb","modified":1553754161777},{"_id":"source/_drafts/Untitled.md","hash":"d75d39195e28b25c7bde7f03417fe65bb54d4980","modified":1553769916798},{"_id":"source/about/index.md","hash":"d428d58da10bdcb9e4e15318a68f391ec520ff83","modified":1553769916822},{"_id":"source/_posts/01-复杂度2 Maximum Subsequence Sum（25 分）.md","hash":"4676c049facb59bacacd98b89e0622d24894d632","modified":1553769916799},{"_id":"source/EasyLife/index.md","hash":"2c7f6a2b51a727fe3a3c5b15ffca6c83cc077204","modified":1553769916796},{"_id":"source/_posts/2017百度之星资格赛 1003 度度熊与邪恶大魔王（完全背包）.md","hash":"027b14d98f8380c55e5bd75f65d9c01e8dc2f973","modified":1553769916800},{"_id":"source/_posts/C#中使用SmtpClient发送邮件 .md","hash":"d145ad31db3120ac50e999d65ef696494cc4c308","modified":1553769916801},{"_id":"source/_posts/C#中自己生成验证码.md","hash":"199bf7f41ccfa685fc9ed081bc71c1bfa221f2dc","modified":1553769916802},{"_id":"source/_posts/Github pages个人域名添加SSL.md","hash":"c98deccf7c1c72f6fcdfbdfdf150d22db30baa5e","modified":1553769916802},{"_id":"source/_posts/Hexo+Github pages博客绑定中文域名.md","hash":"8b4853cc1da1f7cd0af6d1afde896ed58cd76a42","modified":1553769916803},{"_id":"source/_posts/L2-3.名人堂与代金券.md","hash":"2b538b13dc203ea862e76a827eff6a308eb5df54","modified":1553769916804},{"_id":"source/_posts/ThinkServer RD650安装Ubuntu Server 16.04.md","hash":"b2328a7d8495c8a84a18cb1823366e4faece35fb","modified":1553769916805},{"_id":"source/_posts/人生苦短,我用Python.md","hash":"b73a3f261ffc93f58dff4b03de4c4900e6d636e8","modified":1553769916806},{"_id":"source/_posts/使用c#中的HttpWebRequest实现12306余票查询.md","hash":"5e4404b281521424e311018c5d902d09990d8717","modified":1553769916807},{"_id":"source/_posts/利用Python画小树和森林（宽度优先绘制+深度优先绘制).md","hash":"017bcb21a480a0b6c8290d345c61da351b5100e0","modified":1553769916808},{"_id":"source/_posts/利用Python的turtle库绘制玫瑰.md","hash":"50d9d59691c96905c509dab02a171f774996f2ae","modified":1553769916809},{"_id":"source/_posts/期末考试_细胞自动机.md","hash":"204d737e42612acd2d0c72c28519e74af09c81f6","modified":1553769916811},{"_id":"source/_posts/用C#爬虫实现爬取校园最新通知.md","hash":"2cfc47934c8778c164e935f1097b9b2f5ea0e998","modified":1553769916812},{"_id":"source/_posts/用Python实现校园通知更新提醒.md","hash":"8d6818865b2324425d13ae9e7f41e13185405472","modified":1553769916812},{"_id":"source/_posts/用Python绘制七段数码管.md","hash":"d016f81c99f82cff75bc4dc40ea3030900b53177","modified":1553769916814},{"_id":"source/_posts/第一周编程题_分数.md","hash":"7c1c1e366c789e32a883b1ee1a678d6fd1dbee5d","modified":1553769916814},{"_id":"source/_posts/第三周编程题_查找里程.md","hash":"f75e89481db926d32d53e960a87add9f450e84cd","modified":1553769916815},{"_id":"source/_posts/第三周讨论区_学生成绩的数据结构.md","hash":"292627823ddfe095298261f452e5623f2fd9139d","modified":1553769916816},{"_id":"source/_posts/第二周编程题_有秒计时的数字时钟.md","hash":"f75d03c45a3878820d4d0d47102c9d0e4b47d806","modified":1553769916816},{"_id":"source/_posts/第五周编程题_多项式加法.md","hash":"cb8ceb0c69f365a6e5457001b2a687b663b128c9","modified":1553769916817},{"_id":"source/_posts/第六周编程题_GPS数据处理.md","hash":"e25d9ac20d022cbd66dc2c20e612518c356a2d73","modified":1553769916818},{"_id":"source/_posts/第六周编程题_单词长度.md","hash":"3f2dc322d44cc8b6435b2ff866e23c6c29f63c8f","modified":1553769916819},{"_id":"source/_posts/第四周编程题_实现一个表达MP3的媒体类型.md","hash":"2b63411c45fe81ffda94fd76dfb9485e5330b27d","modified":1553769916820},{"_id":"source/categories/index.md","hash":"9ee172697519001ea697b025fc04ef0e88015f09","modified":1553769916824},{"_id":"source/_posts/银行家算法(使用DFS找出所有安全序列).md","hash":"add377c6fae7ab338a61552212a4bc151bfcdc10","modified":1553769916820},{"_id":"source/fxr/Git.md","hash":"a3cc81b884e03e28f7c96a3bd511d84628f3cf16","modified":1554300141759},{"_id":"source/fxr/10_141_10_245_openvpn_remote_access_l3.ovpn","hash":"8274c2ef55a6d525ae751ea689e6dbf12eb485ba","modified":1553769916825},{"_id":"source/fxr/desktop-ukvmhed_openvpn_remote_access_l3.ovpn","hash":"2d776313c0420bfa1e41192c3e704ee29949aabe","modified":1554265552942},{"_id":"source/fxr/index.md","hash":"ac7c698a1156f4bc8771a486382fca9fc62e21f6","modified":1554300304643},{"_id":"source/fxr/snnu1_openvpn_remote_access_l3.ovpn","hash":"a9b2cfb9bef3c5dceb485d9c1184d77efb181f89","modified":1553769916966},{"_id":"source/fxr/school.md","hash":"dbabd31b910c2dbdabf7fd41fab492d15dc5388a","modified":1554308803853},{"_id":"source/images/20170821012136233.jpg","hash":"7fba20b9584f0f88d9d74ce15ee56829b694707e","modified":1553769916968},{"_id":"source/images/20170823002504047.jpg","hash":"85550b8cef1e2422fbe08e78b986e83ee0a024d3","modified":1553769916969},{"_id":"source/fxr/校园网.md","hash":"86da95c2ea8be354fe07950ad39da8dde3095751","modified":1554298831388},{"_id":"source/images/20171119110410660.jpg","hash":"787d7d64368d5b112eff47769592310b75b821fc","modified":1553769916971},{"_id":"source/images/20171202204712994.jpg","hash":"e599ec2a1a753f46efb9d94bf6b91bb0dd5df9ee","modified":1553769916972},{"_id":"source/images/20171205201558358.jpg","hash":"e930bf03a7624ddd7bfe1f06b8d7e5fa316d6afe","modified":1553769916973},{"_id":"source/images/20171205201607868.jpg","hash":"10dda8e253ee17f2bd65dd9b1d054ed0d6ade72b","modified":1553769916973},{"_id":"source/images/20171205201613806.jpg","hash":"30312bc5449fa2f9e311b5203d915c4f7a207f0f","modified":1553769916974},{"_id":"source/images/20171205201625796.jpg","hash":"4dbd81a0fc989f1ab6bc136ee8fd57d0221e2587","modified":1553769916975},{"_id":"source/images/20180212230359.jpg","hash":"7129d13c7a776d88bf7196e894010ff2a9cd242d","modified":1553769916977},{"_id":"source/images/20171205202005054.jpg","hash":"7d554af0d348b2ad925e7a119c1c08910b710226","modified":1553769916976},{"_id":"source/images/20180410113516.jpg","hash":"b40d5ecc292a9e7c161667f665d02d5548153f63","modified":1553769916981},{"_id":"source/images/20180410113758.jpg","hash":"911e942cd52999161a8f9562be55bad425e3e95e","modified":1553769916982},{"_id":"source/images/20180410115944.jpg","hash":"1828eb75b932b59be1394acbe218c9a42d98c7c7","modified":1553769916983},{"_id":"source/images/20180410140626.jpg","hash":"0af3d0ab8fc97ba9402bbc9ea9570268d9be6bfb","modified":1553769916988},{"_id":"source/images/20180426015859.jpg","hash":"17412e7093190b7b8addc9cbfe1ad7a3bde4709c","modified":1553769916990},{"_id":"source/images/20180410140910.jpg","hash":"b4f439592f3b473a0a028cd60af4216a97c95edd","modified":1553769916989},{"_id":"source/images/6630868754095812824.jpg","hash":"0b51ec0fc07899cc62a76e945c30f8cc4b13560d","modified":1553769916991},{"_id":"source/images/Banker's Algorithm1.jpg","hash":"6484c43ad2ae800a8358eda195ab3312592f6f74","modified":1553769916992},{"_id":"source/images/Banker's Algorithm3.jpg","hash":"3544a799bf19cbcad4f0ef79730ff6c0707620d8","modified":1553769916994},{"_id":"source/images/Banker's Algorithm2.jpg","hash":"7ead2135c3568f7c3d85208db0d0e0fa925f396d","modified":1553769916993},{"_id":"source/images/Screenshot_2018-03-13-09-32-23-47.jpg","hash":"00634e8b7497315785317a8bdcc867b4192a9f31","modified":1553769916996},{"_id":"source/images/favicon.png","hash":"bba9b2842dc0010550824fbc76831cd7b2e261d5","modified":1553769917397},{"_id":"source/images/securitycode.jpg","hash":"260e20251fe8ecc00181b7cfd13767711ef124b5","modified":1553769917398},{"_id":"source/images/send_email.jpg","hash":"271da06e73ee6a0f734fcfa2e83a76685bcea9b4","modified":1553769917399},{"_id":"source/images/trainticket1.jpg","hash":"d3c20ffcaf5570e85d57a2119b5edb71b88e4b95","modified":1553769917402},{"_id":"source/images/trainticket2.jpg","hash":"aea66af337d79a0cd513d85fc573d796a49265bc","modified":1553769917404},{"_id":"source/tags/index.md","hash":"ec6717ecdbcb585157ec46cdb5e91e97bc47ce68","modified":1553769917409},{"_id":"themes/next-7.0.1/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1553754161645},{"_id":"themes/next-7.0.1/.github/CONTRIBUTING.md","hash":"738ec0b2e1ec35978269f6320c1f30f189f20b92","modified":1553754161646},{"_id":"themes/next-7.0.1/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1553754161648},{"_id":"themes/next-7.0.1/.github/PULL_REQUEST_TEMPLATE.md","hash":"492b2c159d871e5b5d4c70d259f36e603afe192d","modified":1553754161653},{"_id":"themes/next-7.0.1/.github/stale.yml","hash":"dbdbc897d0d959b1508c14211240bbfcdd1b7edc","modified":1553754161654},{"_id":"themes/next-7.0.1/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1553754161662},{"_id":"themes/next-7.0.1/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1553754161663},{"_id":"themes/next-7.0.1/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1553754161663},{"_id":"themes/next-7.0.1/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1553754161665},{"_id":"themes/next-7.0.1/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1553754161665},{"_id":"themes/next-7.0.1/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1553754161666},{"_id":"themes/next-7.0.1/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1553754161667},{"_id":"themes/next-7.0.1/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1553754161667},{"_id":"themes/next-7.0.1/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1553754161682},{"_id":"themes/next-7.0.1/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1553754161681},{"_id":"themes/next-7.0.1/languages/fr.yml","hash":"d37a5d82b499a2f082fe9bbf3ad9f11b36b6b837","modified":1553754161683},{"_id":"themes/next-7.0.1/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1553754161683},{"_id":"themes/next-7.0.1/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1553754161682},{"_id":"themes/next-7.0.1/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1553754161685},{"_id":"themes/next-7.0.1/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1553754161687},{"_id":"themes/next-7.0.1/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1553754161686},{"_id":"themes/next-7.0.1/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1553754161687},{"_id":"themes/next-7.0.1/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1553754161688},{"_id":"themes/next-7.0.1/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1553754161689},{"_id":"themes/next-7.0.1/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1553754161689},{"_id":"themes/next-7.0.1/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1553754161691},{"_id":"themes/next-7.0.1/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1553754161690},{"_id":"themes/next-7.0.1/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1553754161691},{"_id":"themes/next-7.0.1/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1553754161693},{"_id":"themes/next-7.0.1/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1553754161692},{"_id":"themes/next-7.0.1/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1553754161693},{"_id":"themes/next-7.0.1/layout/_layout.swig","hash":"74701fcf2303d59400587436ab4c244e04df7ad9","modified":1553754161698},{"_id":"themes/next-7.0.1/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1553754161772},{"_id":"themes/next-7.0.1/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1553754161773},{"_id":"themes/next-7.0.1/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1553754161773},{"_id":"themes/next-7.0.1/layout/page.swig","hash":"d8a6cbf6f611c5d68d5da430cb6dc7010ff2c7e0","modified":1553754161774},{"_id":"themes/next-7.0.1/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1553754161775},{"_id":"themes/next-7.0.1/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1553754161776},{"_id":"themes/next-7.0.1/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1553754161776},{"_id":"themes/next-7.0.1/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1553754161782},{"_id":"themes/next-7.0.1/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1553754161781},{"_id":"themes/next-7.0.1/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1553754161964},{"_id":"themes/next-7.0.1/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1553754161963},{"_id":"themes/next-7.0.1/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1553754161965},{"_id":"source/images/20180213013700.jpg","hash":"f87ebc7d714ec097f6622affb2c1b0a6b538dd44","modified":1553769916979},{"_id":"source/images/20180213014855.jpg","hash":"4d67d2bc105faad090731d569bd82cd762ee2f9e","modified":1553769916981},{"_id":"source/images/20180410134752.jpg","hash":"024a5c3a4b50d746764540c098b8710bea0e3863","modified":1553769916987},{"_id":"source/images/alipay.jpg","hash":"cf9d8b83884813def1d6df99ac6661e032623263","modified":1553769917395},{"_id":"source/images/spiderticket2.jpg","hash":"1e260017a1b0f6c07ecd90e733c0213bbda5760b","modified":1553769917402},{"_id":"source/images/wechatpay.png","hash":"7b77ae34ab12297b058f7d5eb6c6364ddddba3c0","modified":1553769917408},{"_id":"themes/next-7.0.1/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1553754161661},{"_id":"themes/next-7.0.1/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553754161914},{"_id":"source/EasyLife/V0.1.0/Help.md","hash":"b61aca2e19c8dfb84839ee735f556472c722ebb3","modified":1553769916795},{"_id":"source/EasyLife/V0.1.0/index.md","hash":"dbebde49ce3cfcb0f31b5bf6702ce4b338a879a9","modified":1553769916796},{"_id":"source/images/20180212235815.jpg","hash":"ccf34fa7c7e108f205c84021bd6f14d179371b37","modified":1553769916978},{"_id":"source/images/avatar.png","hash":"473a1fe6e86605b1fd9f45aaa111e07868ebe195","modified":1553769917397},{"_id":"themes/next-7.0.1/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1553754161649},{"_id":"themes/next-7.0.1/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1553754161650},{"_id":"themes/next-7.0.1/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1553754161651},{"_id":"themes/next-7.0.1/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1553754161652},{"_id":"themes/next-7.0.1/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1553754161669},{"_id":"themes/next-7.0.1/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1553754161669},{"_id":"themes/next-7.0.1/docs/ru/README.md","hash":"c5c01015821a88de16972b8c249d84235a22c1bc","modified":1553754161670},{"_id":"themes/next-7.0.1/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1553754161671},{"_id":"themes/next-7.0.1/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1553754161672},{"_id":"themes/next-7.0.1/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1553754161673},{"_id":"themes/next-7.0.1/docs/zh-CN/CONTRIBUTING.md","hash":"9ae0b80d4303988da78091fe64b037be57b29a68","modified":1553754161674},{"_id":"themes/next-7.0.1/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1553754161675},{"_id":"themes/next-7.0.1/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1553754161676},{"_id":"themes/next-7.0.1/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1553754161676},{"_id":"themes/next-7.0.1/docs/zh-CN/MATH.md","hash":"b76ccbc658024e86639cfa5f8a3817647fc8d651","modified":1553754161678},{"_id":"themes/next-7.0.1/docs/zh-CN/README.md","hash":"2c7a677b1670f42480b884d1a33cc2ca2eecfd69","modified":1553754161678},{"_id":"themes/next-7.0.1/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1553754161679},{"_id":"themes/next-7.0.1/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1553754161695},{"_id":"themes/next-7.0.1/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1553754161697},{"_id":"themes/next-7.0.1/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1553754161697},{"_id":"themes/next-7.0.1/layout/_scripts/commons.swig","hash":"d66bc7ec3cc03f60fcc7d555368a5b9b010f7f11","modified":1553754161730},{"_id":"themes/next-7.0.1/layout/_scripts/exturl.swig","hash":"d359e638a86bd9664101c48e9344f21ec96e6a15","modified":1553754161731},{"_id":"themes/next-7.0.1/layout/_scripts/next-boot.swig","hash":"82032af75320f496ae40fce5d0781e05eb96453c","modified":1553754161731},{"_id":"themes/next-7.0.1/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1553754161732},{"_id":"themes/next-7.0.1/layout/_scripts/scroll-cookie.swig","hash":"1b250c1b7945cb1029b9e855edb09854f7c8250a","modified":1553754161738},{"_id":"themes/next-7.0.1/layout/_scripts/vendors.swig","hash":"83470eb401f78f4683907c48ad6760b90730daa3","modified":1553754161739},{"_id":"themes/next-7.0.1/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1553754161701},{"_id":"themes/next-7.0.1/layout/_macro/post.swig","hash":"e3f5a59e57801e8c9610c8b0e026cd0b813a7c30","modified":1553765166992},{"_id":"themes/next-7.0.1/layout/_macro/sidebar.swig","hash":"480d93619479dcfcbec6906803bb38b2dfbeae53","modified":1553754161703},{"_id":"themes/next-7.0.1/layout/_partials/comments.swig","hash":"5352f96f4544c1520babf1cec7b44ddf2f8057b3","modified":1553754161704},{"_id":"themes/next-7.0.1/layout/_partials/footer.swig","hash":"07f88421bda86d9d5ff32d130b1cb1196b99a326","modified":1553754161705},{"_id":"themes/next-7.0.1/layout/_partials/github-banner.swig","hash":"818deb840c91f7ebe8ff558840ca3c1612a3f1fe","modified":1553754161706},{"_id":"themes/next-7.0.1/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1553754161716},{"_id":"themes/next-7.0.1/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1553754161717},{"_id":"themes/next-7.0.1/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1553754161751},{"_id":"themes/next-7.0.1/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1553754161753},{"_id":"themes/next-7.0.1/layout/_third-party/chatra.swig","hash":"eefb68b69b4b0ed558ee0324ccd711990059b20d","modified":1553754161753},{"_id":"themes/next-7.0.1/layout/_third-party/copy-code.swig","hash":"01ded5e1bad89a6f8d64cd063e3e4e42c20d33bc","modified":1553754161761},{"_id":"themes/next-7.0.1/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1553754161764},{"_id":"themes/next-7.0.1/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1553754161764},{"_id":"themes/next-7.0.1/layout/_third-party/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1553754161766},{"_id":"themes/next-7.0.1/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1553754161765},{"_id":"themes/next-7.0.1/layout/_third-party/quicklink.swig","hash":"5db80e8d7ea3f29e998320f79508f7e14342a33c","modified":1553754161766},{"_id":"themes/next-7.0.1/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1553754161767},{"_id":"themes/next-7.0.1/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1553754161768},{"_id":"themes/next-7.0.1/layout/_third-party/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1553754161771},{"_id":"themes/next-7.0.1/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1553754161779},{"_id":"themes/next-7.0.1/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1553754161780},{"_id":"themes/next-7.0.1/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1553754161780},{"_id":"themes/next-7.0.1/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1553754161913},{"_id":"themes/next-7.0.1/scripts/tags/button.js","hash":"279a04037fce9b5e3cc55aef0581cd34172aea98","modified":1553754161783},{"_id":"themes/next-7.0.1/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1553754161784},{"_id":"themes/next-7.0.1/scripts/tags/exturl.js","hash":"e3854f1951e6295220f94bd9d3eafe5364491390","modified":1553754161784},{"_id":"themes/next-7.0.1/scripts/tags/full-image.js","hash":"6dc82ae9df2341d9c7bd05eacb5cf90208c2a44c","modified":1553754161785},{"_id":"themes/next-7.0.1/scripts/tags/group-pictures.js","hash":"46bac5a4cf7821e37b548f7ed22c83aeae321857","modified":1553754161787},{"_id":"themes/next-7.0.1/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1553754161787},{"_id":"themes/next-7.0.1/scripts/tags/label.js","hash":"64e6f95e2ccde49413bb5a8d2926f6df2f9a670a","modified":1553754161788},{"_id":"themes/next-7.0.1/scripts/tags/mermaid.js","hash":"d007598ab83babcff824bb44a2e858ef6537f627","modified":1553754161789},{"_id":"themes/next-7.0.1/scripts/tags/note.js","hash":"84ce2d2c0646baafc82083e261b093b1c515f63c","modified":1553754161789},{"_id":"themes/next-7.0.1/scripts/tags/pdf.js","hash":"ebd903785b4fd9163c58fef3707fb28eda6dc8e6","modified":1553754161790},{"_id":"themes/next-7.0.1/scripts/tags/tabs.js","hash":"8b1e9043db8f19ea4a12c473b3f729bd3b5bcb0e","modified":1553754161790},{"_id":"themes/next-7.0.1/scripts/tags/video.js","hash":"2a4d5bfc5318f66887936c51f54088f7611e686f","modified":1553754161791},{"_id":"themes/next-7.0.1/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1553754161915},{"_id":"themes/next-7.0.1/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1553754161916},{"_id":"themes/next-7.0.1/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1553754161916},{"_id":"themes/next-7.0.1/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1553754161918},{"_id":"themes/next-7.0.1/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1553754161918},{"_id":"themes/next-7.0.1/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1553754161919},{"_id":"themes/next-7.0.1/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1553754161920},{"_id":"themes/next-7.0.1/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1553754161921},{"_id":"themes/next-7.0.1/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1553754161922},{"_id":"themes/next-7.0.1/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1553754161923},{"_id":"themes/next-7.0.1/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1553754161923},{"_id":"themes/next-7.0.1/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1553754161924},{"_id":"themes/next-7.0.1/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1553754161924},{"_id":"themes/next-7.0.1/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1553754161925},{"_id":"themes/next-7.0.1/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1553754161926},{"_id":"themes/next-7.0.1/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1553754161926},{"_id":"themes/next-7.0.1/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1553754161927},{"_id":"themes/next-7.0.1/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1553754161928},{"_id":"source/images/spiderticket.jpg","hash":"8fba99535d54b5f36d80c1eeea76fed832071da5","modified":1553769917401},{"_id":"themes/next-7.0.1/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553754161883},{"_id":"themes/next-7.0.1/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553754161884},{"_id":"themes/next-7.0.1/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553754161886},{"_id":"themes/next-7.0.1/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553754161908},{"_id":"themes/next-7.0.1/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1553754161911},{"_id":"source/images/20180410134416.jpg","hash":"913cb5cac96ff5450a123a2c58becf2eba1ad8d4","modified":1553769916985},{"_id":"themes/next-7.0.1/layout/_scripts/pages/post-details.swig","hash":"c7f2855f19dfdf18aba8c58d55b7489e631ed035","modified":1553754161733},{"_id":"themes/next-7.0.1/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1553754161735},{"_id":"themes/next-7.0.1/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1553754161735},{"_id":"themes/next-7.0.1/layout/_scripts/schemes/muse.swig","hash":"be24f204a515d5211bf3ba98a030e3bf61d4cc16","modified":1553754161736},{"_id":"themes/next-7.0.1/layout/_scripts/schemes/pisces.swig","hash":"94e106755c5fb6f40431b621beeba0bd33877e57","modified":1553754161737},{"_id":"themes/next-7.0.1/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1553754161700},{"_id":"themes/next-7.0.1/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1553754161700},{"_id":"themes/next-7.0.1/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1553754161707},{"_id":"themes/next-7.0.1/layout/_partials/head/head-unique.swig","hash":"dc53a41196b675268bfd2a944f6258c57ed44e91","modified":1553754161708},{"_id":"themes/next-7.0.1/layout/_partials/head/head.swig","hash":"36eae78a4d7160a1c5e59ca3f7333f00b43d359b","modified":1553754161709},{"_id":"themes/next-7.0.1/layout/_partials/header/brand.swig","hash":"648bf7eda66629592cb915c4004534b3913cbc22","modified":1553754161711},{"_id":"themes/next-7.0.1/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1553754161711},{"_id":"themes/next-7.0.1/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1553754161712},{"_id":"themes/next-7.0.1/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1553754161713},{"_id":"themes/next-7.0.1/layout/_partials/page/breadcrumb.swig","hash":"69722be16ce5eae5c027168f9b2fded4776e1b53","modified":1553754161714},{"_id":"themes/next-7.0.1/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1553754161715},{"_id":"themes/next-7.0.1/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1553754161718},{"_id":"themes/next-7.0.1/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1553754161719},{"_id":"themes/next-7.0.1/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1553754161720},{"_id":"themes/next-7.0.1/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1553754161721},{"_id":"themes/next-7.0.1/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1553754161722},{"_id":"themes/next-7.0.1/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1553754161723},{"_id":"themes/next-7.0.1/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1553754161726},{"_id":"themes/next-7.0.1/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1553754161725},{"_id":"themes/next-7.0.1/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1553754161727},{"_id":"themes/next-7.0.1/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1553754161728},{"_id":"themes/next-7.0.1/layout/_partials/share/likely.swig","hash":"b45e934d24d76ec6b6a790e92bdb3d56186b0e2a","modified":1553754161728},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1553754161740},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1553754161741},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1553754161743},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1553754161744},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1553754161744},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/facebook-sdk.swig","hash":"050ea01f25cfe492be9bb77b409644d623fdf2dc","modified":1553754161745},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1553754161746},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/google-analytics.swig","hash":"d422beaf35a5d2646feaa098bc3e5adf691c7565","modified":1553754161747},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1553754161748},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1553754161748},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/lean-analytics.swig","hash":"c754f699c90f6278b9159eff1855c17bc713ee96","modified":1553754161749},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1553754161750},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1553754161750},{"_id":"themes/next-7.0.1/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1553754161751},{"_id":"themes/next-7.0.1/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1553754161754},{"_id":"themes/next-7.0.1/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1553754161755},{"_id":"themes/next-7.0.1/layout/_third-party/comments/disqusjs.swig","hash":"c77a2e7ef5f449a445fb4d36b055721fba4a81af","modified":1553754161756},{"_id":"themes/next-7.0.1/layout/_third-party/comments/gitalk.swig","hash":"8d75fe7c97943404013b9fca075faa26a8790c78","modified":1553787084488},{"_id":"themes/next-7.0.1/layout/_third-party/comments/gitment.swig","hash":"388efc86af7f19c05ad0e26720cd24ee012d20b9","modified":1553754161758},{"_id":"themes/next-7.0.1/layout/_third-party/comments/index.swig","hash":"2cbaae65a020bbb0e9265364488aff8bf84fa48d","modified":1553754161759},{"_id":"themes/next-7.0.1/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1553754161759},{"_id":"themes/next-7.0.1/layout/_third-party/comments/valine.swig","hash":"4a908b613518878b9b69576c5dba4a5185f552ab","modified":1553754161760},{"_id":"themes/next-7.0.1/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1553754161762},{"_id":"themes/next-7.0.1/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1553754161763},{"_id":"themes/next-7.0.1/layout/_third-party/math/mathjax.swig","hash":"601774d8672577aefbcefac82c94b01f0338da31","modified":1553754161763},{"_id":"themes/next-7.0.1/layout/_third-party/search/algolia-search.swig","hash":"cd86bed852fec6e6933898067122a03755bc17f0","modified":1553754161769},{"_id":"themes/next-7.0.1/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1553754161769},{"_id":"themes/next-7.0.1/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1553754161770},{"_id":"themes/next-7.0.1/source/css/_custom/custom.styl","hash":"fd757d567e7f6f7a39662f037511e8d1969b8c02","modified":1553764077613},{"_id":"themes/next-7.0.1/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1553754161883},{"_id":"themes/next-7.0.1/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1553754161885},{"_id":"themes/next-7.0.1/source/css/_mixins/base.styl","hash":"bb744c9264e8e79ae96431a5463f65fe8de5828a","modified":1553754161886},{"_id":"themes/next-7.0.1/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1553754161907},{"_id":"themes/next-7.0.1/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1553754161908},{"_id":"themes/next-7.0.1/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1553754161910},{"_id":"themes/next-7.0.1/source/css/_variables/base.styl","hash":"d0e97b205d3320421c380f2eee445457430c8152","modified":1553754161910},{"_id":"themes/next-7.0.1/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1553754161929},{"_id":"themes/next-7.0.1/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1553754161932},{"_id":"themes/next-7.0.1/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1553754161933},{"_id":"themes/next-7.0.1/source/js/src/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1553754161933},{"_id":"themes/next-7.0.1/source/js/src/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1553754161935},{"_id":"themes/next-7.0.1/source/js/src/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1553754161935},{"_id":"themes/next-7.0.1/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1553754161936},{"_id":"themes/next-7.0.1/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1553754161938},{"_id":"themes/next-7.0.1/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1553754161939},{"_id":"themes/next-7.0.1/source/js/src/utils.js","hash":"703375f367acfbd0596733c34437d1b2681abf72","modified":1553754161940},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1553760031982},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/README.md","hash":"9fa5175cdb7d3d939fe7174b6d68608ca996c174","modified":1553760031984},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/instantsearch.min.css","hash":"6e01a39d7f6d58a0895957361b0a942543c18332","modified":1553760031989},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/instantsearch.min.css.map","hash":"d055d06395af598682873d1b458166dc6f513072","modified":1553760031991},{"_id":"themes/next-7.0.1/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514806389000},{"_id":"themes/next-7.0.1/source/lib/fancybox/.bower.json","hash":"9c0e38750e26eb9e83e2b5ab9e069b66f0965ce4","modified":1553760943948},{"_id":"themes/next-7.0.1/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1553760943948},{"_id":"themes/next-7.0.1/source/lib/fancybox/README.md","hash":"10e4cb3bb98f6b9806bedbb8dbbc00151bad4c70","modified":1553760943953},{"_id":"themes/next-7.0.1/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1553760039646},{"_id":"themes/next-7.0.1/source/lib/fastclick/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1553760039649},{"_id":"themes/next-7.0.1/source/lib/fastclick/README.md","hash":"a79e7b87a27497922f34e1013d7299f838badc79","modified":1553760039651},{"_id":"themes/next-7.0.1/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1553760039652},{"_id":"themes/next-7.0.1/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1553754161941},{"_id":"themes/next-7.0.1/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1553754161942},{"_id":"themes/next-7.0.1/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1553754161944},{"_id":"themes/next-7.0.1/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1553754161944},{"_id":"themes/next-7.0.1/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1553754161945},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1553758967317},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1553758967320},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/README.md","hash":"195a44ef23a22f166f7e56d37eaf27647b4f8b19","modified":1553758967321},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1553758967322},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1553758967323},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1553758967324},{"_id":"themes/next-7.0.1/source/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1553760106573},{"_id":"themes/next-7.0.1/source/lib/pace/README.md","hash":"33b87ed998d59f117dc329f999a4ffc744b41e79","modified":1553760106574},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1553760106577},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1553760106576},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1553760106578},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1553760106580},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1553760106581},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1553760106583},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1553760106585},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1553760106586},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1553760106588},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1553760106589},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1553760106590},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1553760106591},{"_id":"themes/next-7.0.1/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1553760106592},{"_id":"themes/next-7.0.1/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1553760106594},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.editorconfig","hash":"7d47ecd70ca58d26af4f69ff1b23034edcf4475e","modified":1553759960606},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.gitignore","hash":"09cde1060b4213a7eee528b54560777d2d3756e8","modified":1553759960612},{"_id":"themes/next-7.0.1/source/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1553759960614},{"_id":"themes/next-7.0.1/source/lib/reading_progress/README.md","hash":"9b00c4ce1a739c825df4e51977f7525d2c9f6b81","modified":1553759960615},{"_id":"themes/next-7.0.1/source/lib/reading_progress/package.json","hash":"7bcb3787978a0c445b1bd3dfeca6ae6016c98abc","modified":1553759960617},{"_id":"themes/next-7.0.1/source/lib/reading_progress/reading_progress.js","hash":"ec68a79421cfba022ac53f46813d013dd48617c0","modified":1553759960618},{"_id":"themes/next-7.0.1/source/lib/reading_progress/reading_progress.min.js","hash":"b768dc009e6d37dd952632c317f6c33e6e2d89ad","modified":1553759960621},{"_id":"themes/next-7.0.1/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1553754161960},{"_id":"themes/next-7.0.1/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1553754161961},{"_id":"themes/next-7.0.1/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1553754161962},{"_id":"source/images/trainticket3.jpg","hash":"d614124781c7a8b7d5f4acd3fa3b195e8cb48742","modified":1553769917407},{"_id":"themes/next-7.0.1/source/lib/fancybox/LICENSE","hash":"7713a1753ce88f2c7e6b054ecc8e4c786df76300","modified":1553760943952},{"_id":"themes/next-7.0.1/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1553754161957},{"_id":"source/fxr/pic1.gif","hash":"eb900d9ab6cb057871aa2c302cd51f68968b5255","modified":1553769916965},{"_id":"themes/next-7.0.1/source/css/_common/components/back-to-top-sidebar.styl","hash":"7729491514f8ccdf96777de8f71420e6873c5423","modified":1553754161794},{"_id":"themes/next-7.0.1/source/css/_common/components/back-to-top.styl","hash":"8175b9a275d04718f6caf6dc6ae483035ad71b0c","modified":1553754161795},{"_id":"themes/next-7.0.1/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1553754161796},{"_id":"themes/next-7.0.1/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1553754161796},{"_id":"themes/next-7.0.1/source/css/_common/components/components.styl","hash":"9d71f34fa13a41b8c8cd2fbdf3fdea608385277c","modified":1553754161797},{"_id":"themes/next-7.0.1/source/css/_common/components/pagination.styl","hash":"ce826aedf42b9eca424a044452f5d193866726a6","modified":1553754161837},{"_id":"themes/next-7.0.1/source/css/_common/components/rainbow.styl","hash":"e53256fca6b1f4aeca8fdaf99bd4549ced700485","modified":1553754161850},{"_id":"themes/next-7.0.1/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1553754161850},{"_id":"themes/next-7.0.1/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1553754161874},{"_id":"themes/next-7.0.1/source/css/_common/scaffolding/base.styl","hash":"c4a1111b526303339d0f54c52dbc7520e4bf769f","modified":1553754161875},{"_id":"themes/next-7.0.1/source/css/_common/scaffolding/helpers.styl","hash":"4657a9a91f2f903e0852d7ba06f18e8e35c44580","modified":1553754161876},{"_id":"themes/next-7.0.1/source/css/_common/scaffolding/mobile.styl","hash":"bb9b753d3cc3a816340bd697512a83e757f907fb","modified":1553754161878},{"_id":"themes/next-7.0.1/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1553754161878},{"_id":"themes/next-7.0.1/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1553754161880},{"_id":"themes/next-7.0.1/source/css/_common/scaffolding/tables.styl","hash":"6b3340cf57725b312830b9ce377c9e087ba59297","modified":1553754161881},{"_id":"themes/next-7.0.1/source/css/_schemes/Gemini/index.styl","hash":"820eac00687d61a3038ad3d815eef7acc7e451ed","modified":1553764867516},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1553754161889},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/_header.styl","hash":"e6148917961e8babfd0d8e3dd2edb8f3b0436848","modified":1553754161890},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1553754161890},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/_menu.styl","hash":"8d9ad35fcbec361421af5bba55755f18fa6b9d90","modified":1553754161892},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1553754161892},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/_search.styl","hash":"a5bef4fdde80951f3b8c154d79cb1e581638a988","modified":1553754161893},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/index.styl","hash":"a96e46a6ae86c423f932bc2bc78b9f7453e4e4e5","modified":1553754161893},{"_id":"themes/next-7.0.1/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1553754161896},{"_id":"themes/next-7.0.1/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1553754161897},{"_id":"themes/next-7.0.1/source/css/_schemes/Muse/_menu.styl","hash":"01888542d4b2fb95107a7096352d8ba820f02614","modified":1553754161898},{"_id":"themes/next-7.0.1/source/css/_schemes/Muse/_search.styl","hash":"a5bef4fdde80951f3b8c154d79cb1e581638a988","modified":1553754161900},{"_id":"themes/next-7.0.1/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1553754161900},{"_id":"themes/next-7.0.1/source/css/_schemes/Pisces/_brand.styl","hash":"add3d0d1d3fd78d1487afca1503ed72649c00620","modified":1553754161902},{"_id":"themes/next-7.0.1/source/css/_schemes/Pisces/_layout.styl","hash":"553b0cd24392252e5fb906013e581966d63dc542","modified":1553754161903},{"_id":"themes/next-7.0.1/source/css/_schemes/Pisces/_menu.styl","hash":"47f93162fbf6b3917331fe2c2d8884cebc25b4a1","modified":1553754161904},{"_id":"themes/next-7.0.1/source/css/_schemes/Pisces/_sidebar.styl","hash":"abd06b9e15462145211a5e5d84d452faf67c8283","modified":1553754161905},{"_id":"themes/next-7.0.1/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1553754161906},{"_id":"themes/next-7.0.1/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1553754161906},{"_id":"themes/next-7.0.1/source/js/src/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1553754161937},{"_id":"themes/next-7.0.1/source/js/src/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1553754161938},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1553760031939},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/config","hash":"6b9d0a36d665af7dc13b7b00969dd505ce623c8b","modified":1553760031957},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1553759996295},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/index","hash":"bdae4e2f8169ba0ee52ecbb79e16da79f636aae2","modified":1553760032020},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/packed-refs","hash":"cf79f04a15e78ab29d7f34381bfb7da7c6d30926","modified":1553760031925},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1553760031981},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/docs/ALGOLIA-SEARCH.CN.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1553760031986},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/docs/ALGOLIA-SEARCH.md","hash":"45e42de014906bff2f6d23577ef7972e1ff345b0","modified":1553760031988},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1553760943911},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/config","hash":"a69d81d3b555e2041616ba3396299bfdde7ac6f6","modified":1553760943927},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1553760939745},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/index","hash":"b170e216dcc57b287b4814c1efaa09856ddca28b","modified":1553760943964},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/packed-refs","hash":"2f41f00b14f8655021d9339e7b28a15c01f5522c","modified":1553760943897},{"_id":"themes/next-7.0.1/source/lib/fancybox/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1553760943951},{"_id":"themes/next-7.0.1/source/lib/fancybox/source/jquery.fancybox.css","hash":"b6964babd10efdeff086f91822b59c810a06d43d","modified":1553760943954},{"_id":"themes/next-7.0.1/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1553760943955},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1553760039606},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/config","hash":"c43b1314943c0531c9a3eda1ea7842e7c9d4eb5b","modified":1553760039624},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1553760035951},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/index","hash":"8e8421b6fbc2af1e5789ebe5aa9ee95d2026e723","modified":1553760039659},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/packed-refs","hash":"e3614be67e9f9bfcbdace120ac82bb60b36ec054","modified":1553760039592},{"_id":"themes/next-7.0.1/source/lib/fastclick/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1553760039648},{"_id":"themes/next-7.0.1/source/lib/fastclick/lib/fastclick.js","hash":"9782a228f911ef442a03390a0064b40102fc1682","modified":1553760039654},{"_id":"themes/next-7.0.1/source/lib/fastclick/lib/fastclick.min.js","hash":"4496faa08c7d2979747f15c7b79cdf79e5a91cc1","modified":1553760039655},{"_id":"themes/next-7.0.1/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1553754161946},{"_id":"themes/next-7.0.1/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1553754161947},{"_id":"themes/next-7.0.1/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1553754161949},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1553758967242},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/config","hash":"5ec54f716b5769e0a9b2023e0b4545a3478f8ee2","modified":1553758967257},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1553758963332},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/index","hash":"85edd5040134d1ea37be2bed20214eab8426d0d2","modified":1553758967327},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/packed-refs","hash":"83ee2ab10ad076007e0c6c5896841c2e95de64ec","modified":1553758967229},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1553758967319},{"_id":"themes/next-7.0.1/source/lib/pace/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1553760106526},{"_id":"themes/next-7.0.1/source/lib/pace/.git/config","hash":"48b8e34305ab1a3899705ec98de64390d70f2035","modified":1553760106543},{"_id":"themes/next-7.0.1/source/lib/pace/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1553760102415},{"_id":"themes/next-7.0.1/source/lib/pace/.git/index","hash":"eeec6fa56e77953c2e34d8474bb7e92390a319bb","modified":1553760106600},{"_id":"themes/next-7.0.1/source/lib/pace/.git/packed-refs","hash":"a04f762b5ecb138fde3c5f6107d05494d8e4c905","modified":1553760106509},{"_id":"themes/next-7.0.1/source/lib/pace/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1553760106572},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1553759960566},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/config","hash":"8aec970eb30cce0fedb7baa2ff60b61ef55c69b9","modified":1553759960583},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1553759955758},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/index","hash":"2ac19e6adb913fbbefad373c76ce70d0b7d0d4d8","modified":1553759960624},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/packed-refs","hash":"bf8dcb185c69accefc518791f11f13432bf25cb5","modified":1553759960550},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1553759960611},{"_id":"themes/next-7.0.1/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1553760943958},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1553754161952},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1553754161955},{"_id":"themes/next-7.0.1/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1553754161959},{"_id":"themes/next-7.0.1/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1553754161798},{"_id":"themes/next-7.0.1/source/css/_common/components/header/github-banner.styl","hash":"49e6e53df0f1f930247a6b07427e5a51479dc56f","modified":1553754161799},{"_id":"themes/next-7.0.1/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1553754161800},{"_id":"themes/next-7.0.1/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1553754161800},{"_id":"themes/next-7.0.1/source/css/_common/components/header/menu.styl","hash":"d803b4dbf4ecd8fab9319d598c89c5212914b2aa","modified":1553754161802},{"_id":"themes/next-7.0.1/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1553754161803},{"_id":"themes/next-7.0.1/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1553754161803},{"_id":"themes/next-7.0.1/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1553754161804},{"_id":"themes/next-7.0.1/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1553754161805},{"_id":"themes/next-7.0.1/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1553754161806},{"_id":"themes/next-7.0.1/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1553754161807},{"_id":"themes/next-7.0.1/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1553754161808},{"_id":"themes/next-7.0.1/source/css/_common/components/pages/pages.styl","hash":"f1d52954b9a5d1ca8e224382349f525e598dd923","modified":1553754161825},{"_id":"themes/next-7.0.1/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1553754161823},{"_id":"themes/next-7.0.1/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1553754161834},{"_id":"themes/next-7.0.1/source/css/_common/components/pages/schedule.styl","hash":"2b72f7d8c52c925aebe8d4de390d8d195db8f794","modified":1553754161836},{"_id":"themes/next-7.0.1/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1553754161836},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1553754161838},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1553754161841},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-collapse.styl","hash":"608a598330643671a7931106f8a8c7ea42e26261","modified":1553754161839},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-eof.styl","hash":"300491cf0e80c34faf5f83a2846c177759ac653f","modified":1553754161841},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1553754161843},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-expand.styl","hash":"1385862a5c0bd845015d165aadbd1a6add7b72d7","modified":1553754161842},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-meta.styl","hash":"42a0769311856a7ea3ede1c8656fb5646994a238","modified":1553754161843},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-nav.styl","hash":"1cf64afd4b49143972f7617869539be3adb91a5e","modified":1553754161844},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-reward.styl","hash":"5440013a081201ca791582db98159dce93ea9e75","modified":1553754161845},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-reading_progress.styl","hash":"0e8294d042d7d28c680ead48baa9e3c777d407c5","modified":1553754161845},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1553754161846},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1553754161846},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1553754161847},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1553754161848},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1553754161848},{"_id":"themes/next-7.0.1/source/css/_common/components/post/post.styl","hash":"a3170630d8e085889a4bdc20eb7f09c5a0479c47","modified":1553754161849},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"f40dbd838c8458820bb371931114d76ae78a279e","modified":1553754161851},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar-author.styl","hash":"f27c906cea6a7a0867b03d0c2c28407b2cdadad3","modified":1553754161852},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cc83816614f21c7e1d8d3f867d547ff7c658cec4","modified":1553754161854},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar-button.styl","hash":"517d541a80d59ad99a3f648be74891e0c7bc72a8","modified":1553754161855},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"f9837075189e37c100675211076b5053788e7ba5","modified":1553754161855},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1553754161856},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"f4342e4e06a8061fe02247c624728caf6dfc2c2c","modified":1553754161857},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"e425433b81da2714d6fa17c138e1fa750ad810ec","modified":1553754161857},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/sidebar.styl","hash":"8e5c884fb950937afa350c608545455c87aa6129","modified":1553754161858},{"_id":"themes/next-7.0.1/source/css/_common/components/sidebar/site-state.styl","hash":"9097db6f3ddd810b94ac4cbb0328e86792402090","modified":1553754161859},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1553754161861},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1553754161860},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1553754161862},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1553754161862},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/note-modern.styl","hash":"f466e92fa1466dd4d8957309623c8d661aeb1d8c","modified":1553754161864},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/note.styl","hash":"344c0d7d3cd4fa0709744d2d0b611a05021fbdb1","modified":1553754161864},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/pdf.styl","hash":"deafbca5bc2e6bbc5923bbb2036ffa2896ce71fc","modified":1553754161865},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/tags.styl","hash":"47344d8e1a7478ce49c543fac12c5e27731f24bb","modified":1553754161866},{"_id":"themes/next-7.0.1/source/css/_common/components/tags/tabs.styl","hash":"75f7876136fe1cae9b42d2c220e7f8b37b8d2f55","modified":1553754161865},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/algolia-search.styl","hash":"7d2222f66a1c1a0a3cc90bfd5d817d9b859f4a68","modified":1553754161867},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/copy-code.styl","hash":"688ca3eccc26727d050ad098b32b40934719588a","modified":1553754161868},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1553754161869},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/gitment.styl","hash":"3ae254c97be53cd8a277391f4f43f96705202560","modified":1553754161870},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1553754161870},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1553754161871},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/math.styl","hash":"a2f61adb7dd48743f62c7a8f7900de201bae891e","modified":1553754161871},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/needsharebutton.styl","hash":"61466e3e5459960b5802a267751a0c8018918b0b","modified":1553754161872},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/related-posts.styl","hash":"2d4f318644bf37c50e5b1fab8d62b2673fbab9e8","modified":1553754161873},{"_id":"themes/next-7.0.1/source/css/_common/components/third-party/third-party.styl","hash":"36cfd06979b7f7070f645c11edc745c7bcda8fbd","modified":1553754161873},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1553754161894},{"_id":"themes/next-7.0.1/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1553754161895},{"_id":"themes/next-7.0.1/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1553754161901},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1553759996296},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1553759996297},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1553759996321},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1553759996322},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1553759996323},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1553759996324},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1553759996325},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1553759996326},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1553759996326},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1553759996327},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1553759996328},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1553759996331},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/logs/HEAD","hash":"5907c13497f664729d72d3d26945e941b6e5ade5","modified":1553760031947},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1553760939747},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1553760939748},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1553760939749},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1553760939750},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1553760939751},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1553760939752},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1553760939753},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1553760939754},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1553760939755},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1553760939756},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1553760939757},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1553760939758},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/logs/HEAD","hash":"69b2a015e91807925b2f1cdca6feb57482043f33","modified":1553760943918},{"_id":"themes/next-7.0.1/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"1151808c52451d1b39e74fb48283195adf40b9a1","modified":1553760943961},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1553760035952},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1553760035955},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1553760035953},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1553760035955},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1553760035956},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1553760035957},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1553760035958},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1553760035959},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1553760035960},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1553760035962},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1553760035963},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1553760035964},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/logs/HEAD","hash":"f100bb563a413b990755e9bd9cfa4cefd4ab7547","modified":1553760039613},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1553754161951},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1553758963333},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1553758963345},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1553758963348},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1553758963349},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1553758963350},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1553758963358},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1553758963361},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1553758963374},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1553758963375},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1553758963389},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1553758963393},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1553758963394},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/logs/HEAD","hash":"46896acfeb858b383227869e42cacf3cb347fbe4","modified":1553758967248},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1553760102417},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1553760102418},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1553760102420},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1553760102420},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1553760102421},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1553760102422},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1553760102423},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1553760102424},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1553760102425},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1553760102425},{"_id":"themes/next-7.0.1/source/lib/pace/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1553760102427},{"_id":"themes/next-7.0.1/source/lib/pace/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1553760102429},{"_id":"themes/next-7.0.1/source/lib/pace/.git/logs/HEAD","hash":"bbe77f25cc92b4ef35137cf65e7f66a4253d64fd","modified":1553760106534},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1553759955760},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1553759955761},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1553759955763},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1553759955764},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1553759955765},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1553759955766},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1553759955766},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1553759955767},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1553759955768},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1553759955769},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1553759955771},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1553759955772},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/logs/HEAD","hash":"52ba503ea8ae8c7f2e435d62475e25c2384c2937","modified":1553759960573},{"_id":"source/images/about/b.jpg","hash":"33a64e89c91c57fd1c161b38db32d05176501391","modified":1553769917394},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/08/777d50ffb9e517f20d2cbf2ea19130862fb501","hash":"110fcf7830673d2a7715f8347834f7393597ecd0","modified":1553760001350},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1553760000053},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/0d/49463cf444a6411519b6d7b5bb65fa7e96c4dc","hash":"8baa9ed7c87fbf1a9fdeb378c656471cb98c48e5","modified":1553760000276},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/2b/a3834eb798ac34ab72ed5fdf7a56d175fee554","hash":"e8edf92b35519a3ec9333c7b54243eca7edc37f2","modified":1553759999922},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/2e/3287545db58ad31dcaeadb8dcdfc7dd090c68f","hash":"a5fe8f575da4f3b072c027de758f164ced0076af","modified":1553760001775},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1553760000157},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/59/0f6f985f6018c397b2499bb49e599b7109ec06","hash":"650b4b24a81daa3b02646b7ffd5ccdac11ab6be8","modified":1553760000321},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/54/7b348ba5c8725ea590087860a352c8ff41cb98","hash":"79281e0d03b3acdbce61914bbfef33ae0c29be6d","modified":1553759999802},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/67/f8cb5fe29be061756a857fc40c200283582f87","hash":"fefcb530ce8c8c4064f0fca3863eb930b713c083","modified":1553760001693},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1553760000199},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/6d/b4c7bd4b80f34ae7165de7d91291759569d572","hash":"f04a0f8b9dde5d5c36f470634ca8f958a3b6aa15","modified":1553760001439},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/6d/c836cd5e780134d73d56944a2e7039bacc7cb3","hash":"5a6fc74f4eff0b3bf6429b28df2a5d721c92933a","modified":1553760001604},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/72/77a0daac0e35928cb7e7905e28b7d490f18fea","hash":"fd53bdb026530aa2254de2dbc21f91c6ac4ca66a","modified":1553760001825},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/74/1e8eedaad6125d0feee4afcc124ba0bffc48c5","hash":"0963b162d9de3c8df0d966c07299efd39389da5d","modified":1553760001798},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/92/1eb7be3c529d19b6c92ce67e4099e8f7d6adf3","hash":"023bef5405aee54ae6b00e1e02eb6984b691ccbf","modified":1553760001394},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/a4/0c9f2635389a60948f0f2235f037277f8acff6","hash":"ec4074d54b477aea533dab38384dd9a52fa58854","modified":1553760000228},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/af/498366272133450e9ec4709258bc8a041d3bc5","hash":"0f61a6bed5bf01d1cbbcab383c5a7a032fa69328","modified":1553760001650},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/be/20adccf394f75e31e8f8b5fdf22728a1770602","hash":"665067f8dc3adcb99fa753845e7be4440eed9fc3","modified":1553760001560},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/c7/fbb078f1639009ff35512e07a344065d222948","hash":"123afd34f26169b38c32f4b035562726036fd960","modified":1553759999520},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/c9/af6112eed1dab47eba55651562f768bfbc861d","hash":"a3ce783cca46bdcba0a1eda2d034c77221e07e06","modified":1553759999656},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/da/0b2b5f2ab8f750444499f17e4cbf6074aef7f0","hash":"b343b66897d47a95d9a4363eaab8ff61a1c8a683","modified":1553759999715},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/e0/c26e1db83ec932e5160a36450654e5cad668e4","hash":"87e03302043077780440710f0e676f80f8d2e284","modified":1553760001514},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/e3/2ec4c473d456967d188be4ee5e5b06d7388552","hash":"6367ee9e8653e643f7d70cc24db2c47df7c0febf","modified":1553760001738},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/f5/e09255981809338b668b56510e360595fc12fa","hash":"c385e27cf914367d1fde121a2c920b93832cf2ed","modified":1553760001309},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/refs/heads/master","hash":"e14ed0f4f991b6771558d811d9a7c7393cf45fc6","modified":1553760031946},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/00/c03f6be011e8878608eec12f68caf42b73f38e","hash":"8516bd35bc8f9223e13de5877778c8d14d49d6db","modified":1553760943129},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1553760942617},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/16/b01254a56610f4c6b7721c534ed4fc40ae51dd","hash":"88ca5fd99322d3a4067e0711af79f41c078f2ef5","modified":1553760943580},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/19/3567a3107003507fafacd255c349857e417926","hash":"ef5eab75e8c6998cb223edb4eb8a26c4cfc9415c","modified":1553760942982},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/1f/a2c5f332b7e304431213aec21012e53f8781d7","hash":"7632806182aa989d3b7029579d5c03c34b113ee3","modified":1553760942242},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1553760942673},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/36/9bab09306448a2970d378b59bb21c059edad63","hash":"877e0c15623d0d6ff8f09bb627fc60a489f3c105","modified":1553760942758},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/47/d427b6c52396bbab53a05f57aaa82b52c805b1","hash":"c5626bbb62f4d1d1e39034e7f44baf4c509410d6","modified":1553760943808},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/3d/521bfc64755e348870094e85323dc1b9c96a6b","hash":"e9660fc4f89ecb176b0ab6e4860579c1bfe9f9cb","modified":1553760943382},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/51/cf05811ed7d35e92551db1ba5a6e267ce781a5","hash":"99c009035ea86e3876b586577677d4d62ae12379","modified":1553760943337},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/53/ceaabe0f8677333c5be196778b3e40840a1869","hash":"7bc1c1c42059d5402335b5293bfb5e54bee22557","modified":1553760942474},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/54/0a7b36ee26decfc3f0f34bf73bc85c48899128","hash":"2e5447a9dd879d71368e9dddd34d93849d00b934","modified":1553760943205},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/63/c555caede30ab06d6dba16644a827e9574c8cb","hash":"846603220288272ad5d35ebdc3c917cc4adce424","modified":1553760943249},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/64/c47e893a0fef71c8c0930975ef114d9812da56","hash":"eaad75fab15724f9c2b069fc1ce9b8216be149d7","modified":1553760943426},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/78/068b93f813cecbbd50c8247de547035009d512","hash":"4bc2bee779bd7e3cca13ee34801cf1e12585e5ae","modified":1553760942796},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/7c/00ef8195b73793d477d22e723ecdac9553ebf3","hash":"fd8c4fd143b32fb3e86367f123feb7c35b305262","modified":1553760943728},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/7b/15d3cb03fda86241f8b2b335f04e9b9de0e1c4","hash":"d1fe3bd82c90f7d93874798a8ee8ebf1391d7207","modified":1553760942839},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/7c/c60b295fa2dcb82537a63792c9b3b3c2e74c33","hash":"b2dc23c71b13726c391aaefaa5312227a9b6ab7e","modified":1553760943616},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/80/6b27034bd69d563e4243c2f12b43c7064b32dd","hash":"b7d3e8020767ae60a2029da8eccb0068623dc618","modified":1553760943770},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/89/9d7a75b543fbed2a785f67d995bc77e06eb2e9","hash":"5651e2b80703225f642625c0fb2646543096d2cf","modified":1553760942385},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/92/4369c371444afb18fb86309229f5b4c24c6cf4","hash":"9eb6fa8ff9081e6650f6bee350d21567df105737","modified":1553760942885},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/94/a9ed024d3859793618152ea559a168bbcbb5e2","hash":"1c2d080a86f03eb960e112a94910a5115addf57a","modified":1553760942720},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/9b/fe9361836240600c1bcc3cab9d42b35e731fad","hash":"3d38ffc7ac1ae85224691ef15d7f32e40c40b3a2","modified":1553760943472},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/aa/654e17af8c354994f706c4e33bba6b5b70caeb","hash":"22b1bdf0b0974bf5e9022953ac26066056c235ff","modified":1553760943041},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/ac/97c2cc9f61c52753abe4174a4a74b2064e5af0","hash":"272e74036b0612de83d9d0aa9604d3edf888b249","modified":1553760942920},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/ad/569256343419017e8832a38faaa1c786716a1d","hash":"0538e4abd112b0a843035f28a511edabbe73f2ce","modified":1553760943293},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/b3/b3098638624b56be968573e2dab1684f8a7f06","hash":"6fa11a2d904dff2b8f4ae1bd88bdbb66736438a1","modified":1553760943645},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/bd/e1f741357b44b49290d43fdd193125202fef81","hash":"9beefc75cc0c37d04e98dd13b51ad85df40e77b9","modified":1553760942519},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/c2/fc5def1b6c38369e5e8b849adb956bd79b549e","hash":"27f03b9616e615b2724bac0fa4507d152697f3f1","modified":1553760942429},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/d5/d10f6be62acc10fec6e11e8dc4affe1184a17b","hash":"cec51b2539349d2aba1ec5d11eaded3815eccdc5","modified":1553760943682},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/objects/f6/bb280a0b2c68256a8e906b35c6976c80c1b3be","hash":"5daaee11fc384fbe0f02c7123036c954ee9a73fd","modified":1553760942563},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/refs/heads/master","hash":"d1840ae4717ac8eb10df2e61a7851f5542f70f90","modified":1553760943917},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/06/e01f4e99baeefef4a483cd1e902193bcce988a","hash":"2452637b09d437ee414cb711f3091e6aaf49eaf9","modified":1553760039265},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1553760038834},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/0d/dbe7d4eb11134cfb5fa14b3e190bd9fb3ed82b","hash":"95af863cce08aad6f65d6932af9ef732712740f7","modified":1553760038947},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/18/e1abd47f6274ffd7ed82dc00decd1c00c6e323","hash":"5a569722fa4f206672376b71c3e1c16f643e64f7","modified":1553760038988},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/22/5ff660ec3fd4a0a98aa3dbeb6c6c66ecac5e54","hash":"2535a5fadc55fcfbcf38cb047f660985cc22c729","modified":1553760039477},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1553760038877},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/61/c39a632ceeb8d42b91481c0b54970cf035267a","hash":"dfb032f767e71a01cf332cfec0eca764ae7073d6","modified":1553760038645},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/3a/f4f9d6f14e39b48e9c449de1c660e245a2bc27","hash":"bf9503b3af60d018a7b9ad9e177b424b14a970e5","modified":1553760039068},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1553760038910},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/82/8e51d486478532fecc7e21d0b410a0c09e40ed","hash":"efb8b264c23d6265b18a8e8ce11b2d4e17746cd8","modified":1553760039422},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/86/c3d4aeba88b97f37cd9f6b70bf2d57a7a21826","hash":"fff2a0379207fb85c1508fc1c63bed957c294202","modified":1553760039024},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/8d/eee862332602c5f704f7f55d8a996b60cc6be8","hash":"b46e05207a48d1c732f8179a7a5b83d1649ce82d","modified":1553760038507},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/9f/d0fb1402a4c303aebe2f19463f7e6a1e220cd5","hash":"b830d61384e84ba93984d0db1609bd2d4ad81300","modified":1553760038689},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/b1/be81d4f11e36095d68afc4502fdb16aaf944be","hash":"3a5ba6f240fb736ae697059d327f635fbf1bec20","modified":1553760039211},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/b2/5dad1c30c8b4830293330b60d39c75f7e3886e","hash":"8206eb6b273e8e6ac85535f0f7a645d3c3394885","modified":1553760039137},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/c2/e7e6ecb9903a6bfc8949f082afdf36271abf09","hash":"20586bdc4ffa17071096e03691f455fd681348e2","modified":1553760039512},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/cf/0642795f0b53282dac0e2978ae6d1b03b365b5","hash":"7c8b1e12e4d34a5e3295e98f25a3529a7f33479e","modified":1553760039115},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/cf/abed7d73eee3176b90b91f3dd656666d8c639d","hash":"bda6cd7c2f9d7b568498f96a3d4248563034eabe","modified":1553760038780},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/ea/f4c46b3e372e54a737e6d6cb2d4e0c386bf230","hash":"0c683fca4712fe82a3fb591d565e6c002bd7c0ac","modified":1553760039378},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/ec/12c6da577ebf74eaad24abe751db12ea736045","hash":"a3728b76676627e7ae4227158bc169e7eb2b81a2","modified":1553760038734},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/objects/ef/3f987c6490745eedd60367aa3c25413f69879d","hash":"b9bdc7896f4e609871226f46720d5e425e0f65b5","modified":1553760039178},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/refs/heads/master","hash":"29e337078ba669ba9419e1a8f5a5175432ae9c71","modified":1553760039612},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/08/d4d5ef639d45881e2c31089252871109b3cb0e","hash":"e1d5e486a1d20a1cb219a6998fcb9549f84ca0a7","modified":1553758966555},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1553758966741},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/0d/fe01dbfc3817db9740f7d9593e6c0d0ce4bcfe","hash":"40d7c408638a545f5d206dacc7a666562ae863b6","modified":1553758967018},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/1e/6843316b3b3be83c6296e38edbcf7a1a389eaa","hash":"b85a7e69e5655a3e37e9fc6d0f7e2bacdbff58fc","modified":1553758966941},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1553758966799},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/3a/9ca03dafb2e0a3ee0132e998e1f95146a1187b","hash":"b2a3ed46595b48486b9ba48cc3718cb981f62533","modified":1553758967052},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/49/94fde5a528c6dcf575d1300c9feb7a790580dd","hash":"849400735df951aba8ed44ba0a66b4d7c13c09a8","modified":1553758967096},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1553758966845},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/7e/6c9d90608b7b346b87da90c2aa3389822a5872","hash":"5a939a822a36748559b6b67651f48b82d6d9a209","modified":1553758966643},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/92/9d3c446aba8ac3a7854bca3fa99071ec0f1b0a","hash":"324298d9a7b50c2a0640053f01aeaa53e8d1a7ca","modified":1553758966907},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/99/99f3981a0f624ec98a63f2bef6b59ab5a4a130","hash":"e3318de2933bd40a6b707e06d63d97a72d2a41b6","modified":1553758966690},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/a0/bb6371002f36c275d90ef0a78f4e951c1b36a4","hash":"e73b2d57d9528243fa4163d4078ff74f274aa159","modified":1553758966986},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/b8/7cfcee7b6c989840000d9f5e3bfe75287e7450","hash":"51ead0dc580f672ab9fab6ae4b4b49918b813574","modified":1553758966599},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/cb/5cc9434249607fc442175e3e6c31f3a8cb7a04","hash":"ee1bd67de46a7e6c3a47a1abe0487a2b741d6be4","modified":1553758966875},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/objects/fe/a9333a5d0d257dd748e4348bd97a5b71075026","hash":"a093eb542e88824fac9dda1103bb8def2c565ec6","modified":1553758966513},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/refs/heads/master","hash":"ffca309262e3481ddc8a642c00d96ba47da8dca4","modified":1553758967248},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/00/13175fe71888324d9142744034e8296501174a","hash":"0ad0e50f7fe91fe14491924aa4b1e2e8f060a5cd","modified":1553760105499},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1553760105159},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/1c/159365320ef5dde63906912f3df067376b40d0","hash":"1dd6b7373c3f9c67e34aa319c9c08fd0f667156a","modified":1553760106292},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/23/4f9b3e93f06a85cb2ec01acc872ccdc2bec7cb","hash":"63f8640eceff35a80175a102fcbd8789e690cfaa","modified":1553760106336},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1553760105221},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/35/a749d823ad0aae6111a76dc501a1170478f376","hash":"e757129fb6bca3170b62b05f3e850e4b55f3ae88","modified":1553760106252},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/3e/dcd352d2a1a60dbb6a43e7e9f00bab8b55791a","hash":"725bf5094855cd943dd1cd351906fb1ebec1d861","modified":1553760105732},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/41/28e69301ad36a283c0fc523f3aef89644d2467","hash":"d8b985cf431fbdc5b4fa3be89e27db7a3437c920","modified":1553760106426},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/49/0db22b657dd64430d003fe2831905a54858b22","hash":"43694656c4c331cfa3667afca630bd486ac0d0fe","modified":1553760105999},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/4d/fbb499a4f7b2f26a535c335cd66c966ff8b261","hash":"14e4cdcc137045c7efed32f796273d40c9fcef87","modified":1553760106071},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/53/3d55db0342c2b011ac05703c3b42e88a25c1ed","hash":"c48454760d2e04602a5499188b33d38839c58aee","modified":1553760106158},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/60/0378418401f2b0e7c58407a7bbc5a5196cfa51","hash":"20489d796247dda758599f40cbfcf14d194ef64a","modified":1553760104943},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/61/fcbe3a99ad371eacdf3a3703883f8e95e072c8","hash":"480b60d684f9a077ade5dda0acfc75bcd9597aff","modified":1553760105020},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1553760105352},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/84/a17ac7b4fe9cea559de91f00af88f810bff7f1","hash":"b41b6d3cbccd75b711f0523bba1c26bf19b0a862","modified":1553760104899},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/82/8dcba3c8a21de08d1eb38f2eee453b51543188","hash":"629aad2ee2e564790e78cd46e99ad396544960ab","modified":1553760105753},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/8b/b4535a79cc15127f8906b24c4e0bb4a38a5947","hash":"9c2d65a63f18929b09f3592dda064f24309ff98b","modified":1553760105822},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/97/1e8a1f2ad6d45f693980c106af0aead9d1c215","hash":"e45f0963920a53a57f6b53d178e5b05a8e315189","modified":1553760105585},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/9b/3058068409f2282607ebb91717d7a6a1406230","hash":"651c5857021e11dc397df86dbe0f01e6c7dc7f16","modified":1553760105878},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/a6/dbd9c99e726f621e2bdcd3c6fe2795a5d4272d","hash":"25350dd31f504af7206610ced355d162aabda8dd","modified":1553760105910},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/aa/813c5a6398600e01b740696cd889eb3becad84","hash":"c62a1513ca820dc59fe1cd6d9ec16c92e0e2fbf0","modified":1553760104977},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/c0/05c71f1a000d8187df58083d215c962d7f5505","hash":"dffd212ca2ec705233fabe82a6f483d6be4b151d","modified":1553760105776},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/da/79363b808519d44a7eda67d7bc81e1587a06e8","hash":"0dc5dc27991da9a09d705e488bc3f1fe5a4d4728","modified":1553760104816},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/de/79ab6539ac3702aaac64b879d95e6575f4eefa","hash":"0046fefd52ed4679e0fee757cc91ced94e3ddc12","modified":1553760106379},{"_id":"themes/next-7.0.1/source/lib/pace/.git/objects/f3/0e0a99bb016267bde55537dd47b3657ae59544","hash":"8bf0bc17a6111b6a82981073133f33cc8e815c41","modified":1553760105654},{"_id":"themes/next-7.0.1/source/lib/pace/.git/refs/heads/master","hash":"2cf353bc3f5e2816a3a0e05d3f154a777200f091","modified":1553760106534},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/00/4fa4280892c7d18f6151fac22daf51344c02ea","hash":"7a81ed1087c3792f37bd83137d4034179c911627","modified":1553759958691},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/01/36e1990fcbef0586e0bd4b9d90b96900dcd575","hash":"37ac2f94a41384f4cb66cd74c8313099367a5603","modified":1553759958420},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/01/9a385ce3e8b0232ee5edfa6b4e1dcd44cf142e","hash":"6894d6df0722077c5d21d116f33046625cd57ab8","modified":1553759959690},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/03/f74f308aba6eaa459b8e5b1c7e7203aa9d06ef","hash":"fafadfedfbd5b6b7d49061ee85d3568c791e0f3a","modified":1553759960271},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/08/4d73e711ab990007314dab66ac8da236a98212","hash":"aca52af21085b7a579b275a1e7bb5f1a8818e3d4","modified":1553759959265},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/0f/1d02f84180d20e5abcaabc0c1bd312a873867b","hash":"192e0e348a38739f606fdef8bd5f710339067ff6","modified":1553759960148},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1553759959099},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/2b/c9c88e86c252b037a36df9a3d3df519b254bfc","hash":"e647f9721e4f2e1cd52bfff3c80683b787f76a11","modified":1553759958466},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/2d/488e7ac12f9be4cba8a7a383e972449b4ecef7","hash":"e477cea6ada0896804b0e8dab23c9d56825a0ece","modified":1553759958873},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1553759959189},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/36/58085a9181df88f19f04603b28f6ea21d199cc","hash":"6a467dd51d39b28c1af9c25869e25c6821f6602a","modified":1553759960002},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/48/1ebe947f06e440e41c1a971be0844e852c1d37","hash":"61fea90ca1824db58df6cfc662bc5b371db02224","modified":1553759959580},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1553759959364},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/71/4aebae4e17e00cdb0e82893d9fa39d35b20b59","hash":"d09daa7d244ee40035e6eb67f13867182fb8af86","modified":1553759959609},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/72/14afbfc63460dc013ba6368e8c0886597db666","hash":"f67bc8964bd60f5f78fd2437ae946b4e4021a8d6","modified":1553759960442},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/82/2aa7ea95e2f40a1c9808fcdba0353650781cf9","hash":"07db481043efdac756c39b1a1c9f11048787bb1a","modified":1553759960352},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/83/d5a97b3daaa59cccb44af55f6723f431f2e94a","hash":"448c16fa4f53e5123838d4c3593dcfb15f309905","modified":1553759959866},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/8e/0a48f30df2d542c8e86197067f80ce5f794583","hash":"02367707e47c2549ef585f3b2da72c864d6a8307","modified":1553759958952},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/8f/ca1e70cfeea939105e31d7d17f7c3516120b30","hash":"312d55b1a7fbdcc14c54b3805f0827fc42ad94ed","modified":1553759958625},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/98/a2041bc808f55bbcb9d8b53560e22558338bda","hash":"ebb53379aa2d77ea0832973fa3e44846df0f170f","modified":1553759959957},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/a5/3476a996e477ae4494a5b47aff4237b9859a73","hash":"cd32f255f625f6325f13df5acdef0df20c1a982a","modified":1553759960309},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/a8/63332915ebfd107ca4418c25c80674875c422b","hash":"f12e708237bcf98c072e73e45f1542cfb5646839","modified":1553759959736},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/ae/aa7a68a7131bd03e0bce06f45bfdfa1cd93587","hash":"d7d37380ba502a4050834df40227d612cf911595","modified":1553759959914},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/b1/97881becc7883ad3d3e37cbc6b33f29ef89512","hash":"c044f51aeff15821889c1a2b036ee99b742a35db","modified":1553759958280},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/b2/6b015c6a0aacd5fcbd3fd3a09b0b216855f35c","hash":"6924e4c4558366a76578a2497d2fca15ef39a9f8","modified":1553759959643},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/b6/eda56cb9647d239b26d86f579204cbccf745fe","hash":"12e479d3dfe08df6f9d4d56be2f0a17d9720d846","modified":1553759959816},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/c0/018cb7262951a7eea4001bea16bf6c1db1de0e","hash":"b54299894dbbf00b3187ae3e16a480a91ca75e73","modified":1553759959012},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/a2/7bba2bf42630fc03150b64fc74f2a29c151a27","hash":"b1afe600ba94298a2905a2cf64c900f5954cc146","modified":1553759959410},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/c7/8ceb135b768a369ded42f77d4db3f6363bde20","hash":"aa90e157f2a043dad6017bab2e4aa699f6236a63","modified":1553759959782},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/d1/94060fce08431ebef4cb5f4c02739b913373cb","hash":"b9022b117b03703b5fa8af85fc076b692bde33cf","modified":1553759960060},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/e5/dc795cdf7d9163cc736be938a9707f73869c9f","hash":"57163dfa4eebe09d57ede37ee259b7cbb2b1e643","modified":1553759958527},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/f0/acd06a59665dabfb6eb0608f0a797fdcd44158","hash":"f85f3dbe326b8752f6e32c7169ed3b409f4167b7","modified":1553759958801},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/f1/dcdfc585f60cb1614c480c3b06a1632b1b6d8e","hash":"606959b7d91b2ed28c670c607623ce36ab3a0c07","modified":1553759960185},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/f4/5d8f110c3034162a1091dafe4b03d2e56b323e","hash":"963dad8248030a8d7b185f4726e40a65a0583c0e","modified":1553759960395},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/objects/f6/8184f97255dfd504e22775df6450edb9b51d70","hash":"b0a36dcf81780a9f82db6318daa065200e16efee","modified":1553759960103},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/refs/heads/master","hash":"de1c871eebc3a4c2459021ac3233e709765d1957","modified":1553759960573},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/logs/refs/heads/master","hash":"5907c13497f664729d72d3d26945e941b6e5ade5","modified":1553760031949},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/2b/d5d590d07a161741477ace2339eb37c07cc40c","hash":"10a1f52729a36d3b9d594e93473fef26fed768e1","modified":1553760001255},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/a7/8511a30ca600e9db1ecc1a835c0d4b65fbec6b","hash":"c5fbf2c49ade74e34a3ed2cce39a6b54e4686e3e","modified":1553760004122},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1553760031935},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/instantsearch.min.js","hash":"d8f2e1de2142c44500d41debeeb319ba8adb1ccd","modified":1553760031995},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/logs/refs/heads/master","hash":"69b2a015e91807925b2f1cdca6feb57482043f33","modified":1553760943920},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/logs/refs/heads/master","hash":"f100bb563a413b990755e9bd9cfa4cefd4ab7547","modified":1553760039614},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1553760943907},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/logs/refs/heads/master","hash":"46896acfeb858b383227869e42cacf3cb347fbe4","modified":1553758967250},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1553760039603},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1553758967238},{"_id":"themes/next-7.0.1/source/lib/pace/.git/logs/refs/heads/master","hash":"bbe77f25cc92b4ef35137cf65e7f66a4253d64fd","modified":1553760106536},{"_id":"themes/next-7.0.1/source/lib/pace/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1553760106521},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/logs/refs/heads/master","hash":"52ba503ea8ae8c7f2e435d62475e25c2384c2937","modified":1553759960575},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1553759960561},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/logs/refs/remotes/origin/HEAD","hash":"5907c13497f664729d72d3d26945e941b6e5ade5","modified":1553760031935},{"_id":"themes/next-7.0.1/source/lib/fancybox/.git/logs/refs/remotes/origin/HEAD","hash":"69b2a015e91807925b2f1cdca6feb57482043f33","modified":1553760943907},{"_id":"themes/next-7.0.1/source/lib/fastclick/.git/logs/refs/remotes/origin/HEAD","hash":"f100bb563a413b990755e9bd9cfa4cefd4ab7547","modified":1553760039602},{"_id":"themes/next-7.0.1/source/lib/jquery_lazyload/.git/logs/refs/remotes/origin/HEAD","hash":"46896acfeb858b383227869e42cacf3cb347fbe4","modified":1553758967238},{"_id":"themes/next-7.0.1/source/lib/pace/.git/logs/refs/remotes/origin/HEAD","hash":"bbe77f25cc92b4ef35137cf65e7f66a4253d64fd","modified":1553760106520},{"_id":"themes/next-7.0.1/source/lib/reading_progress/.git/logs/refs/remotes/origin/HEAD","hash":"52ba503ea8ae8c7f2e435d62475e25c2384c2937","modified":1553759960561},{"_id":"themes/next-7.0.1/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165911.jpg","hash":"60185c78cf98e920b16e79bcdb11456551898771","modified":1553769917071},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170037.jpg","hash":"4630671edb6b07c90b4153c64fcd32505c51e6c0","modified":1553769917107},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165744.jpg","hash":"e37ad9d11eb4a2e128fe1f19035b83d375163908","modified":1553769917049},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165717.jpg","hash":"285f61c28ea2e19dca2e5a67d652e02eaf1420a4","modified":1553769917029},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165712.jpg","hash":"d0ea78d656529b9daa45248e1edad497d6a8ef87","modified":1553769917022},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165949.jpg","hash":"d97d1ec81116e1cae399eca2af24f41c28e3c05c","modified":1553769917099},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165649.jpg","hash":"a0c7d39587800d18fba3df04e8fa07a4c5382dc4","modified":1553769917011},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/.git/objects/e4/c7790c85a26069925132383ac286502de41c71","hash":"76b2ebe5b1dc357c9c59c97dbe17c35069257531","modified":1553760031641},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724153430.jpg","hash":"4da74851e6679820b8c5dfcfb569e618e1a38aff","modified":1553769917341},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170940.jpg","hash":"15ca18fbc117d5dce8073c839c9c4dfb183f8343","modified":1553769917296},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724153454.jpg","hash":"74177dda3d2f6334ff137e469d7499df3c2cd869","modified":1553769917363},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170434.jpg","hash":"f3e6e341926b1a6cc84fe81ec637dd26a8399216","modified":1553769917223},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170318.jpg","hash":"ca7271d57f1b35e46cd67707a7e3a41f980cc3d1","modified":1553769917173},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134519.jpg","hash":"3aa085b2d836b8da53323816b681209eee3c738a","modified":1553769917326},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134545.jpg","hash":"9f0a61d9680e1d9aaf9f911d13da36a03f263862","modified":1553769917333},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170442.jpg","hash":"d7aec08e939ce76af86023d47612c2b6601cd832","modified":1553769917232},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724153439.jpg","hash":"4a5e744bb4eb23a5686ecf708b59f3112a64eac1","modified":1553769917349},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170555.jpg","hash":"e7a565860b1bf0b878fde9011dd12d64b8338ae8","modified":1553769917264},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170325.jpg","hash":"53b9f1655b4b45b25a14bc4f51effe770bbabdac","modified":1553769917182},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170342.jpg","hash":"2462c772832ba1bb01ad38c2fa45abf28d85fdbf","modified":1553769917199},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170421.jpg","hash":"8f680b64c3467d983d1307693ed85564984aa6f3","modified":1553769917215},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170452.jpg","hash":"b53ceda14ce9fa28bda8aa673a2e14dcffdc573e","modified":1553769917240},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170737.jpg","hash":"587911e53e1b0a17097823f5ee5160015f59a364","modified":1553769917286},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170157.jpg","hash":"8b5e2934da389cb6caa395c062f603838be69172","modified":1553769917135},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134421.jpg","hash":"684252720c515b27e77528a54eb9fdb1ed489d05","modified":1553769917319},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724153448.jpg","hash":"c7a2832279d28f653d8d8c3b7a3ad82d30847b89","modified":1553769917355},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170255.jpg","hash":"0774154bc0e4f3bd1ae8b00253f04b1a1aa3b2a1","modified":1553769917166},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170145.jpg","hash":"57698646194e4d7d6ec91c8783b4c949d8217784","modified":1553769917129},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170137.jpg","hash":"5b1943d08b532667f01d177c9e8f7040886562fa","modified":1553769917121},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724154325.jpg","hash":"225b8faf3450947e216752fecbe34880a11d27a7","modified":1553769917372},{"_id":"source/images/about/a.jpg","hash":"53710f6b2fda09f524cc7e92d01af2c3d835924d","modified":1553769917390},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165725.jpg","hash":"14e4fbe1284d5b36e4681f95e21918ebeb0a8bf7","modified":1553769917039},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170228.jpg","hash":"387fc22b3fdc514122374b7401fd11e40eba9966","modified":1553769917149},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170121.jpg","hash":"404d24a45bb0ff181c2ce1cee90fb11ad14521a9","modified":1553769917115},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170234.jpg","hash":"6f303e1142db168c8438d84c142714185cb0c32b","modified":1553769917158},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134100.jpg","hash":"1f410d8e2c7e34ab6a895ad734a1a7e8867b53de","modified":1553769917312},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170359.jpg","hash":"a5725e5809cd0b50601671349cb5fd023d64ecd2","modified":1553769917206},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170331.jpg","hash":"3f8acbfda01d7bcd317dd1fe94f40a88180758f6","modified":1553769917191},{"_id":"source/images/Ubuntu Server 16.04/IMG20180724134039.jpg","hash":"8e025dd724ba5053d5c8099f4fdd4570a4083164","modified":1553769917304},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170208.jpg","hash":"2a19cee273c40840baf285cd6047852273578574","modified":1553769917142},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165801.jpg","hash":"1ef59fcb9dc79104379c354b142093b78a8f0ddf","modified":1553769917064},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165615.jpg","hash":"2027a1131d008c51198989bef521114dd85c7ed6","modified":1553769917005},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170544.jpg","hash":"7770f3fe1ba01d24e3d1700c4fd2aa3a8b4e502e","modified":1553769917250},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723165919.jpg","hash":"22acc90b4faa32411b78334dc5262193762273bd","modified":1553769917089},{"_id":"source/images/Ubuntu Server 16.04/IMG20180723170657.jpg","hash":"0206362e968b7460bebc1d64a043d614a90838d7","modified":1553769917277},{"_id":"themes/next-7.0.1/source/lib/algolia-instant-search/instantsearch.min.js.map","hash":"753adf35c67993265fb13b827aeee3f95e3442af","modified":1553760032016},{"_id":"source/fxr/openvpn-install-2.4.6-I602.exe","hash":"3c478476c3e77b473b06452ab3f40cf9074f73a5","modified":1553769916839},{"_id":"public/baidu_verify_XnApqVNrb7.html","hash":"82930f06d0b5d11c8c057c3c67d93d4ac7f6e45c","modified":1554308832038},{"_id":"public/baidu_verify_hIGNFAMYa1.html","hash":"d9a6d69a40de0ebf0bfbef2641cb50acf09a900a","modified":1554308832208},{"_id":"public/baidusitemap.xml","hash":"174851b127158154d7722e09fdf5146a75b3f090","modified":1554308832209},{"_id":"public/atom.xml","hash":"e2de685beb84b745a3c2ccfa193cce31a4067594","modified":1554308832233},{"_id":"public/search.xml","hash":"cc2164d05d3f42c0d0ee47bf471cbe4b33f7f15a","modified":1554308832233},{"_id":"public/sitemap.xml","hash":"48cba670149872475a3820dd9c84bc273253cacc","modified":1554308832233},{"_id":"public/about/index.html","hash":"425a808dbf06b12d864b843a556c17e0a65aceb6","modified":1554916067160},{"_id":"public/EasyLife/index.html","hash":"25112259bdab4c3b8f59a26086de876d8f4fecc8","modified":1554916067160},{"_id":"public/categories/index.html","hash":"4bd8f7dbbbb42ea2c1e8c48d0e59f458b0b7c4b2","modified":1554916067160},{"_id":"public/fxr/Git.html","hash":"3057a61b4db61e94e7da2d6c4fdce9fc82c3ae59","modified":1554916067160},{"_id":"public/fxr/index.html","hash":"1543bc9dc225d5ef1b7803f362d99647240c7b53","modified":1554916067160},{"_id":"public/fxr/school.html","hash":"699cd5a4712da4dcfc3bd46ebb8ebb6eabb69512","modified":1554916067160},{"_id":"public/fxr/校园网.html","hash":"a13913633189c5d16250beff039dc89d3647699f","modified":1554916067160},{"_id":"public/tags/index.html","hash":"c3741631f466cd9cb08467ab3376b876d31596e8","modified":1554916067161},{"_id":"public/EasyLife/V0.1.0/index.html","hash":"f2444e7f6786b88ba6353830a1815e0ba7a725eb","modified":1554916067160},{"_id":"public/EasyLife/V0.1.0/Help.html","hash":"9799c79b1dcefd877af8aa4dc0ecfe3d9b6298fa","modified":1554916067160},{"_id":"public/2604890615.html","hash":"64ac77d320508d3d3c207c44291a8ecf3a4d5b7f","modified":1554916067160},{"_id":"public/560540611.html","hash":"f323e4b4e45d35336fed73411111db32f635b0e8","modified":1554916067161},{"_id":"public/976598171.html","hash":"afa87633806f8016870664f9cb075b5e41656195","modified":1554916067161},{"_id":"public/3123403799.html","hash":"13151bc4883ef75a75fd0eda1b37dbccfaaa2851","modified":1554916067161},{"_id":"public/1797370495.html","hash":"a111e0b1921a71ce10468ba0c7daa3e4c14fe70c","modified":1554916067161},{"_id":"public/1000607951.html","hash":"e0ff720924022a8d020b5c7b66bf761a1a1e1e2c","modified":1554916067161},{"_id":"public/45013.html","hash":"cda931f40b8ebf83efbdbde9a6276916958fade4","modified":1554916067161},{"_id":"public/18543.html","hash":"5a53543bfa71350b20f5de69f743351718e05f91","modified":1554916067162},{"_id":"public/647653334.html","hash":"5d45cf9b632f0e3eaa4302fa05b4f6c2c485344d","modified":1554916067161},{"_id":"public/45393.html","hash":"2d619da1cec9b21e29ecdf73fcf9cbf8fb254f86","modified":1554916067162},{"_id":"public/404.html","hash":"cf8682a08dd81df007f16d5cbfc672f981bb61c1","modified":1554916066863},{"_id":"public/24787.html","hash":"65e667d8a3999984b23e1a0918587701fb654124","modified":1554916067162},{"_id":"public/6200.html","hash":"bd1c87b349ef657c90fb4242f0eefa587e6a0153","modified":1554916067162},{"_id":"public/48183.html","hash":"69bef8c722d8dd12573d2ae8238ecb25f004fe2a","modified":1554916067162},{"_id":"public/17747.html","hash":"54cd324fc25b415c21e1f20e3a6ea242764e5639","modified":1554916067163},{"_id":"public/15900.html","hash":"d9a21969c308d67facb6621f99664d1c4547c8a6","modified":1554916067163},{"_id":"public/48389.html","hash":"54312af4d86ef053cdb2aef2f515b7cb8ce0c456","modified":1554916067163},{"_id":"public/26108.html","hash":"0d24e716c7fcb10dd5699aae8ba73b80dc15c1a1","modified":1554916067163},{"_id":"public/51603.html","hash":"a687ad365d844363aea572c5757199767428f9f8","modified":1554916067163},{"_id":"public/41173.html","hash":"96cfae1b223052bc44ba2b5c6ac74ce8352f3391","modified":1554916067163},{"_id":"public/46392.html","hash":"63cbeddedd0acd64a31829630cc5061094fd7da9","modified":1554916067164},{"_id":"public/25475.html","hash":"a14f16aa3a830b79cc75b0cde6dec7b7062b92b2","modified":1554916067163},{"_id":"public/13223.html","hash":"c88a2c36ce0364fbea0f14f38f04da948f702ada","modified":1554916067164},{"_id":"public/2173.html","hash":"dc309ea15f926a79ab5cdc2d773bb88490c28d34","modified":1554916067163},{"_id":"public/47907.html","hash":"497ec5a89fb5297efe26db14200e795560f7fab9","modified":1554916067164},{"_id":"public/53776.html","hash":"8cc6e29e63d986e88fd5a2fa59a037fd9c4e5d81","modified":1554916067164},{"_id":"public/archives/index.html","hash":"b10e82a0e2c21ded5bf09cce0f8cf58f66495ed4","modified":1554916067164},{"_id":"public/archives/page/2/index.html","hash":"721625b4b1eec8ac914e397d7863f2ba45d8636f","modified":1554916067164},{"_id":"public/archives/2017/index.html","hash":"5967d39e2304654c29f1624ede791747b52dd932","modified":1554916067165},{"_id":"public/archives/page/3/index.html","hash":"5422705085404cdb1cc6aef4cd4483a2f4a44242","modified":1554916067164},{"_id":"public/archives/2017/page/2/index.html","hash":"f87e374389ce92ea0d7e26a87234d6686cacf1ac","modified":1554916067165},{"_id":"public/archives/2017/08/index.html","hash":"15038b074055dbbaaccedd85207c587f03ce6416","modified":1554916067164},{"_id":"public/archives/2017/09/index.html","hash":"8672ca0710534140024d7099ed69d1e2f80c4131","modified":1554916067165},{"_id":"public/archives/2017/10/index.html","hash":"d805111913616f545d78656f495f9727af618bd0","modified":1554916067165},{"_id":"public/archives/2017/11/index.html","hash":"a7b53fc6bbdfef3ba3ae8a082276be8cc0a96de4","modified":1554916067165},{"_id":"public/archives/2017/12/index.html","hash":"4eb2283c9b496877b55711828e723888e7bdb2a1","modified":1554916067165},{"_id":"public/archives/2018/index.html","hash":"1efc23317704ffeec843a4423b75a3a295de54cb","modified":1554916067165},{"_id":"public/archives/2018/page/2/index.html","hash":"406e82640fa5f46457d6c4a04985a4e4505d26b7","modified":1554916067166},{"_id":"public/archives/2018/01/index.html","hash":"46a222c79f6e8c67fc89b4c876402f8a69f9cb80","modified":1554916067165},{"_id":"public/archives/2018/02/index.html","hash":"1602021270e7cc75a32bdbc5549001d31a7090f3","modified":1554916067165},{"_id":"public/archives/2018/04/index.html","hash":"cd23bd99ec478ed379e5a65dc555146fa9ff5c94","modified":1554916067166},{"_id":"public/archives/2018/06/index.html","hash":"2265e2832bea22d0394afa273f2a8563edc0fbec","modified":1554916067166},{"_id":"public/archives/2018/07/index.html","hash":"08c1148b1f66d18168e99c2a5a55b3fea84fff25","modified":1554916067166},{"_id":"public/archives/2019/index.html","hash":"ab376857c805310621636dde59e72c930fe5df41","modified":1554916067166},{"_id":"public/categories/数据结构-陈越、何钦铭/index.html","hash":"efe98dfe9fdb402ffa91a701007408bae9e0735b","modified":1554916067166},{"_id":"public/categories/C/index.html","hash":"d6f3eebf485426b15de6caa1b876ca0562ee06fd","modified":1554916067166},{"_id":"public/categories/ACM/index.html","hash":"5bd03a168c5080ca872d527d0ddadca3eaab0632","modified":1554916067166},{"_id":"public/categories/Hexo/index.html","hash":"112a64ed3e022d3363033a4d78b13e66360ddcf7","modified":1554916067167},{"_id":"public/categories/CCCC天梯赛/index.html","hash":"0f3bd8cec64574e2075334e6384a438e916f72de","modified":1554916067167},{"_id":"public/categories/Linux/index.html","hash":"59d7529b27f5b0afd17d5b58ad627556f8d84d0b","modified":1554916067167},{"_id":"public/categories/python/index.html","hash":"0e8f1772b75188ee245ad82dc85795dc5bfd68d8","modified":1554916067167},{"_id":"public/categories/Python/index.html","hash":"984997a6157e4eaf96054c09610834fbcd35fb86","modified":1554916067167},{"_id":"public/categories/面向对象程序设计-Java语言-翁恺/index.html","hash":"54b757d331e7c23adfaf54b8d3a3f259de89dfc7","modified":1554916067167},{"_id":"public/categories/零基础学Java语言-翁恺/index.html","hash":"04f582eff1e120373538a407b28b748458698069","modified":1554916067167},{"_id":"public/categories/操作系统/index.html","hash":"95251cb45084a6193c6c6aaf57fe11d146839389","modified":1554916067168},{"_id":"public/index.html","hash":"8549215ee5f49a0dae2c642e7386de563b5e9edd","modified":1554916067167},{"_id":"public/page/2/index.html","hash":"047bc7a588fd6062c5a0699c22756afbbc590cb6","modified":1554916067168},{"_id":"public/page/3/index.html","hash":"3c6868792b3e9baf71e4892dfebcdddda903d685","modified":1554916067167},{"_id":"public/tags/数据结构/index.html","hash":"10c5f589e85fa4558b75d263564fae4c055d6d24","modified":1554916067169},{"_id":"public/tags/百度之星/index.html","hash":"27d86ca828b6adc20330bffdf61ae0220587e43a","modified":1554916067168},{"_id":"public/tags/完全背包/index.html","hash":"5545254e1f9f281ce769fd90b2f777f4b99065ac","modified":1554916067168},{"_id":"public/tags/C/index.html","hash":"be9da4504a837ee7892e103f5c9f674db79e9107","modified":1554916067169},{"_id":"public/tags/NET/index.html","hash":"21d021fdc286292e2f042266e4984c49ab437da7","modified":1554916067168},{"_id":"public/tags/Hexo/index.html","hash":"caadeb9d8bffeb1c9d1a600dfbb82853df5594f8","modified":1554916067169},{"_id":"public/tags/Github/index.html","hash":"22afb403ce63b586e044cd666f4070fa5b2b224a","modified":1554916067168},{"_id":"public/tags/CCCC天梯赛/index.html","hash":"695ae319782fa5af056428be3fcee3c6d3c0664d","modified":1554916067169},{"_id":"public/tags/Ubuntu/index.html","hash":"d9b64068abc880cfe3a2f87d9f573cb624c14187","modified":1554916067170},{"_id":"public/tags/Linux/index.html","hash":"d2ba44ba0c3c9088f368fba58070b9db01aed95e","modified":1554916067169},{"_id":"public/tags/Python/index.html","hash":"57b949f5c2340919b18fdebcf16e6bb5e6ead5c6","modified":1554916067170},{"_id":"public/tags/lambda/index.html","hash":"bad2f46c0f7a180f8ae8b28fbf8a2d9a3b6b21f8","modified":1554916067170},{"_id":"public/tags/Java/index.html","hash":"d319f7c95fbaefe2aa36100236f7439a9316bf0a","modified":1554916067171},{"_id":"public/tags/爬虫/index.html","hash":"ed8e7524672d376bb87ddc2691d730e672f85d16","modified":1554916067171},{"_id":"public/tags/Twilio/index.html","hash":"95aa1a815629f3a2ca910ec7745a1f53b39d89c2","modified":1554916067172},{"_id":"public/tags/正则表达式/index.html","hash":"f9ff9c7b940b57a15f0a6044f57e2536f4d865b8","modified":1554916067172},{"_id":"public/tags/操作系统/index.html","hash":"6267a61fdc2156c9fb395cefb57e87882705a31f","modified":1554916067172},{"_id":"public/tags/DFS/index.html","hash":"7b5edd9f4f80a7aceb8f8794ffb7b97603a9aae0","modified":1554916067172},{"_id":"public/archives/2019/03/index.html","hash":"1e211f8cfcabcbeb0677f37df2e62a5597e9733a","modified":1554916067166},{"_id":"public/css/blog-encrypt.css","hash":"262922c3f49cb8cca7b3ea982c49b57de2af53d6","modified":1554308833929},{"_id":"public/lib/blog-encrypt.js","hash":"24b097141e36e24d93a30894eecb94307185141d","modified":1554916058479},{"_id":"public/live2dw/assets/haruto.physics.json","hash":"2fbf886979212357ba293bd35884f2cb5b26b6a6","modified":1554308833930},{"_id":"public/live2dw/assets/haruto.model.json","hash":"76f915f7edbd9c47df0ca041dddb151c0c93a2bf","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"61d7d590d9feb71b32fd6bd142b59410d75bc1fa","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"efc99efdff39c93372cff0f6d62c4e748e1a5593","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"a72b697a92a7cff40d15774b143b465b34cee5e6","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"32c888667455a3ff6f1b04f910c1a5cc4de30af0","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"df10cc1d333c96da1296a4853c1ddbd44d8a11f3","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"d8c9410135c81604eba665b59808089808e0851a","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"637e00442da4042cd4b0ed2cc62ffb1559881814","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"9b95ef8548b979d1fca557c74f8d66fb15b34578","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/09.mtn","hash":"ecf1283b72e1c4b7e3a97343cd97726813f18790","modified":1554308833930},{"_id":"public/live2dw/assets/mtn/idle_02.mtn","hash":"d130dd1d194f05b3eb5391289b0339999e37c3a6","modified":1554308833930},{"_id":"public/css/spoiler.css","hash":"78428e2fd20142332b1154eb2bde0247226b264a","modified":1554308833930},{"_id":"public/js/spoiler.js","hash":"bbcbcbb9e77933929819ad65345955df6d22246a","modified":1554308833930},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1554916067177},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1554916067302},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1554916067331},{"_id":"public/lib/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1554308834050},{"_id":"public/live2dw/assets/moc/haruto.moc","hash":"57bec0b245b49ea941d61ba3dee671f20441afae","modified":1554308834050},{"_id":"public/live2dw/assets/moc/haruto.2048/texture_00.png","hash":"62b970aa1480a1c18bdc4e74e297f2a1b34ca9fa","modified":1554308834050},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1554916067402}],"Category":[{"name":"数据结构_陈越、何钦铭","_id":"cju1bsw7m0009kchivg3ixz97"},{"name":"ACM","_id":"cju1bsw7t000gkchiq610g787"},{"name":"C#","_id":"cju1bsw81000pkchip1l11jv1"},{"name":"Hexo","_id":"cju1bsw8f0010kchi8lvk8yw0"},{"name":"CCCC天梯赛","_id":"cju1bsw8n001bkchi1ea34kxn"},{"name":"Linux","_id":"cju1bsw8s001kkchifnpsm950"},{"name":"python","_id":"cju1bsw8w001rkchix9bu38tw"},{"name":"Python","_id":"cju1bsw8z001wkchi8q9d73lh"},{"name":"面向对象程序设计_Java语言_翁恺","_id":"cju1bsw950025kchic1odk4cd"},{"name":"零基础学Java语言_翁恺","_id":"cju1bsw9i002xkchiwx3hchwy"},{"name":"操作系统","_id":"cju1bswgp0044kchiiibd0yy6"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n\t\t  charset=\"utf-8\" homePageUrl=\"/\"\n\t\t  homePageName=\"回到我的主页\">\n  </script>\n\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n\t\t  charset=\"utf-8\" homePageUrl=\"/\"\n\t\t  homePageName=\"回到我的主页\">\n  </script>\n\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2019-03-28T10:45:16.792Z","updated":"2019-03-28T10:45:16.792Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cju1bsw3w0000kchiuljkth0v","content":"<!DOCTYPE HTML>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n<script src=\"/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":{\"jsonPath\":\"/live2dw/assets/haruto.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false});</script></body>\n</html><link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n<script src=\"/live2dw/lib/L2Dwidget.min.js?0c58a1486de42ac6cc1c59c7d98ae887\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":{\"jsonPath\":\"/live2dw/assets/haruto.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false});</script></body>\n</html>"},{"layout":"false","_content":"XnApqVNrb7","source":"baidu_verify_XnApqVNrb7.html","raw":"layout: false\n---\nXnApqVNrb7","date":"2019-03-28T10:45:16.822Z","updated":"2019-03-28T10:45:16.822Z","path":"baidu_verify_XnApqVNrb7.html","title":"","comments":1,"_id":"cju1bsw3y0001kchibvvxm7s7","content":"XnApqVNrb7<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"XnApqVNrb7"},{"layout":"false","_content":"hIGNFAMYa1","source":"baidu_verify_hIGNFAMYa1.html","raw":"layout: false\n---\nhIGNFAMYa1","date":"2019-03-28T10:45:16.823Z","updated":"2019-03-28T10:45:16.823Z","path":"baidu_verify_hIGNFAMYa1.html","title":"","comments":1,"_id":"cju1bsw3z0002kchidg75oyiq","content":"hIGNFAMYa1<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"hIGNFAMYa1"},{"title":"关于&留言","date":"2018-02-01T07:51:58.000Z","_content":"## 简介\nGithub:[github.com/ZhaoQi99](https://github.com/ZhaoQi99)\nQQ: [956361916](tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=956361916&website=www.oicqzone.com)\nEmail: [zhaoqi99@outlook.com](mailto:zhaoqi99@outlook.com); [956361916@qq.com](mailto:956361916@qq.com)\n\n## 教育背景\n**陕西师范大学，陕西西安** - *计算机科学与技术/本科*\n2016年9月 - 至今 (预计2020年7月毕业)\n\n## 荣誉奖励\n* 第42届国际大学生程序设计竞赛亚洲区域赛(西安) **铜奖**，2017年10月。\n* 中国高校计算机大赛-团体程序设计天梯赛 **二等奖**，2018年4月。\n* 陕西师范大学2017-2018学年度 **三等奖学金**，2018年9月。\n\n## 技能\n* 拥有扎实的 算法 与 数据结构 基础。\n* 能熟练使用 **C#** 解决实际问题，熟悉 **Winform**、**Web Service**。\n* 熟悉 **Python**、**网络爬虫**、**Flask**、**Django**、**GraphQL**。\n* 完整的 APP、Web Service 和 Restful  API 开发经验。\n* 熟练使用 **Git**，熟悉 **Git-workflow**。\n* 能正确使用 **Nunit**、**unittest**、**pytest** 进行单元测试。\n* 熟悉 **Linux** 系统常用命令,熟悉关系型数据库(**MySQL**、**Postgresql**)基本语法。\n* 对 **Redis**、**Java**、**Android**、**C++** 有一定的了解。\n\n## 项目\n* 校园API(Python)\t\t\t\t\t\t\t        2018年7月 - 至今\n为校内各个服务提供一套简洁的 API 接口，以便能够在此基础上进行扩展开发。\n\t* 利用 **bs4**、**requests** 库开发各类服务接口。\n\t* 利用 **Tesseract-OCR** 进行验证码识别。\n\t* 应用 **Flask** 开发 **Restful API**。\n\t* 使用 **Sphinx** 生成开发文档。\n* 校园APP(Android)\t\t\t\t\t\t       \t\t      2018年11月\n一款适用于本校的校园生活服务类APP,用于获取校园资讯、查询考试成绩等。\n\t* 使用 **Web Service** 与 **Restful API** 作为后台。\n\t* 团队项目负责人,后台开发,技术研究。\n\t* 产品已经上线,并取得良好校园反应。\n\n## 经历\n* 长亭科技(北京)，洞鉴(X-Ray)产品组，后端开发实习生\t  2019年2月 - 2019年4月\n\t* 实现和修复部分 GraphQL API 与 Open API\n\t* 修复扫描器产品业务逻辑上的 Bug\n\t* 提供产品 i18n 过程中的时区接口\n\n## 其他\n* 国家大学生创新创业训练计划”大学校园失物招领平台“成功结项，2017年4月 - 2018年4月。\n* 主持 陕西师范大学勤助科研基金项目”校园信息平台“，2018年5月 - 至今。\n* 陕西师范大学”感恩母校”专题社会实践活动 优秀队长，2017年1月。\n\n\n","source":"about/index.md","raw":"---\ntitle: 关于&留言\ndate: 2018-02-01 15:51:58\n---\n## 简介\nGithub:[github.com/ZhaoQi99](https://github.com/ZhaoQi99)\nQQ: [956361916](tencent://AddContact/?fromId=45&fromSubId=1&subcmd=all&uin=956361916&website=www.oicqzone.com)\nEmail: [zhaoqi99@outlook.com](mailto:zhaoqi99@outlook.com); [956361916@qq.com](mailto:956361916@qq.com)\n\n## 教育背景\n**陕西师范大学，陕西西安** - *计算机科学与技术/本科*\n2016年9月 - 至今 (预计2020年7月毕业)\n\n## 荣誉奖励\n* 第42届国际大学生程序设计竞赛亚洲区域赛(西安) **铜奖**，2017年10月。\n* 中国高校计算机大赛-团体程序设计天梯赛 **二等奖**，2018年4月。\n* 陕西师范大学2017-2018学年度 **三等奖学金**，2018年9月。\n\n## 技能\n* 拥有扎实的 算法 与 数据结构 基础。\n* 能熟练使用 **C#** 解决实际问题，熟悉 **Winform**、**Web Service**。\n* 熟悉 **Python**、**网络爬虫**、**Flask**、**Django**、**GraphQL**。\n* 完整的 APP、Web Service 和 Restful  API 开发经验。\n* 熟练使用 **Git**，熟悉 **Git-workflow**。\n* 能正确使用 **Nunit**、**unittest**、**pytest** 进行单元测试。\n* 熟悉 **Linux** 系统常用命令,熟悉关系型数据库(**MySQL**、**Postgresql**)基本语法。\n* 对 **Redis**、**Java**、**Android**、**C++** 有一定的了解。\n\n## 项目\n* 校园API(Python)\t\t\t\t\t\t\t        2018年7月 - 至今\n为校内各个服务提供一套简洁的 API 接口，以便能够在此基础上进行扩展开发。\n\t* 利用 **bs4**、**requests** 库开发各类服务接口。\n\t* 利用 **Tesseract-OCR** 进行验证码识别。\n\t* 应用 **Flask** 开发 **Restful API**。\n\t* 使用 **Sphinx** 生成开发文档。\n* 校园APP(Android)\t\t\t\t\t\t       \t\t      2018年11月\n一款适用于本校的校园生活服务类APP,用于获取校园资讯、查询考试成绩等。\n\t* 使用 **Web Service** 与 **Restful API** 作为后台。\n\t* 团队项目负责人,后台开发,技术研究。\n\t* 产品已经上线,并取得良好校园反应。\n\n## 经历\n* 长亭科技(北京)，洞鉴(X-Ray)产品组，后端开发实习生\t  2019年2月 - 2019年4月\n\t* 实现和修复部分 GraphQL API 与 Open API\n\t* 修复扫描器产品业务逻辑上的 Bug\n\t* 提供产品 i18n 过程中的时区接口\n\n## 其他\n* 国家大学生创新创业训练计划”大学校园失物招领平台“成功结项，2017年4月 - 2018年4月。\n* 主持 陕西师范大学勤助科研基金项目”校园信息平台“，2018年5月 - 至今。\n* 陕西师范大学”感恩母校”专题社会实践活动 优秀队长，2017年1月。\n\n\n","updated":"2019-03-28T10:45:16.822Z","path":"about/index.html","comments":1,"layout":"page","_id":"cju1bsw7e0004kchisf1kfzgb","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Github:<a href=\"https://github.com/ZhaoQi99\" target=\"_blank\" rel=\"noopener\">github.com/ZhaoQi99</a><br>QQ: <a href=\"tencent://AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=956361916&amp;website=www.oicqzone.com\" target=\"_blank\" rel=\"noopener\">956361916</a><br>Email: <a href=\"mailto:zhaoqi99@outlook.com\" target=\"_blank\" rel=\"noopener\">zhaoqi99@outlook.com</a>; <a href=\"mailto:956361916@qq.com\" target=\"_blank\" rel=\"noopener\">956361916@qq.com</a></p>\n<h2 id=\"教育背景\"><a href=\"#教育背景\" class=\"headerlink\" title=\"教育背景\"></a>教育背景</h2><p><strong>陕西师范大学，陕西西安</strong> - <em>计算机科学与技术/本科</em><br>2016年9月 - 至今 (预计2020年7月毕业)</p>\n<h2 id=\"荣誉奖励\"><a href=\"#荣誉奖励\" class=\"headerlink\" title=\"荣誉奖励\"></a>荣誉奖励</h2><ul>\n<li>第42届国际大学生程序设计竞赛亚洲区域赛(西安) <strong>铜奖</strong>，2017年10月。</li>\n<li>中国高校计算机大赛-团体程序设计天梯赛 <strong>二等奖</strong>，2018年4月。</li>\n<li>陕西师范大学2017-2018学年度 <strong>三等奖学金</strong>，2018年9月。</li>\n</ul>\n<h2 id=\"技能\"><a href=\"#技能\" class=\"headerlink\" title=\"技能\"></a>技能</h2><ul>\n<li>拥有扎实的 算法 与 数据结构 基础。</li>\n<li>能熟练使用 <strong>C#</strong> 解决实际问题，熟悉 <strong>Winform</strong>、<strong>Web Service</strong>。</li>\n<li>熟悉 <strong>Python</strong>、<strong>网络爬虫</strong>、<strong>Flask</strong>、<strong>Django</strong>、<strong>GraphQL</strong>。</li>\n<li>完整的 APP、Web Service 和 Restful  API 开发经验。</li>\n<li>熟练使用 <strong>Git</strong>，熟悉 <strong>Git-workflow</strong>。</li>\n<li>能正确使用 <strong>Nunit</strong>、<strong>unittest</strong>、<strong>pytest</strong> 进行单元测试。</li>\n<li>熟悉 <strong>Linux</strong> 系统常用命令,熟悉关系型数据库(<strong>MySQL</strong>、<strong>Postgresql</strong>)基本语法。</li>\n<li>对 <strong>Redis</strong>、<strong>Java</strong>、<strong>Android</strong>、<strong>C++</strong> 有一定的了解。</li>\n</ul>\n<h2 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h2><ul>\n<li>校园API(Python)                                    2018年7月 - 至今<br>为校内各个服务提供一套简洁的 API 接口，以便能够在此基础上进行扩展开发。<ul>\n<li>利用 <strong>bs4</strong>、<strong>requests</strong> 库开发各类服务接口。</li>\n<li>利用 <strong>Tesseract-OCR</strong> 进行验证码识别。</li>\n<li>应用 <strong>Flask</strong> 开发 <strong>Restful API</strong>。</li>\n<li>使用 <strong>Sphinx</strong> 生成开发文档。</li>\n</ul>\n</li>\n<li>校园APP(Android)                                             2018年11月<br>一款适用于本校的校园生活服务类APP,用于获取校园资讯、查询考试成绩等。<ul>\n<li>使用 <strong>Web Service</strong> 与 <strong>Restful API</strong> 作为后台。</li>\n<li>团队项目负责人,后台开发,技术研究。</li>\n<li>产品已经上线,并取得良好校园反应。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"经历\"><a href=\"#经历\" class=\"headerlink\" title=\"经历\"></a>经历</h2><ul>\n<li>长亭科技(北京)，洞鉴(X-Ray)产品组，后端开发实习生      2019年2月 - 2019年4月<ul>\n<li>实现和修复部分 GraphQL API 与 Open API</li>\n<li>修复扫描器产品业务逻辑上的 Bug</li>\n<li>提供产品 i18n 过程中的时区接口</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>国家大学生创新创业训练计划”大学校园失物招领平台“成功结项，2017年4月 - 2018年4月。</li>\n<li>主持 陕西师范大学勤助科研基金项目”校园信息平台“，2018年5月 - 至今。</li>\n<li>陕西师范大学”感恩母校”专题社会实践活动 优秀队长，2017年1月。</li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Github:<a href=\"https://github.com/ZhaoQi99\" target=\"_blank\" rel=\"noopener\">github.com/ZhaoQi99</a><br>QQ: <a href=\"tencent://AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=956361916&amp;website=www.oicqzone.com\" target=\"_blank\" rel=\"noopener\">956361916</a><br>Email: <a href=\"mailto:zhaoqi99@outlook.com\" target=\"_blank\" rel=\"noopener\">zhaoqi99@outlook.com</a>; <a href=\"mailto:956361916@qq.com\" target=\"_blank\" rel=\"noopener\">956361916@qq.com</a></p>\n<h2 id=\"教育背景\"><a href=\"#教育背景\" class=\"headerlink\" title=\"教育背景\"></a>教育背景</h2><p><strong>陕西师范大学，陕西西安</strong> - <em>计算机科学与技术/本科</em><br>2016年9月 - 至今 (预计2020年7月毕业)</p>\n<h2 id=\"荣誉奖励\"><a href=\"#荣誉奖励\" class=\"headerlink\" title=\"荣誉奖励\"></a>荣誉奖励</h2><ul>\n<li>第42届国际大学生程序设计竞赛亚洲区域赛(西安) <strong>铜奖</strong>，2017年10月。</li>\n<li>中国高校计算机大赛-团体程序设计天梯赛 <strong>二等奖</strong>，2018年4月。</li>\n<li>陕西师范大学2017-2018学年度 <strong>三等奖学金</strong>，2018年9月。</li>\n</ul>\n<h2 id=\"技能\"><a href=\"#技能\" class=\"headerlink\" title=\"技能\"></a>技能</h2><ul>\n<li>拥有扎实的 算法 与 数据结构 基础。</li>\n<li>能熟练使用 <strong>C#</strong> 解决实际问题，熟悉 <strong>Winform</strong>、<strong>Web Service</strong>。</li>\n<li>熟悉 <strong>Python</strong>、<strong>网络爬虫</strong>、<strong>Flask</strong>、<strong>Django</strong>、<strong>GraphQL</strong>。</li>\n<li>完整的 APP、Web Service 和 Restful  API 开发经验。</li>\n<li>熟练使用 <strong>Git</strong>，熟悉 <strong>Git-workflow</strong>。</li>\n<li>能正确使用 <strong>Nunit</strong>、<strong>unittest</strong>、<strong>pytest</strong> 进行单元测试。</li>\n<li>熟悉 <strong>Linux</strong> 系统常用命令,熟悉关系型数据库(<strong>MySQL</strong>、<strong>Postgresql</strong>)基本语法。</li>\n<li>对 <strong>Redis</strong>、<strong>Java</strong>、<strong>Android</strong>、<strong>C++</strong> 有一定的了解。</li>\n</ul>\n<h2 id=\"项目\"><a href=\"#项目\" class=\"headerlink\" title=\"项目\"></a>项目</h2><ul>\n<li>校园API(Python)                                    2018年7月 - 至今<br>为校内各个服务提供一套简洁的 API 接口，以便能够在此基础上进行扩展开发。<ul>\n<li>利用 <strong>bs4</strong>、<strong>requests</strong> 库开发各类服务接口。</li>\n<li>利用 <strong>Tesseract-OCR</strong> 进行验证码识别。</li>\n<li>应用 <strong>Flask</strong> 开发 <strong>Restful API</strong>。</li>\n<li>使用 <strong>Sphinx</strong> 生成开发文档。</li>\n</ul>\n</li>\n<li>校园APP(Android)                                             2018年11月<br>一款适用于本校的校园生活服务类APP,用于获取校园资讯、查询考试成绩等。<ul>\n<li>使用 <strong>Web Service</strong> 与 <strong>Restful API</strong> 作为后台。</li>\n<li>团队项目负责人,后台开发,技术研究。</li>\n<li>产品已经上线,并取得良好校园反应。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"经历\"><a href=\"#经历\" class=\"headerlink\" title=\"经历\"></a>经历</h2><ul>\n<li>长亭科技(北京)，洞鉴(X-Ray)产品组，后端开发实习生      2019年2月 - 2019年4月<ul>\n<li>实现和修复部分 GraphQL API 与 Open API</li>\n<li>修复扫描器产品业务逻辑上的 Bug</li>\n<li>提供产品 i18n 过程中的时区接口</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>国家大学生创新创业训练计划”大学校园失物招领平台“成功结项，2017年4月 - 2018年4月。</li>\n<li>主持 陕西师范大学勤助科研基金项目”校园信息平台“，2018年5月 - 至今。</li>\n<li>陕西师范大学”感恩母校”专题社会实践活动 优秀队长，2017年1月。</li>\n</ul>\n"},{"title":"EasyLife","date":"2018-06-14T07:51:58.000Z","_content":"[V0.1.0](https://zhaoqi99.github.io/EasyLife/V0.1.0)","source":"EasyLife/index.md","raw":"---\ntitle: EasyLife\ndate: 2018-06-14 15:51:58\n---\n[V0.1.0](https://zhaoqi99.github.io/EasyLife/V0.1.0)","updated":"2019-03-28T10:45:16.796Z","path":"EasyLife/index.html","comments":1,"layout":"page","_id":"cju1bsw7i0006kchi0qkahsor","content":"<p><a href=\"https://zhaoqi99.github.io/EasyLife/V0.1.0\">V0.1.0</a></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://zhaoqi99.github.io/EasyLife/V0.1.0\">V0.1.0</a></p>\n"},{"title":"categories","comments":0,"date":"2018-02-01T06:10:02.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ncomments: false\ndate: 2018-02-01 14:10:02\ntype: \"categories\"\n---\n","updated":"2019-03-28T10:45:16.824Z","path":"categories/index.html","layout":"page","_id":"cju1bsw7l0008kchik3g5yftm","content":"<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":""},{"title":"Git","date":"2019-03-18T16:02:43.000Z","comments":0,"categories":null,"tags":null,"_content":"{% note warning %}\n**2019.03.25冯哥，我困了**\n{% endnote %}\n{% note warning %}\n**2019.03.29完成准备工作部分**\n{% endnote %}\n# 准备工作\n## Git安装(Winodws)\n1. 从[官网](https://git-scm.com/downloads)下载安装程序,安装时，请勾选Add to PATH选项，安装完之后有一个Git bash的东西\n{% note warning %}\nGit Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。\n{% endnote %}\n2. 安装完成后进行相关配置\n`git config --global user.name \"Your Name\"`\n`git config --global user.email \"email@example.com\"`\n{% note warning %}\ngit config命令的--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。\n{% endnote %}\n\n## Github 账号注册\n1. 正常注册即可，然后点击邮箱中链接接受加入组织邀请\n2. (Option)帮你搞一个正式一点的邮箱\n3. (Option)修改一下Github的profile,在QQ邮箱中绑定outlook邮箱\n3. ssh配置(参见相关文档2)\n\n# 相关文档\n1. [Git团队协作工作流](https://blog.csdn.net/qq_32452623/article/details/78905181)\n2. [github设置添加SSH](https://www.cnblogs.com/chuyanfenfei/p/8035067.html)\n\n# 常用命令\n1.","source":"fxr/Git.md","raw":"---\ntitle: Git\ndate: 2019-03-19 00:02:43\ncomments: false\ncategories:\ntags:\n---\n{% note warning %}\n**2019.03.25冯哥，我困了**\n{% endnote %}\n{% note warning %}\n**2019.03.29完成准备工作部分**\n{% endnote %}\n# 准备工作\n## Git安装(Winodws)\n1. 从[官网](https://git-scm.com/downloads)下载安装程序,安装时，请勾选Add to PATH选项，安装完之后有一个Git bash的东西\n{% note warning %}\nGit Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。\n{% endnote %}\n2. 安装完成后进行相关配置\n`git config --global user.name \"Your Name\"`\n`git config --global user.email \"email@example.com\"`\n{% note warning %}\ngit config命令的--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。\n{% endnote %}\n\n## Github 账号注册\n1. 正常注册即可，然后点击邮箱中链接接受加入组织邀请\n2. (Option)帮你搞一个正式一点的邮箱\n3. (Option)修改一下Github的profile,在QQ邮箱中绑定outlook邮箱\n3. ssh配置(参见相关文档2)\n\n# 相关文档\n1. [Git团队协作工作流](https://blog.csdn.net/qq_32452623/article/details/78905181)\n2. [github设置添加SSH](https://www.cnblogs.com/chuyanfenfei/p/8035067.html)\n\n# 常用命令\n1.","updated":"2019-04-03T14:02:21.759Z","path":"fxr/Git.html","layout":"page","_id":"cju1bsw7q000ckchihxtj0egp","content":"<div class=\"note warning\">\n            <p><strong>2019.03.25冯哥，我困了</strong></p>\n          </div>\n<div class=\"note warning\">\n            <p><strong>2019.03.29完成准备工作部分</strong></p>\n          </div>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"Git安装-Winodws\"><a href=\"#Git安装-Winodws\" class=\"headerlink\" title=\"Git安装(Winodws)\"></a>Git安装(Winodws)</h2><ol>\n<li>从<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">官网</a>下载安装程序,安装时，请勾选Add to PATH选项，安装完之后有一个Git bash的东西<div class=\"note warning\">\n            <p>Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。</p>\n          </div></li>\n<li>安装完成后进行相关配置<br><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email &quot;email@example.com&quot;</code><div class=\"note warning\">\n            <p>git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>\n          </div>\n</li>\n</ol>\n<h2 id=\"Github-账号注册\"><a href=\"#Github-账号注册\" class=\"headerlink\" title=\"Github 账号注册\"></a>Github 账号注册</h2><ol>\n<li>正常注册即可，然后点击邮箱中链接接受加入组织邀请</li>\n<li>(Option)帮你搞一个正式一点的邮箱</li>\n<li>(Option)修改一下Github的profile,在QQ邮箱中绑定outlook邮箱</li>\n<li>ssh配置(参见相关文档2)</li>\n</ol>\n<h1 id=\"相关文档\"><a href=\"#相关文档\" class=\"headerlink\" title=\"相关文档\"></a>相关文档</h1><ol>\n<li><a href=\"https://blog.csdn.net/qq_32452623/article/details/78905181\" target=\"_blank\" rel=\"noopener\">Git团队协作工作流</a></li>\n<li><a href=\"https://www.cnblogs.com/chuyanfenfei/p/8035067.html\" target=\"_blank\" rel=\"noopener\">github设置添加SSH</a></li>\n</ol>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><p>1.</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<div class=\"note warning\">\n            <p><strong>2019.03.25冯哥，我困了</strong></p>\n          </div>\n<div class=\"note warning\">\n            <p><strong>2019.03.29完成准备工作部分</strong></p>\n          </div>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"Git安装-Winodws\"><a href=\"#Git安装-Winodws\" class=\"headerlink\" title=\"Git安装(Winodws)\"></a>Git安装(Winodws)</h2><ol>\n<li>从<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">官网</a>下载安装程序,安装时，请勾选Add to PATH选项，安装完之后有一个Git bash的东西<div class=\"note warning\">\n            <p>Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。</p>\n          </div></li>\n<li>安装完成后进行相关配置<br><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email &quot;email@example.com&quot;</code><div class=\"note warning\">\n            <p>git config命令的–global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>\n          </div>\n</li>\n</ol>\n<h2 id=\"Github-账号注册\"><a href=\"#Github-账号注册\" class=\"headerlink\" title=\"Github 账号注册\"></a>Github 账号注册</h2><ol>\n<li>正常注册即可，然后点击邮箱中链接接受加入组织邀请</li>\n<li>(Option)帮你搞一个正式一点的邮箱</li>\n<li>(Option)修改一下Github的profile,在QQ邮箱中绑定outlook邮箱</li>\n<li>ssh配置(参见相关文档2)</li>\n</ol>\n<h1 id=\"相关文档\"><a href=\"#相关文档\" class=\"headerlink\" title=\"相关文档\"></a>相关文档</h1><ol>\n<li><a href=\"https://blog.csdn.net/qq_32452623/article/details/78905181\" target=\"_blank\" rel=\"noopener\">Git团队协作工作流</a></li>\n<li><a href=\"https://www.cnblogs.com/chuyanfenfei/p/8035067.html\" target=\"_blank\" rel=\"noopener\">github设置添加SSH</a></li>\n</ol>\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><p>1.</p>\n"},{"title":"冯哥好","date":"2019-03-18T15:53:25.000Z","comments":0,"_content":"![](pic1.gif)\n\n* [冯相榕的校园网](校园网.html)\n* [Git](Git.html)\n* [考研信息](school.html)","source":"fxr/index.md","raw":"---\ntitle: 冯哥好\ndate: 2019-03-18 23:53:25\ncomments: false\n---\n![](pic1.gif)\n\n* [冯相榕的校园网](校园网.html)\n* [Git](Git.html)\n* [考研信息](school.html)","updated":"2019-04-03T14:05:04.643Z","path":"fxr/index.html","layout":"page","_id":"cju1bsw7r000ekchixi74jzcc","content":"<p><img src=\"pic1.gif\" alt></p>\n<ul>\n<li><a href=\"校园网.html\">冯相榕的校园网</a></li>\n<li><a href=\"Git.html\">Git</a></li>\n<li><a href=\"school.html\">考研信息</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<p><img src=\"pic1.gif\" alt></p>\n<ul>\n<li><a href=\"校园网.html\">冯相榕的校园网</a></li>\n<li><a href=\"Git.html\">Git</a></li>\n<li><a href=\"school.html\">考研信息</a></li>\n</ul>\n"},{"title":"考研信息汇总","date":"2019-04-03T14:03:50.000Z","comments":0,"_content":"# 研究生院网址\n* [西安电子科技大学](https://yz.xidian.edu.cn/index.htm)\n* [西北工业大学](http://yzb.nwpu.edu.cn/)\n\n# 西安电子科技大学\n## 专业介绍\n[专业介绍](https://cs.xidian.edu.cn/html/graduate/major/index.html)\n## 通知\n* [2019年硕士研究生招生复试录取工作通知](https://yz.xidian.edu.cn/info/1081/7253.htm)\n* [计算机科学与技术学院2019年硕士研究生招生复试方案](https://cs.xidian.edu.cn/html/notice/all/2019/0328/2250.html)\n* [人工智能学院2019年硕士研究生招生复试方案](http://sai.xidian.edu.cn/info/1106/3171.htm)\n* [网络与信息安全学院2019年硕士研究生招生复试方案](http://ce.xidian.edu.cn/info/1021/2321.htm)\n\n## 分数线\n* [计算机科学与技术学院2019年硕士研究生招生各专业复试分数线公布](https://cs.xidian.edu.cn/html/notice/all/2019/0327/2249.html)\n* [计算机科学与技术学院2019年硕士研究生招生复试与录取工作安排](https://cs.xidian.edu.cn/html/notice/all/2019/0328/2250.html)\n* [网络与信息安全学院2019年硕士研究生复试调剂工作方案](http://ce.xidian.edu.cn/info/1021/2321.htm)\n\n# 西北工业大学\n## 招生简章\n[2019年西北工业大学硕士研究生招生简章](http://yzb.nwpu.edu.cn/info/1175/6916.htm)\n\n## 分数线\n[西北工业大学2019年硕士研究生入学考试复试基本分数线及复试安排](http://yzb.nwpu.edu.cn/info/1174/7045.htm)\n\n## 复试方案\n[计算机学院](http://jsj.nwpu.edu.cn/info/1311/6623.htm)\n[软件与微电子学院](http://rjwdz.nwpu.edu.cn/info/1140/6689.htm)","source":"fxr/school.md","raw":"---\ntitle: 考研信息汇总\ndate: 2019-04-03 22:03:50\ncomments: false\n---\n# 研究生院网址\n* [西安电子科技大学](https://yz.xidian.edu.cn/index.htm)\n* [西北工业大学](http://yzb.nwpu.edu.cn/)\n\n# 西安电子科技大学\n## 专业介绍\n[专业介绍](https://cs.xidian.edu.cn/html/graduate/major/index.html)\n## 通知\n* [2019年硕士研究生招生复试录取工作通知](https://yz.xidian.edu.cn/info/1081/7253.htm)\n* [计算机科学与技术学院2019年硕士研究生招生复试方案](https://cs.xidian.edu.cn/html/notice/all/2019/0328/2250.html)\n* [人工智能学院2019年硕士研究生招生复试方案](http://sai.xidian.edu.cn/info/1106/3171.htm)\n* [网络与信息安全学院2019年硕士研究生招生复试方案](http://ce.xidian.edu.cn/info/1021/2321.htm)\n\n## 分数线\n* [计算机科学与技术学院2019年硕士研究生招生各专业复试分数线公布](https://cs.xidian.edu.cn/html/notice/all/2019/0327/2249.html)\n* [计算机科学与技术学院2019年硕士研究生招生复试与录取工作安排](https://cs.xidian.edu.cn/html/notice/all/2019/0328/2250.html)\n* [网络与信息安全学院2019年硕士研究生复试调剂工作方案](http://ce.xidian.edu.cn/info/1021/2321.htm)\n\n# 西北工业大学\n## 招生简章\n[2019年西北工业大学硕士研究生招生简章](http://yzb.nwpu.edu.cn/info/1175/6916.htm)\n\n## 分数线\n[西北工业大学2019年硕士研究生入学考试复试基本分数线及复试安排](http://yzb.nwpu.edu.cn/info/1174/7045.htm)\n\n## 复试方案\n[计算机学院](http://jsj.nwpu.edu.cn/info/1311/6623.htm)\n[软件与微电子学院](http://rjwdz.nwpu.edu.cn/info/1140/6689.htm)","updated":"2019-04-03T16:26:43.853Z","path":"fxr/school.html","_id":"cju1bsw7u000ikchitsgcdeuf","layout":"page","content":"<h1 id=\"研究生院网址\"><a href=\"#研究生院网址\" class=\"headerlink\" title=\"研究生院网址\"></a>研究生院网址</h1><ul>\n<li><a href=\"https://yz.xidian.edu.cn/index.htm\" target=\"_blank\" rel=\"noopener\">西安电子科技大学</a></li>\n<li><a href=\"http://yzb.nwpu.edu.cn/\" target=\"_blank\" rel=\"noopener\">西北工业大学</a></li>\n</ul>\n<h1 id=\"西安电子科技大学\"><a href=\"#西安电子科技大学\" class=\"headerlink\" title=\"西安电子科技大学\"></a>西安电子科技大学</h1><h2 id=\"专业介绍\"><a href=\"#专业介绍\" class=\"headerlink\" title=\"专业介绍\"></a>专业介绍</h2><p><a href=\"https://cs.xidian.edu.cn/html/graduate/major/index.html\" target=\"_blank\" rel=\"noopener\">专业介绍</a></p>\n<h2 id=\"通知\"><a href=\"#通知\" class=\"headerlink\" title=\"通知\"></a>通知</h2><ul>\n<li><a href=\"https://yz.xidian.edu.cn/info/1081/7253.htm\" target=\"_blank\" rel=\"noopener\">2019年硕士研究生招生复试录取工作通知</a></li>\n<li><a href=\"https://cs.xidian.edu.cn/html/notice/all/2019/0328/2250.html\" target=\"_blank\" rel=\"noopener\">计算机科学与技术学院2019年硕士研究生招生复试方案</a></li>\n<li><a href=\"http://sai.xidian.edu.cn/info/1106/3171.htm\" target=\"_blank\" rel=\"noopener\">人工智能学院2019年硕士研究生招生复试方案</a></li>\n<li><a href=\"http://ce.xidian.edu.cn/info/1021/2321.htm\" target=\"_blank\" rel=\"noopener\">网络与信息安全学院2019年硕士研究生招生复试方案</a></li>\n</ul>\n<h2 id=\"分数线\"><a href=\"#分数线\" class=\"headerlink\" title=\"分数线\"></a>分数线</h2><ul>\n<li><a href=\"https://cs.xidian.edu.cn/html/notice/all/2019/0327/2249.html\" target=\"_blank\" rel=\"noopener\">计算机科学与技术学院2019年硕士研究生招生各专业复试分数线公布</a></li>\n<li><a href=\"https://cs.xidian.edu.cn/html/notice/all/2019/0328/2250.html\" target=\"_blank\" rel=\"noopener\">计算机科学与技术学院2019年硕士研究生招生复试与录取工作安排</a></li>\n<li><a href=\"http://ce.xidian.edu.cn/info/1021/2321.htm\" target=\"_blank\" rel=\"noopener\">网络与信息安全学院2019年硕士研究生复试调剂工作方案</a></li>\n</ul>\n<h1 id=\"西北工业大学\"><a href=\"#西北工业大学\" class=\"headerlink\" title=\"西北工业大学\"></a>西北工业大学</h1><h2 id=\"招生简章\"><a href=\"#招生简章\" class=\"headerlink\" title=\"招生简章\"></a>招生简章</h2><p><a href=\"http://yzb.nwpu.edu.cn/info/1175/6916.htm\" target=\"_blank\" rel=\"noopener\">2019年西北工业大学硕士研究生招生简章</a></p>\n<h2 id=\"分数线-1\"><a href=\"#分数线-1\" class=\"headerlink\" title=\"分数线\"></a>分数线</h2><p><a href=\"http://yzb.nwpu.edu.cn/info/1174/7045.htm\" target=\"_blank\" rel=\"noopener\">西北工业大学2019年硕士研究生入学考试复试基本分数线及复试安排</a></p>\n<h2 id=\"复试方案\"><a href=\"#复试方案\" class=\"headerlink\" title=\"复试方案\"></a>复试方案</h2><p><a href=\"http://jsj.nwpu.edu.cn/info/1311/6623.htm\" target=\"_blank\" rel=\"noopener\">计算机学院</a><br><a href=\"http://rjwdz.nwpu.edu.cn/info/1140/6689.htm\" target=\"_blank\" rel=\"noopener\">软件与微电子学院</a></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"研究生院网址\"><a href=\"#研究生院网址\" class=\"headerlink\" title=\"研究生院网址\"></a>研究生院网址</h1><ul>\n<li><a href=\"https://yz.xidian.edu.cn/index.htm\" target=\"_blank\" rel=\"noopener\">西安电子科技大学</a></li>\n<li><a href=\"http://yzb.nwpu.edu.cn/\" target=\"_blank\" rel=\"noopener\">西北工业大学</a></li>\n</ul>\n<h1 id=\"西安电子科技大学\"><a href=\"#西安电子科技大学\" class=\"headerlink\" title=\"西安电子科技大学\"></a>西安电子科技大学</h1><h2 id=\"专业介绍\"><a href=\"#专业介绍\" class=\"headerlink\" title=\"专业介绍\"></a>专业介绍</h2><p><a href=\"https://cs.xidian.edu.cn/html/graduate/major/index.html\" target=\"_blank\" rel=\"noopener\">专业介绍</a></p>\n<h2 id=\"通知\"><a href=\"#通知\" class=\"headerlink\" title=\"通知\"></a>通知</h2><ul>\n<li><a href=\"https://yz.xidian.edu.cn/info/1081/7253.htm\" target=\"_blank\" rel=\"noopener\">2019年硕士研究生招生复试录取工作通知</a></li>\n<li><a href=\"https://cs.xidian.edu.cn/html/notice/all/2019/0328/2250.html\" target=\"_blank\" rel=\"noopener\">计算机科学与技术学院2019年硕士研究生招生复试方案</a></li>\n<li><a href=\"http://sai.xidian.edu.cn/info/1106/3171.htm\" target=\"_blank\" rel=\"noopener\">人工智能学院2019年硕士研究生招生复试方案</a></li>\n<li><a href=\"http://ce.xidian.edu.cn/info/1021/2321.htm\" target=\"_blank\" rel=\"noopener\">网络与信息安全学院2019年硕士研究生招生复试方案</a></li>\n</ul>\n<h2 id=\"分数线\"><a href=\"#分数线\" class=\"headerlink\" title=\"分数线\"></a>分数线</h2><ul>\n<li><a href=\"https://cs.xidian.edu.cn/html/notice/all/2019/0327/2249.html\" target=\"_blank\" rel=\"noopener\">计算机科学与技术学院2019年硕士研究生招生各专业复试分数线公布</a></li>\n<li><a href=\"https://cs.xidian.edu.cn/html/notice/all/2019/0328/2250.html\" target=\"_blank\" rel=\"noopener\">计算机科学与技术学院2019年硕士研究生招生复试与录取工作安排</a></li>\n<li><a href=\"http://ce.xidian.edu.cn/info/1021/2321.htm\" target=\"_blank\" rel=\"noopener\">网络与信息安全学院2019年硕士研究生复试调剂工作方案</a></li>\n</ul>\n<h1 id=\"西北工业大学\"><a href=\"#西北工业大学\" class=\"headerlink\" title=\"西北工业大学\"></a>西北工业大学</h1><h2 id=\"招生简章\"><a href=\"#招生简章\" class=\"headerlink\" title=\"招生简章\"></a>招生简章</h2><p><a href=\"http://yzb.nwpu.edu.cn/info/1175/6916.htm\" target=\"_blank\" rel=\"noopener\">2019年西北工业大学硕士研究生招生简章</a></p>\n<h2 id=\"分数线-1\"><a href=\"#分数线-1\" class=\"headerlink\" title=\"分数线\"></a>分数线</h2><p><a href=\"http://yzb.nwpu.edu.cn/info/1174/7045.htm\" target=\"_blank\" rel=\"noopener\">西北工业大学2019年硕士研究生入学考试复试基本分数线及复试安排</a></p>\n<h2 id=\"复试方案\"><a href=\"#复试方案\" class=\"headerlink\" title=\"复试方案\"></a>复试方案</h2><p><a href=\"http://jsj.nwpu.edu.cn/info/1311/6623.htm\" target=\"_blank\" rel=\"noopener\">计算机学院</a><br><a href=\"http://rjwdz.nwpu.edu.cn/info/1140/6689.htm\" target=\"_blank\" rel=\"noopener\">软件与微电子学院</a></p>\n"},{"title":"冯相榕的校园网","date":"2019-02-27T16:00:00.000Z","comments":0,"password":"fxr","message":"密码是你名字首字母(3位)","_content":"![](pic1.gif)\n\n<div class=\"note warning\"><p>**id:201608735**\n**pwd:zq201651**</p></div>\n## 校园网教程\n1. 点击右侧链接下载该软件:[OpenVpn](openvpn-install.exe)\n2. 双击下载下来的文件，开始安装，一定要记住安装路径.\n3. 点击下方链接下载配置文件:\n\t- [10_141_10_245_openvpn_remote_access_l3](10_141_10_245_openvpn_remote_access_l3.ovpn)\n\t- [desktop-ukvmhed_openvpn_remote_access_l3](desktop-ukvmhed_openvpn_remote_access_l3.ovpn)\n\t- [snnu1_openvpn_remote_access_l3](snnu1_openvpn_remote_access_l3.ovpn)\n4. 在`资源管理器`(也就是你查看电脑文件的地方)中打开步骤2中的安装路径。（例如:我的安装路径是:`D:\\Program Files\\OpenVPN`)\n5. 此时应该能看到`bin`、`log`、`easy-rsa`、`config`等几个文件夹。\n6. 将上述步骤3中下载的文件拷贝至config目录下，如果步骤5没有看到`config`文件夹，属于正常情况，那就自己新建一个`config`文件夹。\n7. 双击桌面的`OpenVpn`图标，运行该软件，然后右击系统右下角托盘区的一个小电脑图标(注意与有线连接图标区分，二者很像)，移动鼠标至最上面的`10_141_10_245_openvpn_remote_access`,右侧会出现一个框，点击`connect`.\n8. 点击后，屏幕正中央会弹出一个框，提示你输入用户名和密码。\n9. 点击`OK`,稍等片刻，连接成功后，对话框自动消失。\n\n## 用户名及密码\n| 文件名 | 用户名 | 密码 | 带宽|备注|\n| ------ | ------ | ------ | --- | :--: |\n| 10_141_10_245_openvpn_remote_access_l3| zhaoqi | zhaoqi2016 |10M|阿里云学生机，网速略慢|\n|desktop-ukvmhed_openvpn_remote_access_l3| snnu|snnu|100M|(强力推荐)比较稳定，上网稳定(这几天好像没开电脑,得等几天)|\n|snnu1_openvpn_remote_access_l3|snnu|easylife|200M|延时高，下载快，上网慢|\n{% note danger %}\n2019.03.25 修复了第二个文件无法下载的bug\n{% endnote %}\n{% note danger %}\n2019.04.01 机房的可以用了\n{% endnote %}\n\n","source":"fxr/校园网.md","raw":"---\ntitle: 冯相榕的校园网\ndate: 2019-02-28 00:00:00\ncomments: false\npassword: fxr\nmessage: 密码是你名字首字母(3位)\n---\n![](pic1.gif)\n\n<div class=\"note warning\"><p>**id:201608735**\n**pwd:zq201651**</p></div>\n## 校园网教程\n1. 点击右侧链接下载该软件:[OpenVpn](openvpn-install.exe)\n2. 双击下载下来的文件，开始安装，一定要记住安装路径.\n3. 点击下方链接下载配置文件:\n\t- [10_141_10_245_openvpn_remote_access_l3](10_141_10_245_openvpn_remote_access_l3.ovpn)\n\t- [desktop-ukvmhed_openvpn_remote_access_l3](desktop-ukvmhed_openvpn_remote_access_l3.ovpn)\n\t- [snnu1_openvpn_remote_access_l3](snnu1_openvpn_remote_access_l3.ovpn)\n4. 在`资源管理器`(也就是你查看电脑文件的地方)中打开步骤2中的安装路径。（例如:我的安装路径是:`D:\\Program Files\\OpenVPN`)\n5. 此时应该能看到`bin`、`log`、`easy-rsa`、`config`等几个文件夹。\n6. 将上述步骤3中下载的文件拷贝至config目录下，如果步骤5没有看到`config`文件夹，属于正常情况，那就自己新建一个`config`文件夹。\n7. 双击桌面的`OpenVpn`图标，运行该软件，然后右击系统右下角托盘区的一个小电脑图标(注意与有线连接图标区分，二者很像)，移动鼠标至最上面的`10_141_10_245_openvpn_remote_access`,右侧会出现一个框，点击`connect`.\n8. 点击后，屏幕正中央会弹出一个框，提示你输入用户名和密码。\n9. 点击`OK`,稍等片刻，连接成功后，对话框自动消失。\n\n## 用户名及密码\n| 文件名 | 用户名 | 密码 | 带宽|备注|\n| ------ | ------ | ------ | --- | :--: |\n| 10_141_10_245_openvpn_remote_access_l3| zhaoqi | zhaoqi2016 |10M|阿里云学生机，网速略慢|\n|desktop-ukvmhed_openvpn_remote_access_l3| snnu|snnu|100M|(强力推荐)比较稳定，上网稳定(这几天好像没开电脑,得等几天)|\n|snnu1_openvpn_remote_access_l3|snnu|easylife|200M|延时高，下载快，上网慢|\n{% note danger %}\n2019.03.25 修复了第二个文件无法下载的bug\n{% endnote %}\n{% note danger %}\n2019.04.01 机房的可以用了\n{% endnote %}\n\n","updated":"2019-04-03T13:40:31.388Z","path":"fxr/校园网.html","layout":"page","_id":"cju1bsw7y000lkchitmotj7ys","content":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"密码是你名字首字母(3位)\" />\n    <label for=\"pass\">密码是你名字首字母(3位)</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\"><link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"The article has been encrypted, please enter your password to view.<br>","more":"The article has been encrypted, please enter your password to view.<br>","origin":"<p><img src=\"pic1.gif\" alt></p>\n<p><div class=\"note warning\"><p><strong>id:201608735</strong><br><strong>pwd:zq201651</strong></p></div></p>\n<h2 id=\"校园网教程\"><a href=\"#校园网教程\" class=\"headerlink\" title=\"校园网教程\"></a>校园网教程</h2><ol>\n<li>点击右侧链接下载该软件:<a href=\"openvpn-install.exe\">OpenVpn</a></li>\n<li>双击下载下来的文件，开始安装，一定要记住安装路径.</li>\n<li>点击下方链接下载配置文件:<ul>\n<li><a href=\"10_141_10_245_openvpn_remote_access_l3.ovpn\">10_141_10_245_openvpn_remote_access_l3</a></li>\n<li><a href=\"desktop-ukvmhed_openvpn_remote_access_l3.ovpn\">desktop-ukvmhed_openvpn_remote_access_l3</a></li>\n<li><a href=\"snnu1_openvpn_remote_access_l3.ovpn\">snnu1_openvpn_remote_access_l3</a></li>\n</ul>\n</li>\n<li>在<code>资源管理器</code>(也就是你查看电脑文件的地方)中打开步骤2中的安装路径。（例如:我的安装路径是:<code>D:\\Program Files\\OpenVPN</code>)</li>\n<li>此时应该能看到<code>bin</code>、<code>log</code>、<code>easy-rsa</code>、<code>config</code>等几个文件夹。</li>\n<li>将上述步骤3中下载的文件拷贝至config目录下，如果步骤5没有看到<code>config</code>文件夹，属于正常情况，那就自己新建一个<code>config</code>文件夹。</li>\n<li>双击桌面的<code>OpenVpn</code>图标，运行该软件，然后右击系统右下角托盘区的一个小电脑图标(注意与有线连接图标区分，二者很像)，移动鼠标至最上面的<code>10_141_10_245_openvpn_remote_access</code>,右侧会出现一个框，点击<code>connect</code>.</li>\n<li>点击后，屏幕正中央会弹出一个框，提示你输入用户名和密码。</li>\n<li>点击<code>OK</code>,稍等片刻，连接成功后，对话框自动消失。</li>\n</ol>\n<h2 id=\"用户名及密码\"><a href=\"#用户名及密码\" class=\"headerlink\" title=\"用户名及密码\"></a>用户名及密码</h2><table>\n<thead>\n<tr>\n<th>文件名</th>\n<th>用户名</th>\n<th>密码</th>\n<th>带宽</th>\n<th style=\"text-align:center\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10_141_10_245_openvpn_remote_access_l3</td>\n<td>zhaoqi</td>\n<td>zhaoqi2016</td>\n<td>10M</td>\n<td style=\"text-align:center\">阿里云学生机，网速略慢</td>\n</tr>\n<tr>\n<td>desktop-ukvmhed_openvpn_remote_access_l3</td>\n<td>snnu</td>\n<td>snnu</td>\n<td>100M</td>\n<td style=\"text-align:center\">(强力推荐)比较稳定，上网稳定(这几天好像没开电脑,得等几天)</td>\n</tr>\n<tr>\n<td>snnu1_openvpn_remote_access_l3</td>\n<td>snnu</td>\n<td>easylife</td>\n<td>200M</td>\n<td style=\"text-align:center\">延时高，下载快，上网慢</td>\n</tr>\n</tbody>\n</table>\n<div class=\"note danger\">\n            <p>2019.03.25 修复了第二个文件无法下载的bug</p>\n          </div>\n<div class=\"note danger\">\n            <p>2019.04.01 机房的可以用了</p>\n          </div>\n","encrypt":true,"abstract":"The article has been encrypted, please enter your password to view.<br>","template":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"密码是你名字首字母(3位)\" />\n    <label for=\"pass\">密码是你名字首字母(3位)</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n","decryptionError":"Incorrect Password!","noContentError":"No content to display!"},{"title":"标签","comments":0,"date":"2018-02-01T06:08:23.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ncomments: false\ndate: 2018-02-01 14:08:23\ntype: \"tags\"\n---","updated":"2019-03-28T10:45:17.409Z","path":"tags/index.html","layout":"page","_id":"cju1bsw81000okchif8q78f67","content":"<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":""},{"title":"EasyLife V0.1.0","date":"2018-06-19T14:37:14.000Z","_content":"# EasyLife V0.1.0\n\n## 软件开发工具\n系统开发平台: Microsoft Visual Studio 2015\n系统开发语言:C#\n数据库管理软件: Microsoft  Access 2016\n版本控制软件:Git\n持续集成服务:Travis CI\n软件体系架构:三层架构\n\n## 获取帮助\n[EasyLife V0.1.0帮助文档](https://zhaoqi99.github.io/EasyLife/V0.1.0/Help.html)\n\n## 基本功能\n1.\t显示天气及生活指数:\n自动通过本机Ip地址获取当前地理位置，并自动在主页上显示:当天的气温，概况，风向和风力，天气趋势开始图片，天气趋势结束图片，现在的天气实况，天气和生活指数。第二天、第三天的气温，概况，风向和风力，天气趋势及天气趋势开始图标，天气趋势结束图标。\n2.\t显示时钟:\n以时钟的形式动态显示当前系统时间，时间精确到秒。\n3.\t火车票查询\n依据用户选择的出发站、到达站、出发日期、车票类型等查询车票信息，并写入到本地数据库中，以备下次查询。\n4.\t通讯录\n依据用户选择的校区、二级单位、部门等信息查询其电话，支持模糊查询。\n用户可以自己输入校区、二级单位、部门、电话等信息，并将该条记录插入到本地数据库中。\n5.\t校园通知\n用户选择查询时，依据用户选择的条件(日期、单位、类型)，从本地数据库中查询，支持模糊查询。\n用户选择更新时，依据用户所选择的通知类型，单位，从指定网页上抓取最新通知，并写入数据库中，以供查询。\n用户点击查询结果中的链接即可直接访问该通知页。\n6.\t发送邮件\n用户在设定好端口号、主机地址、发件人、密码等后，可一次性输入多个收件人地址，实现一键多人发送邮件。\n7.\t用户管理\n实现对当前系统中用户信息的查看、修改以及用户的删除功能。\n用户可在登录界面处注册成为新用户。\n8.\t日志功能\n日志文件中记录邮件发送日志以及异常日志。\n9．多语言\n支持中文、英文两种语言，可随时切换，动态加载界面资源。\n10．更换皮肤\n使用过程中可随时更换皮肤\n11．找回密码\n   用户可通过注册时设置的密保问题以及密保答案，来重新设置密码。\n12．帮助功能\n提供两种帮助方法:联机帮助(访问项目主页，获取在线帮助)\n本地帮助文档(软件安装时自带的帮助文档)\n13．窗口置顶\n支持将软件窗口始终置顶\n14．系统托盘\n软件启动时，会在系统托盘区出现登录提示以及托盘图标。\n\n","source":"EasyLife/V0.1.0/index.md","raw":"---\ntitle: EasyLife V0.1.0\ndate: 2018-06-19 22:37:14\n---\n# EasyLife V0.1.0\n\n## 软件开发工具\n系统开发平台: Microsoft Visual Studio 2015\n系统开发语言:C#\n数据库管理软件: Microsoft  Access 2016\n版本控制软件:Git\n持续集成服务:Travis CI\n软件体系架构:三层架构\n\n## 获取帮助\n[EasyLife V0.1.0帮助文档](https://zhaoqi99.github.io/EasyLife/V0.1.0/Help.html)\n\n## 基本功能\n1.\t显示天气及生活指数:\n自动通过本机Ip地址获取当前地理位置，并自动在主页上显示:当天的气温，概况，风向和风力，天气趋势开始图片，天气趋势结束图片，现在的天气实况，天气和生活指数。第二天、第三天的气温，概况，风向和风力，天气趋势及天气趋势开始图标，天气趋势结束图标。\n2.\t显示时钟:\n以时钟的形式动态显示当前系统时间，时间精确到秒。\n3.\t火车票查询\n依据用户选择的出发站、到达站、出发日期、车票类型等查询车票信息，并写入到本地数据库中，以备下次查询。\n4.\t通讯录\n依据用户选择的校区、二级单位、部门等信息查询其电话，支持模糊查询。\n用户可以自己输入校区、二级单位、部门、电话等信息，并将该条记录插入到本地数据库中。\n5.\t校园通知\n用户选择查询时，依据用户选择的条件(日期、单位、类型)，从本地数据库中查询，支持模糊查询。\n用户选择更新时，依据用户所选择的通知类型，单位，从指定网页上抓取最新通知，并写入数据库中，以供查询。\n用户点击查询结果中的链接即可直接访问该通知页。\n6.\t发送邮件\n用户在设定好端口号、主机地址、发件人、密码等后，可一次性输入多个收件人地址，实现一键多人发送邮件。\n7.\t用户管理\n实现对当前系统中用户信息的查看、修改以及用户的删除功能。\n用户可在登录界面处注册成为新用户。\n8.\t日志功能\n日志文件中记录邮件发送日志以及异常日志。\n9．多语言\n支持中文、英文两种语言，可随时切换，动态加载界面资源。\n10．更换皮肤\n使用过程中可随时更换皮肤\n11．找回密码\n   用户可通过注册时设置的密保问题以及密保答案，来重新设置密码。\n12．帮助功能\n提供两种帮助方法:联机帮助(访问项目主页，获取在线帮助)\n本地帮助文档(软件安装时自带的帮助文档)\n13．窗口置顶\n支持将软件窗口始终置顶\n14．系统托盘\n软件启动时，会在系统托盘区出现登录提示以及托盘图标。\n\n","updated":"2019-03-28T10:45:16.796Z","path":"EasyLife/V0.1.0/index.html","comments":1,"layout":"page","_id":"cju1bswiy004bkchi9nts3jsu","content":"<h1 id=\"EasyLife-V0-1-0\"><a href=\"#EasyLife-V0-1-0\" class=\"headerlink\" title=\"EasyLife V0.1.0\"></a>EasyLife V0.1.0</h1><h2 id=\"软件开发工具\"><a href=\"#软件开发工具\" class=\"headerlink\" title=\"软件开发工具\"></a>软件开发工具</h2><p>系统开发平台: Microsoft Visual Studio 2015<br>系统开发语言:C#<br>数据库管理软件: Microsoft  Access 2016<br>版本控制软件:Git<br>持续集成服务:Travis CI<br>软件体系架构:三层架构</p>\n<h2 id=\"获取帮助\"><a href=\"#获取帮助\" class=\"headerlink\" title=\"获取帮助\"></a>获取帮助</h2><p><a href=\"https://zhaoqi99.github.io/EasyLife/V0.1.0/Help.html\">EasyLife V0.1.0帮助文档</a></p>\n<h2 id=\"基本功能\"><a href=\"#基本功能\" class=\"headerlink\" title=\"基本功能\"></a>基本功能</h2><ol>\n<li>显示天气及生活指数:<br>自动通过本机Ip地址获取当前地理位置，并自动在主页上显示:当天的气温，概况，风向和风力，天气趋势开始图片，天气趋势结束图片，现在的天气实况，天气和生活指数。第二天、第三天的气温，概况，风向和风力，天气趋势及天气趋势开始图标，天气趋势结束图标。</li>\n<li>显示时钟:<br>以时钟的形式动态显示当前系统时间，时间精确到秒。</li>\n<li>火车票查询<br>依据用户选择的出发站、到达站、出发日期、车票类型等查询车票信息，并写入到本地数据库中，以备下次查询。</li>\n<li>通讯录<br>依据用户选择的校区、二级单位、部门等信息查询其电话，支持模糊查询。<br>用户可以自己输入校区、二级单位、部门、电话等信息，并将该条记录插入到本地数据库中。</li>\n<li>校园通知<br>用户选择查询时，依据用户选择的条件(日期、单位、类型)，从本地数据库中查询，支持模糊查询。<br>用户选择更新时，依据用户所选择的通知类型，单位，从指定网页上抓取最新通知，并写入数据库中，以供查询。<br>用户点击查询结果中的链接即可直接访问该通知页。</li>\n<li>发送邮件<br>用户在设定好端口号、主机地址、发件人、密码等后，可一次性输入多个收件人地址，实现一键多人发送邮件。</li>\n<li>用户管理<br>实现对当前系统中用户信息的查看、修改以及用户的删除功能。<br>用户可在登录界面处注册成为新用户。</li>\n<li>日志功能<br>日志文件中记录邮件发送日志以及异常日志。<br>9．多语言<br>支持中文、英文两种语言，可随时切换，动态加载界面资源。<br>10．更换皮肤<br>使用过程中可随时更换皮肤<br>11．找回密码<br>用户可通过注册时设置的密保问题以及密保答案，来重新设置密码。<br>12．帮助功能<br>提供两种帮助方法:联机帮助(访问项目主页，获取在线帮助)<br>本地帮助文档(软件安装时自带的帮助文档)<br>13．窗口置顶<br>支持将软件窗口始终置顶<br>14．系统托盘<br>软件启动时，会在系统托盘区出现登录提示以及托盘图标。</li>\n</ol>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"EasyLife-V0-1-0\"><a href=\"#EasyLife-V0-1-0\" class=\"headerlink\" title=\"EasyLife V0.1.0\"></a>EasyLife V0.1.0</h1><h2 id=\"软件开发工具\"><a href=\"#软件开发工具\" class=\"headerlink\" title=\"软件开发工具\"></a>软件开发工具</h2><p>系统开发平台: Microsoft Visual Studio 2015<br>系统开发语言:C#<br>数据库管理软件: Microsoft  Access 2016<br>版本控制软件:Git<br>持续集成服务:Travis CI<br>软件体系架构:三层架构</p>\n<h2 id=\"获取帮助\"><a href=\"#获取帮助\" class=\"headerlink\" title=\"获取帮助\"></a>获取帮助</h2><p><a href=\"https://zhaoqi99.github.io/EasyLife/V0.1.0/Help.html\">EasyLife V0.1.0帮助文档</a></p>\n<h2 id=\"基本功能\"><a href=\"#基本功能\" class=\"headerlink\" title=\"基本功能\"></a>基本功能</h2><ol>\n<li>显示天气及生活指数:<br>自动通过本机Ip地址获取当前地理位置，并自动在主页上显示:当天的气温，概况，风向和风力，天气趋势开始图片，天气趋势结束图片，现在的天气实况，天气和生活指数。第二天、第三天的气温，概况，风向和风力，天气趋势及天气趋势开始图标，天气趋势结束图标。</li>\n<li>显示时钟:<br>以时钟的形式动态显示当前系统时间，时间精确到秒。</li>\n<li>火车票查询<br>依据用户选择的出发站、到达站、出发日期、车票类型等查询车票信息，并写入到本地数据库中，以备下次查询。</li>\n<li>通讯录<br>依据用户选择的校区、二级单位、部门等信息查询其电话，支持模糊查询。<br>用户可以自己输入校区、二级单位、部门、电话等信息，并将该条记录插入到本地数据库中。</li>\n<li>校园通知<br>用户选择查询时，依据用户选择的条件(日期、单位、类型)，从本地数据库中查询，支持模糊查询。<br>用户选择更新时，依据用户所选择的通知类型，单位，从指定网页上抓取最新通知，并写入数据库中，以供查询。<br>用户点击查询结果中的链接即可直接访问该通知页。</li>\n<li>发送邮件<br>用户在设定好端口号、主机地址、发件人、密码等后，可一次性输入多个收件人地址，实现一键多人发送邮件。</li>\n<li>用户管理<br>实现对当前系统中用户信息的查看、修改以及用户的删除功能。<br>用户可在登录界面处注册成为新用户。</li>\n<li>日志功能<br>日志文件中记录邮件发送日志以及异常日志。<br>9．多语言<br>支持中文、英文两种语言，可随时切换，动态加载界面资源。<br>10．更换皮肤<br>使用过程中可随时更换皮肤<br>11．找回密码<br>用户可通过注册时设置的密保问题以及密保答案，来重新设置密码。<br>12．帮助功能<br>提供两种帮助方法:联机帮助(访问项目主页，获取在线帮助)<br>本地帮助文档(软件安装时自带的帮助文档)<br>13．窗口置顶<br>支持将软件窗口始终置顶<br>14．系统托盘<br>软件启动时，会在系统托盘区出现登录提示以及托盘图标。</li>\n</ol>\n"},{"title":"EasyLife V0.1.0 Help","date":"2018-06-19T07:51:58.000Z","_content":"待更","source":"EasyLife/V0.1.0/Help.md","raw":"---\ntitle: EasyLife V0.1.0 Help\ndate: 2018-06-19 15:51:58\n---\n待更","updated":"2019-03-28T10:45:16.795Z","path":"EasyLife/V0.1.0/Help.html","comments":1,"layout":"page","_id":"cju1bswiy004ckchidrhizzaa","content":"<p>待更</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<p>待更</p>\n"}],"Post":[{"title":"Untitled","author":"Zhao Qi","abbrlink":1345941684,"_content":"","source":"_drafts/Untitled.md","raw":"---\ntitle: Untitled\nauthor: Zhao Qi\nabbrlink: 1345941684\ntags:\n---\n","slug":"Untitled","published":0,"date":"2019-03-28T10:45:16.797Z","updated":"2019-03-28T10:45:16.798Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw790003kchip7t3extk","content":"<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":""},{"title":"01-复杂度2 Maximum Subsequence Sum（25 分）","abbrlink":41173,"date":"2017-09-01T13:12:05.000Z","_content":"## Problem:\nGiven a sequence of KK integers {N1,N2,...,NK}. A continuous subsequence is defined to be {Ni,Ni+1,...,Nj} where 1≤i≤j≤K1≤i≤j≤K. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { -2, 11, -4, 13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.\nNow you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.\n## Input Specification:\nEach input file contains one test case. Each case occupies two lines. The first line contains a positive integerK(≤10000). The second line contains K numbers, separated by a space.\n## Output Specification:\nFor each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices i and j (as shown by the sample case). If all the K numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence.\noutput the first and the last numbers of the whole sequence.\n\n\n## Sample Input:\n<div class=\"note default no-icon\"><p>10\n-10 1 2 3 4 -5 -23 3 7 -21\n</p></div>\n\n## Sample Output:\n<div class=\"note default no-icon\"><p>10 1 4\n</p></div>\n\n## 代码：\n```C++\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nll Start, End;\nint a[1000006];\nll n;\n\nint MaxSubseqSum2( int A[], int N )\n{\n    int ThisSum, MaxSum = -0xffff;\n    int i, j;\n    for( i = 0; i < N; i++ )   /* i是子列左端位置 */\n    {\n        ThisSum = 0;  /* ThisSum是从A[i]到A[j]的子列和 */\n        for( j = i; j < N; j++ )   /* j是子列右端位置 */\n        {\n            ThisSum += A[j];        /*对于相同的i，不同的j，只要在j-1次循环的基础上累加1项即可*/\n            if( ThisSum > MaxSum ) /* 如果刚得到的这个子列和更大 */\n            {\n                MaxSum = ThisSum;    /* 则更新结果 */\n                Start = A[i];\n                End = A[j];\n            }\n        } /* j循环结束 */\n    } /* i循环结束 */\n    return MaxSum;\n}\n\nvoid input()\n{\n    cin >> n;\n    for(ll i = 0; i < n; i++)\n    {\n        cin >> a[i];\n    }\n}\n\nvoid output()\n{\n    int temp = MaxSubseqSum2(a, n);\n    if(temp < 0)\n        cout << 0 << \" \" << a[0] << \" \" << a[n - 1] << endl;\n    else\n        cout << MaxSubseqSum2(a, n) << \" \" << Start << \" \" << End << endl;\n}\nint main()\n{\n    cin.sync_with_stdio(false);\n    input();\n    output();\n    return 0;\n}\n```\n两重循环遍历，算法复杂度为O（N^2）；\n第一次提交有部分测试点没通过，其原因是对最大和小于0时的情况没处理好。","source":"_posts/01-复杂度2 Maximum Subsequence Sum（25 分）.md","raw":"---\ntitle: 01-复杂度2 Maximum Subsequence Sum（25 分）\ncategories: 数据结构_陈越、何钦铭\ntags:\n  - 数据结构\nabbrlink: 41173\ndate: 2017-09-01 21:12:05\n---\n## Problem:\nGiven a sequence of KK integers {N1,N2,...,NK}. A continuous subsequence is defined to be {Ni,Ni+1,...,Nj} where 1≤i≤j≤K1≤i≤j≤K. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { -2, 11, -4, 13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.\nNow you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.\n## Input Specification:\nEach input file contains one test case. Each case occupies two lines. The first line contains a positive integerK(≤10000). The second line contains K numbers, separated by a space.\n## Output Specification:\nFor each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices i and j (as shown by the sample case). If all the K numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence.\noutput the first and the last numbers of the whole sequence.\n\n\n## Sample Input:\n<div class=\"note default no-icon\"><p>10\n-10 1 2 3 4 -5 -23 3 7 -21\n</p></div>\n\n## Sample Output:\n<div class=\"note default no-icon\"><p>10 1 4\n</p></div>\n\n## 代码：\n```C++\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nll Start, End;\nint a[1000006];\nll n;\n\nint MaxSubseqSum2( int A[], int N )\n{\n    int ThisSum, MaxSum = -0xffff;\n    int i, j;\n    for( i = 0; i < N; i++ )   /* i是子列左端位置 */\n    {\n        ThisSum = 0;  /* ThisSum是从A[i]到A[j]的子列和 */\n        for( j = i; j < N; j++ )   /* j是子列右端位置 */\n        {\n            ThisSum += A[j];        /*对于相同的i，不同的j，只要在j-1次循环的基础上累加1项即可*/\n            if( ThisSum > MaxSum ) /* 如果刚得到的这个子列和更大 */\n            {\n                MaxSum = ThisSum;    /* 则更新结果 */\n                Start = A[i];\n                End = A[j];\n            }\n        } /* j循环结束 */\n    } /* i循环结束 */\n    return MaxSum;\n}\n\nvoid input()\n{\n    cin >> n;\n    for(ll i = 0; i < n; i++)\n    {\n        cin >> a[i];\n    }\n}\n\nvoid output()\n{\n    int temp = MaxSubseqSum2(a, n);\n    if(temp < 0)\n        cout << 0 << \" \" << a[0] << \" \" << a[n - 1] << endl;\n    else\n        cout << MaxSubseqSum2(a, n) << \" \" << Start << \" \" << End << endl;\n}\nint main()\n{\n    cin.sync_with_stdio(false);\n    input();\n    output();\n    return 0;\n}\n```\n两重循环遍历，算法复杂度为O（N^2）；\n第一次提交有部分测试点没通过，其原因是对最大和小于0时的情况没处理好。","slug":"01-复杂度2 Maximum Subsequence Sum（25 分）","published":1,"updated":"2019-03-28T10:45:16.799Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw7f0005kchitd761nz5","content":"<h2 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h2><p>Given a sequence of KK integers {N1,N2,…,NK}. A continuous subsequence is defined to be {Ni,Ni+1,…,Nj} where 1≤i≤j≤K1≤i≤j≤K. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { -2, 11, -4, 13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.<br>Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.</p>\n<h2 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h2><p>Each input file contains one test case. Each case occupies two lines. The first line contains a positive integerK(≤10000). The second line contains K numbers, separated by a space.</p>\n<h2 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h2><p>For each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices i and j (as shown by the sample case). If all the K numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence.<br>output the first and the last numbers of the whole sequence.</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h2><div class=\"note default no-icon\"><p>10<br>-10 1 2 3 4 -5 -23 3 7 -21<br></p></div>\n\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h2><div class=\"note default no-icon\"><p>10 1 4<br></p></div>\n\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"></span><br><span class=\"line\">ll Start, End;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">1000006</span>];</span><br><span class=\"line\">ll n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">MaxSubseqSum2</span><span class=\"params\">( <span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> N )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ThisSum, MaxSum = <span class=\"number\">-0xffff</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>( i = <span class=\"number\">0</span>; i &lt; N; i++ )   <span class=\"comment\">/* i是子列左端位置 */</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ThisSum = <span class=\"number\">0</span>;  <span class=\"comment\">/* ThisSum是从A[i]到A[j]的子列和 */</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>( j = i; j &lt; N; j++ )   <span class=\"comment\">/* j是子列右端位置 */</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ThisSum += A[j];        <span class=\"comment\">/*对于相同的i，不同的j，只要在j-1次循环的基础上累加1项即可*/</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>( ThisSum &gt; MaxSum ) <span class=\"comment\">/* 如果刚得到的这个子列和更大 */</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                MaxSum = ThisSum;    <span class=\"comment\">/* 则更新结果 */</span></span><br><span class=\"line\">                Start = A[i];</span><br><span class=\"line\">                End = A[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"comment\">/* j循环结束 */</span></span><br><span class=\"line\">    &#125; <span class=\"comment\">/* i循环结束 */</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaxSum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">output</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp = MaxSubseqSum2(a, n);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(temp &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"number\">0</span> &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; a[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; a[n - <span class=\"number\">1</span>] &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; MaxSubseqSum2(a, n) &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; Start &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; End &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    input();</span><br><span class=\"line\">    output();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>两重循环遍历，算法复杂度为O（N^2）；<br>第一次提交有部分测试点没通过，其原因是对最大和小于0时的情况没处理好。</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h2><p>Given a sequence of KK integers {N1,N2,…,NK}. A continuous subsequence is defined to be {Ni,Ni+1,…,Nj} where 1≤i≤j≤K1≤i≤j≤K. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { -2, 11, -4, 13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.<br>Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.</p>\n<h2 id=\"Input-Specification\"><a href=\"#Input-Specification\" class=\"headerlink\" title=\"Input Specification:\"></a>Input Specification:</h2><p>Each input file contains one test case. Each case occupies two lines. The first line contains a positive integerK(≤10000). The second line contains K numbers, separated by a space.</p>\n<h2 id=\"Output-Specification\"><a href=\"#Output-Specification\" class=\"headerlink\" title=\"Output Specification:\"></a>Output Specification:</h2><p>For each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices i and j (as shown by the sample case). If all the K numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence.<br>output the first and the last numbers of the whole sequence.</p>\n<h2 id=\"Sample-Input\"><a href=\"#Sample-Input\" class=\"headerlink\" title=\"Sample Input:\"></a>Sample Input:</h2><div class=\"note default no-icon\"><p>10<br>-10 1 2 3 4 -5 -23 3 7 -21<br></p></div>\n\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output:\"></a>Sample Output:</h2><div class=\"note default no-icon\"><p>10 1 4<br></p></div>\n\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"></span><br><span class=\"line\">ll Start, End;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">1000006</span>];</span><br><span class=\"line\">ll n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">MaxSubseqSum2</span><span class=\"params\">( <span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> N )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ThisSum, MaxSum = <span class=\"number\">-0xffff</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>( i = <span class=\"number\">0</span>; i &lt; N; i++ )   <span class=\"comment\">/* i是子列左端位置 */</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ThisSum = <span class=\"number\">0</span>;  <span class=\"comment\">/* ThisSum是从A[i]到A[j]的子列和 */</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>( j = i; j &lt; N; j++ )   <span class=\"comment\">/* j是子列右端位置 */</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ThisSum += A[j];        <span class=\"comment\">/*对于相同的i，不同的j，只要在j-1次循环的基础上累加1项即可*/</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>( ThisSum &gt; MaxSum ) <span class=\"comment\">/* 如果刚得到的这个子列和更大 */</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                MaxSum = ThisSum;    <span class=\"comment\">/* 则更新结果 */</span></span><br><span class=\"line\">                Start = A[i];</span><br><span class=\"line\">                End = A[j];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"comment\">/* j循环结束 */</span></span><br><span class=\"line\">    &#125; <span class=\"comment\">/* i循环结束 */</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaxSum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(ll i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">output</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp = MaxSubseqSum2(a, n);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(temp &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"number\">0</span> &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; a[<span class=\"number\">0</span>] &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; a[n - <span class=\"number\">1</span>] &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; MaxSubseqSum2(a, n) &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; Start &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; End &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    input();</span><br><span class=\"line\">    output();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>两重循环遍历，算法复杂度为O（N^2）；<br>第一次提交有部分测试点没通过，其原因是对最大和小于0时的情况没处理好。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"01-复杂度2 Maximum Subsequence Sum（25 分）","path":"41173.html","eyeCatchImage":null,"excerpt":null,"date":"2017-09-01T13:12:05.000Z","pv":0,"totalPV":0,"categories":"数据结构_陈越、何钦铭","tags":["数据结构"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"2017百度之星资格赛 1003 度度熊与邪恶大魔王（完全背包）","abbrlink":53776,"date":"2017-08-05T11:42:46.000Z","_content":"## 度度熊与邪恶大魔王\nAccepts: 2016\nSubmissions: 12307\nTime Limit: 2000/1000 MS (Java/Others)\nMemory Limit: 32768/32768 K (Java/Others) \n传送门: [bestcoder](http://bestcoder.hdu.edu.cn/contests/contest_showproblem.php?cid=774&pid=1003)\n\n## Problem Description \n度度熊为了拯救可爱的公主，于是与邪恶大魔王战斗起来。\n邪恶大魔王的麾下有n个怪兽，每个怪兽有a[i]的生命值，以及b[i]的防御力。\n度度熊一共拥有m种攻击方式，第i种攻击方式，需要消耗k[i]的晶石，造成p[i]点伤害。\n当然，如果度度熊使用第i个技能打在第j个怪兽上面的话，会使得第j个怪兽的生命值减少p[i]-b[j]，当然如果伤害小于防御，那么攻击就不会奏效。\n如果怪兽的生命值降为0或以下，那么怪兽就会被消灭。\n当然每个技能都可以使用无限次。\n请问度度熊最少携带多少晶石，就可以消灭所有的怪兽。\n## Input\n本题包含若干组测试数据。\n第一行两个整数n，m,表示有n个怪兽，m种技能。\n接下来n行，每行两个整数，a[i],b[i]，分别表示怪兽的生命值和防御力。\n再接下来m行，每行两个整数k[i]和p[i]，分别表示技能的消耗晶石数目和技能的伤害值。\n数据范围:\n<div class=\"note default no-icon\"><p>1<=n<=100000\n1<=m<=1000\n1<=a[i]<=1000\n0<=b[i]<=10\n0<=k[i]<=100000\n0<=p[i]<=1000\n</p></div>\n## Output\n对于每组测试数据，输出最小的晶石消耗数量，如果不能击败所有的怪兽，输出-1\n## Sample Input\n<div class=\"note default no-icon\"><p>1 2\n3 5\n7 10\n6 8\n1 2\n3 5\n10 7\n8 \n</p></div>\n\n## Sample Output\n<div class=\"note default no-icon\"><p>8\n16\n</p></div>\n\n## Aceppted代码 \n```Cpp\n/*\nProblem:度度熊与邪恶大魔王\nAuthor:QiZhao\nData:2017-08-05\nDescription:DP，完全背包\nCopyright  2017 QiZhao. All rights reserved.\n*/\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\nconst int maxn = 1020;\nconst ll INF=0x3f3f3f3f;\n\nll num[maxn][12];//防御值为j，生命值为i的怪物的个数\nll dp[1020][15];//对于生命值为i，防御值为j的怪物所消耗的最小水晶数\nstruct skill\n{\n    ll hit;\n    ll price;\n} a[maxn];\nll best[maxn];//攻击力为i时，消耗的最少水晶数。\n\nll min(ll a,ll b)\n{\n    if(a>b)\n        return b;\n    else\n        return a;\n    }\n    \nvoid complete_packet(int k, int p)//p为攻击力，k为消耗水晶数\n{\n    for (int b = 0; b <= 10; ++b)\n    {\n        if (b >= p)\n        {\n            continue;\n        }\n        else\n        {\n            int d = p - b;\n            //血量小于攻击\n            for (int a = 1; a <= d; ++a)\n            {\n                dp[a][b] = min(dp[a][b], k);\n            }\n            //血量大于攻击\n            for (int a = d + 1; a <= 1000; ++a)\n            {\n                dp[a][b] = min(dp[a][b], dp[a - d][b] + k);\n            }\n        }\n    }\n}\n\nint main()\n{\n    cin.sync_with_stdio(false);\n    ll n, m;\n    ll x, y;\n    ll /*max_hp = -0xffff,*/ max_def = -INF, max_hit = -INF;\n    while(cin >> n >> m)\n    {\n        max_def = -INF, max_hit = -INF;\n        memset(num, 0, sizeof(num));\n        memset(a, 0, sizeof(a));\n        memset(best, -1, sizeof(best));\n        memset(dp, 0, sizeof(dp));\n        for(ll i = 0; i < n; i++)\n        {\n            cin >> x >> y;\n            num[x][y]++;\n            //if(x >= max_hp)\n            //max_hp = x;\n            if(y >= max_def)\n                max_def = y;\n        }\n        ll flag = 0;\n        for(ll i = 0; i < m; i++)\n        {\n            cin >> x >> y;\n            if(best[y] == -1)\n            {\n                a[flag].hit = y;\n                a[flag].price = x;\n                best[y] = x;\n                if(a[flag].hit > max_hit)\n                    max_hit = a[flag].hit;\n                flag++;\n            }\n            else\n            {\n                if(x < best[y])\n                    best[y] = x;\n            }\n        }\n        ll ans = 0;\n        ll temp = 0; //记录已处理怪物个数，优化时间\n        if(max_def >= max_hit)\n            cout << \"-1\" << endl;\n        else\n        {\n            for (int i = 0; i <= 1010; ++i)//初始化DP\n            {\n                for (int j = 0; j <= 10; ++j)\n                {\n                    if (i == 0)\n                    {\n                        dp[i][j] = 0;\n                    }\n                    else\n                    {\n                        dp[i][j] = INF;\n                    }\n                }\n            }\n            for(int i=0;i<flag;i++)\n                complete_packet(best[a[i].hit],a[i].hit);\n            for(ll i = 0; i < 1002; i++)\n            {\n                if(temp == n)//优化时间\n                    break;\n                for(ll j = 0; j < 12; j++)\n                {\n                    if(num[i][j] != 0)\n                    {\n                        temp += num[i][j];\n                        ans += dp[i][j]*num[i][j];\n                    }\n                }\n            }\n            cout << ans << endl;\n        }\n    }\n    return 0;\n}\n```","source":"_posts/2017百度之星资格赛 1003 度度熊与邪恶大魔王（完全背包）.md","raw":"---\ntitle: 2017百度之星资格赛 1003 度度熊与邪恶大魔王（完全背包）\ncategories: ACM\ntags:\n  - 百度之星\n  - 完全背包\nabbrlink: 53776\ndate: 2017-08-05 19:42:46\n---\n## 度度熊与邪恶大魔王\nAccepts: 2016\nSubmissions: 12307\nTime Limit: 2000/1000 MS (Java/Others)\nMemory Limit: 32768/32768 K (Java/Others) \n传送门: [bestcoder](http://bestcoder.hdu.edu.cn/contests/contest_showproblem.php?cid=774&pid=1003)\n\n## Problem Description \n度度熊为了拯救可爱的公主，于是与邪恶大魔王战斗起来。\n邪恶大魔王的麾下有n个怪兽，每个怪兽有a[i]的生命值，以及b[i]的防御力。\n度度熊一共拥有m种攻击方式，第i种攻击方式，需要消耗k[i]的晶石，造成p[i]点伤害。\n当然，如果度度熊使用第i个技能打在第j个怪兽上面的话，会使得第j个怪兽的生命值减少p[i]-b[j]，当然如果伤害小于防御，那么攻击就不会奏效。\n如果怪兽的生命值降为0或以下，那么怪兽就会被消灭。\n当然每个技能都可以使用无限次。\n请问度度熊最少携带多少晶石，就可以消灭所有的怪兽。\n## Input\n本题包含若干组测试数据。\n第一行两个整数n，m,表示有n个怪兽，m种技能。\n接下来n行，每行两个整数，a[i],b[i]，分别表示怪兽的生命值和防御力。\n再接下来m行，每行两个整数k[i]和p[i]，分别表示技能的消耗晶石数目和技能的伤害值。\n数据范围:\n<div class=\"note default no-icon\"><p>1<=n<=100000\n1<=m<=1000\n1<=a[i]<=1000\n0<=b[i]<=10\n0<=k[i]<=100000\n0<=p[i]<=1000\n</p></div>\n## Output\n对于每组测试数据，输出最小的晶石消耗数量，如果不能击败所有的怪兽，输出-1\n## Sample Input\n<div class=\"note default no-icon\"><p>1 2\n3 5\n7 10\n6 8\n1 2\n3 5\n10 7\n8 \n</p></div>\n\n## Sample Output\n<div class=\"note default no-icon\"><p>8\n16\n</p></div>\n\n## Aceppted代码 \n```Cpp\n/*\nProblem:度度熊与邪恶大魔王\nAuthor:QiZhao\nData:2017-08-05\nDescription:DP，完全背包\nCopyright  2017 QiZhao. All rights reserved.\n*/\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\nconst int maxn = 1020;\nconst ll INF=0x3f3f3f3f;\n\nll num[maxn][12];//防御值为j，生命值为i的怪物的个数\nll dp[1020][15];//对于生命值为i，防御值为j的怪物所消耗的最小水晶数\nstruct skill\n{\n    ll hit;\n    ll price;\n} a[maxn];\nll best[maxn];//攻击力为i时，消耗的最少水晶数。\n\nll min(ll a,ll b)\n{\n    if(a>b)\n        return b;\n    else\n        return a;\n    }\n    \nvoid complete_packet(int k, int p)//p为攻击力，k为消耗水晶数\n{\n    for (int b = 0; b <= 10; ++b)\n    {\n        if (b >= p)\n        {\n            continue;\n        }\n        else\n        {\n            int d = p - b;\n            //血量小于攻击\n            for (int a = 1; a <= d; ++a)\n            {\n                dp[a][b] = min(dp[a][b], k);\n            }\n            //血量大于攻击\n            for (int a = d + 1; a <= 1000; ++a)\n            {\n                dp[a][b] = min(dp[a][b], dp[a - d][b] + k);\n            }\n        }\n    }\n}\n\nint main()\n{\n    cin.sync_with_stdio(false);\n    ll n, m;\n    ll x, y;\n    ll /*max_hp = -0xffff,*/ max_def = -INF, max_hit = -INF;\n    while(cin >> n >> m)\n    {\n        max_def = -INF, max_hit = -INF;\n        memset(num, 0, sizeof(num));\n        memset(a, 0, sizeof(a));\n        memset(best, -1, sizeof(best));\n        memset(dp, 0, sizeof(dp));\n        for(ll i = 0; i < n; i++)\n        {\n            cin >> x >> y;\n            num[x][y]++;\n            //if(x >= max_hp)\n            //max_hp = x;\n            if(y >= max_def)\n                max_def = y;\n        }\n        ll flag = 0;\n        for(ll i = 0; i < m; i++)\n        {\n            cin >> x >> y;\n            if(best[y] == -1)\n            {\n                a[flag].hit = y;\n                a[flag].price = x;\n                best[y] = x;\n                if(a[flag].hit > max_hit)\n                    max_hit = a[flag].hit;\n                flag++;\n            }\n            else\n            {\n                if(x < best[y])\n                    best[y] = x;\n            }\n        }\n        ll ans = 0;\n        ll temp = 0; //记录已处理怪物个数，优化时间\n        if(max_def >= max_hit)\n            cout << \"-1\" << endl;\n        else\n        {\n            for (int i = 0; i <= 1010; ++i)//初始化DP\n            {\n                for (int j = 0; j <= 10; ++j)\n                {\n                    if (i == 0)\n                    {\n                        dp[i][j] = 0;\n                    }\n                    else\n                    {\n                        dp[i][j] = INF;\n                    }\n                }\n            }\n            for(int i=0;i<flag;i++)\n                complete_packet(best[a[i].hit],a[i].hit);\n            for(ll i = 0; i < 1002; i++)\n            {\n                if(temp == n)//优化时间\n                    break;\n                for(ll j = 0; j < 12; j++)\n                {\n                    if(num[i][j] != 0)\n                    {\n                        temp += num[i][j];\n                        ans += dp[i][j]*num[i][j];\n                    }\n                }\n            }\n            cout << ans << endl;\n        }\n    }\n    return 0;\n}\n```","slug":"2017百度之星资格赛 1003 度度熊与邪恶大魔王（完全背包）","published":1,"updated":"2019-03-28T10:45:16.800Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw7k0007kchiewbq2fxg","content":"<h2 id=\"度度熊与邪恶大魔王\"><a href=\"#度度熊与邪恶大魔王\" class=\"headerlink\" title=\"度度熊与邪恶大魔王\"></a>度度熊与邪恶大魔王</h2><p>Accepts: 2016<br>Submissions: 12307<br>Time Limit: 2000/1000 MS (Java/Others)<br>Memory Limit: 32768/32768 K (Java/Others)<br>传送门: <a href=\"http://bestcoder.hdu.edu.cn/contests/contest_showproblem.php?cid=774&amp;pid=1003\" target=\"_blank\" rel=\"noopener\">bestcoder</a></p>\n<h2 id=\"Problem-Description\"><a href=\"#Problem-Description\" class=\"headerlink\" title=\"Problem Description\"></a>Problem Description</h2><p>度度熊为了拯救可爱的公主，于是与邪恶大魔王战斗起来。<br>邪恶大魔王的麾下有n个怪兽，每个怪兽有a[i]的生命值，以及b[i]的防御力。<br>度度熊一共拥有m种攻击方式，第i种攻击方式，需要消耗k[i]的晶石，造成p[i]点伤害。<br>当然，如果度度熊使用第i个技能打在第j个怪兽上面的话，会使得第j个怪兽的生命值减少p[i]-b[j]，当然如果伤害小于防御，那么攻击就不会奏效。<br>如果怪兽的生命值降为0或以下，那么怪兽就会被消灭。<br>当然每个技能都可以使用无限次。<br>请问度度熊最少携带多少晶石，就可以消灭所有的怪兽。</p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>本题包含若干组测试数据。<br>第一行两个整数n，m,表示有n个怪兽，m种技能。<br>接下来n行，每行两个整数，a[i],b[i]，分别表示怪兽的生命值和防御力。<br>再接下来m行，每行两个整数k[i]和p[i]，分别表示技能的消耗晶石数目和技能的伤害值。<br>数据范围:</p>\n<div class=\"note default no-icon\"><p>1&lt;=n&lt;=100000<br>1&lt;=m&lt;=1000<br>1&lt;=a[i]&lt;=1000<br>0&lt;=b[i]&lt;=10<br>0&lt;=k[i]&lt;=100000<br>0&lt;=p[i]&lt;=1000<br></p></div><br>## Output<br>对于每组测试数据，输出最小的晶石消耗数量，如果不能击败所有的怪兽，输出-1<br>## Sample Input<br><div class=\"note default no-icon\"><p>1 2<br>3 5<br>7 10<br>6 8<br>1 2<br>3 5<br>10 7<br>8<br></p></div>\n\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><div class=\"note default no-icon\"><p>8<br>16<br></p></div>\n\n<h2 id=\"Aceppted代码\"><a href=\"#Aceppted代码\" class=\"headerlink\" title=\"Aceppted代码\"></a>Aceppted代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Problem:度度熊与邪恶大魔王</span></span><br><span class=\"line\"><span class=\"comment\">Author:QiZhao</span></span><br><span class=\"line\"><span class=\"comment\">Data:2017-08-05</span></span><br><span class=\"line\"><span class=\"comment\">Description:DP，完全背包</span></span><br><span class=\"line\"><span class=\"comment\">Copyright  2017 QiZhao. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">1020</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll INF=<span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">ll num[maxn][<span class=\"number\">12</span>];<span class=\"comment\">//防御值为j，生命值为i的怪物的个数</span></span><br><span class=\"line\">ll dp[<span class=\"number\">1020</span>][<span class=\"number\">15</span>];<span class=\"comment\">//对于生命值为i，防御值为j的怪物所消耗的最小水晶数</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">skill</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    ll hit;</span><br><span class=\"line\">    ll price;</span><br><span class=\"line\">&#125; a[maxn];</span><br><span class=\"line\">ll best[maxn];<span class=\"comment\">//攻击力为i时，消耗的最少水晶数。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">min</span><span class=\"params\">(ll a,ll b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&gt;b)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">complete_packet</span><span class=\"params\">(<span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> p)</span><span class=\"comment\">//p为攻击力，k为消耗水晶数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> b = <span class=\"number\">0</span>; b &lt;= <span class=\"number\">10</span>; ++b)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b &gt;= p)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> d = p - b;</span><br><span class=\"line\">            <span class=\"comment\">//血量小于攻击</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> a = <span class=\"number\">1</span>; a &lt;= d; ++a)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dp[a][b] = min(dp[a][b], k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//血量大于攻击</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> a = d + <span class=\"number\">1</span>; a &lt;= <span class=\"number\">1000</span>; ++a)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dp[a][b] = min(dp[a][b], dp[a - d][b] + k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    ll n, m;</span><br><span class=\"line\">    ll x, y;</span><br><span class=\"line\">    ll <span class=\"comment\">/*max_hp = -0xffff,*/</span> max_def = -INF, max_hit = -INF;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        max_def = -INF, max_hit = -INF;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(num, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(num));</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(a, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(best, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span>(best));</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(dp, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(dp));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(ll i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">            num[x][y]++;</span><br><span class=\"line\">            <span class=\"comment\">//if(x &gt;= max_hp)</span></span><br><span class=\"line\">            <span class=\"comment\">//max_hp = x;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(y &gt;= max_def)</span><br><span class=\"line\">                max_def = y;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ll flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(ll i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(best[y] == <span class=\"number\">-1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                a[flag].hit = y;</span><br><span class=\"line\">                a[flag].price = x;</span><br><span class=\"line\">                best[y] = x;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(a[flag].hit &gt; max_hit)</span><br><span class=\"line\">                    max_hit = a[flag].hit;</span><br><span class=\"line\">                flag++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(x &lt; best[y])</span><br><span class=\"line\">                    best[y] = x;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        ll temp = <span class=\"number\">0</span>; <span class=\"comment\">//记录已处理怪物个数，优化时间</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(max_def &gt;= max_hit)</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-1\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">1010</span>; ++i)<span class=\"comment\">//初始化DP</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">10</span>; ++j)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        dp[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        dp[i][j] = INF;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;flag;i++)</span><br><span class=\"line\">                complete_packet(best[a[i].hit],a[i].hit);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(ll i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">1002</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(temp == n)<span class=\"comment\">//优化时间</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(ll j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">12</span>; j++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(num[i][j] != <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        temp += num[i][j];</span><br><span class=\"line\">                        ans += dp[i][j]*num[i][j];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"度度熊与邪恶大魔王\"><a href=\"#度度熊与邪恶大魔王\" class=\"headerlink\" title=\"度度熊与邪恶大魔王\"></a>度度熊与邪恶大魔王</h2><p>Accepts: 2016<br>Submissions: 12307<br>Time Limit: 2000/1000 MS (Java/Others)<br>Memory Limit: 32768/32768 K (Java/Others)<br>传送门: <a href=\"http://bestcoder.hdu.edu.cn/contests/contest_showproblem.php?cid=774&amp;pid=1003\" target=\"_blank\" rel=\"noopener\">bestcoder</a></p>\n<h2 id=\"Problem-Description\"><a href=\"#Problem-Description\" class=\"headerlink\" title=\"Problem Description\"></a>Problem Description</h2><p>度度熊为了拯救可爱的公主，于是与邪恶大魔王战斗起来。<br>邪恶大魔王的麾下有n个怪兽，每个怪兽有a[i]的生命值，以及b[i]的防御力。<br>度度熊一共拥有m种攻击方式，第i种攻击方式，需要消耗k[i]的晶石，造成p[i]点伤害。<br>当然，如果度度熊使用第i个技能打在第j个怪兽上面的话，会使得第j个怪兽的生命值减少p[i]-b[j]，当然如果伤害小于防御，那么攻击就不会奏效。<br>如果怪兽的生命值降为0或以下，那么怪兽就会被消灭。<br>当然每个技能都可以使用无限次。<br>请问度度熊最少携带多少晶石，就可以消灭所有的怪兽。</p>\n<h2 id=\"Input\"><a href=\"#Input\" class=\"headerlink\" title=\"Input\"></a>Input</h2><p>本题包含若干组测试数据。<br>第一行两个整数n，m,表示有n个怪兽，m种技能。<br>接下来n行，每行两个整数，a[i],b[i]，分别表示怪兽的生命值和防御力。<br>再接下来m行，每行两个整数k[i]和p[i]，分别表示技能的消耗晶石数目和技能的伤害值。<br>数据范围:</p>\n<div class=\"note default no-icon\"><p>1&lt;=n&lt;=100000<br>1&lt;=m&lt;=1000<br>1&lt;=a[i]&lt;=1000<br>0&lt;=b[i]&lt;=10<br>0&lt;=k[i]&lt;=100000<br>0&lt;=p[i]&lt;=1000<br></p></div><br>## Output<br>对于每组测试数据，输出最小的晶石消耗数量，如果不能击败所有的怪兽，输出-1<br>## Sample Input<br><div class=\"note default no-icon\"><p>1 2<br>3 5<br>7 10<br>6 8<br>1 2<br>3 5<br>10 7<br>8<br></p></div>\n\n<h2 id=\"Sample-Output\"><a href=\"#Sample-Output\" class=\"headerlink\" title=\"Sample Output\"></a>Sample Output</h2><div class=\"note default no-icon\"><p>8<br>16<br></p></div>\n\n<h2 id=\"Aceppted代码\"><a href=\"#Aceppted代码\" class=\"headerlink\" title=\"Aceppted代码\"></a>Aceppted代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Problem:度度熊与邪恶大魔王</span></span><br><span class=\"line\"><span class=\"comment\">Author:QiZhao</span></span><br><span class=\"line\"><span class=\"comment\">Data:2017-08-05</span></span><br><span class=\"line\"><span class=\"comment\">Description:DP，完全背包</span></span><br><span class=\"line\"><span class=\"comment\">Copyright  2017 QiZhao. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> maxn = <span class=\"number\">1020</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll INF=<span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">ll num[maxn][<span class=\"number\">12</span>];<span class=\"comment\">//防御值为j，生命值为i的怪物的个数</span></span><br><span class=\"line\">ll dp[<span class=\"number\">1020</span>][<span class=\"number\">15</span>];<span class=\"comment\">//对于生命值为i，防御值为j的怪物所消耗的最小水晶数</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">skill</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    ll hit;</span><br><span class=\"line\">    ll price;</span><br><span class=\"line\">&#125; a[maxn];</span><br><span class=\"line\">ll best[maxn];<span class=\"comment\">//攻击力为i时，消耗的最少水晶数。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ll <span class=\"title\">min</span><span class=\"params\">(ll a,ll b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&gt;b)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">complete_packet</span><span class=\"params\">(<span class=\"keyword\">int</span> k, <span class=\"keyword\">int</span> p)</span><span class=\"comment\">//p为攻击力，k为消耗水晶数</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> b = <span class=\"number\">0</span>; b &lt;= <span class=\"number\">10</span>; ++b)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b &gt;= p)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> d = p - b;</span><br><span class=\"line\">            <span class=\"comment\">//血量小于攻击</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> a = <span class=\"number\">1</span>; a &lt;= d; ++a)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dp[a][b] = min(dp[a][b], k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//血量大于攻击</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> a = d + <span class=\"number\">1</span>; a &lt;= <span class=\"number\">1000</span>; ++a)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dp[a][b] = min(dp[a][b], dp[a - d][b] + k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    ll n, m;</span><br><span class=\"line\">    ll x, y;</span><br><span class=\"line\">    ll <span class=\"comment\">/*max_hp = -0xffff,*/</span> max_def = -INF, max_hit = -INF;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        max_def = -INF, max_hit = -INF;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(num, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(num));</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(a, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(best, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span>(best));</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(dp, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(dp));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(ll i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">            num[x][y]++;</span><br><span class=\"line\">            <span class=\"comment\">//if(x &gt;= max_hp)</span></span><br><span class=\"line\">            <span class=\"comment\">//max_hp = x;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(y &gt;= max_def)</span><br><span class=\"line\">                max_def = y;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ll flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(ll i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(best[y] == <span class=\"number\">-1</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                a[flag].hit = y;</span><br><span class=\"line\">                a[flag].price = x;</span><br><span class=\"line\">                best[y] = x;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(a[flag].hit &gt; max_hit)</span><br><span class=\"line\">                    max_hit = a[flag].hit;</span><br><span class=\"line\">                flag++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(x &lt; best[y])</span><br><span class=\"line\">                    best[y] = x;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        ll temp = <span class=\"number\">0</span>; <span class=\"comment\">//记录已处理怪物个数，优化时间</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(max_def &gt;= max_hit)</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-1\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">1010</span>; ++i)<span class=\"comment\">//初始化DP</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">10</span>; ++j)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        dp[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        dp[i][j] = INF;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;flag;i++)</span><br><span class=\"line\">                complete_packet(best[a[i].hit],a[i].hit);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(ll i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">1002</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(temp == n)<span class=\"comment\">//优化时间</span></span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(ll j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">12</span>; j++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(num[i][j] != <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        temp += num[i][j];</span><br><span class=\"line\">                        ans += dp[i][j]*num[i][j];</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"2017百度之星资格赛 1003 度度熊与邪恶大魔王（完全背包）","path":"53776.html","eyeCatchImage":null,"excerpt":null,"date":"2017-08-05T11:42:46.000Z","pv":0,"totalPV":0,"categories":"ACM","tags":["百度之星","完全背包"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"C#中自己生成验证码","date":"2018-06-18T18:41:13.000Z","abbrlink":1000607951,"_content":"## 前言\n最近写C#课程设计时，登录验证处需用到验证码，于是参照网上博客，自己封装了一个验证码类，和网上其他博客相比，有以下优点:\n* 去除了0,o,O与1,l等容易混淆的字符\n* 使用方便，仅需三行代码\n* 内置有返回MD5加密后的字符串的方法，便于前端调用\n\n## 函数说明\n### 公有方法\n* SecurityCode(int length);//构造函数\n* SecurityCode(int length, int width, int height);//构造函数\n* void UpdateVerifyCode();//刷新验证码\n* Bitmap getImage();//返回验证码图片\n* string MD5Encrypt();//返回经MD5加密过的验证码字符串\n* bool Check(string text);//返回校验结果(不区分大小写)\n\n### 私有方法\n* void CreateVerificationText(int length);//随机生成验证码字符串\n* void CreateImage();//生成验证码图片\n* Color RandColor();//生成随机颜色\n* Point RandPoint();//生成随机点\n\n## 使用示例\n```csharp\nSecurityCode Code=new SecurityCode(4);\ncode.UpdateVerifyCode();\npicturebox.Image=code.getImage();\n```\n## 效果图\n![验证码](/images/securitycode.jpg)\n\n## 源代码\n```csharp\nclass SecurityCode\n{\n        private Random rand = new Random();//生成随机数\n        private string VerificationText = string.Empty;//验证码字符串\n        private Bitmap map;//验证码的位图\n        private int length;//验证码的字符个数\n        private int width;//验证码图片的宽度\n        private int height;//验证码图片的高度\n\n        public SecurityCode(int length, int width, int height)\n        {\n            this.length = length;\n            this.width = width;\n            this.height = height;\n        }\n\n        public SecurityCode(int length)\n        {\n            this.length = length;\n            this.width = (length + 1) * 25;\n            this.height = 40;\n        }\n\n        //随机生成验证码字符串\n        private void CreateVerificationText(int length)\n        {\n            VerificationText = string.Empty;\n            string dictionary = \"ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz23456789\";//去除O,o,0 ,l,1\n            for (int i = 0; i < length; i++)\n            {\n                int index = rand.Next(0, dictionary.Length);\n                VerificationText += dictionary[index].ToString();\n            }\n        }\n\n        //刷新验证码\n        public void UpdateVerifyCode()\n        {\n            CreateVerificationText(length);\n            CreateImage();\n            //Console.WriteLine(MD5Encrypt(VerificationText));//Only for test\n        }\n        //生成验证码图片\n        private void CreateImage()\n        {\n            map = new Bitmap(width, height);\n            Graphics g = Graphics.FromImage(map);\n            Pen pen = new Pen(Color.Black);\n            string[] font = { \"Verdana\", \"Microsoft Sans Serif\", \"Consolas\", \"Arial\", \"宋体\" };\n            Font f = new Font(\"Arial\", 20, FontStyle.Bold);\n            g.Clear(Color.White);\n            SolidBrush brush = new SolidBrush(Color.White);\n\n            //绘制干扰线条\n            pen.Width = 0.1F;\n            for (int i = 0; i < 15; i++)\n            {\n                pen.Color = RandColor();\n                g.DrawLine(pen, RandPoint(), RandPoint());\n            }\n            //绘制干扰点\n            for (int i = 0; i < 80; i++)\n            {\n                Point p = RandPoint();\n                map.SetPixel(p.X, p.Y, RandColor());\n            }\n            //绘制字符串\n            SizeF  StringSizeF = g.MeasureString(VerificationText, f);\n            PointF StartPoint = new Point(0, (height - (int)StringSizeF.Height) / 2);\n            for (int i = 0; i < length; i++)\n            {\n                brush.Color = RandColor();\n                int index = rand.Next(5);\n                f = new Font(font[index], 20, FontStyle.Bold);\n                StartPoint.X += 5;\n                g.DrawString(VerificationText[i].ToString(), f, brush, StartPoint);\n                SizeF CharSizeF = g.MeasureString(VerificationText[i].ToString(), f);\n                StartPoint.X += CharSizeF.Width;\n            }\n            g.Dispose();\n\n        }\n        //生成随机颜色\n        private Color RandColor()\n        {\n            Color c = Color.FromArgb(rand.Next(1, 256), rand.Next(1, 255), rand.Next(1, 255));\n            return c;\n        }\n        //生成随机点\n        private Point RandPoint()\n        {\n            int x = rand.Next(0, map.Width);\n            int y = rand.Next(0, map.Height);\n            return new Point(x, y);\n        }\n        //返回验证码图片\n        public Bitmap getImage()\n        {\n            return map;\n        }\n        //返回经MD5加密过的验证码字符串\n        public string MD5Encrypt()\n        {\n            return Tool.MD5Encrypt(VerificationText);\n        }\n        //返回校验结果\n        public bool Check(string text)\n        {\n            return text.ToUpper().Equals(VerificationText.ToUpper());//不区分大小写\n        }\n}\n```","source":"_posts/C#中自己生成验证码.md","raw":"---\ntitle: 'C#中自己生成验证码'\ncategories: 'C#'\ntags:\n  - 'C#'\n  - .NET\ndate: '2018-06-19 02:41:13'\nabbrlink: 1000607951\n---\n## 前言\n最近写C#课程设计时，登录验证处需用到验证码，于是参照网上博客，自己封装了一个验证码类，和网上其他博客相比，有以下优点:\n* 去除了0,o,O与1,l等容易混淆的字符\n* 使用方便，仅需三行代码\n* 内置有返回MD5加密后的字符串的方法，便于前端调用\n\n## 函数说明\n### 公有方法\n* SecurityCode(int length);//构造函数\n* SecurityCode(int length, int width, int height);//构造函数\n* void UpdateVerifyCode();//刷新验证码\n* Bitmap getImage();//返回验证码图片\n* string MD5Encrypt();//返回经MD5加密过的验证码字符串\n* bool Check(string text);//返回校验结果(不区分大小写)\n\n### 私有方法\n* void CreateVerificationText(int length);//随机生成验证码字符串\n* void CreateImage();//生成验证码图片\n* Color RandColor();//生成随机颜色\n* Point RandPoint();//生成随机点\n\n## 使用示例\n```csharp\nSecurityCode Code=new SecurityCode(4);\ncode.UpdateVerifyCode();\npicturebox.Image=code.getImage();\n```\n## 效果图\n![验证码](/images/securitycode.jpg)\n\n## 源代码\n```csharp\nclass SecurityCode\n{\n        private Random rand = new Random();//生成随机数\n        private string VerificationText = string.Empty;//验证码字符串\n        private Bitmap map;//验证码的位图\n        private int length;//验证码的字符个数\n        private int width;//验证码图片的宽度\n        private int height;//验证码图片的高度\n\n        public SecurityCode(int length, int width, int height)\n        {\n            this.length = length;\n            this.width = width;\n            this.height = height;\n        }\n\n        public SecurityCode(int length)\n        {\n            this.length = length;\n            this.width = (length + 1) * 25;\n            this.height = 40;\n        }\n\n        //随机生成验证码字符串\n        private void CreateVerificationText(int length)\n        {\n            VerificationText = string.Empty;\n            string dictionary = \"ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz23456789\";//去除O,o,0 ,l,1\n            for (int i = 0; i < length; i++)\n            {\n                int index = rand.Next(0, dictionary.Length);\n                VerificationText += dictionary[index].ToString();\n            }\n        }\n\n        //刷新验证码\n        public void UpdateVerifyCode()\n        {\n            CreateVerificationText(length);\n            CreateImage();\n            //Console.WriteLine(MD5Encrypt(VerificationText));//Only for test\n        }\n        //生成验证码图片\n        private void CreateImage()\n        {\n            map = new Bitmap(width, height);\n            Graphics g = Graphics.FromImage(map);\n            Pen pen = new Pen(Color.Black);\n            string[] font = { \"Verdana\", \"Microsoft Sans Serif\", \"Consolas\", \"Arial\", \"宋体\" };\n            Font f = new Font(\"Arial\", 20, FontStyle.Bold);\n            g.Clear(Color.White);\n            SolidBrush brush = new SolidBrush(Color.White);\n\n            //绘制干扰线条\n            pen.Width = 0.1F;\n            for (int i = 0; i < 15; i++)\n            {\n                pen.Color = RandColor();\n                g.DrawLine(pen, RandPoint(), RandPoint());\n            }\n            //绘制干扰点\n            for (int i = 0; i < 80; i++)\n            {\n                Point p = RandPoint();\n                map.SetPixel(p.X, p.Y, RandColor());\n            }\n            //绘制字符串\n            SizeF  StringSizeF = g.MeasureString(VerificationText, f);\n            PointF StartPoint = new Point(0, (height - (int)StringSizeF.Height) / 2);\n            for (int i = 0; i < length; i++)\n            {\n                brush.Color = RandColor();\n                int index = rand.Next(5);\n                f = new Font(font[index], 20, FontStyle.Bold);\n                StartPoint.X += 5;\n                g.DrawString(VerificationText[i].ToString(), f, brush, StartPoint);\n                SizeF CharSizeF = g.MeasureString(VerificationText[i].ToString(), f);\n                StartPoint.X += CharSizeF.Width;\n            }\n            g.Dispose();\n\n        }\n        //生成随机颜色\n        private Color RandColor()\n        {\n            Color c = Color.FromArgb(rand.Next(1, 256), rand.Next(1, 255), rand.Next(1, 255));\n            return c;\n        }\n        //生成随机点\n        private Point RandPoint()\n        {\n            int x = rand.Next(0, map.Width);\n            int y = rand.Next(0, map.Height);\n            return new Point(x, y);\n        }\n        //返回验证码图片\n        public Bitmap getImage()\n        {\n            return map;\n        }\n        //返回经MD5加密过的验证码字符串\n        public string MD5Encrypt()\n        {\n            return Tool.MD5Encrypt(VerificationText);\n        }\n        //返回校验结果\n        public bool Check(string text)\n        {\n            return text.ToUpper().Equals(VerificationText.ToUpper());//不区分大小写\n        }\n}\n```","slug":"C#中自己生成验证码","published":1,"updated":"2019-03-28T10:45:16.802Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw7p000bkchit9dzrbyc","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近写C#课程设计时，登录验证处需用到验证码，于是参照网上博客，自己封装了一个验证码类，和网上其他博客相比，有以下优点:</p>\n<ul>\n<li>去除了0,o,O与1,l等容易混淆的字符</li>\n<li>使用方便，仅需三行代码</li>\n<li>内置有返回MD5加密后的字符串的方法，便于前端调用</li>\n</ul>\n<h2 id=\"函数说明\"><a href=\"#函数说明\" class=\"headerlink\" title=\"函数说明\"></a>函数说明</h2><h3 id=\"公有方法\"><a href=\"#公有方法\" class=\"headerlink\" title=\"公有方法\"></a>公有方法</h3><ul>\n<li>SecurityCode(int length);//构造函数</li>\n<li>SecurityCode(int length, int width, int height);//构造函数</li>\n<li>void UpdateVerifyCode();//刷新验证码</li>\n<li>Bitmap getImage();//返回验证码图片</li>\n<li>string MD5Encrypt();//返回经MD5加密过的验证码字符串</li>\n<li>bool Check(string text);//返回校验结果(不区分大小写)</li>\n</ul>\n<h3 id=\"私有方法\"><a href=\"#私有方法\" class=\"headerlink\" title=\"私有方法\"></a>私有方法</h3><ul>\n<li>void CreateVerificationText(int length);//随机生成验证码字符串</li>\n<li>void CreateImage();//生成验证码图片</li>\n<li>Color RandColor();//生成随机颜色</li>\n<li>Point RandPoint();//生成随机点</li>\n</ul>\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SecurityCode Code=<span class=\"keyword\">new</span> SecurityCode(<span class=\"number\">4</span>);</span><br><span class=\"line\">code.UpdateVerifyCode();</span><br><span class=\"line\">picturebox.Image=code.getImage();</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/securitycode.jpg\" alt=\"验证码\"></p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">SecurityCode</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Random rand = <span class=\"keyword\">new</span> Random();<span class=\"comment\">//生成随机数</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> VerificationText = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//验证码字符串</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> Bitmap map;<span class=\"comment\">//验证码的位图</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> length;<span class=\"comment\">//验证码的字符个数</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width;<span class=\"comment\">//验证码图片的宽度</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> height;<span class=\"comment\">//验证码图片的高度</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SecurityCode</span>(<span class=\"params\"><span class=\"keyword\">int</span> length, <span class=\"keyword\">int</span> width, <span class=\"keyword\">int</span> height</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.length = length;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.width = width;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.height = height;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SecurityCode</span>(<span class=\"params\"><span class=\"keyword\">int</span> length</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.length = length;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.width = (length + <span class=\"number\">1</span>) * <span class=\"number\">25</span>;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.height = <span class=\"number\">40</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//随机生成验证码字符串</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateVerificationText</span>(<span class=\"params\"><span class=\"keyword\">int</span> length</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            VerificationText = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> dictionary = <span class=\"string\">\"ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz23456789\"</span>;<span class=\"comment\">//去除O,o,0 ,l,1</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> index = rand.Next(<span class=\"number\">0</span>, dictionary.Length);</span><br><span class=\"line\">                VerificationText += dictionary[index].ToString();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//刷新验证码</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateVerifyCode</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            CreateVerificationText(length);</span><br><span class=\"line\">            CreateImage();</span><br><span class=\"line\">            <span class=\"comment\">//Console.WriteLine(MD5Encrypt(VerificationText));//Only for test</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//生成验证码图片</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateImage</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            map = <span class=\"keyword\">new</span> Bitmap(width, height);</span><br><span class=\"line\">            Graphics g = Graphics.FromImage(map);</span><br><span class=\"line\">            Pen pen = <span class=\"keyword\">new</span> Pen(Color.Black);</span><br><span class=\"line\">            <span class=\"keyword\">string</span>[] font = &#123; <span class=\"string\">\"Verdana\"</span>, <span class=\"string\">\"Microsoft Sans Serif\"</span>, <span class=\"string\">\"Consolas\"</span>, <span class=\"string\">\"Arial\"</span>, <span class=\"string\">\"宋体\"</span> &#125;;</span><br><span class=\"line\">            Font f = <span class=\"keyword\">new</span> Font(<span class=\"string\">\"Arial\"</span>, <span class=\"number\">20</span>, FontStyle.Bold);</span><br><span class=\"line\">            g.Clear(Color.White);</span><br><span class=\"line\">            SolidBrush brush = <span class=\"keyword\">new</span> SolidBrush(Color.White);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//绘制干扰线条</span></span><br><span class=\"line\">            pen.Width = <span class=\"number\">0.1F</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                pen.Color = RandColor();</span><br><span class=\"line\">                g.DrawLine(pen, RandPoint(), RandPoint());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//绘制干扰点</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">80</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Point p = RandPoint();</span><br><span class=\"line\">                map.SetPixel(p.X, p.Y, RandColor());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//绘制字符串</span></span><br><span class=\"line\">            SizeF  StringSizeF = g.MeasureString(VerificationText, f);</span><br><span class=\"line\">            PointF StartPoint = <span class=\"keyword\">new</span> Point(<span class=\"number\">0</span>, (height - (<span class=\"keyword\">int</span>)StringSizeF.Height) / <span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                brush.Color = RandColor();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> index = rand.Next(<span class=\"number\">5</span>);</span><br><span class=\"line\">                f = <span class=\"keyword\">new</span> Font(font[index], <span class=\"number\">20</span>, FontStyle.Bold);</span><br><span class=\"line\">                StartPoint.X += <span class=\"number\">5</span>;</span><br><span class=\"line\">                g.DrawString(VerificationText[i].ToString(), f, brush, StartPoint);</span><br><span class=\"line\">                SizeF CharSizeF = g.MeasureString(VerificationText[i].ToString(), f);</span><br><span class=\"line\">                StartPoint.X += CharSizeF.Width;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            g.Dispose();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//生成随机颜色</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> Color <span class=\"title\">RandColor</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Color c = Color.FromArgb(rand.Next(<span class=\"number\">1</span>, <span class=\"number\">256</span>), rand.Next(<span class=\"number\">1</span>, <span class=\"number\">255</span>), rand.Next(<span class=\"number\">1</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">            <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//生成随机点</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> Point <span class=\"title\">RandPoint</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = rand.Next(<span class=\"number\">0</span>, map.Width);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y = rand.Next(<span class=\"number\">0</span>, map.Height);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Point(x, y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//返回验证码图片</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Bitmap <span class=\"title\">getImage</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> map;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//返回经MD5加密过的验证码字符串</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">MD5Encrypt</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Tool.MD5Encrypt(VerificationText);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//返回校验结果</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Check</span>(<span class=\"params\"><span class=\"keyword\">string</span> text</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> text.ToUpper().Equals(VerificationText.ToUpper());<span class=\"comment\">//不区分大小写</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近写C#课程设计时，登录验证处需用到验证码，于是参照网上博客，自己封装了一个验证码类，和网上其他博客相比，有以下优点:</p>\n<ul>\n<li>去除了0,o,O与1,l等容易混淆的字符</li>\n<li>使用方便，仅需三行代码</li>\n<li>内置有返回MD5加密后的字符串的方法，便于前端调用</li>\n</ul>\n<h2 id=\"函数说明\"><a href=\"#函数说明\" class=\"headerlink\" title=\"函数说明\"></a>函数说明</h2><h3 id=\"公有方法\"><a href=\"#公有方法\" class=\"headerlink\" title=\"公有方法\"></a>公有方法</h3><ul>\n<li>SecurityCode(int length);//构造函数</li>\n<li>SecurityCode(int length, int width, int height);//构造函数</li>\n<li>void UpdateVerifyCode();//刷新验证码</li>\n<li>Bitmap getImage();//返回验证码图片</li>\n<li>string MD5Encrypt();//返回经MD5加密过的验证码字符串</li>\n<li>bool Check(string text);//返回校验结果(不区分大小写)</li>\n</ul>\n<h3 id=\"私有方法\"><a href=\"#私有方法\" class=\"headerlink\" title=\"私有方法\"></a>私有方法</h3><ul>\n<li>void CreateVerificationText(int length);//随机生成验证码字符串</li>\n<li>void CreateImage();//生成验证码图片</li>\n<li>Color RandColor();//生成随机颜色</li>\n<li>Point RandPoint();//生成随机点</li>\n</ul>\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SecurityCode Code=<span class=\"keyword\">new</span> SecurityCode(<span class=\"number\">4</span>);</span><br><span class=\"line\">code.UpdateVerifyCode();</span><br><span class=\"line\">picturebox.Image=code.getImage();</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/securitycode.jpg\" alt=\"验证码\"></p>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">SecurityCode</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> Random rand = <span class=\"keyword\">new</span> Random();<span class=\"comment\">//生成随机数</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> VerificationText = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//验证码字符串</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> Bitmap map;<span class=\"comment\">//验证码的位图</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> length;<span class=\"comment\">//验证码的字符个数</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width;<span class=\"comment\">//验证码图片的宽度</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> height;<span class=\"comment\">//验证码图片的高度</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SecurityCode</span>(<span class=\"params\"><span class=\"keyword\">int</span> length, <span class=\"keyword\">int</span> width, <span class=\"keyword\">int</span> height</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.length = length;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.width = width;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.height = height;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SecurityCode</span>(<span class=\"params\"><span class=\"keyword\">int</span> length</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.length = length;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.width = (length + <span class=\"number\">1</span>) * <span class=\"number\">25</span>;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.height = <span class=\"number\">40</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//随机生成验证码字符串</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateVerificationText</span>(<span class=\"params\"><span class=\"keyword\">int</span> length</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            VerificationText = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> dictionary = <span class=\"string\">\"ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz23456789\"</span>;<span class=\"comment\">//去除O,o,0 ,l,1</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> index = rand.Next(<span class=\"number\">0</span>, dictionary.Length);</span><br><span class=\"line\">                VerificationText += dictionary[index].ToString();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//刷新验证码</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateVerifyCode</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            CreateVerificationText(length);</span><br><span class=\"line\">            CreateImage();</span><br><span class=\"line\">            <span class=\"comment\">//Console.WriteLine(MD5Encrypt(VerificationText));//Only for test</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//生成验证码图片</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateImage</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            map = <span class=\"keyword\">new</span> Bitmap(width, height);</span><br><span class=\"line\">            Graphics g = Graphics.FromImage(map);</span><br><span class=\"line\">            Pen pen = <span class=\"keyword\">new</span> Pen(Color.Black);</span><br><span class=\"line\">            <span class=\"keyword\">string</span>[] font = &#123; <span class=\"string\">\"Verdana\"</span>, <span class=\"string\">\"Microsoft Sans Serif\"</span>, <span class=\"string\">\"Consolas\"</span>, <span class=\"string\">\"Arial\"</span>, <span class=\"string\">\"宋体\"</span> &#125;;</span><br><span class=\"line\">            Font f = <span class=\"keyword\">new</span> Font(<span class=\"string\">\"Arial\"</span>, <span class=\"number\">20</span>, FontStyle.Bold);</span><br><span class=\"line\">            g.Clear(Color.White);</span><br><span class=\"line\">            SolidBrush brush = <span class=\"keyword\">new</span> SolidBrush(Color.White);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//绘制干扰线条</span></span><br><span class=\"line\">            pen.Width = <span class=\"number\">0.1F</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                pen.Color = RandColor();</span><br><span class=\"line\">                g.DrawLine(pen, RandPoint(), RandPoint());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//绘制干扰点</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">80</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Point p = RandPoint();</span><br><span class=\"line\">                map.SetPixel(p.X, p.Y, RandColor());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//绘制字符串</span></span><br><span class=\"line\">            SizeF  StringSizeF = g.MeasureString(VerificationText, f);</span><br><span class=\"line\">            PointF StartPoint = <span class=\"keyword\">new</span> Point(<span class=\"number\">0</span>, (height - (<span class=\"keyword\">int</span>)StringSizeF.Height) / <span class=\"number\">2</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                brush.Color = RandColor();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> index = rand.Next(<span class=\"number\">5</span>);</span><br><span class=\"line\">                f = <span class=\"keyword\">new</span> Font(font[index], <span class=\"number\">20</span>, FontStyle.Bold);</span><br><span class=\"line\">                StartPoint.X += <span class=\"number\">5</span>;</span><br><span class=\"line\">                g.DrawString(VerificationText[i].ToString(), f, brush, StartPoint);</span><br><span class=\"line\">                SizeF CharSizeF = g.MeasureString(VerificationText[i].ToString(), f);</span><br><span class=\"line\">                StartPoint.X += CharSizeF.Width;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            g.Dispose();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//生成随机颜色</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> Color <span class=\"title\">RandColor</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Color c = Color.FromArgb(rand.Next(<span class=\"number\">1</span>, <span class=\"number\">256</span>), rand.Next(<span class=\"number\">1</span>, <span class=\"number\">255</span>), rand.Next(<span class=\"number\">1</span>, <span class=\"number\">255</span>));</span><br><span class=\"line\">            <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//生成随机点</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> Point <span class=\"title\">RandPoint</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x = rand.Next(<span class=\"number\">0</span>, map.Width);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> y = rand.Next(<span class=\"number\">0</span>, map.Height);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Point(x, y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//返回验证码图片</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Bitmap <span class=\"title\">getImage</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> map;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//返回经MD5加密过的验证码字符串</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">MD5Encrypt</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Tool.MD5Encrypt(VerificationText);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//返回校验结果</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Check</span>(<span class=\"params\"><span class=\"keyword\">string</span> text</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> text.ToUpper().Equals(VerificationText.ToUpper());<span class=\"comment\">//不区分大小写</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/securitycode.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"C#中自己生成验证码","path":"1000607951.html","eyeCatchImage":"/images/securitycode.jpg","excerpt":null,"date":"2018-06-18T18:41:13.000Z","pv":0,"totalPV":0,"categories":"C#","tags":["C#",".NET"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"C#中使用SmtpClient发送邮件","date":"2018-06-18T18:41:13.000Z","abbrlink":3123403799,"_content":"最近写C#课程设计时需要用C#来发送邮件，但是网上搜的代码经过测试均不能使用，调试了很久也没能成功。最后索性自己对着官方文档撸了一个，期间踩了很多坑，故在此做一总结。\n\n## 准备工作\n* 命名空间导入:`using System.Net.Mail;`\n* 在邮箱设置中开通smtp服务，并获取授权码。\n\n## 源代码\n```csharp\nstring mailfrom, password, fromwho, host, mailto, subject, body;\nmailfrom = \"xxx@qq.com\";//发件人\nint port = 25;//端口号一般为25\npassword = \"**********\";//邮箱密码\nhost = \"smtp.xxx.com\";//主机地址\nfromwho = \"xxx\";//发件人的签名\nmailto = \"xxx@qq.com\";//收件人(多个收件人之间以英文逗号间隔)\nsubject = \"test\";//邮件主题\nbody = \"xxxxx\";//邮件正文\n\nSmtpClient smtp;\nsmtp = new SmtpClient(host, port);\nsmtp.UseDefaultCredentials = false;\nsmtp.EnableSsl = true;//是否使用SSL加密连接\nsmtp.DeliveryMethod = SmtpDeliveryMethod.Network;//指定邮件发送方式\nsmtp.Credentials = new System.Net.NetworkCredential(mailfrom, password); //设置用于验证发件人身份的凭证\n\nstring[] address = mailto.Split(',');//收件人地址列表\nMailMessage msg = new MailMessage();//邮件信息\nmsg.From = new MailAddress(mailfrom, fromwho, Encoding.UTF8);\nmsg.Subject = subject;//邮件标题\nmsg.SubjectEncoding = Encoding.UTF8;\nmsg.Body = body;//邮件正文\nmsg.BodyEncoding = Encoding.UTF8;\nfor (int i = 0; i < address.Length; i++)\n    msg.To.Add(address[i]);\n\nmsg.Priority = MailPriority.Normal;//邮件优先级(High,Low,Normal)\ntry\n{\n    smtp.Send(msg);\n\tConsole.WriteLine(\"发送成功!\");\n}\ncatch (Exception e)\n{\n    Console.WriteLine(e.Message);\n}\nmsg.Dispose();\n```\n\n## 注意\n* 代码中所使用的密码不是邮箱密码，应在邮箱设置中获取smtp服务授权码。\n* 使用163邮箱时只能使用25端口(465/994不可用),EnableSsl属性设置为false/true\n* 使用QQ邮箱发送时只能使用25端口(465/587不可用),且EnableSsl属性必须设置为true\n* 代码使用QQ邮箱、163邮箱实测有效，其他邮箱尚不清楚\n\n## 总结\n无论是QQ邮箱还是163邮箱，使用SSL端口发送时均出现异常：操作超时，查了好久，发现是因为:System.Net.Mail只支持显式SSL(Explicit SSL)，但是不支持隐式SSL(Implicit SSL)，QQ邮箱使用的应该是Implicit SSL。此问题似乎可以用`System.Web.Mail`或`Cdosys.dll`解决，但是还没有试过。\n关于QQ邮箱使用25端口发送时，必须使用设置SSL为true的原因:服务器从不受保护的25端口响应请求，然后将连接抛到受保护的465端口.\n**显式SSL**通过25端口连接 - > StartTLS（开始加密）- >验证 - >发送数据\n**隐式SSL**StartSSL（开始加密） - > 连接 - > 验证 - >发送数据\n## 参考博客\n[C#发送邮件三种方法，Localhost，SMTP，SSL-SMTP](https://blog.csdn.net/andrewniu/article/details/52594318)\n[System.Net.Mail with SSL to authenticate against port 465](https://blogs.msdn.microsoft.com/webdav_101/2008/06/02/system-net-mail-with-ssl-to-authenticate-against-port-465/)\n[You cannot use System.Net.Mail.SmtpClient to send an e-mail message with Implicit SSL](https://support.microsoft.com/en-us/help/950260/you-cannot-use-system-net-mail-smtpclient-to-send-an-e-mail-message-wi)","source":"_posts/C#中使用SmtpClient发送邮件 .md","raw":"---\ntitle: 'C#中使用SmtpClient发送邮件'\ncategories: 'C#'\ntags:\n  - 'C#'\n  - .NET\ndate: '2018-06-19 02:41:13'\nabbrlink: 3123403799\n---\n最近写C#课程设计时需要用C#来发送邮件，但是网上搜的代码经过测试均不能使用，调试了很久也没能成功。最后索性自己对着官方文档撸了一个，期间踩了很多坑，故在此做一总结。\n\n## 准备工作\n* 命名空间导入:`using System.Net.Mail;`\n* 在邮箱设置中开通smtp服务，并获取授权码。\n\n## 源代码\n```csharp\nstring mailfrom, password, fromwho, host, mailto, subject, body;\nmailfrom = \"xxx@qq.com\";//发件人\nint port = 25;//端口号一般为25\npassword = \"**********\";//邮箱密码\nhost = \"smtp.xxx.com\";//主机地址\nfromwho = \"xxx\";//发件人的签名\nmailto = \"xxx@qq.com\";//收件人(多个收件人之间以英文逗号间隔)\nsubject = \"test\";//邮件主题\nbody = \"xxxxx\";//邮件正文\n\nSmtpClient smtp;\nsmtp = new SmtpClient(host, port);\nsmtp.UseDefaultCredentials = false;\nsmtp.EnableSsl = true;//是否使用SSL加密连接\nsmtp.DeliveryMethod = SmtpDeliveryMethod.Network;//指定邮件发送方式\nsmtp.Credentials = new System.Net.NetworkCredential(mailfrom, password); //设置用于验证发件人身份的凭证\n\nstring[] address = mailto.Split(',');//收件人地址列表\nMailMessage msg = new MailMessage();//邮件信息\nmsg.From = new MailAddress(mailfrom, fromwho, Encoding.UTF8);\nmsg.Subject = subject;//邮件标题\nmsg.SubjectEncoding = Encoding.UTF8;\nmsg.Body = body;//邮件正文\nmsg.BodyEncoding = Encoding.UTF8;\nfor (int i = 0; i < address.Length; i++)\n    msg.To.Add(address[i]);\n\nmsg.Priority = MailPriority.Normal;//邮件优先级(High,Low,Normal)\ntry\n{\n    smtp.Send(msg);\n\tConsole.WriteLine(\"发送成功!\");\n}\ncatch (Exception e)\n{\n    Console.WriteLine(e.Message);\n}\nmsg.Dispose();\n```\n\n## 注意\n* 代码中所使用的密码不是邮箱密码，应在邮箱设置中获取smtp服务授权码。\n* 使用163邮箱时只能使用25端口(465/994不可用),EnableSsl属性设置为false/true\n* 使用QQ邮箱发送时只能使用25端口(465/587不可用),且EnableSsl属性必须设置为true\n* 代码使用QQ邮箱、163邮箱实测有效，其他邮箱尚不清楚\n\n## 总结\n无论是QQ邮箱还是163邮箱，使用SSL端口发送时均出现异常：操作超时，查了好久，发现是因为:System.Net.Mail只支持显式SSL(Explicit SSL)，但是不支持隐式SSL(Implicit SSL)，QQ邮箱使用的应该是Implicit SSL。此问题似乎可以用`System.Web.Mail`或`Cdosys.dll`解决，但是还没有试过。\n关于QQ邮箱使用25端口发送时，必须使用设置SSL为true的原因:服务器从不受保护的25端口响应请求，然后将连接抛到受保护的465端口.\n**显式SSL**通过25端口连接 - > StartTLS（开始加密）- >验证 - >发送数据\n**隐式SSL**StartSSL（开始加密） - > 连接 - > 验证 - >发送数据\n## 参考博客\n[C#发送邮件三种方法，Localhost，SMTP，SSL-SMTP](https://blog.csdn.net/andrewniu/article/details/52594318)\n[System.Net.Mail with SSL to authenticate against port 465](https://blogs.msdn.microsoft.com/webdav_101/2008/06/02/system-net-mail-with-ssl-to-authenticate-against-port-465/)\n[You cannot use System.Net.Mail.SmtpClient to send an e-mail message with Implicit SSL](https://support.microsoft.com/en-us/help/950260/you-cannot-use-system-net-mail-smtpclient-to-send-an-e-mail-message-wi)","slug":"C#中使用SmtpClient发送邮件 ","published":1,"updated":"2019-03-28T10:45:16.801Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw7r000dkchihornbefo","content":"<p>最近写C#课程设计时需要用C#来发送邮件，但是网上搜的代码经过测试均不能使用，调试了很久也没能成功。最后索性自己对着官方文档撸了一个，期间踩了很多坑，故在此做一总结。</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li>命名空间导入:<code>using System.Net.Mail;</code></li>\n<li>在邮箱设置中开通smtp服务，并获取授权码。</li>\n</ul>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> mailfrom, password, fromwho, host, mailto, subject, body;</span><br><span class=\"line\">mailfrom = <span class=\"string\">\"xxx@qq.com\"</span>;<span class=\"comment\">//发件人</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> port = <span class=\"number\">25</span>;<span class=\"comment\">//端口号一般为25</span></span><br><span class=\"line\">password = <span class=\"string\">\"**********\"</span>;<span class=\"comment\">//邮箱密码</span></span><br><span class=\"line\">host = <span class=\"string\">\"smtp.xxx.com\"</span>;<span class=\"comment\">//主机地址</span></span><br><span class=\"line\">fromwho = <span class=\"string\">\"xxx\"</span>;<span class=\"comment\">//发件人的签名</span></span><br><span class=\"line\">mailto = <span class=\"string\">\"xxx@qq.com\"</span>;<span class=\"comment\">//收件人(多个收件人之间以英文逗号间隔)</span></span><br><span class=\"line\">subject = <span class=\"string\">\"test\"</span>;<span class=\"comment\">//邮件主题</span></span><br><span class=\"line\">body = <span class=\"string\">\"xxxxx\"</span>;<span class=\"comment\">//邮件正文</span></span><br><span class=\"line\"></span><br><span class=\"line\">SmtpClient smtp;</span><br><span class=\"line\">smtp = <span class=\"keyword\">new</span> SmtpClient(host, port);</span><br><span class=\"line\">smtp.UseDefaultCredentials = <span class=\"literal\">false</span>;</span><br><span class=\"line\">smtp.EnableSsl = <span class=\"literal\">true</span>;<span class=\"comment\">//是否使用SSL加密连接</span></span><br><span class=\"line\">smtp.DeliveryMethod = SmtpDeliveryMethod.Network;<span class=\"comment\">//指定邮件发送方式</span></span><br><span class=\"line\">smtp.Credentials = <span class=\"keyword\">new</span> System.Net.NetworkCredential(mailfrom, password); <span class=\"comment\">//设置用于验证发件人身份的凭证</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">string</span>[] address = mailto.Split(<span class=\"string\">','</span>);<span class=\"comment\">//收件人地址列表</span></span><br><span class=\"line\">MailMessage msg = <span class=\"keyword\">new</span> MailMessage();<span class=\"comment\">//邮件信息</span></span><br><span class=\"line\">msg.From = <span class=\"keyword\">new</span> MailAddress(mailfrom, fromwho, Encoding.UTF8);</span><br><span class=\"line\">msg.Subject = subject;<span class=\"comment\">//邮件标题</span></span><br><span class=\"line\">msg.SubjectEncoding = Encoding.UTF8;</span><br><span class=\"line\">msg.Body = body;<span class=\"comment\">//邮件正文</span></span><br><span class=\"line\">msg.BodyEncoding = Encoding.UTF8;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; address.Length; i++)</span><br><span class=\"line\">    msg.To.Add(address[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">msg.Priority = MailPriority.Normal;<span class=\"comment\">//邮件优先级(High,Low,Normal)</span></span><br><span class=\"line\"><span class=\"keyword\">try</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    smtp.Send(msg);</span><br><span class=\"line\">\tConsole.WriteLine(<span class=\"string\">\"发送成功!\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Console.WriteLine(e.Message);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">msg.Dispose();</span><br></pre></td></tr></table></figure>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><ul>\n<li>代码中所使用的密码不是邮箱密码，应在邮箱设置中获取smtp服务授权码。</li>\n<li>使用163邮箱时只能使用25端口(465/994不可用),EnableSsl属性设置为false/true</li>\n<li>使用QQ邮箱发送时只能使用25端口(465/587不可用),且EnableSsl属性必须设置为true</li>\n<li>代码使用QQ邮箱、163邮箱实测有效，其他邮箱尚不清楚</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>无论是QQ邮箱还是163邮箱，使用SSL端口发送时均出现异常：操作超时，查了好久，发现是因为:System.Net.Mail只支持显式SSL(Explicit SSL)，但是不支持隐式SSL(Implicit SSL)，QQ邮箱使用的应该是Implicit SSL。此问题似乎可以用<code>System.Web.Mail</code>或<code>Cdosys.dll</code>解决，但是还没有试过。<br>关于QQ邮箱使用25端口发送时，必须使用设置SSL为true的原因:服务器从不受保护的25端口响应请求，然后将连接抛到受保护的465端口.<br><strong>显式SSL</strong>通过25端口连接 - &gt; StartTLS（开始加密）- &gt;验证 - &gt;发送数据<br><strong>隐式SSL</strong>StartSSL（开始加密） - &gt; 连接 - &gt; 验证 - &gt;发送数据</p>\n<h2 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h2><p><a href=\"https://blog.csdn.net/andrewniu/article/details/52594318\" target=\"_blank\" rel=\"noopener\">C#发送邮件三种方法，Localhost，SMTP，SSL-SMTP</a><br><a href=\"https://blogs.msdn.microsoft.com/webdav_101/2008/06/02/system-net-mail-with-ssl-to-authenticate-against-port-465/\" target=\"_blank\" rel=\"noopener\">System.Net.Mail with SSL to authenticate against port 465</a><br><a href=\"https://support.microsoft.com/en-us/help/950260/you-cannot-use-system-net-mail-smtpclient-to-send-an-e-mail-message-wi\" target=\"_blank\" rel=\"noopener\">You cannot use System.Net.Mail.SmtpClient to send an e-mail message with Implicit SSL</a></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<p>最近写C#课程设计时需要用C#来发送邮件，但是网上搜的代码经过测试均不能使用，调试了很久也没能成功。最后索性自己对着官方文档撸了一个，期间踩了很多坑，故在此做一总结。</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li>命名空间导入:<code>using System.Net.Mail;</code></li>\n<li>在邮箱设置中开通smtp服务，并获取授权码。</li>\n</ul>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> mailfrom, password, fromwho, host, mailto, subject, body;</span><br><span class=\"line\">mailfrom = <span class=\"string\">\"xxx@qq.com\"</span>;<span class=\"comment\">//发件人</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> port = <span class=\"number\">25</span>;<span class=\"comment\">//端口号一般为25</span></span><br><span class=\"line\">password = <span class=\"string\">\"**********\"</span>;<span class=\"comment\">//邮箱密码</span></span><br><span class=\"line\">host = <span class=\"string\">\"smtp.xxx.com\"</span>;<span class=\"comment\">//主机地址</span></span><br><span class=\"line\">fromwho = <span class=\"string\">\"xxx\"</span>;<span class=\"comment\">//发件人的签名</span></span><br><span class=\"line\">mailto = <span class=\"string\">\"xxx@qq.com\"</span>;<span class=\"comment\">//收件人(多个收件人之间以英文逗号间隔)</span></span><br><span class=\"line\">subject = <span class=\"string\">\"test\"</span>;<span class=\"comment\">//邮件主题</span></span><br><span class=\"line\">body = <span class=\"string\">\"xxxxx\"</span>;<span class=\"comment\">//邮件正文</span></span><br><span class=\"line\"></span><br><span class=\"line\">SmtpClient smtp;</span><br><span class=\"line\">smtp = <span class=\"keyword\">new</span> SmtpClient(host, port);</span><br><span class=\"line\">smtp.UseDefaultCredentials = <span class=\"literal\">false</span>;</span><br><span class=\"line\">smtp.EnableSsl = <span class=\"literal\">true</span>;<span class=\"comment\">//是否使用SSL加密连接</span></span><br><span class=\"line\">smtp.DeliveryMethod = SmtpDeliveryMethod.Network;<span class=\"comment\">//指定邮件发送方式</span></span><br><span class=\"line\">smtp.Credentials = <span class=\"keyword\">new</span> System.Net.NetworkCredential(mailfrom, password); <span class=\"comment\">//设置用于验证发件人身份的凭证</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">string</span>[] address = mailto.Split(<span class=\"string\">','</span>);<span class=\"comment\">//收件人地址列表</span></span><br><span class=\"line\">MailMessage msg = <span class=\"keyword\">new</span> MailMessage();<span class=\"comment\">//邮件信息</span></span><br><span class=\"line\">msg.From = <span class=\"keyword\">new</span> MailAddress(mailfrom, fromwho, Encoding.UTF8);</span><br><span class=\"line\">msg.Subject = subject;<span class=\"comment\">//邮件标题</span></span><br><span class=\"line\">msg.SubjectEncoding = Encoding.UTF8;</span><br><span class=\"line\">msg.Body = body;<span class=\"comment\">//邮件正文</span></span><br><span class=\"line\">msg.BodyEncoding = Encoding.UTF8;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; address.Length; i++)</span><br><span class=\"line\">    msg.To.Add(address[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">msg.Priority = MailPriority.Normal;<span class=\"comment\">//邮件优先级(High,Low,Normal)</span></span><br><span class=\"line\"><span class=\"keyword\">try</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    smtp.Send(msg);</span><br><span class=\"line\">\tConsole.WriteLine(<span class=\"string\">\"发送成功!\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Console.WriteLine(e.Message);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">msg.Dispose();</span><br></pre></td></tr></table></figure>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><ul>\n<li>代码中所使用的密码不是邮箱密码，应在邮箱设置中获取smtp服务授权码。</li>\n<li>使用163邮箱时只能使用25端口(465/994不可用),EnableSsl属性设置为false/true</li>\n<li>使用QQ邮箱发送时只能使用25端口(465/587不可用),且EnableSsl属性必须设置为true</li>\n<li>代码使用QQ邮箱、163邮箱实测有效，其他邮箱尚不清楚</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>无论是QQ邮箱还是163邮箱，使用SSL端口发送时均出现异常：操作超时，查了好久，发现是因为:System.Net.Mail只支持显式SSL(Explicit SSL)，但是不支持隐式SSL(Implicit SSL)，QQ邮箱使用的应该是Implicit SSL。此问题似乎可以用<code>System.Web.Mail</code>或<code>Cdosys.dll</code>解决，但是还没有试过。<br>关于QQ邮箱使用25端口发送时，必须使用设置SSL为true的原因:服务器从不受保护的25端口响应请求，然后将连接抛到受保护的465端口.<br><strong>显式SSL</strong>通过25端口连接 - &gt; StartTLS（开始加密）- &gt;验证 - &gt;发送数据<br><strong>隐式SSL</strong>StartSSL（开始加密） - &gt; 连接 - &gt; 验证 - &gt;发送数据</p>\n<h2 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h2><p><a href=\"https://blog.csdn.net/andrewniu/article/details/52594318\" target=\"_blank\" rel=\"noopener\">C#发送邮件三种方法，Localhost，SMTP，SSL-SMTP</a><br><a href=\"https://blogs.msdn.microsoft.com/webdav_101/2008/06/02/system-net-mail-with-ssl-to-authenticate-against-port-465/\" target=\"_blank\" rel=\"noopener\">System.Net.Mail with SSL to authenticate against port 465</a><br><a href=\"https://support.microsoft.com/en-us/help/950260/you-cannot-use-system-net-mail-smtpclient-to-send-an-e-mail-message-wi\" target=\"_blank\" rel=\"noopener\">You cannot use System.Net.Mail.SmtpClient to send an e-mail message with Implicit SSL</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"C#中使用SmtpClient发送邮件","path":"3123403799.html","eyeCatchImage":null,"excerpt":null,"date":"2018-06-18T18:41:13.000Z","pv":0,"totalPV":0,"categories":"C#","tags":["C#",".NET"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Github pages个人域名添加SSL","abbrlink":18543,"date":"2018-04-10T03:08:11.000Z","_content":"## 前言\n寒假的时候用Hexo+Github pages搭建了属于自己的博客，前不久才绑定了个人域名。作为一名有强迫症的程序猿，肯定还要给自己加一个绿色的小锁头。\n在网上看别人的博客，大部分是用的[CloudFlare](https://www.cloudflare.com/)提供的免费https服务，也有采用的阿里云提供的一年免费证书，我选择的是后者。\n## 准备\n- 个人域名:[https://赵旗.top/](https://zhaoqi99.github.io/)\n- Github pages\n- 阿里云购买的SSL证书\n\n## 添加SSL证书\n1. 进入阿里云控制台，依次点击安全(云盾)->CA证书服务，然后点击右上角的购买证书。\n![](/images/20180410134416.jpg)\n2. 依次选择品牌为`Symantec`，保护类型为`一个域名`，证书类型此时会多出一个选项`免费型DV SSL`点击选择,然后点击立即购买，支付0.00元。\n![](/images/20180410134752.jpg)\n![](/images/20180410113516.jpg)\n<div class=\"note danger no-icon\"><p>注意:免费的SSL证书有效期只有一年，过期之后就需要重新申请了。\n</p></div>\n3. 支付成功后，点击进入证书控制台，然后点击`补全`，填写相关信息，提交申请。\n![](/images/20180410140626.jpg)\n![](/images/20180410113758.jpg)\n<div class=\"note warning\"><p>\n域名验证类型选项记得勾选:证书绑定的域名在【阿里云的云解析】产品中，授权系统自动添加一条记录以完成域名授权验证。\n</p></div>\n4. 等待20分钟左右，即可收到签发成功的通知了，也可以在证书控制台中实时看到审核进度。\n5. 在浏览器中输入https://域名/ ，可以看到地址栏前面有一个小绿锁，很惊喜有没有~\n![](/images/20180410140910.jpg)\n\n## http强制跳转https\n按照上述步骤添加了SSL证书后，发现如果在地址栏中输入的是https://域名/ 就会有绿锁头，如果输入的是http://域名/ ，则还是http,并不会自动跳转至https。怎样让访客点击http://域名/ 时能强制跳转到https呢？\n在Google上看了好多的博客都没能找到解决方案，突然发现Github上有一个`Enforce HTTPS`选项，抱着试一试的心态，最后竟然成功了。\n1. 登录Github，进入自己的Github.io项目中，点击`Setting`，往下拉，可以看到有个选项叫`Enforce HTTPS`,点击勾选。\n![](/images/20180410115944.jpg)\n2. 打开浏览器，在地址中输入自己的http://域名/ ，已经可以自动跳转到https下了，大功告成。\n","source":"_posts/Github pages个人域名添加SSL.md","raw":"---\ntitle: Github pages个人域名添加SSL\ncategories: Hexo\ntags:\n  - Hexo\n  - Github\nabbrlink: 18543\ndate: 2018-04-10 11:08:11\n---\n## 前言\n寒假的时候用Hexo+Github pages搭建了属于自己的博客，前不久才绑定了个人域名。作为一名有强迫症的程序猿，肯定还要给自己加一个绿色的小锁头。\n在网上看别人的博客，大部分是用的[CloudFlare](https://www.cloudflare.com/)提供的免费https服务，也有采用的阿里云提供的一年免费证书，我选择的是后者。\n## 准备\n- 个人域名:[https://赵旗.top/](https://zhaoqi99.github.io/)\n- Github pages\n- 阿里云购买的SSL证书\n\n## 添加SSL证书\n1. 进入阿里云控制台，依次点击安全(云盾)->CA证书服务，然后点击右上角的购买证书。\n![](/images/20180410134416.jpg)\n2. 依次选择品牌为`Symantec`，保护类型为`一个域名`，证书类型此时会多出一个选项`免费型DV SSL`点击选择,然后点击立即购买，支付0.00元。\n![](/images/20180410134752.jpg)\n![](/images/20180410113516.jpg)\n<div class=\"note danger no-icon\"><p>注意:免费的SSL证书有效期只有一年，过期之后就需要重新申请了。\n</p></div>\n3. 支付成功后，点击进入证书控制台，然后点击`补全`，填写相关信息，提交申请。\n![](/images/20180410140626.jpg)\n![](/images/20180410113758.jpg)\n<div class=\"note warning\"><p>\n域名验证类型选项记得勾选:证书绑定的域名在【阿里云的云解析】产品中，授权系统自动添加一条记录以完成域名授权验证。\n</p></div>\n4. 等待20分钟左右，即可收到签发成功的通知了，也可以在证书控制台中实时看到审核进度。\n5. 在浏览器中输入https://域名/ ，可以看到地址栏前面有一个小绿锁，很惊喜有没有~\n![](/images/20180410140910.jpg)\n\n## http强制跳转https\n按照上述步骤添加了SSL证书后，发现如果在地址栏中输入的是https://域名/ 就会有绿锁头，如果输入的是http://域名/ ，则还是http,并不会自动跳转至https。怎样让访客点击http://域名/ 时能强制跳转到https呢？\n在Google上看了好多的博客都没能找到解决方案，突然发现Github上有一个`Enforce HTTPS`选项，抱着试一试的心态，最后竟然成功了。\n1. 登录Github，进入自己的Github.io项目中，点击`Setting`，往下拉，可以看到有个选项叫`Enforce HTTPS`,点击勾选。\n![](/images/20180410115944.jpg)\n2. 打开浏览器，在地址中输入自己的http://域名/ ，已经可以自动跳转到https下了，大功告成。\n","slug":"Github pages个人域名添加SSL","published":1,"updated":"2019-03-28T10:45:16.802Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw7s000fkchi8jhve0a2","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>寒假的时候用Hexo+Github pages搭建了属于自己的博客，前不久才绑定了个人域名。作为一名有强迫症的程序猿，肯定还要给自己加一个绿色的小锁头。<br>在网上看别人的博客，大部分是用的<a href=\"https://www.cloudflare.com/\" target=\"_blank\" rel=\"noopener\">CloudFlare</a>提供的免费https服务，也有采用的阿里云提供的一年免费证书，我选择的是后者。</p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ul>\n<li>个人域名:<a href=\"https://zhaoqi99.github.io/\">https://赵旗.top/</a></li>\n<li>Github pages</li>\n<li>阿里云购买的SSL证书</li>\n</ul>\n<h2 id=\"添加SSL证书\"><a href=\"#添加SSL证书\" class=\"headerlink\" title=\"添加SSL证书\"></a>添加SSL证书</h2><ol>\n<li>进入阿里云控制台，依次点击安全(云盾)-&gt;CA证书服务，然后点击右上角的购买证书。<br><img src=\"/images/20180410134416.jpg\" alt></li>\n<li>依次选择品牌为<code>Symantec</code>，保护类型为<code>一个域名</code>，证书类型此时会多出一个选项<code>免费型DV SSL</code>点击选择,然后点击立即购买，支付0.00元。<br><img src=\"/images/20180410134752.jpg\" alt><br><img src=\"/images/20180410113516.jpg\" alt><div class=\"note danger no-icon\"><p>注意:免费的SSL证书有效期只有一年，过期之后就需要重新申请了。<br></p></div></li>\n<li>支付成功后，点击进入证书控制台，然后点击<code>补全</code>，填写相关信息，提交申请。<br><img src=\"/images/20180410140626.jpg\" alt><br><img src=\"/images/20180410113758.jpg\" alt><div class=\"note warning\"><p><br>域名验证类型选项记得勾选:证书绑定的域名在【阿里云的云解析】产品中，授权系统自动添加一条记录以完成域名授权验证。<br></p></div></li>\n<li>等待20分钟左右，即可收到签发成功的通知了，也可以在证书控制台中实时看到审核进度。</li>\n<li>在浏览器中输入https://域名/ ，可以看到地址栏前面有一个小绿锁，很惊喜有没有~<br><img src=\"/images/20180410140910.jpg\" alt></li>\n</ol>\n<h2 id=\"http强制跳转https\"><a href=\"#http强制跳转https\" class=\"headerlink\" title=\"http强制跳转https\"></a>http强制跳转https</h2><p>按照上述步骤添加了SSL证书后，发现如果在地址栏中输入的是https://域名/ 就会有绿锁头，如果输入的是http://域名/ ，则还是http,并不会自动跳转至https。怎样让访客点击http://域名/ 时能强制跳转到https呢？<br>在Google上看了好多的博客都没能找到解决方案，突然发现Github上有一个<code>Enforce HTTPS</code>选项，抱着试一试的心态，最后竟然成功了。</p>\n<ol>\n<li>登录Github，进入自己的Github.io项目中，点击<code>Setting</code>，往下拉，可以看到有个选项叫<code>Enforce HTTPS</code>,点击勾选。<br><img src=\"/images/20180410115944.jpg\" alt></li>\n<li>打开浏览器，在地址中输入自己的http://域名/ ，已经可以自动跳转到https下了，大功告成。</li>\n</ol>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>寒假的时候用Hexo+Github pages搭建了属于自己的博客，前不久才绑定了个人域名。作为一名有强迫症的程序猿，肯定还要给自己加一个绿色的小锁头。<br>在网上看别人的博客，大部分是用的<a href=\"https://www.cloudflare.com/\" target=\"_blank\" rel=\"noopener\">CloudFlare</a>提供的免费https服务，也有采用的阿里云提供的一年免费证书，我选择的是后者。</p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><ul>\n<li>个人域名:<a href=\"https://zhaoqi99.github.io/\">https://赵旗.top/</a></li>\n<li>Github pages</li>\n<li>阿里云购买的SSL证书</li>\n</ul>\n<h2 id=\"添加SSL证书\"><a href=\"#添加SSL证书\" class=\"headerlink\" title=\"添加SSL证书\"></a>添加SSL证书</h2><ol>\n<li>进入阿里云控制台，依次点击安全(云盾)-&gt;CA证书服务，然后点击右上角的购买证书。<br><img src=\"/images/20180410134416.jpg\" alt></li>\n<li>依次选择品牌为<code>Symantec</code>，保护类型为<code>一个域名</code>，证书类型此时会多出一个选项<code>免费型DV SSL</code>点击选择,然后点击立即购买，支付0.00元。<br><img src=\"/images/20180410134752.jpg\" alt><br><img src=\"/images/20180410113516.jpg\" alt><div class=\"note danger no-icon\"><p>注意:免费的SSL证书有效期只有一年，过期之后就需要重新申请了。<br></p></div></li>\n<li>支付成功后，点击进入证书控制台，然后点击<code>补全</code>，填写相关信息，提交申请。<br><img src=\"/images/20180410140626.jpg\" alt><br><img src=\"/images/20180410113758.jpg\" alt><div class=\"note warning\"><p><br>域名验证类型选项记得勾选:证书绑定的域名在【阿里云的云解析】产品中，授权系统自动添加一条记录以完成域名授权验证。<br></p></div></li>\n<li>等待20分钟左右，即可收到签发成功的通知了，也可以在证书控制台中实时看到审核进度。</li>\n<li>在浏览器中输入https://域名/ ，可以看到地址栏前面有一个小绿锁，很惊喜有没有~<br><img src=\"/images/20180410140910.jpg\" alt></li>\n</ol>\n<h2 id=\"http强制跳转https\"><a href=\"#http强制跳转https\" class=\"headerlink\" title=\"http强制跳转https\"></a>http强制跳转https</h2><p>按照上述步骤添加了SSL证书后，发现如果在地址栏中输入的是https://域名/ 就会有绿锁头，如果输入的是http://域名/ ，则还是http,并不会自动跳转至https。怎样让访客点击http://域名/ 时能强制跳转到https呢？<br>在Google上看了好多的博客都没能找到解决方案，突然发现Github上有一个<code>Enforce HTTPS</code>选项，抱着试一试的心态，最后竟然成功了。</p>\n<ol>\n<li>登录Github，进入自己的Github.io项目中，点击<code>Setting</code>，往下拉，可以看到有个选项叫<code>Enforce HTTPS</code>,点击勾选。<br><img src=\"/images/20180410115944.jpg\" alt></li>\n<li>打开浏览器，在地址中输入自己的http://域名/ ，已经可以自动跳转到https下了，大功告成。</li>\n</ol>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/20180410134416.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"Github pages个人域名添加SSL","path":"18543.html","eyeCatchImage":"/images/20180410134416.jpg","excerpt":null,"date":"2018-04-10T03:08:11.000Z","pv":0,"totalPV":0,"categories":"Hexo","tags":["Hexo","Github"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Hexo+Github pages博客绑定中文域名","abbrlink":24787,"date":"2018-02-12T10:48:43.000Z","_content":"## 摘要\n近期又开始了hexo的折腾，在阿里云上买了一个属于自己的域名，因此想着把自己用hexo+Github搭建的博客通过域名访问，于是按照百度上的教程一步一步来绑定域名，结果出现了很多问题 。整个过程可谓一波三折，终于实现了通过域名来访问博客，下面简要介绍一下我绑定域名过程中遇到的问题以及解决方案。\n## 购买域名\n这里以在[阿里云](https://www.aliyun.com/)上购买域名为例,大家也可以去其他平台购买域名。\n登录阿里云，点击**产品**，选择**域名注册**。\n注册域名前需查询域名是否已被注册，选择自己喜欢的域名，支付即可。\n![](/images/20180213014855.jpg)\n一般来说，.top与.xyz结尾的域名都比较便宜。为了节约成本，我买的.top结尾的域名，一年只需两块钱，很便宜。\n## 域名解析\n购买域名后，我们依次点击个人昵称->域名与网站(万网)->域名，进入管理控制台，在这里我们可以看到自己购买的域名,点击**解析**，进入解析设置。\n![](/images/20180212235815.jpg)\n点击添加解析，依次输入：**CNAME、@、Github博客地址**，点击**确定**，完成个人域名向个人博客的映射。\n![](/images/20180212230359.jpg)\n<div class=\"note warning\"><p>注意：这里填入博客地址的时候无需填写https:// ，只需按照example.github.io格式填写就行了。\n</p></div>\n\n## 创建CNAME文件\n在本地的根目录下的source文件夹中新建一个名为**CNAME**的文本文件，文件内容为**个人域名**（没有http:// ,也没有www.）,然后重命名删除该文件的后缀名:**.txt**。\n使用`hexo d -g`命令部署博客，这时在浏览器中输入新注册的域名，已经可以正常的访问博客了。\n\n### 英文域名\n英文域名就直接写:`example.con`\n### 中文域名\n中文域名的话,则需先将中文域名转换为**Punycode标准编码的字符串**:[中文域名转换Punycode标准编码工具](http://www.dh.vg/tools/zm.php)\nFor example:\n`例子.中文`经过转换为`xn--fsqu00a.xn--fiq228c`\n将`xn--****.xn--***`填入**CNAME**文件即可。\n<div class=\"note danger\"><p>如果直接在CNAME文件中填写中文域名,则Github会通过邮件提醒你:\nThe CNAME xxx.com is not properly formatted. See https://help.github.com/articles/troubleshooting-custom-domains/#github-repository-setup-errors for more information.\n</p></div>\n## LeanCloud数据丢失\n通过域名访问博客，发现文章的阅读次数不显示，于是各种折腾：检查元素、谷歌，最后发现是由于没有将新注册的域名加入到LeanCloud设置中的**Web 安全域名**,导致无法调用服务器资源。\n解决方案：访问：[LeanCloud官网](https://leancloud.cn),进入**控制台**，在设置中点击**安全中心**，将新注册的域名加入到**Web安全域名**中，点击**保存**即可。\n![](/images/20180213013700.jpg)\n\n## busuanzi数据丢失\n无论是通过域名还是github地址访问博客，博客底部的统计浏览量与浏览人次均不是以前的数据，而是从头开始计算....\nbusuanzi还不具备统初始值的功能，只能从头开始计算了。。。\n\n## 拓展\n### 中文域名\n１、一类是域名后缀为英文字母的国际中文域名和别国中文域名，比如：中文.com，中文.net，中文.biz，中文.cc，中文.hk，中文.tm，中文.tv，中文.tw；\n２、一类是域名后缀为中文的纯中文国内中文域名，比如：中文域名.中国，中文域名.公司，中文域名.网络；\n中文域名在解析的时候，需要先转换为 xn--fiq228c.com或xn--fiq228c.cn形式的ASCII码，这种编码称为PunyCode。纯中文域名不被标准的解析服务器支持，要实现对这种纯中文域名的正确访问，ISP需要做相应的修改，以便能够正确解析中文域名。同时CNNIC也提供了专用服务器，用户只要将浏览器的DNS设置指向这台服务器，它同样可以完成对纯中文域名的正确解析。另外，考虑到现在有些ISP还没有做修改，而有些用户又不方便将DNS设置指向CNNIC提供的服务器，纯中文域名会被加上.cn后缀，即对每一个纯中文域名同时有两种形式：纯中文域名和纯中文域名.CN， 如：\"中文域名.网络\"和\"中文域名.网络.CN\"。这样即使ISP还没有做相应的修改，用户也可以正确使用中文域名。\n### PunyCode\n英文域名在IIS或Apache中的虚拟主机设置，可以直接使用英文域名，如webmasterhome.cn。\n中文域名在IIS或Apache中应如何设置主机头呢？如\"中国站长之家.com\"。\n1、在进行设置之前要先把中文域名转化成为PunyCode编码，然后在主机头设置里面填上中文域名所对应的PunyCode编码(｀xn--fiqsC146Ah4ex80Cro7A.com｀)便可。\n新的国际化域名的标准在网域名称编码上，为了保留向下兼容性及不影响现有的应用程序协议，因此将多国语言域名转成ASCII编码，而这种编码称为『punycode』。\n因为经过Nameprep处理过的国际化域名是以 Unicode 序列的形式表示的。但现有的 DNS系统只支持用 ASCII字符表示的域名，所以要对Unicode序列进行 ACE(ASCII-compatible encoding)编码，把 Unicode序列表示的域名转换成 ASCII 字符串表示的ACE域名。\n2、PunyCode是一种专为国际化域名而设计的高效ACE编码方式。它可以在Unicode序列和ASCII 字符串之间进行唯一的和可逆的转换。转换的过程中，Unicode 序列中的ASCII字符保持不变，国际化字符则用字母和数字来表示。它的实质是一种用数量有限的基本字符(字母和数字)来唯一地表示大字符集(Unicode)中的字符的通用算法。域名中的字符，包括 ASCII 码和 Unicode 码，都是作为整数进行处理。\nPunyCode则是将一个经过Nameprep处理过的IDN，从一个8位的编码的形式转换为7位编码的形式。目前Internet DNS一向是7位ASCII编码的环境，经过这个PunyCode转码程序，便将IDN从一个8位的IDN转换为与现有DNS环境兼容的编码。\n3、在DNS服务器方面，需要将IDN以PunyCode的编码形式来设定。因为PunyCode本身就是一种7位的编码，与ASCII编码完全兼容，所以可适用设定于目前所有可用的DNS版本,也就是说可以不需要为了设定PunyCode而重新安装BIND新版本。但是若是需要使用DNAME指令来设定资源记录(Resource Record)，则需先提升为BIND9的版本。\n\n","source":"_posts/Hexo+Github pages博客绑定中文域名.md","raw":"---\ntitle: Hexo+Github pages博客绑定中文域名\ncategories: Hexo\ntags:\n  - Hexo\n  - Github\nabbrlink: 24787\ndate: 2018-02-12 18:48:43\n---\n## 摘要\n近期又开始了hexo的折腾，在阿里云上买了一个属于自己的域名，因此想着把自己用hexo+Github搭建的博客通过域名访问，于是按照百度上的教程一步一步来绑定域名，结果出现了很多问题 。整个过程可谓一波三折，终于实现了通过域名来访问博客，下面简要介绍一下我绑定域名过程中遇到的问题以及解决方案。\n## 购买域名\n这里以在[阿里云](https://www.aliyun.com/)上购买域名为例,大家也可以去其他平台购买域名。\n登录阿里云，点击**产品**，选择**域名注册**。\n注册域名前需查询域名是否已被注册，选择自己喜欢的域名，支付即可。\n![](/images/20180213014855.jpg)\n一般来说，.top与.xyz结尾的域名都比较便宜。为了节约成本，我买的.top结尾的域名，一年只需两块钱，很便宜。\n## 域名解析\n购买域名后，我们依次点击个人昵称->域名与网站(万网)->域名，进入管理控制台，在这里我们可以看到自己购买的域名,点击**解析**，进入解析设置。\n![](/images/20180212235815.jpg)\n点击添加解析，依次输入：**CNAME、@、Github博客地址**，点击**确定**，完成个人域名向个人博客的映射。\n![](/images/20180212230359.jpg)\n<div class=\"note warning\"><p>注意：这里填入博客地址的时候无需填写https:// ，只需按照example.github.io格式填写就行了。\n</p></div>\n\n## 创建CNAME文件\n在本地的根目录下的source文件夹中新建一个名为**CNAME**的文本文件，文件内容为**个人域名**（没有http:// ,也没有www.）,然后重命名删除该文件的后缀名:**.txt**。\n使用`hexo d -g`命令部署博客，这时在浏览器中输入新注册的域名，已经可以正常的访问博客了。\n\n### 英文域名\n英文域名就直接写:`example.con`\n### 中文域名\n中文域名的话,则需先将中文域名转换为**Punycode标准编码的字符串**:[中文域名转换Punycode标准编码工具](http://www.dh.vg/tools/zm.php)\nFor example:\n`例子.中文`经过转换为`xn--fsqu00a.xn--fiq228c`\n将`xn--****.xn--***`填入**CNAME**文件即可。\n<div class=\"note danger\"><p>如果直接在CNAME文件中填写中文域名,则Github会通过邮件提醒你:\nThe CNAME xxx.com is not properly formatted. See https://help.github.com/articles/troubleshooting-custom-domains/#github-repository-setup-errors for more information.\n</p></div>\n## LeanCloud数据丢失\n通过域名访问博客，发现文章的阅读次数不显示，于是各种折腾：检查元素、谷歌，最后发现是由于没有将新注册的域名加入到LeanCloud设置中的**Web 安全域名**,导致无法调用服务器资源。\n解决方案：访问：[LeanCloud官网](https://leancloud.cn),进入**控制台**，在设置中点击**安全中心**，将新注册的域名加入到**Web安全域名**中，点击**保存**即可。\n![](/images/20180213013700.jpg)\n\n## busuanzi数据丢失\n无论是通过域名还是github地址访问博客，博客底部的统计浏览量与浏览人次均不是以前的数据，而是从头开始计算....\nbusuanzi还不具备统初始值的功能，只能从头开始计算了。。。\n\n## 拓展\n### 中文域名\n１、一类是域名后缀为英文字母的国际中文域名和别国中文域名，比如：中文.com，中文.net，中文.biz，中文.cc，中文.hk，中文.tm，中文.tv，中文.tw；\n２、一类是域名后缀为中文的纯中文国内中文域名，比如：中文域名.中国，中文域名.公司，中文域名.网络；\n中文域名在解析的时候，需要先转换为 xn--fiq228c.com或xn--fiq228c.cn形式的ASCII码，这种编码称为PunyCode。纯中文域名不被标准的解析服务器支持，要实现对这种纯中文域名的正确访问，ISP需要做相应的修改，以便能够正确解析中文域名。同时CNNIC也提供了专用服务器，用户只要将浏览器的DNS设置指向这台服务器，它同样可以完成对纯中文域名的正确解析。另外，考虑到现在有些ISP还没有做修改，而有些用户又不方便将DNS设置指向CNNIC提供的服务器，纯中文域名会被加上.cn后缀，即对每一个纯中文域名同时有两种形式：纯中文域名和纯中文域名.CN， 如：\"中文域名.网络\"和\"中文域名.网络.CN\"。这样即使ISP还没有做相应的修改，用户也可以正确使用中文域名。\n### PunyCode\n英文域名在IIS或Apache中的虚拟主机设置，可以直接使用英文域名，如webmasterhome.cn。\n中文域名在IIS或Apache中应如何设置主机头呢？如\"中国站长之家.com\"。\n1、在进行设置之前要先把中文域名转化成为PunyCode编码，然后在主机头设置里面填上中文域名所对应的PunyCode编码(｀xn--fiqsC146Ah4ex80Cro7A.com｀)便可。\n新的国际化域名的标准在网域名称编码上，为了保留向下兼容性及不影响现有的应用程序协议，因此将多国语言域名转成ASCII编码，而这种编码称为『punycode』。\n因为经过Nameprep处理过的国际化域名是以 Unicode 序列的形式表示的。但现有的 DNS系统只支持用 ASCII字符表示的域名，所以要对Unicode序列进行 ACE(ASCII-compatible encoding)编码，把 Unicode序列表示的域名转换成 ASCII 字符串表示的ACE域名。\n2、PunyCode是一种专为国际化域名而设计的高效ACE编码方式。它可以在Unicode序列和ASCII 字符串之间进行唯一的和可逆的转换。转换的过程中，Unicode 序列中的ASCII字符保持不变，国际化字符则用字母和数字来表示。它的实质是一种用数量有限的基本字符(字母和数字)来唯一地表示大字符集(Unicode)中的字符的通用算法。域名中的字符，包括 ASCII 码和 Unicode 码，都是作为整数进行处理。\nPunyCode则是将一个经过Nameprep处理过的IDN，从一个8位的编码的形式转换为7位编码的形式。目前Internet DNS一向是7位ASCII编码的环境，经过这个PunyCode转码程序，便将IDN从一个8位的IDN转换为与现有DNS环境兼容的编码。\n3、在DNS服务器方面，需要将IDN以PunyCode的编码形式来设定。因为PunyCode本身就是一种7位的编码，与ASCII编码完全兼容，所以可适用设定于目前所有可用的DNS版本,也就是说可以不需要为了设定PunyCode而重新安装BIND新版本。但是若是需要使用DNAME指令来设定资源记录(Resource Record)，则需先提升为BIND9的版本。\n\n","slug":"Hexo+Github pages博客绑定中文域名","published":1,"updated":"2019-03-28T10:45:16.803Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw7x000kkchi4pgh6xw0","content":"<h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>近期又开始了hexo的折腾，在阿里云上买了一个属于自己的域名，因此想着把自己用hexo+Github搭建的博客通过域名访问，于是按照百度上的教程一步一步来绑定域名，结果出现了很多问题 。整个过程可谓一波三折，终于实现了通过域名来访问博客，下面简要介绍一下我绑定域名过程中遇到的问题以及解决方案。</p>\n<h2 id=\"购买域名\"><a href=\"#购买域名\" class=\"headerlink\" title=\"购买域名\"></a>购买域名</h2><p>这里以在<a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"noopener\">阿里云</a>上购买域名为例,大家也可以去其他平台购买域名。<br>登录阿里云，点击<strong>产品</strong>，选择<strong>域名注册</strong>。<br>注册域名前需查询域名是否已被注册，选择自己喜欢的域名，支付即可。<br><img src=\"/images/20180213014855.jpg\" alt><br>一般来说，.top与.xyz结尾的域名都比较便宜。为了节约成本，我买的.top结尾的域名，一年只需两块钱，很便宜。</p>\n<h2 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h2><p>购买域名后，我们依次点击个人昵称-&gt;域名与网站(万网)-&gt;域名，进入管理控制台，在这里我们可以看到自己购买的域名,点击<strong>解析</strong>，进入解析设置。<br><img src=\"/images/20180212235815.jpg\" alt><br>点击添加解析，依次输入：<strong>CNAME、@、Github博客地址</strong>，点击<strong>确定</strong>，完成个人域名向个人博客的映射。<br><img src=\"/images/20180212230359.jpg\" alt></p>\n<div class=\"note warning\"><p>注意：这里填入博客地址的时候无需填写https:// ，只需按照example.github.io格式填写就行了。<br></p></div>\n\n<h2 id=\"创建CNAME文件\"><a href=\"#创建CNAME文件\" class=\"headerlink\" title=\"创建CNAME文件\"></a>创建CNAME文件</h2><p>在本地的根目录下的source文件夹中新建一个名为<strong>CNAME</strong>的文本文件，文件内容为<strong>个人域名</strong>（没有http:// ,也没有www.）,然后重命名删除该文件的后缀名:<strong>.txt</strong>。<br>使用<code>hexo d -g</code>命令部署博客，这时在浏览器中输入新注册的域名，已经可以正常的访问博客了。</p>\n<h3 id=\"英文域名\"><a href=\"#英文域名\" class=\"headerlink\" title=\"英文域名\"></a>英文域名</h3><p>英文域名就直接写:<code>example.con</code></p>\n<h3 id=\"中文域名\"><a href=\"#中文域名\" class=\"headerlink\" title=\"中文域名\"></a>中文域名</h3><p>中文域名的话,则需先将中文域名转换为<strong>Punycode标准编码的字符串</strong>:<a href=\"http://www.dh.vg/tools/zm.php\" target=\"_blank\" rel=\"noopener\">中文域名转换Punycode标准编码工具</a><br>For example:<br><code>例子.中文</code>经过转换为<code>xn--fsqu00a.xn--fiq228c</code><br>将<code>xn--****.xn--***</code>填入<strong>CNAME</strong>文件即可。</p>\n<p><div class=\"note danger\"><p>如果直接在CNAME文件中填写中文域名,则Github会通过邮件提醒你:<br>The CNAME xxx.com is not properly formatted. See <a href=\"https://help.github.com/articles/troubleshooting-custom-domains/#github-repository-setup-errors\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/troubleshooting-custom-domains/#github-repository-setup-errors</a> for more information.<br></p></div></p>\n<h2 id=\"LeanCloud数据丢失\"><a href=\"#LeanCloud数据丢失\" class=\"headerlink\" title=\"LeanCloud数据丢失\"></a>LeanCloud数据丢失</h2><p>通过域名访问博客，发现文章的阅读次数不显示，于是各种折腾：检查元素、谷歌，最后发现是由于没有将新注册的域名加入到LeanCloud设置中的<strong>Web 安全域名</strong>,导致无法调用服务器资源。<br>解决方案：访问：<a href=\"https://leancloud.cn\" target=\"_blank\" rel=\"noopener\">LeanCloud官网</a>,进入<strong>控制台</strong>，在设置中点击<strong>安全中心</strong>，将新注册的域名加入到<strong>Web安全域名</strong>中，点击<strong>保存</strong>即可。<br><img src=\"/images/20180213013700.jpg\" alt></p>\n<h2 id=\"busuanzi数据丢失\"><a href=\"#busuanzi数据丢失\" class=\"headerlink\" title=\"busuanzi数据丢失\"></a>busuanzi数据丢失</h2><p>无论是通过域名还是github地址访问博客，博客底部的统计浏览量与浏览人次均不是以前的数据，而是从头开始计算….<br>busuanzi还不具备统初始值的功能，只能从头开始计算了。。。</p>\n<h2 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h2><h3 id=\"中文域名-1\"><a href=\"#中文域名-1\" class=\"headerlink\" title=\"中文域名\"></a>中文域名</h3><p>１、一类是域名后缀为英文字母的国际中文域名和别国中文域名，比如：中文.com，中文.net，中文.biz，中文.cc，中文.hk，中文.tm，中文.tv，中文.tw；<br>２、一类是域名后缀为中文的纯中文国内中文域名，比如：中文域名.中国，中文域名.公司，中文域名.网络；<br>中文域名在解析的时候，需要先转换为 xn–fiq228c.com或xn–fiq228c.cn形式的ASCII码，这种编码称为PunyCode。纯中文域名不被标准的解析服务器支持，要实现对这种纯中文域名的正确访问，ISP需要做相应的修改，以便能够正确解析中文域名。同时CNNIC也提供了专用服务器，用户只要将浏览器的DNS设置指向这台服务器，它同样可以完成对纯中文域名的正确解析。另外，考虑到现在有些ISP还没有做修改，而有些用户又不方便将DNS设置指向CNNIC提供的服务器，纯中文域名会被加上.cn后缀，即对每一个纯中文域名同时有两种形式：纯中文域名和纯中文域名.CN， 如：”中文域名.网络”和”中文域名.网络.CN”。这样即使ISP还没有做相应的修改，用户也可以正确使用中文域名。</p>\n<h3 id=\"PunyCode\"><a href=\"#PunyCode\" class=\"headerlink\" title=\"PunyCode\"></a>PunyCode</h3><p>英文域名在IIS或Apache中的虚拟主机设置，可以直接使用英文域名，如webmasterhome.cn。<br>中文域名在IIS或Apache中应如何设置主机头呢？如”中国站长之家.com”。<br>1、在进行设置之前要先把中文域名转化成为PunyCode编码，然后在主机头设置里面填上中文域名所对应的PunyCode编码(｀xn–fiqsC146Ah4ex80Cro7A.com｀)便可。<br>新的国际化域名的标准在网域名称编码上，为了保留向下兼容性及不影响现有的应用程序协议，因此将多国语言域名转成ASCII编码，而这种编码称为『punycode』。<br>因为经过Nameprep处理过的国际化域名是以 Unicode 序列的形式表示的。但现有的 DNS系统只支持用 ASCII字符表示的域名，所以要对Unicode序列进行 ACE(ASCII-compatible encoding)编码，把 Unicode序列表示的域名转换成 ASCII 字符串表示的ACE域名。<br>2、PunyCode是一种专为国际化域名而设计的高效ACE编码方式。它可以在Unicode序列和ASCII 字符串之间进行唯一的和可逆的转换。转换的过程中，Unicode 序列中的ASCII字符保持不变，国际化字符则用字母和数字来表示。它的实质是一种用数量有限的基本字符(字母和数字)来唯一地表示大字符集(Unicode)中的字符的通用算法。域名中的字符，包括 ASCII 码和 Unicode 码，都是作为整数进行处理。<br>PunyCode则是将一个经过Nameprep处理过的IDN，从一个8位的编码的形式转换为7位编码的形式。目前Internet DNS一向是7位ASCII编码的环境，经过这个PunyCode转码程序，便将IDN从一个8位的IDN转换为与现有DNS环境兼容的编码。<br>3、在DNS服务器方面，需要将IDN以PunyCode的编码形式来设定。因为PunyCode本身就是一种7位的编码，与ASCII编码完全兼容，所以可适用设定于目前所有可用的DNS版本,也就是说可以不需要为了设定PunyCode而重新安装BIND新版本。但是若是需要使用DNAME指令来设定资源记录(Resource Record)，则需先提升为BIND9的版本。</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>近期又开始了hexo的折腾，在阿里云上买了一个属于自己的域名，因此想着把自己用hexo+Github搭建的博客通过域名访问，于是按照百度上的教程一步一步来绑定域名，结果出现了很多问题 。整个过程可谓一波三折，终于实现了通过域名来访问博客，下面简要介绍一下我绑定域名过程中遇到的问题以及解决方案。</p>\n<h2 id=\"购买域名\"><a href=\"#购买域名\" class=\"headerlink\" title=\"购买域名\"></a>购买域名</h2><p>这里以在<a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"noopener\">阿里云</a>上购买域名为例,大家也可以去其他平台购买域名。<br>登录阿里云，点击<strong>产品</strong>，选择<strong>域名注册</strong>。<br>注册域名前需查询域名是否已被注册，选择自己喜欢的域名，支付即可。<br><img src=\"/images/20180213014855.jpg\" alt><br>一般来说，.top与.xyz结尾的域名都比较便宜。为了节约成本，我买的.top结尾的域名，一年只需两块钱，很便宜。</p>\n<h2 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h2><p>购买域名后，我们依次点击个人昵称-&gt;域名与网站(万网)-&gt;域名，进入管理控制台，在这里我们可以看到自己购买的域名,点击<strong>解析</strong>，进入解析设置。<br><img src=\"/images/20180212235815.jpg\" alt><br>点击添加解析，依次输入：<strong>CNAME、@、Github博客地址</strong>，点击<strong>确定</strong>，完成个人域名向个人博客的映射。<br><img src=\"/images/20180212230359.jpg\" alt></p>\n<div class=\"note warning\"><p>注意：这里填入博客地址的时候无需填写https:// ，只需按照example.github.io格式填写就行了。<br></p></div>\n\n<h2 id=\"创建CNAME文件\"><a href=\"#创建CNAME文件\" class=\"headerlink\" title=\"创建CNAME文件\"></a>创建CNAME文件</h2><p>在本地的根目录下的source文件夹中新建一个名为<strong>CNAME</strong>的文本文件，文件内容为<strong>个人域名</strong>（没有http:// ,也没有www.）,然后重命名删除该文件的后缀名:<strong>.txt</strong>。<br>使用<code>hexo d -g</code>命令部署博客，这时在浏览器中输入新注册的域名，已经可以正常的访问博客了。</p>\n<h3 id=\"英文域名\"><a href=\"#英文域名\" class=\"headerlink\" title=\"英文域名\"></a>英文域名</h3><p>英文域名就直接写:<code>example.con</code></p>\n<h3 id=\"中文域名\"><a href=\"#中文域名\" class=\"headerlink\" title=\"中文域名\"></a>中文域名</h3><p>中文域名的话,则需先将中文域名转换为<strong>Punycode标准编码的字符串</strong>:<a href=\"http://www.dh.vg/tools/zm.php\" target=\"_blank\" rel=\"noopener\">中文域名转换Punycode标准编码工具</a><br>For example:<br><code>例子.中文</code>经过转换为<code>xn--fsqu00a.xn--fiq228c</code><br>将<code>xn--****.xn--***</code>填入<strong>CNAME</strong>文件即可。</p>\n<p><div class=\"note danger\"><p>如果直接在CNAME文件中填写中文域名,则Github会通过邮件提醒你:<br>The CNAME xxx.com is not properly formatted. See <a href=\"https://help.github.com/articles/troubleshooting-custom-domains/#github-repository-setup-errors\" target=\"_blank\" rel=\"noopener\">https://help.github.com/articles/troubleshooting-custom-domains/#github-repository-setup-errors</a> for more information.<br></p></div></p>\n<h2 id=\"LeanCloud数据丢失\"><a href=\"#LeanCloud数据丢失\" class=\"headerlink\" title=\"LeanCloud数据丢失\"></a>LeanCloud数据丢失</h2><p>通过域名访问博客，发现文章的阅读次数不显示，于是各种折腾：检查元素、谷歌，最后发现是由于没有将新注册的域名加入到LeanCloud设置中的<strong>Web 安全域名</strong>,导致无法调用服务器资源。<br>解决方案：访问：<a href=\"https://leancloud.cn\" target=\"_blank\" rel=\"noopener\">LeanCloud官网</a>,进入<strong>控制台</strong>，在设置中点击<strong>安全中心</strong>，将新注册的域名加入到<strong>Web安全域名</strong>中，点击<strong>保存</strong>即可。<br><img src=\"/images/20180213013700.jpg\" alt></p>\n<h2 id=\"busuanzi数据丢失\"><a href=\"#busuanzi数据丢失\" class=\"headerlink\" title=\"busuanzi数据丢失\"></a>busuanzi数据丢失</h2><p>无论是通过域名还是github地址访问博客，博客底部的统计浏览量与浏览人次均不是以前的数据，而是从头开始计算….<br>busuanzi还不具备统初始值的功能，只能从头开始计算了。。。</p>\n<h2 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h2><h3 id=\"中文域名-1\"><a href=\"#中文域名-1\" class=\"headerlink\" title=\"中文域名\"></a>中文域名</h3><p>１、一类是域名后缀为英文字母的国际中文域名和别国中文域名，比如：中文.com，中文.net，中文.biz，中文.cc，中文.hk，中文.tm，中文.tv，中文.tw；<br>２、一类是域名后缀为中文的纯中文国内中文域名，比如：中文域名.中国，中文域名.公司，中文域名.网络；<br>中文域名在解析的时候，需要先转换为 xn–fiq228c.com或xn–fiq228c.cn形式的ASCII码，这种编码称为PunyCode。纯中文域名不被标准的解析服务器支持，要实现对这种纯中文域名的正确访问，ISP需要做相应的修改，以便能够正确解析中文域名。同时CNNIC也提供了专用服务器，用户只要将浏览器的DNS设置指向这台服务器，它同样可以完成对纯中文域名的正确解析。另外，考虑到现在有些ISP还没有做修改，而有些用户又不方便将DNS设置指向CNNIC提供的服务器，纯中文域名会被加上.cn后缀，即对每一个纯中文域名同时有两种形式：纯中文域名和纯中文域名.CN， 如：”中文域名.网络”和”中文域名.网络.CN”。这样即使ISP还没有做相应的修改，用户也可以正确使用中文域名。</p>\n<h3 id=\"PunyCode\"><a href=\"#PunyCode\" class=\"headerlink\" title=\"PunyCode\"></a>PunyCode</h3><p>英文域名在IIS或Apache中的虚拟主机设置，可以直接使用英文域名，如webmasterhome.cn。<br>中文域名在IIS或Apache中应如何设置主机头呢？如”中国站长之家.com”。<br>1、在进行设置之前要先把中文域名转化成为PunyCode编码，然后在主机头设置里面填上中文域名所对应的PunyCode编码(｀xn–fiqsC146Ah4ex80Cro7A.com｀)便可。<br>新的国际化域名的标准在网域名称编码上，为了保留向下兼容性及不影响现有的应用程序协议，因此将多国语言域名转成ASCII编码，而这种编码称为『punycode』。<br>因为经过Nameprep处理过的国际化域名是以 Unicode 序列的形式表示的。但现有的 DNS系统只支持用 ASCII字符表示的域名，所以要对Unicode序列进行 ACE(ASCII-compatible encoding)编码，把 Unicode序列表示的域名转换成 ASCII 字符串表示的ACE域名。<br>2、PunyCode是一种专为国际化域名而设计的高效ACE编码方式。它可以在Unicode序列和ASCII 字符串之间进行唯一的和可逆的转换。转换的过程中，Unicode 序列中的ASCII字符保持不变，国际化字符则用字母和数字来表示。它的实质是一种用数量有限的基本字符(字母和数字)来唯一地表示大字符集(Unicode)中的字符的通用算法。域名中的字符，包括 ASCII 码和 Unicode 码，都是作为整数进行处理。<br>PunyCode则是将一个经过Nameprep处理过的IDN，从一个8位的编码的形式转换为7位编码的形式。目前Internet DNS一向是7位ASCII编码的环境，经过这个PunyCode转码程序，便将IDN从一个8位的IDN转换为与现有DNS环境兼容的编码。<br>3、在DNS服务器方面，需要将IDN以PunyCode的编码形式来设定。因为PunyCode本身就是一种7位的编码，与ASCII编码完全兼容，所以可适用设定于目前所有可用的DNS版本,也就是说可以不需要为了设定PunyCode而重新安装BIND新版本。但是若是需要使用DNAME指令来设定资源记录(Resource Record)，则需先提升为BIND9的版本。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/20180213014855.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"Hexo+Github pages博客绑定中文域名","path":"24787.html","eyeCatchImage":"/images/20180213014855.jpg","excerpt":null,"date":"2018-02-12T10:48:43.000Z","pv":0,"totalPV":0,"categories":"Hexo","tags":["Hexo","Github"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"L2-3.名人堂与代金券","abbrlink":45393,"date":"2018-04-01T14:46:11.000Z","_content":"## 题目内容\n对于在中国大学MOOC(http://www.icourse163.org/) 学习“数据结构”课程的学生，想要获得一张合格证书，总评成绩必须达到 60 分及以上，并且有另加福利：总评分在 [G, 100] 区间内者，可以得到 50 元 PAT 代金券；在 [60, G) 区间内者，可以得到 20 元PAT代金券。全国考点通用，一年有效。同时任课老师还会把总评成绩前 K 名的学生列入课程“名人堂”。本题就请你编写程序，帮助老师列出名人堂的学生，并统计一共发出了面值多少元的 PAT 代金券。\n## 输入格式\n输入在第一行给出 3 个整数，分别是 N（不超过 10 000 的正整数，为学生总数）、G（在 (60,100) 区间内的整数，为题面中描述的代金券等级分界线）、K（不超过 100 且不超过 N 的正整数，为进入名人堂的最低名次）。接下来 N 行，每行给出一位学生的账号（长度不超过15位、不带空格的字符串）和总评成绩（区间 [0, 100] 内的整数），其间以空格分隔。题目保证没有重复的账号。 \n## 输出格式\n首先在一行中输出发出的 PAT 代金券的总面值。然后按总评成绩非升序输出进入名人堂的学生的名次、账号和成绩，其间以 1 个空格分隔。需要注意的是：成绩相同的学生享有并列的排名，排名并列时，按账号的字母序升序输出。\n## 输入样例\n<div class=\"note default no-icon\"><p>\n10 80 5\ncy@zju.edu.cn 78\ncy@pat-edu.com 87\n1001@qq.com 65\nuh-oh@163.com 96\ntest@126.com 39\nanyone@qq.com 87\nzoe@mit.edu 80\njack@ucla.edu 88\nbob@cmu.edu 80\nken@163.com 70\n</p></div>\n\n## 输出样例\n<div class=\"note default no-icon\"><p>\n360\n1 uh-oh@163.com 96\n2 jack@ucla.edu 88\n3 anyone@qq.com 87\n3 cy@pat-edu.com 87\n5 bob@cmu.edu 80\n5 zoe@mit.edu 80\n</p></div>\n\n**时间限制：150ms内存限制：65536kb**\n## 代码\n\n### 解法一\n用一个结构体来存姓名和成绩，再用自定义的比较函数sort一下。\n```C++\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct stu\n{\n    string name;\n    int grade;\n};\nbool cmp(const stu& s1, const stu& s2)\n{\n    if(s1.grade != s2.grade)\n        return s1.grade > s2.grade;\n    else\n        return s1.name < s2.name;\n}\n\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    cin.sync_with_stdio(false);\n    int n, g, k;\n    cin >> n >> g >> k;\n    vector<stu> v;\n    ll ans = 0;\n    for(int i = 0; i < n; i++)\n    {\n        string temp1;\n        int temp2;\n        cin >> temp1 >> temp2;\n        stu temp;\n        temp.name = temp1;\n        temp.grade = temp2;\n        v.push_back(temp);\n\n        if(temp2 >= 60)\n        {\n            if(temp2 < g)\n                ans += 20;\n            else\n                ans += 50;\n        }\n    }\n    cout << ans << endl;\n\n    int index = 1;\n    int number = 1;\n    sort(v.begin(), v.end(), cmp);\n    vector<stu>::iterator t;\n    ll flag = v[0].grade;\n    for(t = v.begin(); t != v.end(); t++)\n    {\n        if(flag != (*t).grade)\n        {\n            flag = (*t).grade;\n            index = number;\n        }\n        if(index > k)\n            break;\n        cout << index << \" \" << (*t).name << \" \" << (*t).grade << endl;\n        number++;\n    }\n    return 0;\n}\n```\n### 解法二\n用一个map&lt;string,name&gt;来存name和grade,将map转存到vcetor到中进行排序。\n比赛的时候好蠢好蠢的做法，后面会说。\n```C++\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nbool cmp (const pair<string,int>& a,const pair<string,int>& b)\n{\n    if(a.second!=b.second)\n        return a.second>b.second;\n    else\n        return a.first<b.first;\n}\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    cin.sync_with_stdio(false);\n    int n,g,k;\n    cin>>n>>g>>k;\n    map<string,int> m;\n    ll ans=0;\n    for(int i=0;i<n;i++)\n    {\n        string temp1;\n        int temp2;\n        cin>>temp1>>temp2;\n        m.insert(pair<string,int>(temp1,temp2));\n        if(temp2>=60)\n        {\n            if(temp2<g)\n                ans+=20;\n            else\n                ans+=50;\n        }\n    }\n    cout<<ans<<endl;\n\n    vector<pair<string,int>> mm(m.begin(),m.end());//map转存至vector\n    sort(mm.begin(),mm.end(),cmp);\n\n    int index=1;\n    int number=1;\n    vector<pair<string,int>>::iterator t=mm.begin();\n    ll flag=(*t).second;\n    for(t=mm.begin();t!=mm.end();t++)\n    {\n        if(flag!=(*t).second)\n        {\n            flag=(*t).second;\n            index=number;\n        }\n        if(index>k)\n            break;\n        cout<<index<<\" \"<<(*t).first<<\" \"<<(*t).second<<endl;\n        number++;\n    }\n    return 0;\n}\n```\n## 总结\n比赛的时候没看清题意，上来就直接一个map，快写完了的时候才发现不对，然后就突发奇想的对map进行sort，但是编译的时候比较函数那一行一直报错。我到现在都不清楚为什么比赛的时候要一直死磕对map按照value进行sort，就是懒得改成结构体加vector，结果直到比赛结束前几分钟才开始改，虽然改完了可惜没时间交了。\n回到宿舍终于在网上找到了对map进行sort的方法：将map转存至vector中，然后sort。`vector<pair<string,int>> mm(m.begin(),m.end());`但是还是用结构体加vector方便啊。\n还是自己菜啊.......\n<div class=\"note warning\"><p>\n注意：STL库中的sort函数只能对线性存储的对象进行排序,如:vector、array、list、deque,不能对集合容器进行排序,如:set、map;\n</p></div>\n\n参考博客:[C++ STL中Map的按Key排序和按Value排序](https://blog.csdn.net/iicy266/article/details/11906189)","source":"_posts/L2-3.名人堂与代金券.md","raw":"---\ntitle: L2-3.名人堂与代金券\ncategories: CCCC天梯赛\ntags:\n  - CCCC天梯赛\nabbrlink: 45393\ndate: 2018-04-01 22:46:11\n---\n## 题目内容\n对于在中国大学MOOC(http://www.icourse163.org/) 学习“数据结构”课程的学生，想要获得一张合格证书，总评成绩必须达到 60 分及以上，并且有另加福利：总评分在 [G, 100] 区间内者，可以得到 50 元 PAT 代金券；在 [60, G) 区间内者，可以得到 20 元PAT代金券。全国考点通用，一年有效。同时任课老师还会把总评成绩前 K 名的学生列入课程“名人堂”。本题就请你编写程序，帮助老师列出名人堂的学生，并统计一共发出了面值多少元的 PAT 代金券。\n## 输入格式\n输入在第一行给出 3 个整数，分别是 N（不超过 10 000 的正整数，为学生总数）、G（在 (60,100) 区间内的整数，为题面中描述的代金券等级分界线）、K（不超过 100 且不超过 N 的正整数，为进入名人堂的最低名次）。接下来 N 行，每行给出一位学生的账号（长度不超过15位、不带空格的字符串）和总评成绩（区间 [0, 100] 内的整数），其间以空格分隔。题目保证没有重复的账号。 \n## 输出格式\n首先在一行中输出发出的 PAT 代金券的总面值。然后按总评成绩非升序输出进入名人堂的学生的名次、账号和成绩，其间以 1 个空格分隔。需要注意的是：成绩相同的学生享有并列的排名，排名并列时，按账号的字母序升序输出。\n## 输入样例\n<div class=\"note default no-icon\"><p>\n10 80 5\ncy@zju.edu.cn 78\ncy@pat-edu.com 87\n1001@qq.com 65\nuh-oh@163.com 96\ntest@126.com 39\nanyone@qq.com 87\nzoe@mit.edu 80\njack@ucla.edu 88\nbob@cmu.edu 80\nken@163.com 70\n</p></div>\n\n## 输出样例\n<div class=\"note default no-icon\"><p>\n360\n1 uh-oh@163.com 96\n2 jack@ucla.edu 88\n3 anyone@qq.com 87\n3 cy@pat-edu.com 87\n5 bob@cmu.edu 80\n5 zoe@mit.edu 80\n</p></div>\n\n**时间限制：150ms内存限制：65536kb**\n## 代码\n\n### 解法一\n用一个结构体来存姓名和成绩，再用自定义的比较函数sort一下。\n```C++\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nstruct stu\n{\n    string name;\n    int grade;\n};\nbool cmp(const stu& s1, const stu& s2)\n{\n    if(s1.grade != s2.grade)\n        return s1.grade > s2.grade;\n    else\n        return s1.name < s2.name;\n}\n\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    cin.sync_with_stdio(false);\n    int n, g, k;\n    cin >> n >> g >> k;\n    vector<stu> v;\n    ll ans = 0;\n    for(int i = 0; i < n; i++)\n    {\n        string temp1;\n        int temp2;\n        cin >> temp1 >> temp2;\n        stu temp;\n        temp.name = temp1;\n        temp.grade = temp2;\n        v.push_back(temp);\n\n        if(temp2 >= 60)\n        {\n            if(temp2 < g)\n                ans += 20;\n            else\n                ans += 50;\n        }\n    }\n    cout << ans << endl;\n\n    int index = 1;\n    int number = 1;\n    sort(v.begin(), v.end(), cmp);\n    vector<stu>::iterator t;\n    ll flag = v[0].grade;\n    for(t = v.begin(); t != v.end(); t++)\n    {\n        if(flag != (*t).grade)\n        {\n            flag = (*t).grade;\n            index = number;\n        }\n        if(index > k)\n            break;\n        cout << index << \" \" << (*t).name << \" \" << (*t).grade << endl;\n        number++;\n    }\n    return 0;\n}\n```\n### 解法二\n用一个map&lt;string,name&gt;来存name和grade,将map转存到vcetor到中进行排序。\n比赛的时候好蠢好蠢的做法，后面会说。\n```C++\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nbool cmp (const pair<string,int>& a,const pair<string,int>& b)\n{\n    if(a.second!=b.second)\n        return a.second>b.second;\n    else\n        return a.first<b.first;\n}\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    cin.sync_with_stdio(false);\n    int n,g,k;\n    cin>>n>>g>>k;\n    map<string,int> m;\n    ll ans=0;\n    for(int i=0;i<n;i++)\n    {\n        string temp1;\n        int temp2;\n        cin>>temp1>>temp2;\n        m.insert(pair<string,int>(temp1,temp2));\n        if(temp2>=60)\n        {\n            if(temp2<g)\n                ans+=20;\n            else\n                ans+=50;\n        }\n    }\n    cout<<ans<<endl;\n\n    vector<pair<string,int>> mm(m.begin(),m.end());//map转存至vector\n    sort(mm.begin(),mm.end(),cmp);\n\n    int index=1;\n    int number=1;\n    vector<pair<string,int>>::iterator t=mm.begin();\n    ll flag=(*t).second;\n    for(t=mm.begin();t!=mm.end();t++)\n    {\n        if(flag!=(*t).second)\n        {\n            flag=(*t).second;\n            index=number;\n        }\n        if(index>k)\n            break;\n        cout<<index<<\" \"<<(*t).first<<\" \"<<(*t).second<<endl;\n        number++;\n    }\n    return 0;\n}\n```\n## 总结\n比赛的时候没看清题意，上来就直接一个map，快写完了的时候才发现不对，然后就突发奇想的对map进行sort，但是编译的时候比较函数那一行一直报错。我到现在都不清楚为什么比赛的时候要一直死磕对map按照value进行sort，就是懒得改成结构体加vector，结果直到比赛结束前几分钟才开始改，虽然改完了可惜没时间交了。\n回到宿舍终于在网上找到了对map进行sort的方法：将map转存至vector中，然后sort。`vector<pair<string,int>> mm(m.begin(),m.end());`但是还是用结构体加vector方便啊。\n还是自己菜啊.......\n<div class=\"note warning\"><p>\n注意：STL库中的sort函数只能对线性存储的对象进行排序,如:vector、array、list、deque,不能对集合容器进行排序,如:set、map;\n</p></div>\n\n参考博客:[C++ STL中Map的按Key排序和按Value排序](https://blog.csdn.net/iicy266/article/details/11906189)","slug":"L2-3.名人堂与代金券","published":1,"updated":"2019-03-28T10:45:16.804Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw7z000mkchinny0fwu3","content":"<h2 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h2><p>对于在中国大学MOOC(<a href=\"http://www.icourse163.org/\" target=\"_blank\" rel=\"noopener\">http://www.icourse163.org/</a>) 学习“数据结构”课程的学生，想要获得一张合格证书，总评成绩必须达到 60 分及以上，并且有另加福利：总评分在 [G, 100] 区间内者，可以得到 50 元 PAT 代金券；在 [60, G) 区间内者，可以得到 20 元PAT代金券。全国考点通用，一年有效。同时任课老师还会把总评成绩前 K 名的学生列入课程“名人堂”。本题就请你编写程序，帮助老师列出名人堂的学生，并统计一共发出了面值多少元的 PAT 代金券。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>输入在第一行给出 3 个整数，分别是 N（不超过 10 000 的正整数，为学生总数）、G（在 (60,100) 区间内的整数，为题面中描述的代金券等级分界线）、K（不超过 100 且不超过 N 的正整数，为进入名人堂的最低名次）。接下来 N 行，每行给出一位学生的账号（长度不超过15位、不带空格的字符串）和总评成绩（区间 [0, 100] 内的整数），其间以空格分隔。题目保证没有重复的账号。 </p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>首先在一行中输出发出的 PAT 代金券的总面值。然后按总评成绩非升序输出进入名人堂的学生的名次、账号和成绩，其间以 1 个空格分隔。需要注意的是：成绩相同的学生享有并列的排名，排名并列时，按账号的字母序升序输出。</p>\n<h2 id=\"输入样例\"><a href=\"#输入样例\" class=\"headerlink\" title=\"输入样例\"></a>输入样例</h2><div class=\"note default no-icon\"><p><br>10 80 5<br><a href=\"mailto:cy@zju.edu.cn\" target=\"_blank\" rel=\"noopener\">cy@zju.edu.cn</a> 78<br><a href=\"mailto:cy@pat-edu.com\" target=\"_blank\" rel=\"noopener\">cy@pat-edu.com</a> 87<br><a href=\"mailto:1001@qq.com\" target=\"_blank\" rel=\"noopener\">1001@qq.com</a> 65<br><a href=\"mailto:uh-oh@163.com\" target=\"_blank\" rel=\"noopener\">uh-oh@163.com</a> 96<br><a href=\"mailto:test@126.com\" target=\"_blank\" rel=\"noopener\">test@126.com</a> 39<br><a href=\"mailto:anyone@qq.com\" target=\"_blank\" rel=\"noopener\">anyone@qq.com</a> 87<br><a href=\"mailto:zoe@mit.edu\" target=\"_blank\" rel=\"noopener\">zoe@mit.edu</a> 80<br><a href=\"mailto:jack@ucla.edu\" target=\"_blank\" rel=\"noopener\">jack@ucla.edu</a> 88<br><a href=\"mailto:bob@cmu.edu\" target=\"_blank\" rel=\"noopener\">bob@cmu.edu</a> 80<br><a href=\"mailto:ken@163.com\" target=\"_blank\" rel=\"noopener\">ken@163.com</a> 70<br></p></div>\n\n<h2 id=\"输出样例\"><a href=\"#输出样例\" class=\"headerlink\" title=\"输出样例\"></a>输出样例</h2><div class=\"note default no-icon\"><p><br>360<br>1 <a href=\"mailto:uh-oh@163.com\" target=\"_blank\" rel=\"noopener\">uh-oh@163.com</a> 96<br>2 <a href=\"mailto:jack@ucla.edu\" target=\"_blank\" rel=\"noopener\">jack@ucla.edu</a> 88<br>3 <a href=\"mailto:anyone@qq.com\" target=\"_blank\" rel=\"noopener\">anyone@qq.com</a> 87<br>3 <a href=\"mailto:cy@pat-edu.com\" target=\"_blank\" rel=\"noopener\">cy@pat-edu.com</a> 87<br>5 <a href=\"mailto:bob@cmu.edu\" target=\"_blank\" rel=\"noopener\">bob@cmu.edu</a> 80<br>5 <a href=\"mailto:zoe@mit.edu\" target=\"_blank\" rel=\"noopener\">zoe@mit.edu</a> 80<br></p></div>\n\n<p><strong>时间限制：150ms内存限制：65536kb</strong></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"解法一\"><a href=\"#解法一\" class=\"headerlink\" title=\"解法一\"></a>解法一</h3><p>用一个结构体来存姓名和成绩，再用自定义的比较函数sort一下。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stu</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> name;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> grade;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">const</span> stu&amp; s1, <span class=\"keyword\">const</span> stu&amp; s2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s1.grade != s2.grade)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s1.grade &gt; s2.grade;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> s1.name &lt; s2.name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"in.txt\", \"r\", stdin);</span></span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"out.txt\", \"w\", stdout);</span></span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, g, k;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; g &gt;&gt; k;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;stu&gt; v;</span><br><span class=\"line\">    ll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> temp1;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp2;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; temp1 &gt;&gt; temp2;</span><br><span class=\"line\">        stu temp;</span><br><span class=\"line\">        temp.name = temp1;</span><br><span class=\"line\">        temp.grade = temp2;</span><br><span class=\"line\">        v.push_back(temp);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(temp2 &gt;= <span class=\"number\">60</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp2 &lt; g)</span><br><span class=\"line\">                ans += <span class=\"number\">20</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                ans += <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> number = <span class=\"number\">1</span>;</span><br><span class=\"line\">    sort(v.begin(), v.end(), cmp);</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;stu&gt;::iterator t;</span><br><span class=\"line\">    ll flag = v[<span class=\"number\">0</span>].grade;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(t = v.begin(); t != v.end(); t++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag != (*t).grade)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            flag = (*t).grade;</span><br><span class=\"line\">            index = number;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index &gt; k)</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; index &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; (*t).name &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; (*t).grade &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        number++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"解法二\"><a href=\"#解法二\" class=\"headerlink\" title=\"解法二\"></a>解法二</h3><p>用一个map&lt;string,name&gt;来存name和grade,将map转存到vcetor到中进行排序。<br>比赛的时候好蠢好蠢的做法，后面会说。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span> <span class=\"params\">(<span class=\"keyword\">const</span> pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;&amp; a,<span class=\"keyword\">const</span> pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;&amp; b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.second!=b.second)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.second&gt;b.second;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.first&lt;b.first;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"in.txt\", \"r\", stdin);</span></span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"out.txt\", \"w\", stdout);</span></span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,g,k;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;g&gt;&gt;k;</span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt; m;</span><br><span class=\"line\">    ll ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> temp1;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp2;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;temp1&gt;&gt;temp2;</span><br><span class=\"line\">        m.insert(pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;(temp1,temp2));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(temp2&gt;=<span class=\"number\">60</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp2&lt;g)</span><br><span class=\"line\">                ans+=<span class=\"number\">20</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                ans+=<span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;&gt; mm(m.begin(),m.end());<span class=\"comment\">//map转存至vector</span></span><br><span class=\"line\">    sort(mm.begin(),mm.end(),cmp);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> number=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;&gt;::iterator t=mm.begin();</span><br><span class=\"line\">    ll flag=(*t).second;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(t=mm.begin();t!=mm.end();t++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag!=(*t).second)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            flag=(*t).second;</span><br><span class=\"line\">            index=number;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&gt;k)</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;index&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;(*t).first&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;(*t).second&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        number++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>比赛的时候没看清题意，上来就直接一个map，快写完了的时候才发现不对，然后就突发奇想的对map进行sort，但是编译的时候比较函数那一行一直报错。我到现在都不清楚为什么比赛的时候要一直死磕对map按照value进行sort，就是懒得改成结构体加vector，结果直到比赛结束前几分钟才开始改，虽然改完了可惜没时间交了。<br>回到宿舍终于在网上找到了对map进行sort的方法：将map转存至vector中，然后sort。<code>vector&lt;pair&lt;string,int&gt;&gt; mm(m.begin(),m.end());</code>但是还是用结构体加vector方便啊。<br>还是自己菜啊…….</p>\n<div class=\"note warning\"><p><br>注意：STL库中的sort函数只能对线性存储的对象进行排序,如:vector、array、list、deque,不能对集合容器进行排序,如:set、map;<br></p></div>\n\n<p>参考博客:<a href=\"https://blog.csdn.net/iicy266/article/details/11906189\" target=\"_blank\" rel=\"noopener\">C++ STL中Map的按Key排序和按Value排序</a></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目内容\"><a href=\"#题目内容\" class=\"headerlink\" title=\"题目内容\"></a>题目内容</h2><p>对于在中国大学MOOC(<a href=\"http://www.icourse163.org/\" target=\"_blank\" rel=\"noopener\">http://www.icourse163.org/</a>) 学习“数据结构”课程的学生，想要获得一张合格证书，总评成绩必须达到 60 分及以上，并且有另加福利：总评分在 [G, 100] 区间内者，可以得到 50 元 PAT 代金券；在 [60, G) 区间内者，可以得到 20 元PAT代金券。全国考点通用，一年有效。同时任课老师还会把总评成绩前 K 名的学生列入课程“名人堂”。本题就请你编写程序，帮助老师列出名人堂的学生，并统计一共发出了面值多少元的 PAT 代金券。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>输入在第一行给出 3 个整数，分别是 N（不超过 10 000 的正整数，为学生总数）、G（在 (60,100) 区间内的整数，为题面中描述的代金券等级分界线）、K（不超过 100 且不超过 N 的正整数，为进入名人堂的最低名次）。接下来 N 行，每行给出一位学生的账号（长度不超过15位、不带空格的字符串）和总评成绩（区间 [0, 100] 内的整数），其间以空格分隔。题目保证没有重复的账号。 </p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>首先在一行中输出发出的 PAT 代金券的总面值。然后按总评成绩非升序输出进入名人堂的学生的名次、账号和成绩，其间以 1 个空格分隔。需要注意的是：成绩相同的学生享有并列的排名，排名并列时，按账号的字母序升序输出。</p>\n<h2 id=\"输入样例\"><a href=\"#输入样例\" class=\"headerlink\" title=\"输入样例\"></a>输入样例</h2><div class=\"note default no-icon\"><p><br>10 80 5<br><a href=\"mailto:cy@zju.edu.cn\" target=\"_blank\" rel=\"noopener\">cy@zju.edu.cn</a> 78<br><a href=\"mailto:cy@pat-edu.com\" target=\"_blank\" rel=\"noopener\">cy@pat-edu.com</a> 87<br><a href=\"mailto:1001@qq.com\" target=\"_blank\" rel=\"noopener\">1001@qq.com</a> 65<br><a href=\"mailto:uh-oh@163.com\" target=\"_blank\" rel=\"noopener\">uh-oh@163.com</a> 96<br><a href=\"mailto:test@126.com\" target=\"_blank\" rel=\"noopener\">test@126.com</a> 39<br><a href=\"mailto:anyone@qq.com\" target=\"_blank\" rel=\"noopener\">anyone@qq.com</a> 87<br><a href=\"mailto:zoe@mit.edu\" target=\"_blank\" rel=\"noopener\">zoe@mit.edu</a> 80<br><a href=\"mailto:jack@ucla.edu\" target=\"_blank\" rel=\"noopener\">jack@ucla.edu</a> 88<br><a href=\"mailto:bob@cmu.edu\" target=\"_blank\" rel=\"noopener\">bob@cmu.edu</a> 80<br><a href=\"mailto:ken@163.com\" target=\"_blank\" rel=\"noopener\">ken@163.com</a> 70<br></p></div>\n\n<h2 id=\"输出样例\"><a href=\"#输出样例\" class=\"headerlink\" title=\"输出样例\"></a>输出样例</h2><div class=\"note default no-icon\"><p><br>360<br>1 <a href=\"mailto:uh-oh@163.com\" target=\"_blank\" rel=\"noopener\">uh-oh@163.com</a> 96<br>2 <a href=\"mailto:jack@ucla.edu\" target=\"_blank\" rel=\"noopener\">jack@ucla.edu</a> 88<br>3 <a href=\"mailto:anyone@qq.com\" target=\"_blank\" rel=\"noopener\">anyone@qq.com</a> 87<br>3 <a href=\"mailto:cy@pat-edu.com\" target=\"_blank\" rel=\"noopener\">cy@pat-edu.com</a> 87<br>5 <a href=\"mailto:bob@cmu.edu\" target=\"_blank\" rel=\"noopener\">bob@cmu.edu</a> 80<br>5 <a href=\"mailto:zoe@mit.edu\" target=\"_blank\" rel=\"noopener\">zoe@mit.edu</a> 80<br></p></div>\n\n<p><strong>时间限制：150ms内存限制：65536kb</strong></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"解法一\"><a href=\"#解法一\" class=\"headerlink\" title=\"解法一\"></a>解法一</h3><p>用一个结构体来存姓名和成绩，再用自定义的比较函数sort一下。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stu</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">string</span> name;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> grade;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">const</span> stu&amp; s1, <span class=\"keyword\">const</span> stu&amp; s2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s1.grade != s2.grade)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s1.grade &gt; s2.grade;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> s1.name &lt; s2.name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"in.txt\", \"r\", stdin);</span></span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"out.txt\", \"w\", stdout);</span></span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, g, k;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; g &gt;&gt; k;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;stu&gt; v;</span><br><span class=\"line\">    ll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> temp1;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp2;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; temp1 &gt;&gt; temp2;</span><br><span class=\"line\">        stu temp;</span><br><span class=\"line\">        temp.name = temp1;</span><br><span class=\"line\">        temp.grade = temp2;</span><br><span class=\"line\">        v.push_back(temp);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(temp2 &gt;= <span class=\"number\">60</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp2 &lt; g)</span><br><span class=\"line\">                ans += <span class=\"number\">20</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                ans += <span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> number = <span class=\"number\">1</span>;</span><br><span class=\"line\">    sort(v.begin(), v.end(), cmp);</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;stu&gt;::iterator t;</span><br><span class=\"line\">    ll flag = v[<span class=\"number\">0</span>].grade;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(t = v.begin(); t != v.end(); t++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag != (*t).grade)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            flag = (*t).grade;</span><br><span class=\"line\">            index = number;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index &gt; k)</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; index &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; (*t).name &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; (*t).grade &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        number++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"解法二\"><a href=\"#解法二\" class=\"headerlink\" title=\"解法二\"></a>解法二</h3><p>用一个map&lt;string,name&gt;来存name和grade,将map转存到vcetor到中进行排序。<br>比赛的时候好蠢好蠢的做法，后面会说。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> ll;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span> <span class=\"params\">(<span class=\"keyword\">const</span> pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;&amp; a,<span class=\"keyword\">const</span> pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;&amp; b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.second!=b.second)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.second&gt;b.second;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.first&lt;b.first;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"in.txt\", \"r\", stdin);</span></span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"out.txt\", \"w\", stdout);</span></span><br><span class=\"line\">    <span class=\"built_in\">cin</span>.sync_with_stdio(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,g,k;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;g&gt;&gt;k;</span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt; m;</span><br><span class=\"line\">    ll ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> temp1;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp2;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;temp1&gt;&gt;temp2;</span><br><span class=\"line\">        m.insert(pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;(temp1,temp2));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(temp2&gt;=<span class=\"number\">60</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp2&lt;g)</span><br><span class=\"line\">                ans+=<span class=\"number\">20</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                ans+=<span class=\"number\">50</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;&gt; mm(m.begin(),m.end());<span class=\"comment\">//map转存至vector</span></span><br><span class=\"line\">    sort(mm.begin(),mm.end(),cmp);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> number=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"built_in\">string</span>,<span class=\"keyword\">int</span>&gt;&gt;::iterator t=mm.begin();</span><br><span class=\"line\">    ll flag=(*t).second;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(t=mm.begin();t!=mm.end();t++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag!=(*t).second)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            flag=(*t).second;</span><br><span class=\"line\">            index=number;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&gt;k)</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;index&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;(*t).first&lt;&lt;<span class=\"string\">\" \"</span>&lt;&lt;(*t).second&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        number++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>比赛的时候没看清题意，上来就直接一个map，快写完了的时候才发现不对，然后就突发奇想的对map进行sort，但是编译的时候比较函数那一行一直报错。我到现在都不清楚为什么比赛的时候要一直死磕对map按照value进行sort，就是懒得改成结构体加vector，结果直到比赛结束前几分钟才开始改，虽然改完了可惜没时间交了。<br>回到宿舍终于在网上找到了对map进行sort的方法：将map转存至vector中，然后sort。<code>vector&lt;pair&lt;string,int&gt;&gt; mm(m.begin(),m.end());</code>但是还是用结构体加vector方便啊。<br>还是自己菜啊…….</p>\n<div class=\"note warning\"><p><br>注意：STL库中的sort函数只能对线性存储的对象进行排序,如:vector、array、list、deque,不能对集合容器进行排序,如:set、map;<br></p></div>\n\n<p>参考博客:<a href=\"https://blog.csdn.net/iicy266/article/details/11906189\" target=\"_blank\" rel=\"noopener\">C++ STL中Map的按Key排序和按Value排序</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"L2-3.名人堂与代金券","path":"45393.html","eyeCatchImage":null,"excerpt":null,"date":"2018-04-01T14:46:11.000Z","pv":0,"totalPV":0,"categories":"CCCC天梯赛","tags":["CCCC天梯赛"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"ThinkServer RD650安装Ubuntu Server 16.04","date":"2018-07-24T14:50:22.000Z","abbrlink":560540611,"_content":"## 准备工作\n1. 在Ubuntu官网上下载Ubuntu Server 16.04的ISO镜像([下载链接](http://releases.ubuntu.com/16.04/))；\n2. 使用刻录软件(如:软碟通)将iso镜像文件写入U盘中，制成启动盘；\n3. 将ISO镜像文件拷贝至U盘的根目录，为了方便后续操作，这里可将镜像文件重命名为`Ubuntu.iso`；\n\n## 设置引导\n1. 按电源键开机，启动服务器(服务器启动可能会比较缓慢)；\n![](/images/Ubuntu Server 16.04/IMG20180724134039.jpg)\n2. 出现此界面时，按\"F10\"进入TDM(ThinkServer Deployment Manager)；\n![](/images/Ubuntu Server 16.04/IMG20180724134100.jpg)\n3. 进入TDM后，选择\"BIOS Setup(BIOS 设置)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724134421.jpg)\n4. 选择\"Boot Manager(引导管理)\",将\"Boot Mode(引导模式)\"改为\"UEFI Only(仅UEFI模式)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724134519.jpg)\n5. 点击\"Save & Reset(保存 & 重启)\",在弹出的对话框中选择\"Yes(是)\"重启电脑。如果出现如下对话框，选择\"No(否)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724134545.jpg)\n\n## 开始安装\n1. 将U盘插入服务器后的USB插槽中，重启服务器，进入下图所示界面。选择\"Install Ubuntu Server(安装Ubuntu服务器版)\"；\n注:若无法进入下图所示界面，请进入BIOS修改U盘为第一启动项。\n![](/images/Ubuntu Server 16.04/IMG20180723165615.jpg)\n2. 选择安装过程和系统的默认语言为\"English(英语)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165649.jpg)\n3. \"Select your location(选择你的区域)\"，这里选择\"Other(其他)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724153430.jpg)\n4. \"Continent or region(大陆或地区)\"选择\"Asia(亚洲)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724153439.jpg)\n5. \"Country(国家)\"选择\"China(中国)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724153448.jpg)\n6. 是否通过一系列的按键检测键盘布局，选择\"NO(否)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165712.jpg)\n7. 字符集编码选择\"United States -en_US.UTF-8\"；\n![](/images/Ubuntu Server 16.04/IMG20180724153454.jpg)\n8. \"Country or Region for the keyboard(键盘布局所属国家或地区)\",选择\"English(US)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165717.jpg)\n9. \"Keyboard layout(键盘布局)\"，选择\"English(US)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165725.jpg)\n10. 稍等片刻，将会显示出现错误,原因为:安装程序未检测到CD-ROM。是否重试，选择\"No(否)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165744.jpg)\n11. 进入如下界面，选择\"Execute a shell(运行shell)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165801.jpg)\n12. 在shell中依次输入如下命令:\n```\nls /dev/sd*\numount /dev/sdb4/\nmkdir udev\nmount /dev/sdb4 /udev\nmount /udev/ubuntu.iso /cdrom\nexit\n```\n一般会出现两个`/dev/sdb*`项，我们选择带数字的那一项去替换上面代码中的`/dev/sdb4`;\n`ubuntu.iso`为U盘中Ubuntu Server的ISO镜像的文件名\"。\n![](/images/Ubuntu Server 16.04/IMG20180723165911.jpg)\n13. 进入如下界面后，选择\"Detect and mount CD-ROM(探测并挂载光盘)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165919.jpg)\n14. 进入如下界面，选择\"Network interface(网络接口)\"，这里选择第一个网络接口，等待安装程序自动完成配置；\n![](/images/Ubuntu Server 16.04/IMG20180723165949.jpg)\n15. 设置\"Hostname(主机名)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170037.jpg)\n16. 设置\"Full name for the new user(新用户的全名)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170121.jpg)\n17. 设置\"Username for your account(你账号的用户名)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170137.jpg)\n18. 设置\"password for the new user(新用户的密码)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170145.jpg)\n19. 如果所设置的密码较为简单，可能会弹出如下对话框，询问你是否使用一个\"weak password(弱口令)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170157.jpg)\n20. 出现如下界面，询问你是否\"Encrypt your home directory(加密你的主目录)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170208.jpg)\n21. 然后可能会出现时区设置错误，选择 \"Continue(继续)\",进入如下界面，选择\"Install the system(安装系统)\",然后直接回车，选择\"Partion disks(磁盘分区)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170228.jpg)\n![](/images/Ubuntu Server 16.04/IMG20180723170234.jpg)\n22. 出现下图界面，询问你是否\"Umount partitions that are in use(卸载正在使用的分区)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170255.jpg)\n23. 选择\"Partitioning method(分区方法)\"，这里我们选择\"Guided - use entire disk and set up LVM(使用整个磁盘并配置LVM)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170318.jpg)\n24. \"Select disk to partition(选择要分区的磁盘)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170325.jpg)\n25. 选择\"Partitioning Scheme(分区方案) \"，这里推荐选择\"All files in one partition(所有文件放在同一分区)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170331.jpg)\n26. 出现如下界面，询问你是否\"Write the changes to disks and configure LVM(将修改写入磁盘并配置LVM)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170342.jpg)\n27. 设置\"Name of the volume group for the new system(新系统的卷组名)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170359.jpg)\n28. 设置\"Amount of volume group to use for guided partitioning(用于分区引导的卷组数)\"，默认大小即可，无需修改；\n![](/images/Ubuntu Server 16.04/IMG20180723170421.jpg)\n29. 出现下图界面，询问你是否\"Umount partitions that are in use(卸载正在使用的分区)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170434.jpg)\n30. 出现如下界面，询问你是否\"Force UEFI installation(强制UEFI安装)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170442.jpg)\n31. 出现如下界面，询问是否\"Write the changes to disks(将改动写入磁盘)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170452.jpg)\n32. \"Kernel to install(要安装的内核)\",选择默认的\"Linux-generic\"即可；\n![](/images/Ubuntu Server 16.04/IMG20180723170544.jpg)\n33. 回车后出现如下界面，这里要选择包含在initrd中的驱动程序，选择默认的\"generic:include all available drivers(通用:包含所有可用的驱动程序)\"即可；\n![](/images/Ubuntu Server 16.04/IMG20180723170555.jpg)\n34. \"HTTP proxy information(HTTP代理信息)\"不写，直接回车即可；\n![](/images/Ubuntu Server 16.04/IMG20180723170657.jpg)\n35. 询问你管理系统更新的方式，选择\"No automatic updates(不自动更新)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170737.jpg)\n36. \"Choose software to install(选择要安装的软件)\"，建议勾选上\"OpenSSh server\"，然后回车;\n选择方法为:通过键盘上下键移动光标至选要择项，在要选择的项上按空格即可；\n![](/images/Ubuntu Server 16.04/IMG20180724154325.jpg)\n37. 回车后，显示安装完成，继续回车，重启系统，此时就可以拔掉U盘；\n![](/images/Ubuntu Server 16.04/IMG20180723170940.jpg)\n38. 重启后，再次进入TDM，将\"Boot Mode(引导模式)\"改为\"Legacy　Only(仅Legacy模式)\"，否则有可能出现不能进入Linux系统的情况；","source":"_posts/ThinkServer RD650安装Ubuntu Server 16.04.md","raw":"---\ntitle: ThinkServer RD650安装Ubuntu Server 16.04\ncategories: Linux\ntags:\n  - Ubuntu\n  - Linux\ndate: '2018-07-24 22:50:22'\nabbrlink: 560540611\n---\n## 准备工作\n1. 在Ubuntu官网上下载Ubuntu Server 16.04的ISO镜像([下载链接](http://releases.ubuntu.com/16.04/))；\n2. 使用刻录软件(如:软碟通)将iso镜像文件写入U盘中，制成启动盘；\n3. 将ISO镜像文件拷贝至U盘的根目录，为了方便后续操作，这里可将镜像文件重命名为`Ubuntu.iso`；\n\n## 设置引导\n1. 按电源键开机，启动服务器(服务器启动可能会比较缓慢)；\n![](/images/Ubuntu Server 16.04/IMG20180724134039.jpg)\n2. 出现此界面时，按\"F10\"进入TDM(ThinkServer Deployment Manager)；\n![](/images/Ubuntu Server 16.04/IMG20180724134100.jpg)\n3. 进入TDM后，选择\"BIOS Setup(BIOS 设置)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724134421.jpg)\n4. 选择\"Boot Manager(引导管理)\",将\"Boot Mode(引导模式)\"改为\"UEFI Only(仅UEFI模式)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724134519.jpg)\n5. 点击\"Save & Reset(保存 & 重启)\",在弹出的对话框中选择\"Yes(是)\"重启电脑。如果出现如下对话框，选择\"No(否)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724134545.jpg)\n\n## 开始安装\n1. 将U盘插入服务器后的USB插槽中，重启服务器，进入下图所示界面。选择\"Install Ubuntu Server(安装Ubuntu服务器版)\"；\n注:若无法进入下图所示界面，请进入BIOS修改U盘为第一启动项。\n![](/images/Ubuntu Server 16.04/IMG20180723165615.jpg)\n2. 选择安装过程和系统的默认语言为\"English(英语)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165649.jpg)\n3. \"Select your location(选择你的区域)\"，这里选择\"Other(其他)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724153430.jpg)\n4. \"Continent or region(大陆或地区)\"选择\"Asia(亚洲)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724153439.jpg)\n5. \"Country(国家)\"选择\"China(中国)\"；\n![](/images/Ubuntu Server 16.04/IMG20180724153448.jpg)\n6. 是否通过一系列的按键检测键盘布局，选择\"NO(否)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165712.jpg)\n7. 字符集编码选择\"United States -en_US.UTF-8\"；\n![](/images/Ubuntu Server 16.04/IMG20180724153454.jpg)\n8. \"Country or Region for the keyboard(键盘布局所属国家或地区)\",选择\"English(US)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165717.jpg)\n9. \"Keyboard layout(键盘布局)\"，选择\"English(US)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165725.jpg)\n10. 稍等片刻，将会显示出现错误,原因为:安装程序未检测到CD-ROM。是否重试，选择\"No(否)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165744.jpg)\n11. 进入如下界面，选择\"Execute a shell(运行shell)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165801.jpg)\n12. 在shell中依次输入如下命令:\n```\nls /dev/sd*\numount /dev/sdb4/\nmkdir udev\nmount /dev/sdb4 /udev\nmount /udev/ubuntu.iso /cdrom\nexit\n```\n一般会出现两个`/dev/sdb*`项，我们选择带数字的那一项去替换上面代码中的`/dev/sdb4`;\n`ubuntu.iso`为U盘中Ubuntu Server的ISO镜像的文件名\"。\n![](/images/Ubuntu Server 16.04/IMG20180723165911.jpg)\n13. 进入如下界面后，选择\"Detect and mount CD-ROM(探测并挂载光盘)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723165919.jpg)\n14. 进入如下界面，选择\"Network interface(网络接口)\"，这里选择第一个网络接口，等待安装程序自动完成配置；\n![](/images/Ubuntu Server 16.04/IMG20180723165949.jpg)\n15. 设置\"Hostname(主机名)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170037.jpg)\n16. 设置\"Full name for the new user(新用户的全名)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170121.jpg)\n17. 设置\"Username for your account(你账号的用户名)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170137.jpg)\n18. 设置\"password for the new user(新用户的密码)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170145.jpg)\n19. 如果所设置的密码较为简单，可能会弹出如下对话框，询问你是否使用一个\"weak password(弱口令)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170157.jpg)\n20. 出现如下界面，询问你是否\"Encrypt your home directory(加密你的主目录)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170208.jpg)\n21. 然后可能会出现时区设置错误，选择 \"Continue(继续)\",进入如下界面，选择\"Install the system(安装系统)\",然后直接回车，选择\"Partion disks(磁盘分区)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170228.jpg)\n![](/images/Ubuntu Server 16.04/IMG20180723170234.jpg)\n22. 出现下图界面，询问你是否\"Umount partitions that are in use(卸载正在使用的分区)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170255.jpg)\n23. 选择\"Partitioning method(分区方法)\"，这里我们选择\"Guided - use entire disk and set up LVM(使用整个磁盘并配置LVM)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170318.jpg)\n24. \"Select disk to partition(选择要分区的磁盘)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170325.jpg)\n25. 选择\"Partitioning Scheme(分区方案) \"，这里推荐选择\"All files in one partition(所有文件放在同一分区)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170331.jpg)\n26. 出现如下界面，询问你是否\"Write the changes to disks and configure LVM(将修改写入磁盘并配置LVM)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170342.jpg)\n27. 设置\"Name of the volume group for the new system(新系统的卷组名)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170359.jpg)\n28. 设置\"Amount of volume group to use for guided partitioning(用于分区引导的卷组数)\"，默认大小即可，无需修改；\n![](/images/Ubuntu Server 16.04/IMG20180723170421.jpg)\n29. 出现下图界面，询问你是否\"Umount partitions that are in use(卸载正在使用的分区)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170434.jpg)\n30. 出现如下界面，询问你是否\"Force UEFI installation(强制UEFI安装)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170442.jpg)\n31. 出现如下界面，询问是否\"Write the changes to disks(将改动写入磁盘)\"，选择\"Yes(是)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170452.jpg)\n32. \"Kernel to install(要安装的内核)\",选择默认的\"Linux-generic\"即可；\n![](/images/Ubuntu Server 16.04/IMG20180723170544.jpg)\n33. 回车后出现如下界面，这里要选择包含在initrd中的驱动程序，选择默认的\"generic:include all available drivers(通用:包含所有可用的驱动程序)\"即可；\n![](/images/Ubuntu Server 16.04/IMG20180723170555.jpg)\n34. \"HTTP proxy information(HTTP代理信息)\"不写，直接回车即可；\n![](/images/Ubuntu Server 16.04/IMG20180723170657.jpg)\n35. 询问你管理系统更新的方式，选择\"No automatic updates(不自动更新)\"；\n![](/images/Ubuntu Server 16.04/IMG20180723170737.jpg)\n36. \"Choose software to install(选择要安装的软件)\"，建议勾选上\"OpenSSh server\"，然后回车;\n选择方法为:通过键盘上下键移动光标至选要择项，在要选择的项上按空格即可；\n![](/images/Ubuntu Server 16.04/IMG20180724154325.jpg)\n37. 回车后，显示安装完成，继续回车，重启系统，此时就可以拔掉U盘；\n![](/images/Ubuntu Server 16.04/IMG20180723170940.jpg)\n38. 重启后，再次进入TDM，将\"Boot Mode(引导模式)\"改为\"Legacy　Only(仅Legacy模式)\"，否则有可能出现不能进入Linux系统的情况；","slug":"ThinkServer RD650安装Ubuntu Server 16.04","published":1,"updated":"2019-03-28T10:45:16.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw82000rkchif4yspxig","content":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ol>\n<li>在Ubuntu官网上下载Ubuntu Server 16.04的ISO镜像(<a href=\"http://releases.ubuntu.com/16.04/\" target=\"_blank\" rel=\"noopener\">下载链接</a>)；</li>\n<li>使用刻录软件(如:软碟通)将iso镜像文件写入U盘中，制成启动盘；</li>\n<li>将ISO镜像文件拷贝至U盘的根目录，为了方便后续操作，这里可将镜像文件重命名为<code>Ubuntu.iso</code>；</li>\n</ol>\n<h2 id=\"设置引导\"><a href=\"#设置引导\" class=\"headerlink\" title=\"设置引导\"></a>设置引导</h2><ol>\n<li>按电源键开机，启动服务器(服务器启动可能会比较缓慢)；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134039.jpg\" alt></li>\n<li>出现此界面时，按”F10”进入TDM(ThinkServer Deployment Manager)；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134100.jpg\" alt></li>\n<li>进入TDM后，选择”BIOS Setup(BIOS 设置)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134421.jpg\" alt></li>\n<li>选择”Boot Manager(引导管理)”,将”Boot Mode(引导模式)”改为”UEFI Only(仅UEFI模式)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134519.jpg\" alt></li>\n<li>点击”Save &amp; Reset(保存 &amp; 重启)”,在弹出的对话框中选择”Yes(是)”重启电脑。如果出现如下对话框，选择”No(否)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134545.jpg\" alt></li>\n</ol>\n<h2 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h2><ol>\n<li>将U盘插入服务器后的USB插槽中，重启服务器，进入下图所示界面。选择”Install Ubuntu Server(安装Ubuntu服务器版)”；<br>注:若无法进入下图所示界面，请进入BIOS修改U盘为第一启动项。<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165615.jpg\" alt></li>\n<li>选择安装过程和系统的默认语言为”English(英语)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165649.jpg\" alt></li>\n<li>“Select your location(选择你的区域)”，这里选择”Other(其他)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724153430.jpg\" alt></li>\n<li>“Continent or region(大陆或地区)”选择”Asia(亚洲)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724153439.jpg\" alt></li>\n<li>“Country(国家)”选择”China(中国)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724153448.jpg\" alt></li>\n<li>是否通过一系列的按键检测键盘布局，选择”NO(否)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165712.jpg\" alt></li>\n<li>字符集编码选择”United States -en_US.UTF-8”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724153454.jpg\" alt></li>\n<li>“Country or Region for the keyboard(键盘布局所属国家或地区)”,选择”English(US)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165717.jpg\" alt></li>\n<li>“Keyboard layout(键盘布局)”，选择”English(US)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165725.jpg\" alt></li>\n<li>稍等片刻，将会显示出现错误,原因为:安装程序未检测到CD-ROM。是否重试，选择”No(否)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165744.jpg\" alt></li>\n<li>进入如下界面，选择”Execute a shell(运行shell)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165801.jpg\" alt></li>\n<li>在shell中依次输入如下命令:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls /dev/sd*</span><br><span class=\"line\">umount /dev/sdb4/</span><br><span class=\"line\">mkdir udev</span><br><span class=\"line\">mount /dev/sdb4 /udev</span><br><span class=\"line\">mount /udev/ubuntu.iso /cdrom</span><br><span class=\"line\">exit</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>一般会出现两个<code>/dev/sdb*</code>项，我们选择带数字的那一项去替换上面代码中的<code>/dev/sdb4</code>;<br><code>ubuntu.iso</code>为U盘中Ubuntu Server的ISO镜像的文件名”。<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165911.jpg\" alt></p>\n<ol start=\"13\">\n<li>进入如下界面后，选择”Detect and mount CD-ROM(探测并挂载光盘)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165919.jpg\" alt></li>\n<li>进入如下界面，选择”Network interface(网络接口)”，这里选择第一个网络接口，等待安装程序自动完成配置；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165949.jpg\" alt></li>\n<li>设置”Hostname(主机名)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170037.jpg\" alt></li>\n<li>设置”Full name for the new user(新用户的全名)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170121.jpg\" alt></li>\n<li>设置”Username for your account(你账号的用户名)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170137.jpg\" alt></li>\n<li>设置”password for the new user(新用户的密码)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170145.jpg\" alt></li>\n<li>如果所设置的密码较为简单，可能会弹出如下对话框，询问你是否使用一个”weak password(弱口令)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170157.jpg\" alt></li>\n<li>出现如下界面，询问你是否”Encrypt your home directory(加密你的主目录)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170208.jpg\" alt></li>\n<li>然后可能会出现时区设置错误，选择 “Continue(继续)”,进入如下界面，选择”Install the system(安装系统)”,然后直接回车，选择”Partion disks(磁盘分区)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170228.jpg\" alt><br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170234.jpg\" alt></li>\n<li>出现下图界面，询问你是否”Umount partitions that are in use(卸载正在使用的分区)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170255.jpg\" alt></li>\n<li>选择”Partitioning method(分区方法)”，这里我们选择”Guided - use entire disk and set up LVM(使用整个磁盘并配置LVM)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170318.jpg\" alt></li>\n<li>“Select disk to partition(选择要分区的磁盘)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170325.jpg\" alt></li>\n<li>选择”Partitioning Scheme(分区方案) “，这里推荐选择”All files in one partition(所有文件放在同一分区)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170331.jpg\" alt></li>\n<li>出现如下界面，询问你是否”Write the changes to disks and configure LVM(将修改写入磁盘并配置LVM)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170342.jpg\" alt></li>\n<li>设置”Name of the volume group for the new system(新系统的卷组名)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170359.jpg\" alt></li>\n<li>设置”Amount of volume group to use for guided partitioning(用于分区引导的卷组数)”，默认大小即可，无需修改；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170421.jpg\" alt></li>\n<li>出现下图界面，询问你是否”Umount partitions that are in use(卸载正在使用的分区)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170434.jpg\" alt></li>\n<li>出现如下界面，询问你是否”Force UEFI installation(强制UEFI安装)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170442.jpg\" alt></li>\n<li>出现如下界面，询问是否”Write the changes to disks(将改动写入磁盘)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170452.jpg\" alt></li>\n<li>“Kernel to install(要安装的内核)”,选择默认的”Linux-generic”即可；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170544.jpg\" alt></li>\n<li>回车后出现如下界面，这里要选择包含在initrd中的驱动程序，选择默认的”generic:include all available drivers(通用:包含所有可用的驱动程序)”即可；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170555.jpg\" alt></li>\n<li>“HTTP proxy information(HTTP代理信息)”不写，直接回车即可；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170657.jpg\" alt></li>\n<li>询问你管理系统更新的方式，选择”No automatic updates(不自动更新)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170737.jpg\" alt></li>\n<li>“Choose software to install(选择要安装的软件)”，建议勾选上”OpenSSh server”，然后回车;<br>选择方法为:通过键盘上下键移动光标至选要择项，在要选择的项上按空格即可；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724154325.jpg\" alt></li>\n<li>回车后，显示安装完成，继续回车，重启系统，此时就可以拔掉U盘；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170940.jpg\" alt></li>\n<li>重启后，再次进入TDM，将”Boot Mode(引导模式)”改为”Legacy　Only(仅Legacy模式)”，否则有可能出现不能进入Linux系统的情况；</li>\n</ol>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ol>\n<li>在Ubuntu官网上下载Ubuntu Server 16.04的ISO镜像(<a href=\"http://releases.ubuntu.com/16.04/\" target=\"_blank\" rel=\"noopener\">下载链接</a>)；</li>\n<li>使用刻录软件(如:软碟通)将iso镜像文件写入U盘中，制成启动盘；</li>\n<li>将ISO镜像文件拷贝至U盘的根目录，为了方便后续操作，这里可将镜像文件重命名为<code>Ubuntu.iso</code>；</li>\n</ol>\n<h2 id=\"设置引导\"><a href=\"#设置引导\" class=\"headerlink\" title=\"设置引导\"></a>设置引导</h2><ol>\n<li>按电源键开机，启动服务器(服务器启动可能会比较缓慢)；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134039.jpg\" alt></li>\n<li>出现此界面时，按”F10”进入TDM(ThinkServer Deployment Manager)；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134100.jpg\" alt></li>\n<li>进入TDM后，选择”BIOS Setup(BIOS 设置)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134421.jpg\" alt></li>\n<li>选择”Boot Manager(引导管理)”,将”Boot Mode(引导模式)”改为”UEFI Only(仅UEFI模式)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134519.jpg\" alt></li>\n<li>点击”Save &amp; Reset(保存 &amp; 重启)”,在弹出的对话框中选择”Yes(是)”重启电脑。如果出现如下对话框，选择”No(否)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724134545.jpg\" alt></li>\n</ol>\n<h2 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h2><ol>\n<li>将U盘插入服务器后的USB插槽中，重启服务器，进入下图所示界面。选择”Install Ubuntu Server(安装Ubuntu服务器版)”；<br>注:若无法进入下图所示界面，请进入BIOS修改U盘为第一启动项。<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165615.jpg\" alt></li>\n<li>选择安装过程和系统的默认语言为”English(英语)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165649.jpg\" alt></li>\n<li>“Select your location(选择你的区域)”，这里选择”Other(其他)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724153430.jpg\" alt></li>\n<li>“Continent or region(大陆或地区)”选择”Asia(亚洲)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724153439.jpg\" alt></li>\n<li>“Country(国家)”选择”China(中国)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724153448.jpg\" alt></li>\n<li>是否通过一系列的按键检测键盘布局，选择”NO(否)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165712.jpg\" alt></li>\n<li>字符集编码选择”United States -en_US.UTF-8”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724153454.jpg\" alt></li>\n<li>“Country or Region for the keyboard(键盘布局所属国家或地区)”,选择”English(US)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165717.jpg\" alt></li>\n<li>“Keyboard layout(键盘布局)”，选择”English(US)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165725.jpg\" alt></li>\n<li>稍等片刻，将会显示出现错误,原因为:安装程序未检测到CD-ROM。是否重试，选择”No(否)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165744.jpg\" alt></li>\n<li>进入如下界面，选择”Execute a shell(运行shell)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165801.jpg\" alt></li>\n<li>在shell中依次输入如下命令:<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls /dev/sd*</span><br><span class=\"line\">umount /dev/sdb4/</span><br><span class=\"line\">mkdir udev</span><br><span class=\"line\">mount /dev/sdb4 /udev</span><br><span class=\"line\">mount /udev/ubuntu.iso /cdrom</span><br><span class=\"line\">exit</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>一般会出现两个<code>/dev/sdb*</code>项，我们选择带数字的那一项去替换上面代码中的<code>/dev/sdb4</code>;<br><code>ubuntu.iso</code>为U盘中Ubuntu Server的ISO镜像的文件名”。<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165911.jpg\" alt></p>\n<ol start=\"13\">\n<li>进入如下界面后，选择”Detect and mount CD-ROM(探测并挂载光盘)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165919.jpg\" alt></li>\n<li>进入如下界面，选择”Network interface(网络接口)”，这里选择第一个网络接口，等待安装程序自动完成配置；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723165949.jpg\" alt></li>\n<li>设置”Hostname(主机名)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170037.jpg\" alt></li>\n<li>设置”Full name for the new user(新用户的全名)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170121.jpg\" alt></li>\n<li>设置”Username for your account(你账号的用户名)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170137.jpg\" alt></li>\n<li>设置”password for the new user(新用户的密码)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170145.jpg\" alt></li>\n<li>如果所设置的密码较为简单，可能会弹出如下对话框，询问你是否使用一个”weak password(弱口令)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170157.jpg\" alt></li>\n<li>出现如下界面，询问你是否”Encrypt your home directory(加密你的主目录)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170208.jpg\" alt></li>\n<li>然后可能会出现时区设置错误，选择 “Continue(继续)”,进入如下界面，选择”Install the system(安装系统)”,然后直接回车，选择”Partion disks(磁盘分区)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170228.jpg\" alt><br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170234.jpg\" alt></li>\n<li>出现下图界面，询问你是否”Umount partitions that are in use(卸载正在使用的分区)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170255.jpg\" alt></li>\n<li>选择”Partitioning method(分区方法)”，这里我们选择”Guided - use entire disk and set up LVM(使用整个磁盘并配置LVM)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170318.jpg\" alt></li>\n<li>“Select disk to partition(选择要分区的磁盘)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170325.jpg\" alt></li>\n<li>选择”Partitioning Scheme(分区方案) “，这里推荐选择”All files in one partition(所有文件放在同一分区)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170331.jpg\" alt></li>\n<li>出现如下界面，询问你是否”Write the changes to disks and configure LVM(将修改写入磁盘并配置LVM)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170342.jpg\" alt></li>\n<li>设置”Name of the volume group for the new system(新系统的卷组名)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170359.jpg\" alt></li>\n<li>设置”Amount of volume group to use for guided partitioning(用于分区引导的卷组数)”，默认大小即可，无需修改；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170421.jpg\" alt></li>\n<li>出现下图界面，询问你是否”Umount partitions that are in use(卸载正在使用的分区)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170434.jpg\" alt></li>\n<li>出现如下界面，询问你是否”Force UEFI installation(强制UEFI安装)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170442.jpg\" alt></li>\n<li>出现如下界面，询问是否”Write the changes to disks(将改动写入磁盘)”，选择”Yes(是)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170452.jpg\" alt></li>\n<li>“Kernel to install(要安装的内核)”,选择默认的”Linux-generic”即可；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170544.jpg\" alt></li>\n<li>回车后出现如下界面，这里要选择包含在initrd中的驱动程序，选择默认的”generic:include all available drivers(通用:包含所有可用的驱动程序)”即可；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170555.jpg\" alt></li>\n<li>“HTTP proxy information(HTTP代理信息)”不写，直接回车即可；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170657.jpg\" alt></li>\n<li>询问你管理系统更新的方式，选择”No automatic updates(不自动更新)”；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170737.jpg\" alt></li>\n<li>“Choose software to install(选择要安装的软件)”，建议勾选上”OpenSSh server”，然后回车;<br>选择方法为:通过键盘上下键移动光标至选要择项，在要选择的项上按空格即可；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180724154325.jpg\" alt></li>\n<li>回车后，显示安装完成，继续回车，重启系统，此时就可以拔掉U盘；<br><img src=\"/images/Ubuntu Server 16.04/IMG20180723170940.jpg\" alt></li>\n<li>重启后，再次进入TDM，将”Boot Mode(引导模式)”改为”Legacy　Only(仅Legacy模式)”，否则有可能出现不能进入Linux系统的情况；</li>\n</ol>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/Ubuntu Server 16.04/IMG20180724134039.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"ThinkServer RD650安装Ubuntu Server 16.04","path":"560540611.html","eyeCatchImage":"/images/Ubuntu Server 16.04/IMG20180724134039.jpg","excerpt":null,"date":"2018-07-24T14:50:22.000Z","pv":0,"totalPV":0,"categories":"Linux","tags":["Ubuntu","Linux"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"人生苦短，我用Python","abbrlink":2604890615,"date":"2019-03-19T14:01:33.000Z","_content":"# 前言\n前几日代写留学生作业时遇到了两道很有意思的Python编程题，在此做一记录，主要涉及到一些Python的高级特性:生成器、lambda表达式。\n\n# Question 1\n## 题意\n**原文:**\nConsider the following function\n{% spoiler Code %}\n{% codeblock lang:python %}\n# listOfNumbers is a list of only numbers\n#\ndef processList(listOfNumbers):\n    result = []\n    for i in listOfNumbers:\n        if i<0 == 0:\n            result.append(i*i)\n        else:\n            result.append((i*i)+1)\n    return result\n{% endcodeblock %}\n{% endspoiler %}\n\nFirst, study and test processList(listOfNumbers) to determine what it does Then rewrite its body so that it accomplishes the same task with a one-line list comprehension. Thus, the resulting function will have exactly two lines, the def line and a return line containing a list comprehension expression. \n**翻译:**\n将给出的一个函数变成两行\n\n## 分析\n函数的功能是:遍历listofNumbers中的每一个元素，如果大于等于0，将其变成自己乘以自己，否则变为自己乘自己后再加一。\n因此，我们可以用到Python中的三元表达式，下面这两种方式是等价的。\n`value = true if condition else false`\n与\n{% spoiler Code %}\n{% codeblock lang:python %}\nif condition:\n    value = true\nelse:\n    value = false\n{% endcodeblock %}\n{% endspoiler %}\n\n## 参考答案\n{% spoiler Code %}\n{% codeblock lang:python %}\ndef processList(listOfNumbers):\n    return [i * i if i >= 0 else i * i + 1 for i in listOfNumbers]\n{% endcodeblock %}\n{% endspoiler %}\n\n# Question 2\n## 题意\n**原文:**\nImplement function processList2(inputList, specialItem, ignoreItems) that returns a new list that contains all the items of inputList (and in the original order) except 1) any that appear in the list ignoreItems, and 2) occurrences of specialItem (if specialItem is not in ignoreItems) should become the string \"special\" in the new list. Use a one-line list cluoomprehension to construct the new list. Thus, again, the function will have exactly two lines, the def line and a return line containing a list comprehension expression. For example,\n{% note default no-icon %}\nprocessList2([1,2,3,4], 4, [3])\n[1, 2, 'special']\nprocessList2([1,2,3,4,True,'dog'], 4, [3,5,4])\n[1, 2, True, 'dog']\nprocessList2([1,1,2,2], 1, [2])\n['special', 'special']\n{% endnote %}\n**翻译:**\n实现函数processList2(inputList, specialItem, ignoreItems)，对inputList中的元素进行处理，返回一个新列表，但需满足以下两个要求:\n1. 不能是出现在ignoreItems中的元素\n2. 对于与specialItem相同的元素(不能在ignoreItems中出现)，将其变成\"special\"。\n\n## 分析\n1. 首先将不在ignoreItems中的那些元素筛出来`[x for x in inputList if x not in ignoreItems]`或`list(filter(lambda x:False if x in ignoreItems else True,inputList))`。\n2. 然后遍历上述列表中的元素，将specialItem变成\"special\",`[\"special\" if x == specialItem else x for x in xxx]`\n\n## 参考答案\n{% spoiler Code %}\n{% codeblock lang:python %}\ndef processList2(inputList, specialItem, ignoreItems):\n    ## two method\n    return [\"special\" if x == specialItem else x for x in list(filter(lambda x:False if x in ignoreItems else True,inputList))]\n    return[\"special\" if x == specialItem else x for x in [x for x in inputList if x not in ignoreItems]]\n{% endcodeblock %}\n{% endspoiler %}\n\n# 参考资料\n* [filter() 函数](http://www.runoob.com/python3/python3-func-filter.html)\n* [列表生成式](https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431779637539089fd627094a43a8a7c77e6102e3a811000)\n","source":"_posts/人生苦短,我用Python.md","raw":"---\ntitle: 人生苦短，我用Python\ncategories: python\ntags:\n  - Python\n  - lambda\nabbrlink: 2604890615\ndate: 2019-03-19 22:01:33\n---\n# 前言\n前几日代写留学生作业时遇到了两道很有意思的Python编程题，在此做一记录，主要涉及到一些Python的高级特性:生成器、lambda表达式。\n\n# Question 1\n## 题意\n**原文:**\nConsider the following function\n{% spoiler Code %}\n{% codeblock lang:python %}\n# listOfNumbers is a list of only numbers\n#\ndef processList(listOfNumbers):\n    result = []\n    for i in listOfNumbers:\n        if i<0 == 0:\n            result.append(i*i)\n        else:\n            result.append((i*i)+1)\n    return result\n{% endcodeblock %}\n{% endspoiler %}\n\nFirst, study and test processList(listOfNumbers) to determine what it does Then rewrite its body so that it accomplishes the same task with a one-line list comprehension. Thus, the resulting function will have exactly two lines, the def line and a return line containing a list comprehension expression. \n**翻译:**\n将给出的一个函数变成两行\n\n## 分析\n函数的功能是:遍历listofNumbers中的每一个元素，如果大于等于0，将其变成自己乘以自己，否则变为自己乘自己后再加一。\n因此，我们可以用到Python中的三元表达式，下面这两种方式是等价的。\n`value = true if condition else false`\n与\n{% spoiler Code %}\n{% codeblock lang:python %}\nif condition:\n    value = true\nelse:\n    value = false\n{% endcodeblock %}\n{% endspoiler %}\n\n## 参考答案\n{% spoiler Code %}\n{% codeblock lang:python %}\ndef processList(listOfNumbers):\n    return [i * i if i >= 0 else i * i + 1 for i in listOfNumbers]\n{% endcodeblock %}\n{% endspoiler %}\n\n# Question 2\n## 题意\n**原文:**\nImplement function processList2(inputList, specialItem, ignoreItems) that returns a new list that contains all the items of inputList (and in the original order) except 1) any that appear in the list ignoreItems, and 2) occurrences of specialItem (if specialItem is not in ignoreItems) should become the string \"special\" in the new list. Use a one-line list cluoomprehension to construct the new list. Thus, again, the function will have exactly two lines, the def line and a return line containing a list comprehension expression. For example,\n{% note default no-icon %}\nprocessList2([1,2,3,4], 4, [3])\n[1, 2, 'special']\nprocessList2([1,2,3,4,True,'dog'], 4, [3,5,4])\n[1, 2, True, 'dog']\nprocessList2([1,1,2,2], 1, [2])\n['special', 'special']\n{% endnote %}\n**翻译:**\n实现函数processList2(inputList, specialItem, ignoreItems)，对inputList中的元素进行处理，返回一个新列表，但需满足以下两个要求:\n1. 不能是出现在ignoreItems中的元素\n2. 对于与specialItem相同的元素(不能在ignoreItems中出现)，将其变成\"special\"。\n\n## 分析\n1. 首先将不在ignoreItems中的那些元素筛出来`[x for x in inputList if x not in ignoreItems]`或`list(filter(lambda x:False if x in ignoreItems else True,inputList))`。\n2. 然后遍历上述列表中的元素，将specialItem变成\"special\",`[\"special\" if x == specialItem else x for x in xxx]`\n\n## 参考答案\n{% spoiler Code %}\n{% codeblock lang:python %}\ndef processList2(inputList, specialItem, ignoreItems):\n    ## two method\n    return [\"special\" if x == specialItem else x for x in list(filter(lambda x:False if x in ignoreItems else True,inputList))]\n    return[\"special\" if x == specialItem else x for x in [x for x in inputList if x not in ignoreItems]]\n{% endcodeblock %}\n{% endspoiler %}\n\n# 参考资料\n* [filter() 函数](http://www.runoob.com/python3/python3-func-filter.html)\n* [列表生成式](https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431779637539089fd627094a43a8a7c77e6102e3a811000)\n","slug":"人生苦短,我用Python","published":1,"updated":"2019-03-28T10:45:16.806Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw88000skchir9y82g4h","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>前几日代写留学生作业时遇到了两道很有意思的Python编程题，在此做一记录，主要涉及到一些Python的高级特性:生成器、lambda表达式。</p>\n<h1 id=\"Question-1\"><a href=\"#Question-1\" class=\"headerlink\" title=\"Question 1\"></a>Question 1</h1><h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p><strong>原文:</strong><br>Consider the following function<br><div class=\"spoiler collapsed\"><div class=\"spoiler-title\">Code</div><div class=\"spoiler-content\"><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># listOfNumbers is a list of only numbers</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">processList</span><span class=\"params\">(listOfNumbers)</span>:</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> listOfNumbers:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i&lt;<span class=\"number\">0</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            result.append(i<em>i)</em></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result.append((ii)+<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure></div></div></p>\n<p>First, study and test processList(listOfNumbers) to determine what it does Then rewrite its body so that it accomplishes the same task with a one-line list comprehension. Thus, the resulting function will have exactly two lines, the def line and a return line containing a list comprehension expression.<br><strong>翻译:</strong><br>将给出的一个函数变成两行</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>函数的功能是:遍历listofNumbers中的每一个元素，如果大于等于0，将其变成自己乘以自己，否则变为自己乘自己后再加一。<br>因此，我们可以用到Python中的三元表达式，下面这两种方式是等价的。<br><code>value = true if condition else false</code><br>与<br><div class=\"spoiler collapsed\"><div class=\"spoiler-title\">Code</div><div class=\"spoiler-content\"><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> condition:</span><br><span class=\"line\">    value = true</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    value = false</span><br></pre></td></tr></table></figure></div></div></p>\n<h2 id=\"参考答案\"><a href=\"#参考答案\" class=\"headerlink\" title=\"参考答案\"></a>参考答案</h2><div class=\"spoiler collapsed\"><div class=\"spoiler-title\">Code</div><div class=\"spoiler-content\"><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">processList</span><span class=\"params\">(listOfNumbers)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [i <em> i <span class=\"keyword\">if</span> i &gt;= <span class=\"number\">0</span> <span class=\"keyword\">else</span> i </em> i + <span class=\"number\">1</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> listOfNumbers]</span><br></pre></td></tr></table></figure></div></div>\n<h1 id=\"Question-2\"><a href=\"#Question-2\" class=\"headerlink\" title=\"Question 2\"></a>Question 2</h1><h2 id=\"题意-1\"><a href=\"#题意-1\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p><strong>原文:</strong><br>Implement function processList2(inputList, specialItem, ignoreItems) that returns a new list that contains all the items of inputList (and in the original order) except 1) any that appear in the list ignoreItems, and 2) occurrences of specialItem (if specialItem is not in ignoreItems) should become the string “special” in the new list. Use a one-line list cluoomprehension to construct the new list. Thus, again, the function will have exactly two lines, the def line and a return line containing a list comprehension expression. For example,<br><div class=\"note default no-icon\">\n            <p>processList2([1,2,3,4], 4, [3])<br>[1, 2, ‘special’]<br>processList2([1,2,3,4,True,’dog’], 4, [3,5,4])<br>[1, 2, True, ‘dog’]<br>processList2([1,1,2,2], 1, [2])<br>[‘special’, ‘special’]</p>\n          </div><br><strong>翻译:</strong><br>实现函数processList2(inputList, specialItem, ignoreItems)，对inputList中的元素进行处理，返回一个新列表，但需满足以下两个要求:</p>\n<ol>\n<li>不能是出现在ignoreItems中的元素</li>\n<li>对于与specialItem相同的元素(不能在ignoreItems中出现)，将其变成”special”。</li>\n</ol>\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h2><ol>\n<li>首先将不在ignoreItems中的那些元素筛出来<code>[x for x in inputList if x not in ignoreItems]</code>或<code>list(filter(lambda x:False if x in ignoreItems else True,inputList))</code>。</li>\n<li>然后遍历上述列表中的元素，将specialItem变成”special”,<code>[&quot;special&quot; if x == specialItem else x for x in xxx]</code></li>\n</ol>\n<h2 id=\"参考答案-1\"><a href=\"#参考答案-1\" class=\"headerlink\" title=\"参考答案\"></a>参考答案</h2><div class=\"spoiler collapsed\"><div class=\"spoiler-title\">Code</div><div class=\"spoiler-content\"><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">processList2</span><span class=\"params\">(inputList, specialItem, ignoreItems)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\">## two method</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"string\">“special”</span> <span class=\"keyword\">if</span> x == specialItem <span class=\"keyword\">else</span> x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> list(filter(<span class=\"keyword\">lambda</span> x:<span class=\"literal\">False</span> <span class=\"keyword\">if</span> x <span class=\"keyword\">in</span> ignoreItems <span class=\"keyword\">else</span> <span class=\"literal\">True</span>,inputList))]</span><br><span class=\"line\">    <span class=\"keyword\">return</span>[<span class=\"string\">“special”</span> <span class=\"keyword\">if</span> x == specialItem <span class=\"keyword\">else</span> x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> inputList <span class=\"keyword\">if</span> x <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> ignoreItems]]</span><br></pre></td></tr></table></figure></div></div>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"http://www.runoob.com/python3/python3-func-filter.html\" target=\"_blank\" rel=\"noopener\">filter() 函数</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431779637539089fd627094a43a8a7c77e6102e3a811000\" target=\"_blank\" rel=\"noopener\">列表生成式</a></li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>前几日代写留学生作业时遇到了两道很有意思的Python编程题，在此做一记录，主要涉及到一些Python的高级特性:生成器、lambda表达式。</p>\n<h1 id=\"Question-1\"><a href=\"#Question-1\" class=\"headerlink\" title=\"Question 1\"></a>Question 1</h1><h2 id=\"题意\"><a href=\"#题意\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p><strong>原文:</strong><br>Consider the following function<br><div class=\"spoiler collapsed\"><div class=\"spoiler-title\">Code</div><div class=\"spoiler-content\"><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># listOfNumbers is a list of only numbers</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">processList</span><span class=\"params\">(listOfNumbers)</span>:</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> listOfNumbers:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i&lt;<span class=\"number\">0</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            result.append(i<em>i)</em></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result.append((ii)+<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure></div></div></p>\n<p>First, study and test processList(listOfNumbers) to determine what it does Then rewrite its body so that it accomplishes the same task with a one-line list comprehension. Thus, the resulting function will have exactly two lines, the def line and a return line containing a list comprehension expression.<br><strong>翻译:</strong><br>将给出的一个函数变成两行</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>函数的功能是:遍历listofNumbers中的每一个元素，如果大于等于0，将其变成自己乘以自己，否则变为自己乘自己后再加一。<br>因此，我们可以用到Python中的三元表达式，下面这两种方式是等价的。<br><code>value = true if condition else false</code><br>与<br><div class=\"spoiler collapsed\"><div class=\"spoiler-title\">Code</div><div class=\"spoiler-content\"><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> condition:</span><br><span class=\"line\">    value = true</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    value = false</span><br></pre></td></tr></table></figure></div></div></p>\n<h2 id=\"参考答案\"><a href=\"#参考答案\" class=\"headerlink\" title=\"参考答案\"></a>参考答案</h2><div class=\"spoiler collapsed\"><div class=\"spoiler-title\">Code</div><div class=\"spoiler-content\"><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">processList</span><span class=\"params\">(listOfNumbers)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [i <em> i <span class=\"keyword\">if</span> i &gt;= <span class=\"number\">0</span> <span class=\"keyword\">else</span> i </em> i + <span class=\"number\">1</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> listOfNumbers]</span><br></pre></td></tr></table></figure></div></div>\n<h1 id=\"Question-2\"><a href=\"#Question-2\" class=\"headerlink\" title=\"Question 2\"></a>Question 2</h1><h2 id=\"题意-1\"><a href=\"#题意-1\" class=\"headerlink\" title=\"题意\"></a>题意</h2><p><strong>原文:</strong><br>Implement function processList2(inputList, specialItem, ignoreItems) that returns a new list that contains all the items of inputList (and in the original order) except 1) any that appear in the list ignoreItems, and 2) occurrences of specialItem (if specialItem is not in ignoreItems) should become the string “special” in the new list. Use a one-line list cluoomprehension to construct the new list. Thus, again, the function will have exactly two lines, the def line and a return line containing a list comprehension expression. For example,<br><div class=\"note default no-icon\">\n            <p>processList2([1,2,3,4], 4, [3])<br>[1, 2, ‘special’]<br>processList2([1,2,3,4,True,’dog’], 4, [3,5,4])<br>[1, 2, True, ‘dog’]<br>processList2([1,1,2,2], 1, [2])<br>[‘special’, ‘special’]</p>\n          </div><br><strong>翻译:</strong><br>实现函数processList2(inputList, specialItem, ignoreItems)，对inputList中的元素进行处理，返回一个新列表，但需满足以下两个要求:</p>\n<ol>\n<li>不能是出现在ignoreItems中的元素</li>\n<li>对于与specialItem相同的元素(不能在ignoreItems中出现)，将其变成”special”。</li>\n</ol>\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h2><ol>\n<li>首先将不在ignoreItems中的那些元素筛出来<code>[x for x in inputList if x not in ignoreItems]</code>或<code>list(filter(lambda x:False if x in ignoreItems else True,inputList))</code>。</li>\n<li>然后遍历上述列表中的元素，将specialItem变成”special”,<code>[&quot;special&quot; if x == specialItem else x for x in xxx]</code></li>\n</ol>\n<h2 id=\"参考答案-1\"><a href=\"#参考答案-1\" class=\"headerlink\" title=\"参考答案\"></a>参考答案</h2><div class=\"spoiler collapsed\"><div class=\"spoiler-title\">Code</div><div class=\"spoiler-content\"><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">processList2</span><span class=\"params\">(inputList, specialItem, ignoreItems)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\">## two method</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"string\">“special”</span> <span class=\"keyword\">if</span> x == specialItem <span class=\"keyword\">else</span> x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> list(filter(<span class=\"keyword\">lambda</span> x:<span class=\"literal\">False</span> <span class=\"keyword\">if</span> x <span class=\"keyword\">in</span> ignoreItems <span class=\"keyword\">else</span> <span class=\"literal\">True</span>,inputList))]</span><br><span class=\"line\">    <span class=\"keyword\">return</span>[<span class=\"string\">“special”</span> <span class=\"keyword\">if</span> x == specialItem <span class=\"keyword\">else</span> x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> inputList <span class=\"keyword\">if</span> x <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> ignoreItems]]</span><br></pre></td></tr></table></figure></div></div>\n<h1 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h1><ul>\n<li><a href=\"http://www.runoob.com/python3/python3-func-filter.html\" target=\"_blank\" rel=\"noopener\">filter() 函数</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431779637539089fd627094a43a8a7c77e6102e3a811000\" target=\"_blank\" rel=\"noopener\">列表生成式</a></li>\n</ul>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"人生苦短，我用Python","path":"2604890615.html","eyeCatchImage":null,"excerpt":null,"date":"2019-03-19T14:01:33.000Z","pv":0,"totalPV":0,"categories":"python","tags":["Python","lambda"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"利用Python画小树和森林（宽度优先绘制+深度优先绘制)","abbrlink":15900,"date":"2017-12-02T12:57:17.000Z","_content":"在中M上看嵩天老师的[《Python语言程序设计》](http://www.icourse163.org/learn/BIT-268001)时,视频中给出了宽度优先绘制法的代码,仅提了一下还有另外一种画法(深度优先绘制法).联系到最近学的数据结构，摸索出了另一种画法。\n\n## 源码：\n```Python\n'''\nCreated on Dec 2, 2017\n\n@author: QiZhao\n'''\n# drawtree.py\n \nfrom turtle import Turtle\n \ndef tree(plist, l, a, f):\n    #宽度优先绘制法\n    \"\"\" plist is list of pens\n    l is length of branch\n    a is half of the angle between 2 branches\n    f is factor by which branch is shortened\n    from level to level.\"\"\"\n    if l > 5:\n        lst = []\n        for p in plist:\n            p.forward(l)#Move the turtle forward by the specified distance, in the direction the turtle is headed.\n            q = p.clone()#Create and return a clone of the turtle with same position, heading and turtle properties.\n            p.left(a) #Turn turtle left by angle units\n            q.right(a)# turn turtle right by angle units, nits are by default degrees, but can be set via the degrees() and radians() functions.\n            lst.append(p)\n            lst.append(q)\n        tree(lst, l*f, a, f)\n        \ndef tree2(p,l,a,f):\n    #深度优先绘制法\n    if l>5:\n        p.forward(l)\n        q=p.clone()\n        p.left(a)\n        q.right(a)\n        tree2(p, l*f, a, f)\n        tree2(q, l*f, a, f)\n\ndef maketree(x,y):     \n    p = Turtle()\n    p.color(\"blue\")\n    p.pensize(5)\n    p.setundobuffer(None)\n    p.hideturtle() \n    #Make the turtle invisible. It’s a good idea to do this while you’re in the middle of doing some complex drawing,\n    #because hiding the turtle speeds up the drawing observably.\n    #p.speed(9)\n    p.getscreen().tracer(1,0)#Return the TurtleScreen object the turtle is drawing on.\n    #TurtleScreen methods can then be called for that object.\n    p.left(90)# Turn turtle left by angle units. direction\n \n    p.penup() #Pull the pen up – no drawing when moving.\n    p.goto(x,y)#Move turtle to an absolute position. If the pen is down, draw line. Do not change the turtle’s orientation.\n    p.pendown()# Pull the pen down – drawing when moving. \n    #这三条语句是一个组合相当于先把笔收起来再移动到指定位置，再把笔放下开始画.否则turtle一移动就会自动的把线画出来\n \n    tree([p], 100, 65, 0.6375)\n    \n    p.penup() \n    p.setheading(90)#Set the orientation of the turtle to to_angle.\n    p.goto(x,y)\n    p.down()\n    p.color(\"green\")\n    \n    tree2(p, 100, 65, 0.6375) \n    \ndef main():\n    maketree(-200, -200)\n    maketree(0, 0)\n    maketree(200,-200)\n    \nmain()\n```\n## 效果图\n![](/images/20171202204712994.jpg)","source":"_posts/利用Python画小树和森林（宽度优先绘制+深度优先绘制).md","raw":"---\ntitle: 利用Python画小树和森林（宽度优先绘制+深度优先绘制)\ncategories: Python\ntags:\n  - Python\nabbrlink: 15900\ndate: 2017-12-02 20:57:17\n---\n在中M上看嵩天老师的[《Python语言程序设计》](http://www.icourse163.org/learn/BIT-268001)时,视频中给出了宽度优先绘制法的代码,仅提了一下还有另外一种画法(深度优先绘制法).联系到最近学的数据结构，摸索出了另一种画法。\n\n## 源码：\n```Python\n'''\nCreated on Dec 2, 2017\n\n@author: QiZhao\n'''\n# drawtree.py\n \nfrom turtle import Turtle\n \ndef tree(plist, l, a, f):\n    #宽度优先绘制法\n    \"\"\" plist is list of pens\n    l is length of branch\n    a is half of the angle between 2 branches\n    f is factor by which branch is shortened\n    from level to level.\"\"\"\n    if l > 5:\n        lst = []\n        for p in plist:\n            p.forward(l)#Move the turtle forward by the specified distance, in the direction the turtle is headed.\n            q = p.clone()#Create and return a clone of the turtle with same position, heading and turtle properties.\n            p.left(a) #Turn turtle left by angle units\n            q.right(a)# turn turtle right by angle units, nits are by default degrees, but can be set via the degrees() and radians() functions.\n            lst.append(p)\n            lst.append(q)\n        tree(lst, l*f, a, f)\n        \ndef tree2(p,l,a,f):\n    #深度优先绘制法\n    if l>5:\n        p.forward(l)\n        q=p.clone()\n        p.left(a)\n        q.right(a)\n        tree2(p, l*f, a, f)\n        tree2(q, l*f, a, f)\n\ndef maketree(x,y):     \n    p = Turtle()\n    p.color(\"blue\")\n    p.pensize(5)\n    p.setundobuffer(None)\n    p.hideturtle() \n    #Make the turtle invisible. It’s a good idea to do this while you’re in the middle of doing some complex drawing,\n    #because hiding the turtle speeds up the drawing observably.\n    #p.speed(9)\n    p.getscreen().tracer(1,0)#Return the TurtleScreen object the turtle is drawing on.\n    #TurtleScreen methods can then be called for that object.\n    p.left(90)# Turn turtle left by angle units. direction\n \n    p.penup() #Pull the pen up – no drawing when moving.\n    p.goto(x,y)#Move turtle to an absolute position. If the pen is down, draw line. Do not change the turtle’s orientation.\n    p.pendown()# Pull the pen down – drawing when moving. \n    #这三条语句是一个组合相当于先把笔收起来再移动到指定位置，再把笔放下开始画.否则turtle一移动就会自动的把线画出来\n \n    tree([p], 100, 65, 0.6375)\n    \n    p.penup() \n    p.setheading(90)#Set the orientation of the turtle to to_angle.\n    p.goto(x,y)\n    p.down()\n    p.color(\"green\")\n    \n    tree2(p, 100, 65, 0.6375) \n    \ndef main():\n    maketree(-200, -200)\n    maketree(0, 0)\n    maketree(200,-200)\n    \nmain()\n```\n## 效果图\n![](/images/20171202204712994.jpg)","slug":"利用Python画小树和森林（宽度优先绘制+深度优先绘制)","published":1,"updated":"2019-03-28T10:45:16.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8c000wkchiakv529a2","content":"<p>在中M上看嵩天老师的<a href=\"http://www.icourse163.org/learn/BIT-268001\" target=\"_blank\" rel=\"noopener\">《Python语言程序设计》</a>时,视频中给出了宽度优先绘制法的代码,仅提了一下还有另外一种画法(深度优先绘制法).联系到最近学的数据结构，摸索出了另一种画法。</p>\n<h2 id=\"源码：\"><a href=\"#源码：\" class=\"headerlink\" title=\"源码：\"></a>源码：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Created on Dec 2, 2017</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">@author: QiZhao</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"comment\"># drawtree.py</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">from</span> turtle <span class=\"keyword\">import</span> Turtle</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tree</span><span class=\"params\">(plist, l, a, f)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\">#宽度优先绘制法</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\" plist is list of pens</span></span><br><span class=\"line\"><span class=\"string\">    l is length of branch</span></span><br><span class=\"line\"><span class=\"string\">    a is half of the angle between 2 branches</span></span><br><span class=\"line\"><span class=\"string\">    f is factor by which branch is shortened</span></span><br><span class=\"line\"><span class=\"string\">    from level to level.\"\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> l &gt; <span class=\"number\">5</span>:</span><br><span class=\"line\">        lst = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> plist:</span><br><span class=\"line\">            p.forward(l)<span class=\"comment\">#Move the turtle forward by the specified distance, in the direction the turtle is headed.</span></span><br><span class=\"line\">            q = p.clone()<span class=\"comment\">#Create and return a clone of the turtle with same position, heading and turtle properties.</span></span><br><span class=\"line\">            p.left(a) <span class=\"comment\">#Turn turtle left by angle units</span></span><br><span class=\"line\">            q.right(a)<span class=\"comment\"># turn turtle right by angle units, nits are by default degrees, but can be set via the degrees() and radians() functions.</span></span><br><span class=\"line\">            lst.append(p)</span><br><span class=\"line\">            lst.append(q)</span><br><span class=\"line\">        tree(lst, l*f, a, f)</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tree2</span><span class=\"params\">(p,l,a,f)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\">#深度优先绘制法</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> l&gt;<span class=\"number\">5</span>:</span><br><span class=\"line\">        p.forward(l)</span><br><span class=\"line\">        q=p.clone()</span><br><span class=\"line\">        p.left(a)</span><br><span class=\"line\">        q.right(a)</span><br><span class=\"line\">        tree2(p, l*f, a, f)</span><br><span class=\"line\">        tree2(q, l*f, a, f)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">maketree</span><span class=\"params\">(x,y)</span>:</span>     </span><br><span class=\"line\">    p = Turtle()</span><br><span class=\"line\">    p.color(<span class=\"string\">\"blue\"</span>)</span><br><span class=\"line\">    p.pensize(<span class=\"number\">5</span>)</span><br><span class=\"line\">    p.setundobuffer(<span class=\"literal\">None</span>)</span><br><span class=\"line\">    p.hideturtle() </span><br><span class=\"line\">    <span class=\"comment\">#Make the turtle invisible. It’s a good idea to do this while you’re in the middle of doing some complex drawing,</span></span><br><span class=\"line\">    <span class=\"comment\">#because hiding the turtle speeds up the drawing observably.</span></span><br><span class=\"line\">    <span class=\"comment\">#p.speed(9)</span></span><br><span class=\"line\">    p.getscreen().tracer(<span class=\"number\">1</span>,<span class=\"number\">0</span>)<span class=\"comment\">#Return the TurtleScreen object the turtle is drawing on.</span></span><br><span class=\"line\">    <span class=\"comment\">#TurtleScreen methods can then be called for that object.</span></span><br><span class=\"line\">    p.left(<span class=\"number\">90</span>)<span class=\"comment\"># Turn turtle left by angle units. direction</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    p.penup() <span class=\"comment\">#Pull the pen up – no drawing when moving.</span></span><br><span class=\"line\">    p.goto(x,y)<span class=\"comment\">#Move turtle to an absolute position. If the pen is down, draw line. Do not change the turtle’s orientation.</span></span><br><span class=\"line\">    p.pendown()<span class=\"comment\"># Pull the pen down – drawing when moving. </span></span><br><span class=\"line\">    <span class=\"comment\">#这三条语句是一个组合相当于先把笔收起来再移动到指定位置，再把笔放下开始画.否则turtle一移动就会自动的把线画出来</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    tree([p], <span class=\"number\">100</span>, <span class=\"number\">65</span>, <span class=\"number\">0.6375</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    p.penup() </span><br><span class=\"line\">    p.setheading(<span class=\"number\">90</span>)<span class=\"comment\">#Set the orientation of the turtle to to_angle.</span></span><br><span class=\"line\">    p.goto(x,y)</span><br><span class=\"line\">    p.down()</span><br><span class=\"line\">    p.color(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    tree2(p, <span class=\"number\">100</span>, <span class=\"number\">65</span>, <span class=\"number\">0.6375</span>) </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    maketree(<span class=\"number\">-200</span>, <span class=\"number\">-200</span>)</span><br><span class=\"line\">    maketree(<span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    maketree(<span class=\"number\">200</span>,<span class=\"number\">-200</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/20171202204712994.jpg\" alt></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<p>在中M上看嵩天老师的<a href=\"http://www.icourse163.org/learn/BIT-268001\" target=\"_blank\" rel=\"noopener\">《Python语言程序设计》</a>时,视频中给出了宽度优先绘制法的代码,仅提了一下还有另外一种画法(深度优先绘制法).联系到最近学的数据结构，摸索出了另一种画法。</p>\n<h2 id=\"源码：\"><a href=\"#源码：\" class=\"headerlink\" title=\"源码：\"></a>源码：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Created on Dec 2, 2017</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">@author: QiZhao</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"comment\"># drawtree.py</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">from</span> turtle <span class=\"keyword\">import</span> Turtle</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tree</span><span class=\"params\">(plist, l, a, f)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\">#宽度优先绘制法</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\" plist is list of pens</span></span><br><span class=\"line\"><span class=\"string\">    l is length of branch</span></span><br><span class=\"line\"><span class=\"string\">    a is half of the angle between 2 branches</span></span><br><span class=\"line\"><span class=\"string\">    f is factor by which branch is shortened</span></span><br><span class=\"line\"><span class=\"string\">    from level to level.\"\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> l &gt; <span class=\"number\">5</span>:</span><br><span class=\"line\">        lst = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> plist:</span><br><span class=\"line\">            p.forward(l)<span class=\"comment\">#Move the turtle forward by the specified distance, in the direction the turtle is headed.</span></span><br><span class=\"line\">            q = p.clone()<span class=\"comment\">#Create and return a clone of the turtle with same position, heading and turtle properties.</span></span><br><span class=\"line\">            p.left(a) <span class=\"comment\">#Turn turtle left by angle units</span></span><br><span class=\"line\">            q.right(a)<span class=\"comment\"># turn turtle right by angle units, nits are by default degrees, but can be set via the degrees() and radians() functions.</span></span><br><span class=\"line\">            lst.append(p)</span><br><span class=\"line\">            lst.append(q)</span><br><span class=\"line\">        tree(lst, l*f, a, f)</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tree2</span><span class=\"params\">(p,l,a,f)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\">#深度优先绘制法</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> l&gt;<span class=\"number\">5</span>:</span><br><span class=\"line\">        p.forward(l)</span><br><span class=\"line\">        q=p.clone()</span><br><span class=\"line\">        p.left(a)</span><br><span class=\"line\">        q.right(a)</span><br><span class=\"line\">        tree2(p, l*f, a, f)</span><br><span class=\"line\">        tree2(q, l*f, a, f)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">maketree</span><span class=\"params\">(x,y)</span>:</span>     </span><br><span class=\"line\">    p = Turtle()</span><br><span class=\"line\">    p.color(<span class=\"string\">\"blue\"</span>)</span><br><span class=\"line\">    p.pensize(<span class=\"number\">5</span>)</span><br><span class=\"line\">    p.setundobuffer(<span class=\"literal\">None</span>)</span><br><span class=\"line\">    p.hideturtle() </span><br><span class=\"line\">    <span class=\"comment\">#Make the turtle invisible. It’s a good idea to do this while you’re in the middle of doing some complex drawing,</span></span><br><span class=\"line\">    <span class=\"comment\">#because hiding the turtle speeds up the drawing observably.</span></span><br><span class=\"line\">    <span class=\"comment\">#p.speed(9)</span></span><br><span class=\"line\">    p.getscreen().tracer(<span class=\"number\">1</span>,<span class=\"number\">0</span>)<span class=\"comment\">#Return the TurtleScreen object the turtle is drawing on.</span></span><br><span class=\"line\">    <span class=\"comment\">#TurtleScreen methods can then be called for that object.</span></span><br><span class=\"line\">    p.left(<span class=\"number\">90</span>)<span class=\"comment\"># Turn turtle left by angle units. direction</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    p.penup() <span class=\"comment\">#Pull the pen up – no drawing when moving.</span></span><br><span class=\"line\">    p.goto(x,y)<span class=\"comment\">#Move turtle to an absolute position. If the pen is down, draw line. Do not change the turtle’s orientation.</span></span><br><span class=\"line\">    p.pendown()<span class=\"comment\"># Pull the pen down – drawing when moving. </span></span><br><span class=\"line\">    <span class=\"comment\">#这三条语句是一个组合相当于先把笔收起来再移动到指定位置，再把笔放下开始画.否则turtle一移动就会自动的把线画出来</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    tree([p], <span class=\"number\">100</span>, <span class=\"number\">65</span>, <span class=\"number\">0.6375</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    p.penup() </span><br><span class=\"line\">    p.setheading(<span class=\"number\">90</span>)<span class=\"comment\">#Set the orientation of the turtle to to_angle.</span></span><br><span class=\"line\">    p.goto(x,y)</span><br><span class=\"line\">    p.down()</span><br><span class=\"line\">    p.color(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    tree2(p, <span class=\"number\">100</span>, <span class=\"number\">65</span>, <span class=\"number\">0.6375</span>) </span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    maketree(<span class=\"number\">-200</span>, <span class=\"number\">-200</span>)</span><br><span class=\"line\">    maketree(<span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    maketree(<span class=\"number\">200</span>,<span class=\"number\">-200</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/20171202204712994.jpg\" alt></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/20171202204712994.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"利用Python画小树和森林（宽度优先绘制+深度优先绘制)","path":"15900.html","eyeCatchImage":"/images/20171202204712994.jpg","excerpt":null,"date":"2017-12-02T12:57:17.000Z","pv":0,"totalPV":0,"categories":"Python","tags":["Python"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"利用Python的turtle库绘制玫瑰","abbrlink":17747,"date":"2017-11-19T02:58:17.000Z","_content":"turtle的文档：[](https://docs.python.org/3/library/turtle.html)\n用Python的turtle库绘图是很简单的,闲来无事就画了一个玫瑰花,下面奉上源码....\n## 源码：\n```Python\n'''\nCreated on Nov 18, 2017\n\n@author: QiZhao\n'''\nimport turtle\n\n# 设置初始位置\nturtle.penup()\nturtle.left(90)\nturtle.fd(200)\nturtle.pendown()\nturtle.right(90)\n\n# 花蕊\nturtle.fillcolor(\"red\")\nturtle.begin_fill()\nturtle.circle(10,180)\nturtle.circle(25,110)\nturtle.left(50)\nturtle.circle(60,45)\nturtle.circle(20,170)\nturtle.right(24)\nturtle.fd(30)\nturtle.left(10)\nturtle.circle(30,110)\nturtle.fd(20)\nturtle.left(40)\nturtle.circle(90,70)\nturtle.circle(30,150)\nturtle.right(30)\nturtle.fd(15)\nturtle.circle(80,90)\nturtle.left(15)\nturtle.fd(45)\nturtle.right(165)\nturtle.fd(20)\nturtle.left(155)\nturtle.circle(150,80)\nturtle.left(50)\nturtle.circle(150,90)\nturtle.end_fill()\n \n# 花瓣1\nturtle.left(150)\nturtle.circle(-90,70)\nturtle.left(20)\nturtle.circle(75,105)\nturtle.setheading(60)\nturtle.circle(80,98)\nturtle.circle(-90,40)\n\n# 花瓣2\nturtle.left(180)\nturtle.circle(90,40)\nturtle.circle(-80,98)\nturtle.setheading(-83)\n\n# 叶子1\nturtle.fd(30)\nturtle.left(90)\nturtle.fd(25)\nturtle.left(45)\nturtle.fillcolor(\"green\")\nturtle.begin_fill()\nturtle.circle(-80,90)\nturtle.right(90)\nturtle.circle(-80,90)\nturtle.end_fill()\n \nturtle.right(135)\nturtle.fd(60)\nturtle.left(180)\nturtle.fd(85)\nturtle.left(90)\nturtle.fd(80)\n \n# 叶子2\nturtle.right(90)\nturtle.right(45)\nturtle.fillcolor(\"green\")\nturtle.begin_fill()\nturtle.circle(80,90)\nturtle.left(90)\nturtle.circle(80,90)\nturtle.end_fill()\n \nturtle.left(135)\nturtle.fd(60)\nturtle.left(180)\nturtle.fd(60)\nturtle.right(90)\nturtle.circle(200,60)\n```\n## 效果图\n![](/images/20171119110410660.jpg)\n","source":"_posts/利用Python的turtle库绘制玫瑰.md","raw":"---\ntitle: 利用Python的turtle库绘制玫瑰\ncategories: Python\ntags:\n  - Python\nabbrlink: 17747\ndate: 2017-11-19 10:58:17\n---\nturtle的文档：[](https://docs.python.org/3/library/turtle.html)\n用Python的turtle库绘图是很简单的,闲来无事就画了一个玫瑰花,下面奉上源码....\n## 源码：\n```Python\n'''\nCreated on Nov 18, 2017\n\n@author: QiZhao\n'''\nimport turtle\n\n# 设置初始位置\nturtle.penup()\nturtle.left(90)\nturtle.fd(200)\nturtle.pendown()\nturtle.right(90)\n\n# 花蕊\nturtle.fillcolor(\"red\")\nturtle.begin_fill()\nturtle.circle(10,180)\nturtle.circle(25,110)\nturtle.left(50)\nturtle.circle(60,45)\nturtle.circle(20,170)\nturtle.right(24)\nturtle.fd(30)\nturtle.left(10)\nturtle.circle(30,110)\nturtle.fd(20)\nturtle.left(40)\nturtle.circle(90,70)\nturtle.circle(30,150)\nturtle.right(30)\nturtle.fd(15)\nturtle.circle(80,90)\nturtle.left(15)\nturtle.fd(45)\nturtle.right(165)\nturtle.fd(20)\nturtle.left(155)\nturtle.circle(150,80)\nturtle.left(50)\nturtle.circle(150,90)\nturtle.end_fill()\n \n# 花瓣1\nturtle.left(150)\nturtle.circle(-90,70)\nturtle.left(20)\nturtle.circle(75,105)\nturtle.setheading(60)\nturtle.circle(80,98)\nturtle.circle(-90,40)\n\n# 花瓣2\nturtle.left(180)\nturtle.circle(90,40)\nturtle.circle(-80,98)\nturtle.setheading(-83)\n\n# 叶子1\nturtle.fd(30)\nturtle.left(90)\nturtle.fd(25)\nturtle.left(45)\nturtle.fillcolor(\"green\")\nturtle.begin_fill()\nturtle.circle(-80,90)\nturtle.right(90)\nturtle.circle(-80,90)\nturtle.end_fill()\n \nturtle.right(135)\nturtle.fd(60)\nturtle.left(180)\nturtle.fd(85)\nturtle.left(90)\nturtle.fd(80)\n \n# 叶子2\nturtle.right(90)\nturtle.right(45)\nturtle.fillcolor(\"green\")\nturtle.begin_fill()\nturtle.circle(80,90)\nturtle.left(90)\nturtle.circle(80,90)\nturtle.end_fill()\n \nturtle.left(135)\nturtle.fd(60)\nturtle.left(180)\nturtle.fd(60)\nturtle.right(90)\nturtle.circle(200,60)\n```\n## 效果图\n![](/images/20171119110410660.jpg)\n","slug":"利用Python的turtle库绘制玫瑰","published":1,"updated":"2019-03-28T10:45:16.809Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8d000ykchijdqee6dq","content":"<p>turtle的文档：<a href=\"https://docs.python.org/3/library/turtle.html\" target=\"_blank\" rel=\"noopener\"></a><br>用Python的turtle库绘图是很简单的,闲来无事就画了一个玫瑰花,下面奉上源码….</p>\n<h2 id=\"源码：\"><a href=\"#源码：\" class=\"headerlink\" title=\"源码：\"></a>源码：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Created on Nov 18, 2017</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">@author: QiZhao</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置初始位置</span></span><br><span class=\"line\">turtle.penup()</span><br><span class=\"line\">turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">200</span>)</span><br><span class=\"line\">turtle.pendown()</span><br><span class=\"line\">turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 花蕊</span></span><br><span class=\"line\">turtle.fillcolor(<span class=\"string\">\"red\"</span>)</span><br><span class=\"line\">turtle.begin_fill()</span><br><span class=\"line\">turtle.circle(<span class=\"number\">10</span>,<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">25</span>,<span class=\"number\">110</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">50</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">60</span>,<span class=\"number\">45</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">20</span>,<span class=\"number\">170</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">24</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">30</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">10</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">30</span>,<span class=\"number\">110</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">20</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">40</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">90</span>,<span class=\"number\">70</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">30</span>,<span class=\"number\">150</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">30</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">15</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">15</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">45</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">165</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">20</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">155</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">150</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">50</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">150</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.end_fill()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 花瓣1</span></span><br><span class=\"line\">turtle.left(<span class=\"number\">150</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-90</span>,<span class=\"number\">70</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">20</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">75</span>,<span class=\"number\">105</span>)</span><br><span class=\"line\">turtle.setheading(<span class=\"number\">60</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">80</span>,<span class=\"number\">98</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-90</span>,<span class=\"number\">40</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 花瓣2</span></span><br><span class=\"line\">turtle.left(<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">90</span>,<span class=\"number\">40</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-80</span>,<span class=\"number\">98</span>)</span><br><span class=\"line\">turtle.setheading(<span class=\"number\">-83</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 叶子1</span></span><br><span class=\"line\">turtle.fd(<span class=\"number\">30</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">25</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">45</span>)</span><br><span class=\"line\">turtle.fillcolor(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">turtle.begin_fill()</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.end_fill()</span><br><span class=\"line\"> </span><br><span class=\"line\">turtle.right(<span class=\"number\">135</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">85</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">80</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 叶子2</span></span><br><span class=\"line\">turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">45</span>)</span><br><span class=\"line\">turtle.fillcolor(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">turtle.begin_fill()</span><br><span class=\"line\">turtle.circle(<span class=\"number\">80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.end_fill()</span><br><span class=\"line\"> </span><br><span class=\"line\">turtle.left(<span class=\"number\">135</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">200</span>,<span class=\"number\">60</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/20171119110410660.jpg\" alt></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<p>turtle的文档：<a href=\"https://docs.python.org/3/library/turtle.html\" target=\"_blank\" rel=\"noopener\"></a><br>用Python的turtle库绘图是很简单的,闲来无事就画了一个玫瑰花,下面奉上源码….</p>\n<h2 id=\"源码：\"><a href=\"#源码：\" class=\"headerlink\" title=\"源码：\"></a>源码：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Created on Nov 18, 2017</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">@author: QiZhao</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置初始位置</span></span><br><span class=\"line\">turtle.penup()</span><br><span class=\"line\">turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">200</span>)</span><br><span class=\"line\">turtle.pendown()</span><br><span class=\"line\">turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 花蕊</span></span><br><span class=\"line\">turtle.fillcolor(<span class=\"string\">\"red\"</span>)</span><br><span class=\"line\">turtle.begin_fill()</span><br><span class=\"line\">turtle.circle(<span class=\"number\">10</span>,<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">25</span>,<span class=\"number\">110</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">50</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">60</span>,<span class=\"number\">45</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">20</span>,<span class=\"number\">170</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">24</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">30</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">10</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">30</span>,<span class=\"number\">110</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">20</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">40</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">90</span>,<span class=\"number\">70</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">30</span>,<span class=\"number\">150</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">30</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">15</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">15</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">45</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">165</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">20</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">155</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">150</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">50</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">150</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.end_fill()</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 花瓣1</span></span><br><span class=\"line\">turtle.left(<span class=\"number\">150</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-90</span>,<span class=\"number\">70</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">20</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">75</span>,<span class=\"number\">105</span>)</span><br><span class=\"line\">turtle.setheading(<span class=\"number\">60</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">80</span>,<span class=\"number\">98</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-90</span>,<span class=\"number\">40</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 花瓣2</span></span><br><span class=\"line\">turtle.left(<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">90</span>,<span class=\"number\">40</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-80</span>,<span class=\"number\">98</span>)</span><br><span class=\"line\">turtle.setheading(<span class=\"number\">-83</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 叶子1</span></span><br><span class=\"line\">turtle.fd(<span class=\"number\">30</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">25</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">45</span>)</span><br><span class=\"line\">turtle.fillcolor(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">turtle.begin_fill()</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">-80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.end_fill()</span><br><span class=\"line\"> </span><br><span class=\"line\">turtle.right(<span class=\"number\">135</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">85</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">80</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 叶子2</span></span><br><span class=\"line\">turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">45</span>)</span><br><span class=\"line\">turtle.fillcolor(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">turtle.begin_fill()</span><br><span class=\"line\">turtle.circle(<span class=\"number\">80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">80</span>,<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.end_fill()</span><br><span class=\"line\"> </span><br><span class=\"line\">turtle.left(<span class=\"number\">135</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">turtle.left(<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">60</span>)</span><br><span class=\"line\">turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">200</span>,<span class=\"number\">60</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/20171119110410660.jpg\" alt></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/20171119110410660.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"利用Python的turtle库绘制玫瑰","path":"17747.html","eyeCatchImage":"/images/20171119110410660.jpg","excerpt":null,"date":"2017-11-19T02:58:17.000Z","pv":0,"totalPV":0,"categories":"Python","tags":["Python"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"期末考试_细胞自动机","abbrlink":6200,"date":"2018-01-08T09:31:13.000Z","_content":"## 题目内容：\n这是细胞自动机的非图形版本。细胞自动机是指在一个二维网格内，每一个网格是一个细胞。每个细胞有活和死两种状态。\n初始时刻，有些细胞是活的，有些细胞是死的。自动机的每一步，根据每个细胞周围8个格子内的其他细胞的生存情况决定这个细胞下一步是否存活。具体的规则如下：\n+ 如果该细胞现在是活的，并且周围8个格子中有2或3个活着的细胞，则继续存活；如果周围8个格子中的活着的细胞数量少于2个或多于3个，则死亡；\n+ 如果该细胞现在是死的，并且周围8个格子中正好有3个活着的细胞，则细胞复活。\n+ 位于整个网格边缘和顶角的细胞，它的周围细胞可能少于8个。即越过网格的边界不再有细胞。\n+ 每个细胞的生死变化，都不会影响当前这一步周围的细胞，只会在下一步表现出来。\n\n提示：课程中的代码与上一句描述不同。\n\n## 输入格式:\n首先输入两个正整数，范围为[3,102]，依次表示网格的宽度和高度。\n然后输入多组正整数，依次表示一个活着的细胞的网格位置，每组数字中，第一个表示行号，第二个表示列号，均从0开始编号。\n最后，以“-1 -1”表示不再有活着的细胞。-1 -1不是有效的位置。\n然后，以一个正整数，范围为[1,10000]，表示要求细胞自动机执行的步数。\n\n## 输出格式：\n输出一个正整数，表示执行完毕后，剩下的活着的细胞的数量。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>3 3\n1 1 1 2 0 1 2 1\n-1 -1\n1\n</p></div>\n## 输出样例：\n<div class=\"note default no-icon\"><p>7\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class The_final_exam\n{\n\tprivate int times;\n\tprivate int width;\n\tprivate int height;\n\tint old_field[][];\n\tint new_field[][];\n\n\tScanner in = new Scanner(System.in);\n\n\tvoid Init()\n\t{\n\t\twidth = in.nextInt();\n\t\theight = in.nextInt();\n\t\told_field = new int[height+2][width+2];\n\t\tnew_field = new int[height+2][width+2];\n\t\t\n\t\t// 初始化为0\n\t\tfor (int i = 0; i < height+2; i++)\n\t\t\tfor (int j = 0; j < width+2; j++)\n\t\t\t{\n\t\t\t\told_field[i][j] = 0;\n\t\t\t\told_field[i][j] = 0;\n\t\t\t}\n\t\t\n\t\t//读入活的细胞的位置\n\t\twhile(true)\n\t\t{\n\t\t\tint i=in.nextInt();\n\t\t\tint j=in.nextInt();\n\t\t\tif(i==-1&&j==-1)\n\t\t\t\tbreak;\n\t\t\told_field[i+1][j+1]=1;\n\t\t\tnew_field[i+1][j+1]=1;\n\t\t}\n\t\t//读入执行步数\n\t\ttimes = in.nextInt();\n\t}\n\n\tvoid run()\n\t{\n\t\tfor(int k=0;k<times;k++)\n\t\t{\n\t\t\tfor(int i=1;i<height+1;i++)\n\t\t\t{\n\t\t\t\tfor(int j=1;j<width+1;j++)\n\t\t\t\t{\n\t\t\t\t\tint count=getNeighbor(i, j);\n\t\t\t\t\tif(old_field[i][j]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(count==3)//细胞复活\n\t\t\t\t\t\t\tnew_field[i][j]=1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!(count==2||count==3))//细胞死亡\n\t\t\t\t\t\t\tnew_field[i][j]=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//copy\n\t\t\tfor (int i = 1; i < height+1; i++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < width+1; j++)\n\t\t\t\t{\n\t\t\t\t\told_field[i][j] = new_field[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n\tint getNeighbor(int i,int j)\n\t{\n\t\t//计算位置为i，j的细胞周围活的细胞的数量\n\t\tint temp=0;\n\t\ttemp+=old_field[i-1][j]+old_field[i+1][j]+old_field[i][j-1]+old_field[i][j+1];\n\t\ttemp+=old_field[i-1][j-1]+old_field[i-1][j+1]+old_field[i+1][j-1]+old_field[i+1][j+1];\n\t\treturn temp;\n\t}\n\t\n\tint Count()\n\t{\n\t\t//计算活着的细胞的数量\n\t\tint count=0;\n\t\tfor (int i = 1; i < height+1; i++)\n\t\t{\n\t\t\tfor (int j = 1; j < width+1; j++)\n\t\t\t{\n\t\t\t\tif(old_field[i][j]==1)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\tvoid Test()\n\t{\n\t\tInit();\n\t\trun();\n\t\tSystem.out.println(Count());\n\t}\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tnew The_final_exam().Test();\n\t}\n\n}\n\n```\n## 思路：\n简单模拟题....\n用两个二维数组来存细胞，细胞自动机每执行一次，遍历数组1一次，对数组1中每个细胞的状态进行判断，计算周围活着的细胞的数量，然后对数组2进行相应的操作，所有操作完成后将数组2拷贝至数组1。\n这里判断细胞周围活着的细胞数量时有一个小技巧，不需要对每种边界情况进行处理,可以将数组开大点，下标从1开始使用，相当于在所使用的有效数组空间外面绕了一圈，避免数组越界。","source":"_posts/期末考试_细胞自动机.md","raw":"---\ntitle: 期末考试_细胞自动机\ncategories: 面向对象程序设计_Java语言_翁恺\ntags:\n  - Java\nabbrlink: 6200\ndate: 2018-01-08 17:31:13\n---\n## 题目内容：\n这是细胞自动机的非图形版本。细胞自动机是指在一个二维网格内，每一个网格是一个细胞。每个细胞有活和死两种状态。\n初始时刻，有些细胞是活的，有些细胞是死的。自动机的每一步，根据每个细胞周围8个格子内的其他细胞的生存情况决定这个细胞下一步是否存活。具体的规则如下：\n+ 如果该细胞现在是活的，并且周围8个格子中有2或3个活着的细胞，则继续存活；如果周围8个格子中的活着的细胞数量少于2个或多于3个，则死亡；\n+ 如果该细胞现在是死的，并且周围8个格子中正好有3个活着的细胞，则细胞复活。\n+ 位于整个网格边缘和顶角的细胞，它的周围细胞可能少于8个。即越过网格的边界不再有细胞。\n+ 每个细胞的生死变化，都不会影响当前这一步周围的细胞，只会在下一步表现出来。\n\n提示：课程中的代码与上一句描述不同。\n\n## 输入格式:\n首先输入两个正整数，范围为[3,102]，依次表示网格的宽度和高度。\n然后输入多组正整数，依次表示一个活着的细胞的网格位置，每组数字中，第一个表示行号，第二个表示列号，均从0开始编号。\n最后，以“-1 -1”表示不再有活着的细胞。-1 -1不是有效的位置。\n然后，以一个正整数，范围为[1,10000]，表示要求细胞自动机执行的步数。\n\n## 输出格式：\n输出一个正整数，表示执行完毕后，剩下的活着的细胞的数量。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>3 3\n1 1 1 2 0 1 2 1\n-1 -1\n1\n</p></div>\n## 输出样例：\n<div class=\"note default no-icon\"><p>7\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class The_final_exam\n{\n\tprivate int times;\n\tprivate int width;\n\tprivate int height;\n\tint old_field[][];\n\tint new_field[][];\n\n\tScanner in = new Scanner(System.in);\n\n\tvoid Init()\n\t{\n\t\twidth = in.nextInt();\n\t\theight = in.nextInt();\n\t\told_field = new int[height+2][width+2];\n\t\tnew_field = new int[height+2][width+2];\n\t\t\n\t\t// 初始化为0\n\t\tfor (int i = 0; i < height+2; i++)\n\t\t\tfor (int j = 0; j < width+2; j++)\n\t\t\t{\n\t\t\t\told_field[i][j] = 0;\n\t\t\t\told_field[i][j] = 0;\n\t\t\t}\n\t\t\n\t\t//读入活的细胞的位置\n\t\twhile(true)\n\t\t{\n\t\t\tint i=in.nextInt();\n\t\t\tint j=in.nextInt();\n\t\t\tif(i==-1&&j==-1)\n\t\t\t\tbreak;\n\t\t\told_field[i+1][j+1]=1;\n\t\t\tnew_field[i+1][j+1]=1;\n\t\t}\n\t\t//读入执行步数\n\t\ttimes = in.nextInt();\n\t}\n\n\tvoid run()\n\t{\n\t\tfor(int k=0;k<times;k++)\n\t\t{\n\t\t\tfor(int i=1;i<height+1;i++)\n\t\t\t{\n\t\t\t\tfor(int j=1;j<width+1;j++)\n\t\t\t\t{\n\t\t\t\t\tint count=getNeighbor(i, j);\n\t\t\t\t\tif(old_field[i][j]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(count==3)//细胞复活\n\t\t\t\t\t\t\tnew_field[i][j]=1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!(count==2||count==3))//细胞死亡\n\t\t\t\t\t\t\tnew_field[i][j]=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//copy\n\t\t\tfor (int i = 1; i < height+1; i++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < width+1; j++)\n\t\t\t\t{\n\t\t\t\t\told_field[i][j] = new_field[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n\tint getNeighbor(int i,int j)\n\t{\n\t\t//计算位置为i，j的细胞周围活的细胞的数量\n\t\tint temp=0;\n\t\ttemp+=old_field[i-1][j]+old_field[i+1][j]+old_field[i][j-1]+old_field[i][j+1];\n\t\ttemp+=old_field[i-1][j-1]+old_field[i-1][j+1]+old_field[i+1][j-1]+old_field[i+1][j+1];\n\t\treturn temp;\n\t}\n\t\n\tint Count()\n\t{\n\t\t//计算活着的细胞的数量\n\t\tint count=0;\n\t\tfor (int i = 1; i < height+1; i++)\n\t\t{\n\t\t\tfor (int j = 1; j < width+1; j++)\n\t\t\t{\n\t\t\t\tif(old_field[i][j]==1)\n\t\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\tvoid Test()\n\t{\n\t\tInit();\n\t\trun();\n\t\tSystem.out.println(Count());\n\t}\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tnew The_final_exam().Test();\n\t}\n\n}\n\n```\n## 思路：\n简单模拟题....\n用两个二维数组来存细胞，细胞自动机每执行一次，遍历数组1一次，对数组1中每个细胞的状态进行判断，计算周围活着的细胞的数量，然后对数组2进行相应的操作，所有操作完成后将数组2拷贝至数组1。\n这里判断细胞周围活着的细胞数量时有一个小技巧，不需要对每种边界情况进行处理,可以将数组开大点，下标从1开始使用，相当于在所使用的有效数组空间外面绕了一圈，避免数组越界。","slug":"期末考试_细胞自动机","published":1,"updated":"2019-03-28T10:45:16.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8g0013kchibkeb2fod","content":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>这是细胞自动机的非图形版本。细胞自动机是指在一个二维网格内，每一个网格是一个细胞。每个细胞有活和死两种状态。<br>初始时刻，有些细胞是活的，有些细胞是死的。自动机的每一步，根据每个细胞周围8个格子内的其他细胞的生存情况决定这个细胞下一步是否存活。具体的规则如下：</p>\n<ul>\n<li>如果该细胞现在是活的，并且周围8个格子中有2或3个活着的细胞，则继续存活；如果周围8个格子中的活着的细胞数量少于2个或多于3个，则死亡；</li>\n<li>如果该细胞现在是死的，并且周围8个格子中正好有3个活着的细胞，则细胞复活。</li>\n<li>位于整个网格边缘和顶角的细胞，它的周围细胞可能少于8个。即越过网格的边界不再有细胞。</li>\n<li>每个细胞的生死变化，都不会影响当前这一步周围的细胞，只会在下一步表现出来。</li>\n</ul>\n<p>提示：课程中的代码与上一句描述不同。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>首先输入两个正整数，范围为[3,102]，依次表示网格的宽度和高度。<br>然后输入多组正整数，依次表示一个活着的细胞的网格位置，每组数字中，第一个表示行号，第二个表示列号，均从0开始编号。<br>最后，以“-1 -1”表示不再有活着的细胞。-1 -1不是有效的位置。<br>然后，以一个正整数，范围为[1,10000]，表示要求细胞自动机执行的步数。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>输出一个正整数，表示执行完毕后，剩下的活着的细胞的数量。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>3 3<br>1 1 1 2 0 1 2 1<br>-1 -1<br>1<br></p></div><br>## 输出样例：<br><div class=\"note default no-icon\"><p>7<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">The_final_exam</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> times;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> height;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> old_field[][];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> new_field[][];</span><br><span class=\"line\"></span><br><span class=\"line\">\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\twidth = in.nextInt();</span><br><span class=\"line\">\t\theight = in.nextInt();</span><br><span class=\"line\">\t\told_field = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[height+<span class=\"number\">2</span>][width+<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\tnew_field = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[height+<span class=\"number\">2</span>][width+<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 初始化为0</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; height+<span class=\"number\">2</span>; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; width+<span class=\"number\">2</span>; j++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\told_field[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\told_field[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//读入活的细胞的位置</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> i=in.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> j=in.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i==-<span class=\"number\">1</span>&amp;&amp;j==-<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\told_field[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tnew_field[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//读入执行步数</span></span><br><span class=\"line\">\t\ttimes = in.nextInt();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;times;k++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;height+<span class=\"number\">1</span>;i++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;width+<span class=\"number\">1</span>;j++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> count=getNeighbor(i, j);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(old_field[i][j]==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(count==<span class=\"number\">3</span>)<span class=\"comment\">//细胞复活</span></span><br><span class=\"line\">\t\t\t\t\t\t\tnew_field[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(!(count==<span class=\"number\">2</span>||count==<span class=\"number\">3</span>))<span class=\"comment\">//细胞死亡</span></span><br><span class=\"line\">\t\t\t\t\t\t\tnew_field[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//copy</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; height+<span class=\"number\">1</span>; i++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; width+<span class=\"number\">1</span>; j++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\told_field[i][j] = new_field[i][j];</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getNeighbor</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//计算位置为i，j的细胞周围活的细胞的数量</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ttemp+=old_field[i-<span class=\"number\">1</span>][j]+old_field[i+<span class=\"number\">1</span>][j]+old_field[i][j-<span class=\"number\">1</span>]+old_field[i][j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\ttemp+=old_field[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>]+old_field[i-<span class=\"number\">1</span>][j+<span class=\"number\">1</span>]+old_field[i+<span class=\"number\">1</span>][j-<span class=\"number\">1</span>]+old_field[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Count</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//计算活着的细胞的数量</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; height+<span class=\"number\">1</span>; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; width+<span class=\"number\">1</span>; j++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(old_field[i][j]==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\tcount++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> count;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Test</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tInit();</span><br><span class=\"line\">\t\trun();</span><br><span class=\"line\">\t\tSystem.out.println(Count());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> The_final_exam().Test();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h2><p>简单模拟题….<br>用两个二维数组来存细胞，细胞自动机每执行一次，遍历数组1一次，对数组1中每个细胞的状态进行判断，计算周围活着的细胞的数量，然后对数组2进行相应的操作，所有操作完成后将数组2拷贝至数组1。<br>这里判断细胞周围活着的细胞数量时有一个小技巧，不需要对每种边界情况进行处理,可以将数组开大点，下标从1开始使用，相当于在所使用的有效数组空间外面绕了一圈，避免数组越界。</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>这是细胞自动机的非图形版本。细胞自动机是指在一个二维网格内，每一个网格是一个细胞。每个细胞有活和死两种状态。<br>初始时刻，有些细胞是活的，有些细胞是死的。自动机的每一步，根据每个细胞周围8个格子内的其他细胞的生存情况决定这个细胞下一步是否存活。具体的规则如下：</p>\n<ul>\n<li>如果该细胞现在是活的，并且周围8个格子中有2或3个活着的细胞，则继续存活；如果周围8个格子中的活着的细胞数量少于2个或多于3个，则死亡；</li>\n<li>如果该细胞现在是死的，并且周围8个格子中正好有3个活着的细胞，则细胞复活。</li>\n<li>位于整个网格边缘和顶角的细胞，它的周围细胞可能少于8个。即越过网格的边界不再有细胞。</li>\n<li>每个细胞的生死变化，都不会影响当前这一步周围的细胞，只会在下一步表现出来。</li>\n</ul>\n<p>提示：课程中的代码与上一句描述不同。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>首先输入两个正整数，范围为[3,102]，依次表示网格的宽度和高度。<br>然后输入多组正整数，依次表示一个活着的细胞的网格位置，每组数字中，第一个表示行号，第二个表示列号，均从0开始编号。<br>最后，以“-1 -1”表示不再有活着的细胞。-1 -1不是有效的位置。<br>然后，以一个正整数，范围为[1,10000]，表示要求细胞自动机执行的步数。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>输出一个正整数，表示执行完毕后，剩下的活着的细胞的数量。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>3 3<br>1 1 1 2 0 1 2 1<br>-1 -1<br>1<br></p></div><br>## 输出样例：<br><div class=\"note default no-icon\"><p>7<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">The_final_exam</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> times;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> width;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> height;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> old_field[][];</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> new_field[][];</span><br><span class=\"line\"></span><br><span class=\"line\">\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Init</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\twidth = in.nextInt();</span><br><span class=\"line\">\t\theight = in.nextInt();</span><br><span class=\"line\">\t\told_field = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[height+<span class=\"number\">2</span>][width+<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\tnew_field = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[height+<span class=\"number\">2</span>][width+<span class=\"number\">2</span>];</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 初始化为0</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; height+<span class=\"number\">2</span>; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; width+<span class=\"number\">2</span>; j++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\told_field[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\told_field[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//读入活的细胞的位置</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> i=in.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> j=in.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i==-<span class=\"number\">1</span>&amp;&amp;j==-<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\told_field[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tnew_field[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//读入执行步数</span></span><br><span class=\"line\">\t\ttimes = in.nextInt();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;times;k++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;height+<span class=\"number\">1</span>;i++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;width+<span class=\"number\">1</span>;j++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">int</span> count=getNeighbor(i, j);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(old_field[i][j]==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(count==<span class=\"number\">3</span>)<span class=\"comment\">//细胞复活</span></span><br><span class=\"line\">\t\t\t\t\t\t\tnew_field[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(!(count==<span class=\"number\">2</span>||count==<span class=\"number\">3</span>))<span class=\"comment\">//细胞死亡</span></span><br><span class=\"line\">\t\t\t\t\t\t\tnew_field[i][j]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//copy</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; height+<span class=\"number\">1</span>; i++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; width+<span class=\"number\">1</span>; j++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\told_field[i][j] = new_field[i][j];</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getNeighbor</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//计算位置为i，j的细胞周围活的细胞的数量</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> temp=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ttemp+=old_field[i-<span class=\"number\">1</span>][j]+old_field[i+<span class=\"number\">1</span>][j]+old_field[i][j-<span class=\"number\">1</span>]+old_field[i][j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\ttemp+=old_field[i-<span class=\"number\">1</span>][j-<span class=\"number\">1</span>]+old_field[i-<span class=\"number\">1</span>][j+<span class=\"number\">1</span>]+old_field[i+<span class=\"number\">1</span>][j-<span class=\"number\">1</span>]+old_field[i+<span class=\"number\">1</span>][j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Count</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//计算活着的细胞的数量</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; height+<span class=\"number\">1</span>; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; width+<span class=\"number\">1</span>; j++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(old_field[i][j]==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\tcount++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> count;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Test</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tInit();</span><br><span class=\"line\">\t\trun();</span><br><span class=\"line\">\t\tSystem.out.println(Count());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> The_final_exam().Test();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h2><p>简单模拟题….<br>用两个二维数组来存细胞，细胞自动机每执行一次，遍历数组1一次，对数组1中每个细胞的状态进行判断，计算周围活着的细胞的数量，然后对数组2进行相应的操作，所有操作完成后将数组2拷贝至数组1。<br>这里判断细胞周围活着的细胞数量时有一个小技巧，不需要对每种边界情况进行处理,可以将数组开大点，下标从1开始使用，相当于在所使用的有效数组空间外面绕了一圈，避免数组越界。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"期末考试_细胞自动机","path":"6200.html","eyeCatchImage":null,"excerpt":null,"date":"2018-01-08T09:31:13.000Z","pv":0,"totalPV":0,"categories":"面向对象程序设计_Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"用C#爬虫爬取校园最新通知","date":"2018-06-20T09:55:22.000Z","abbrlink":976598171,"_content":"## 前言\n前几个月用Python写了一个爬虫，用于爬取校园最新通知。最近的C#课程设计中想实现同样的功能，于是按照之前Python代码的思路重构了一下。\n[用Python实现校园通知更新提醒](https://zhaoqi99.github.io/45013.html)\n\n## 思路\n使用C#中的HttpWebRequest库去获取目标url(各个网站的’更多通知’页)的源代码，然后使用` System.Text.RegularExpressions;`进行正则匹配。\n正则表达式应包含三个分组:日期、标题、链接；\n\n## 准备工作\n* 命名空间导入\n```csharp\nusing System.Net;\nusing System.Collections;\nusing System.Text.RegularExpressions;\n```\n\n## 源代码\nSpider基类:\n```csharp\n    public class Spider\n    {\n        private string url = string.Empty;//要爬取的网页的url\n        public HttpWebRequest request;\n        public HttpWebResponse response;\n        public string encode = \"UTF-8\";//目标url的网页编码格式\n        public string Method = string.Empty;\n        public string Url\n        {\n            get { return url; }\n            set\n            {\n                url = value;\n            }\n        }\n        public string Encode\n        {\n            get { return encode; }\n            set\n            {\n                if (value == \"UTF-8\" || value == \"GBK\")\n                {\n                    encode = value;\n                }\n                else\n                {\n                    //Todo:handle exception\n                }\n            }\n        }\n\n        public Spider(string url,string method)\n        {\n            this.url = url;\n            this.Method = method;\n            Create();\n        }\n        public Spider() { }\n\n        public void Create()\n        {\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = Method;\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n        }\n        //获取目标url的Html代码\n        public string getHtml()\n        {\n            string reader = string.Empty;\n            try\n            {\n                Create();\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(encode));\n                    reader = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch(Exception e)\n            {\n                Log.Write( e.Message, \"Exception\");\n                MessageBox.Show(e.Message, \"错误\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n            return reader;\n        }\n\n    }\n```\nSpiderNotice类:\n```csharp\n    public class SpiderNotice : Spider\n    {\n        private string url_main;//各个通知链接的公共部分\n        private string department;//所属部门\n        private string type;//通知类型\n        private string pattern;//用于匹配的正则表达式规则\n        private ArrayList all_notice = new ArrayList();//所有的通知\n        public string parse = string.Empty;//日期的解析规则\n        public SpiderNotice(string url, string pattern, string url_main, string department, string type) : base(url, \"GET\")\n        {\n            this.department = department;\n            this.pattern = pattern;\n            this.url_main = url_main;\n            this.type = type;\n            this.parse = \"yyyy-MM-dd\";\n        }\n        public void Get()\n        {\n            all_notice.Clear();\n            Regex r = new Regex(pattern, RegexOptions.ExplicitCapture);\n            try\n            {\n\n                string s = getHtml();\n                if (s == null)\n                    throw new ArgumentNullException(\"html\");\n                MatchCollection mc = r.Matches(s);\n                foreach (Match m in mc)\n                {\n                    GroupCollection group = m.Groups;\n                    DateTime date = DateTime.ParseExact(group[\"date\"].Value, parse, System.Globalization.CultureInfo.InstalledUICulture);\n                    string link = url_main + group[\"link\"].Value;\n                    Notice n = new Notice();\n                    n.Title = group[\"title\"].Value;\n                    n.Link = link;\n                    n.Date = date;\n                    n.Department = department;\n                    n.Type = type;\n                    all_notice.Add(n);\n                }\n            }\n            catch (Exception e)\n            {\n                BLL.Log.Write(e.Message, \"Exception\");\n                MessageBox.Show(e.Message, \"错误\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n        }\n        public Notice index(int index)\n        {\n            if (index >= all_notice.Count)\n                throw new IndexOutOfRangeException();\n            else\n                return all_notice[index] as Notice;\n        }\n        public Notice[] GetAll()\n        {\n            Notice[] All = new Notice[all_notice.Count];\n            int flag = 0;\n            foreach (object t in all_notice)\n            {\n                All[flag++] = t as Notice;\n            }\n            return All;\n        }\n        public int Count()\n        {\n            return all_notice.Count;\n        }\n    }\n```\n数据模型Notice类:\n```csharp\n    public class Notice\n    {\n        #region 数据模型\n        private string title=string.Empty;\n        private string link=string.Empty;\n        private DateTime date=DateTime.Now;\n        private string type=string.Empty;\n        private string department=string.Empty;\n        public string Title\n        {\n            get\n            {\n                return title;\n            }\n            set\n            {\n                title = value;\n            }\n        }\n        public DateTime Date\n        {\n            get\n            {\n                return date;\n            }\n            set\n            {\n                date = value;\n            }\n        }\n        public string Link\n        {\n            set\n            {\n                link = value;\n            }\n            get\n            {\n                return link;\n            }\n        }\n        public string Type\n        {\n            get\n            {\n                return type;\n            }\n            set\n            {\n                type = value;\n            }\n        }\n        public string Department\n        {\n            get\n            {\n                return department;\n            }\n            set\n            {\n                department = value;\n            }\n        }\n        #endregion\n        override public string ToString()\n        {\n            return string.Format(\"标题:{0}\\n时间:{1}\\n链接:{2}\\n\", title, date.ToString(\"yyyy-MM-dd\"), link);\n\n        }\n    }\n```\n\n## 问题总结\n* 从不同网站上爬取到的日期格式可能不同，为统一格式，可以使用｀DateTime.ParseExact(datastr, parse, System.Globalization.CultureInfo.InstalledUICulture);｀去解析用于表示日期的字符串，然后再转为统一日期格式的字符串。其中，datastr为表示日期的字符串，parse为解析规则。例:\n```csharp\nstring parse=\"yyyy-M-D\";\nDateTime t=DateTime.ParseExact(\"2016-9-5\", parse, System.Globalization.CultureInfo.InstalledUICulture);\nstring str=t.toString(\"yyyy-MM-dd\");//2016-09-05\n```\n* 不用网页的网页编码格式可能不同，有的为GBK,有的问UTF-8;\n* 用字符串去表达正则表达式的规则时，有两种方法:\n\t1. string s=@\"\\d+\"\"\";字符串前加@表示字符串按常量解析(注意:双引号用两个双引号来表示)\n\t2. string s=\"\\\\d+\\\"\";使用转义符","source":"_posts/用C#爬虫实现爬取校园最新通知.md","raw":"---\ntitle: '用C#爬虫爬取校园最新通知'\ncategories: 'C#'\ntags:\n  - 'C#'\n  - 爬虫\ndate: '2018-06-20 17:55:22'\nabbrlink: 976598171\n---\n## 前言\n前几个月用Python写了一个爬虫，用于爬取校园最新通知。最近的C#课程设计中想实现同样的功能，于是按照之前Python代码的思路重构了一下。\n[用Python实现校园通知更新提醒](https://zhaoqi99.github.io/45013.html)\n\n## 思路\n使用C#中的HttpWebRequest库去获取目标url(各个网站的’更多通知’页)的源代码，然后使用` System.Text.RegularExpressions;`进行正则匹配。\n正则表达式应包含三个分组:日期、标题、链接；\n\n## 准备工作\n* 命名空间导入\n```csharp\nusing System.Net;\nusing System.Collections;\nusing System.Text.RegularExpressions;\n```\n\n## 源代码\nSpider基类:\n```csharp\n    public class Spider\n    {\n        private string url = string.Empty;//要爬取的网页的url\n        public HttpWebRequest request;\n        public HttpWebResponse response;\n        public string encode = \"UTF-8\";//目标url的网页编码格式\n        public string Method = string.Empty;\n        public string Url\n        {\n            get { return url; }\n            set\n            {\n                url = value;\n            }\n        }\n        public string Encode\n        {\n            get { return encode; }\n            set\n            {\n                if (value == \"UTF-8\" || value == \"GBK\")\n                {\n                    encode = value;\n                }\n                else\n                {\n                    //Todo:handle exception\n                }\n            }\n        }\n\n        public Spider(string url,string method)\n        {\n            this.url = url;\n            this.Method = method;\n            Create();\n        }\n        public Spider() { }\n\n        public void Create()\n        {\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = Method;\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n        }\n        //获取目标url的Html代码\n        public string getHtml()\n        {\n            string reader = string.Empty;\n            try\n            {\n                Create();\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(encode));\n                    reader = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch(Exception e)\n            {\n                Log.Write( e.Message, \"Exception\");\n                MessageBox.Show(e.Message, \"错误\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n            return reader;\n        }\n\n    }\n```\nSpiderNotice类:\n```csharp\n    public class SpiderNotice : Spider\n    {\n        private string url_main;//各个通知链接的公共部分\n        private string department;//所属部门\n        private string type;//通知类型\n        private string pattern;//用于匹配的正则表达式规则\n        private ArrayList all_notice = new ArrayList();//所有的通知\n        public string parse = string.Empty;//日期的解析规则\n        public SpiderNotice(string url, string pattern, string url_main, string department, string type) : base(url, \"GET\")\n        {\n            this.department = department;\n            this.pattern = pattern;\n            this.url_main = url_main;\n            this.type = type;\n            this.parse = \"yyyy-MM-dd\";\n        }\n        public void Get()\n        {\n            all_notice.Clear();\n            Regex r = new Regex(pattern, RegexOptions.ExplicitCapture);\n            try\n            {\n\n                string s = getHtml();\n                if (s == null)\n                    throw new ArgumentNullException(\"html\");\n                MatchCollection mc = r.Matches(s);\n                foreach (Match m in mc)\n                {\n                    GroupCollection group = m.Groups;\n                    DateTime date = DateTime.ParseExact(group[\"date\"].Value, parse, System.Globalization.CultureInfo.InstalledUICulture);\n                    string link = url_main + group[\"link\"].Value;\n                    Notice n = new Notice();\n                    n.Title = group[\"title\"].Value;\n                    n.Link = link;\n                    n.Date = date;\n                    n.Department = department;\n                    n.Type = type;\n                    all_notice.Add(n);\n                }\n            }\n            catch (Exception e)\n            {\n                BLL.Log.Write(e.Message, \"Exception\");\n                MessageBox.Show(e.Message, \"错误\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n        }\n        public Notice index(int index)\n        {\n            if (index >= all_notice.Count)\n                throw new IndexOutOfRangeException();\n            else\n                return all_notice[index] as Notice;\n        }\n        public Notice[] GetAll()\n        {\n            Notice[] All = new Notice[all_notice.Count];\n            int flag = 0;\n            foreach (object t in all_notice)\n            {\n                All[flag++] = t as Notice;\n            }\n            return All;\n        }\n        public int Count()\n        {\n            return all_notice.Count;\n        }\n    }\n```\n数据模型Notice类:\n```csharp\n    public class Notice\n    {\n        #region 数据模型\n        private string title=string.Empty;\n        private string link=string.Empty;\n        private DateTime date=DateTime.Now;\n        private string type=string.Empty;\n        private string department=string.Empty;\n        public string Title\n        {\n            get\n            {\n                return title;\n            }\n            set\n            {\n                title = value;\n            }\n        }\n        public DateTime Date\n        {\n            get\n            {\n                return date;\n            }\n            set\n            {\n                date = value;\n            }\n        }\n        public string Link\n        {\n            set\n            {\n                link = value;\n            }\n            get\n            {\n                return link;\n            }\n        }\n        public string Type\n        {\n            get\n            {\n                return type;\n            }\n            set\n            {\n                type = value;\n            }\n        }\n        public string Department\n        {\n            get\n            {\n                return department;\n            }\n            set\n            {\n                department = value;\n            }\n        }\n        #endregion\n        override public string ToString()\n        {\n            return string.Format(\"标题:{0}\\n时间:{1}\\n链接:{2}\\n\", title, date.ToString(\"yyyy-MM-dd\"), link);\n\n        }\n    }\n```\n\n## 问题总结\n* 从不同网站上爬取到的日期格式可能不同，为统一格式，可以使用｀DateTime.ParseExact(datastr, parse, System.Globalization.CultureInfo.InstalledUICulture);｀去解析用于表示日期的字符串，然后再转为统一日期格式的字符串。其中，datastr为表示日期的字符串，parse为解析规则。例:\n```csharp\nstring parse=\"yyyy-M-D\";\nDateTime t=DateTime.ParseExact(\"2016-9-5\", parse, System.Globalization.CultureInfo.InstalledUICulture);\nstring str=t.toString(\"yyyy-MM-dd\");//2016-09-05\n```\n* 不用网页的网页编码格式可能不同，有的为GBK,有的问UTF-8;\n* 用字符串去表达正则表达式的规则时，有两种方法:\n\t1. string s=@\"\\d+\"\"\";字符串前加@表示字符串按常量解析(注意:双引号用两个双引号来表示)\n\t2. string s=\"\\\\d+\\\"\";使用转义符","slug":"用C#爬虫实现爬取校园最新通知","published":1,"updated":"2019-03-28T10:45:16.812Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8h0014kchi2o7s84gr","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>前几个月用Python写了一个爬虫，用于爬取校园最新通知。最近的C#课程设计中想实现同样的功能，于是按照之前Python代码的思路重构了一下。<br><a href=\"https://zhaoqi99.github.io/45013.html\">用Python实现校园通知更新提醒</a></p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>使用C#中的HttpWebRequest库去获取目标url(各个网站的’更多通知’页)的源代码，然后使用<code>System.Text.RegularExpressions;</code>进行正则匹配。<br>正则表达式应包含三个分组:日期、标题、链接；</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li>命名空间导入<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Net;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>Spider基类:<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Spider</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> url = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//要爬取的网页的url</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HttpWebRequest request;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> HttpWebResponse response;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> encode = <span class=\"string\">\"UTF-8\"</span>;<span class=\"comment\">//目标url的网页编码格式</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Method = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Url</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> url; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            url = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Encode</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> encode; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">value</span> == <span class=\"string\">\"UTF-8\"</span> || <span class=\"keyword\">value</span> == <span class=\"string\">\"GBK\"</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                encode = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//Todo:handle exception</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Spider</span>(<span class=\"params\"><span class=\"keyword\">string</span> url,<span class=\"keyword\">string</span> method</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.Method = method;</span><br><span class=\"line\">        Create();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Spider</span>(<span class=\"params\"></span>)</span> &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Create</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">        request.Method = Method;</span><br><span class=\"line\">        request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">        request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//获取目标url的Html代码</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">getHtml</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">string</span> reader = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Create();</span><br><span class=\"line\">            response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(encode));</span><br><span class=\"line\">                reader = sr.ReadToEnd();</span><br><span class=\"line\">                sr.Close();</span><br><span class=\"line\">                response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Log.Write( e.Message, <span class=\"string\">\"Exception\"</span>);</span><br><span class=\"line\">            MessageBox.Show(e.Message, <span class=\"string\">\"错误\"</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> reader;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>SpiderNotice类:<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SpiderNotice</span> : <span class=\"title\">Spider</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> url_main;<span class=\"comment\">//各个通知链接的公共部分</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> department;<span class=\"comment\">//所属部门</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> type;<span class=\"comment\">//通知类型</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> pattern;<span class=\"comment\">//用于匹配的正则表达式规则</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ArrayList all_notice = <span class=\"keyword\">new</span> ArrayList();<span class=\"comment\">//所有的通知</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> parse = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//日期的解析规则</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SpiderNotice</span>(<span class=\"params\"><span class=\"keyword\">string</span> url, <span class=\"keyword\">string</span> pattern, <span class=\"keyword\">string</span> url_main, <span class=\"keyword\">string</span> department, <span class=\"keyword\">string</span> type</span>) : <span class=\"title\">base</span>(<span class=\"params\">url, <span class=\"string\">\"GET\"</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.department = department;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.pattern = pattern;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url_main = url_main;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.type = type;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.parse = <span class=\"string\">\"yyyy-MM-dd\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Get</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        all_notice.Clear();</span><br><span class=\"line\">        Regex r = <span class=\"keyword\">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> s = getHtml();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ArgumentNullException(<span class=\"string\">\"html\"</span>);</span><br><span class=\"line\">            MatchCollection mc = r.Matches(s);</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (Match m <span class=\"keyword\">in</span> mc)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                GroupCollection <span class=\"keyword\">group</span> = m.Groups;</span><br><span class=\"line\">                DateTime date = DateTime.ParseExact(<span class=\"keyword\">group</span>[<span class=\"string\">\"date\"</span>].Value, parse, System.Globalization.CultureInfo.InstalledUICulture);</span><br><span class=\"line\">                <span class=\"keyword\">string</span> link = url_main + <span class=\"keyword\">group</span>[<span class=\"string\">\"link\"</span>].Value;</span><br><span class=\"line\">                Notice n = <span class=\"keyword\">new</span> Notice();</span><br><span class=\"line\">                n.Title = <span class=\"keyword\">group</span>[<span class=\"string\">\"title\"</span>].Value;</span><br><span class=\"line\">                n.Link = link;</span><br><span class=\"line\">                n.Date = date;</span><br><span class=\"line\">                n.Department = department;</span><br><span class=\"line\">                n.Type = type;</span><br><span class=\"line\">                all_notice.Add(n);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            BLL.Log.Write(e.Message, <span class=\"string\">\"Exception\"</span>);</span><br><span class=\"line\">            MessageBox.Show(e.Message, <span class=\"string\">\"错误\"</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Notice <span class=\"title\">index</span>(<span class=\"params\"><span class=\"keyword\">int</span> index</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index &gt;= all_notice.Count)</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IndexOutOfRangeException();</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> all_notice[index] <span class=\"keyword\">as</span> Notice;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Notice[] <span class=\"title\">GetAll</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Notice[] All = <span class=\"keyword\">new</span> Notice[all_notice.Count];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">object</span> t <span class=\"keyword\">in</span> all_notice)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            All[flag++] = t <span class=\"keyword\">as</span> Notice;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> All;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">Count</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> all_notice.Count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>数据模型Notice类:<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Notice</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">region</span> 数据模型</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> title=<span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> link=<span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> DateTime date=DateTime.Now;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> type=<span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> department=<span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Title</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> title;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            title = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DateTime Date</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> date;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            date = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Link</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            link = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> link;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Type</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> type;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            type = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Department</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> department;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            department = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">endregion</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">override</span> <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">ToString</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">string</span>.Format(<span class=\"string\">\"标题:&#123;0&#125;\\n时间:&#123;1&#125;\\n链接:&#123;2&#125;\\n\"</span>, title, date.ToString(<span class=\"string\">\"yyyy-MM-dd\"</span>), link);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"问题总结\"><a href=\"#问题总结\" class=\"headerlink\" title=\"问题总结\"></a>问题总结</h2><ul>\n<li><p>从不同网站上爬取到的日期格式可能不同，为统一格式，可以使用｀DateTime.ParseExact(datastr, parse, System.Globalization.CultureInfo.InstalledUICulture);｀去解析用于表示日期的字符串，然后再转为统一日期格式的字符串。其中，datastr为表示日期的字符串，parse为解析规则。例:</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> parse=<span class=\"string\">\"yyyy-M-D\"</span>;</span><br><span class=\"line\">DateTime t=DateTime.ParseExact(<span class=\"string\">\"2016-9-5\"</span>, parse, System.Globalization.CultureInfo.InstalledUICulture);</span><br><span class=\"line\"><span class=\"keyword\">string</span> str=t.toString(<span class=\"string\">\"yyyy-MM-dd\"</span>);<span class=\"comment\">//2016-09-05</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不用网页的网页编码格式可能不同，有的为GBK,有的问UTF-8;</p>\n</li>\n<li>用字符串去表达正则表达式的规则时，有两种方法:<ol>\n<li>string s=@”\\d+”””;字符串前加@表示字符串按常量解析(注意:双引号用两个双引号来表示)</li>\n<li>string s=”\\d+\\””;使用转义符</li>\n</ol>\n</li>\n</ul>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>前几个月用Python写了一个爬虫，用于爬取校园最新通知。最近的C#课程设计中想实现同样的功能，于是按照之前Python代码的思路重构了一下。<br><a href=\"https://zhaoqi99.github.io/45013.html\">用Python实现校园通知更新提醒</a></p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>使用C#中的HttpWebRequest库去获取目标url(各个网站的’更多通知’页)的源代码，然后使用<code>System.Text.RegularExpressions;</code>进行正则匹配。<br>正则表达式应包含三个分组:日期、标题、链接；</p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li>命名空间导入<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Net;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><p>Spider基类:<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Spider</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> url = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//要爬取的网页的url</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> HttpWebRequest request;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> HttpWebResponse response;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> encode = <span class=\"string\">\"UTF-8\"</span>;<span class=\"comment\">//目标url的网页编码格式</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Method = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Url</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> url; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            url = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Encode</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> encode; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">value</span> == <span class=\"string\">\"UTF-8\"</span> || <span class=\"keyword\">value</span> == <span class=\"string\">\"GBK\"</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                encode = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">//Todo:handle exception</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Spider</span>(<span class=\"params\"><span class=\"keyword\">string</span> url,<span class=\"keyword\">string</span> method</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url = url;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.Method = method;</span><br><span class=\"line\">        Create();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Spider</span>(<span class=\"params\"></span>)</span> &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Create</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">        request.Method = Method;</span><br><span class=\"line\">        request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">        request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//获取目标url的Html代码</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">getHtml</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">string</span> reader = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Create();</span><br><span class=\"line\">            response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(encode));</span><br><span class=\"line\">                reader = sr.ReadToEnd();</span><br><span class=\"line\">                sr.Close();</span><br><span class=\"line\">                response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Log.Write( e.Message, <span class=\"string\">\"Exception\"</span>);</span><br><span class=\"line\">            MessageBox.Show(e.Message, <span class=\"string\">\"错误\"</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> reader;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>SpiderNotice类:<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SpiderNotice</span> : <span class=\"title\">Spider</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> url_main;<span class=\"comment\">//各个通知链接的公共部分</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> department;<span class=\"comment\">//所属部门</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> type;<span class=\"comment\">//通知类型</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> pattern;<span class=\"comment\">//用于匹配的正则表达式规则</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ArrayList all_notice = <span class=\"keyword\">new</span> ArrayList();<span class=\"comment\">//所有的通知</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> parse = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//日期的解析规则</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SpiderNotice</span>(<span class=\"params\"><span class=\"keyword\">string</span> url, <span class=\"keyword\">string</span> pattern, <span class=\"keyword\">string</span> url_main, <span class=\"keyword\">string</span> department, <span class=\"keyword\">string</span> type</span>) : <span class=\"title\">base</span>(<span class=\"params\">url, <span class=\"string\">\"GET\"</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.department = department;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.pattern = pattern;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.url_main = url_main;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.type = type;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.parse = <span class=\"string\">\"yyyy-MM-dd\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Get</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        all_notice.Clear();</span><br><span class=\"line\">        Regex r = <span class=\"keyword\">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> s = getHtml();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ArgumentNullException(<span class=\"string\">\"html\"</span>);</span><br><span class=\"line\">            MatchCollection mc = r.Matches(s);</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (Match m <span class=\"keyword\">in</span> mc)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                GroupCollection <span class=\"keyword\">group</span> = m.Groups;</span><br><span class=\"line\">                DateTime date = DateTime.ParseExact(<span class=\"keyword\">group</span>[<span class=\"string\">\"date\"</span>].Value, parse, System.Globalization.CultureInfo.InstalledUICulture);</span><br><span class=\"line\">                <span class=\"keyword\">string</span> link = url_main + <span class=\"keyword\">group</span>[<span class=\"string\">\"link\"</span>].Value;</span><br><span class=\"line\">                Notice n = <span class=\"keyword\">new</span> Notice();</span><br><span class=\"line\">                n.Title = <span class=\"keyword\">group</span>[<span class=\"string\">\"title\"</span>].Value;</span><br><span class=\"line\">                n.Link = link;</span><br><span class=\"line\">                n.Date = date;</span><br><span class=\"line\">                n.Department = department;</span><br><span class=\"line\">                n.Type = type;</span><br><span class=\"line\">                all_notice.Add(n);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            BLL.Log.Write(e.Message, <span class=\"string\">\"Exception\"</span>);</span><br><span class=\"line\">            MessageBox.Show(e.Message, <span class=\"string\">\"错误\"</span>, MessageBoxButtons.OK, MessageBoxIcon.Error);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Notice <span class=\"title\">index</span>(<span class=\"params\"><span class=\"keyword\">int</span> index</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index &gt;= all_notice.Count)</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IndexOutOfRangeException();</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> all_notice[index] <span class=\"keyword\">as</span> Notice;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Notice[] <span class=\"title\">GetAll</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Notice[] All = <span class=\"keyword\">new</span> Notice[all_notice.Count];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">object</span> t <span class=\"keyword\">in</span> all_notice)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            All[flag++] = t <span class=\"keyword\">as</span> Notice;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> All;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">Count</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> all_notice.Count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>数据模型Notice类:<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Notice</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">region</span> 数据模型</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> title=<span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> link=<span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> DateTime date=DateTime.Now;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> type=<span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> department=<span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Title</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> title;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            title = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DateTime Date</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> date;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            date = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Link</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            link = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> link;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Type</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> type;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            type = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Department</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> department;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            department = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">endregion</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">override</span> <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">ToString</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">string</span>.Format(<span class=\"string\">\"标题:&#123;0&#125;\\n时间:&#123;1&#125;\\n链接:&#123;2&#125;\\n\"</span>, title, date.ToString(<span class=\"string\">\"yyyy-MM-dd\"</span>), link);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"问题总结\"><a href=\"#问题总结\" class=\"headerlink\" title=\"问题总结\"></a>问题总结</h2><ul>\n<li><p>从不同网站上爬取到的日期格式可能不同，为统一格式，可以使用｀DateTime.ParseExact(datastr, parse, System.Globalization.CultureInfo.InstalledUICulture);｀去解析用于表示日期的字符串，然后再转为统一日期格式的字符串。其中，datastr为表示日期的字符串，parse为解析规则。例:</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> parse=<span class=\"string\">\"yyyy-M-D\"</span>;</span><br><span class=\"line\">DateTime t=DateTime.ParseExact(<span class=\"string\">\"2016-9-5\"</span>, parse, System.Globalization.CultureInfo.InstalledUICulture);</span><br><span class=\"line\"><span class=\"keyword\">string</span> str=t.toString(<span class=\"string\">\"yyyy-MM-dd\"</span>);<span class=\"comment\">//2016-09-05</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>不用网页的网页编码格式可能不同，有的为GBK,有的问UTF-8;</p>\n</li>\n<li>用字符串去表达正则表达式的规则时，有两种方法:<ol>\n<li>string s=@”\\d+”””;字符串前加@表示字符串按常量解析(注意:双引号用两个双引号来表示)</li>\n<li>string s=”\\d+\\””;使用转义符</li>\n</ol>\n</li>\n</ul>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"用C#爬虫爬取校园最新通知","path":"976598171.html","eyeCatchImage":null,"excerpt":null,"date":"2018-06-20T09:55:22.000Z","pv":0,"totalPV":0,"categories":"C#","tags":["C#","爬虫"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"用Python实现校园通知更新提醒","abbrlink":45013,"date":"2018-04-21T13:26:25.000Z","_content":"## 前言\n这个项目实已经在一个月前已经完成了，一直都想写一篇博客来总结这个过程中遇到的一些问题。但最近一个月来都比较忙，所以一直拖到了现在。\n首先说说起因吧，我没事的时候，总喜欢依次点开学校主页、教务处、图书馆以及学院的网站，看看有没有什么新通知，虽然大多与我无关。恰逢最近正在学Python，经常听到别人说用Python写爬虫很简单，但自己尚未接触过爬虫。于是抱着试一试的心态看了几篇关于Python爬虫的博客，发现实现起来的确很简单。于是，便一边看着官方的文档说明，一边看着别人的博客，终于完成了自己的第一次爬虫。\n\n## 简介\n使用`urllib.request`库获取到目标url(各个网站的'更多通知'页)的源代码，然后利用Python的`re`库进行正则匹配，提取到通知相关信息后，与文件中存取的上一次爬取到的信息进行对比。\n若检测到有新的通知，则利用`twilio`库向指定手机号码发送SMS，利用`smtplib`库向指定邮箱发送提醒信息。\n此外，还具有发送日志以及异常日志的功能。\n目前仅支持本校的通知提醒，后续会逐步提高项目的通用性。\n\n## 源码：\nGithub地址:[School_Notice](https://github.com/ZhaoQi99/School_Notice)\n\n## 准备工作\n- 安装twilio库:`pip install twilio`\n- 注册twilio账号:[Twilio](https://www.twilio.com)\n- 验证手机号:用来接收短信提醒的号码必须在twilio上进行验证\n\n## 遇到的问题\n### 邮件发送\n- 若用名为msg的变量来保存邮件文本，则`msg['From']`以及`msg['To']`必须为实际的发件人地址，否则可能会出现异常:`SMTPDataError(code, resp)`.如必须写作:`msg['From'] = 'xxxxx@qq.com'`.我是使用的QQ邮箱来发邮件，至于其他邮箱需不需要这样写还不清楚。 \n- 原本想用一个for循环来实现多人发送，后来发现smtplib库的sendmail方法支持多人发送，但参数应为一个list，故可用`str.split(',')`将字符串转为list。\n- 我使用的是Windows下的Python，若计算机名为中文，则有可能会导致出现异常，可通过右击此电脑->属性，修改计算机名。\n- 程序代码中使用的邮箱密码不是QQ密码，应在邮箱设置->账户->SMTP服务处，获取授权码。\n\n### 其他问题\n- 有时候会接收不到Twilio发送的短信，给10086打电话也没问出个所以然，可能是因为短信中有敏感词(如:学校名)，修改短信内容后就可以了\n- 对上述几个网站的源码使用`re.findall`后返回的列表中的每个元组中的元素的顺序均为时间、标题、链接，但对学生处网站的源码正则匹配后的元素顺序并不是按照上述顺序的。所以应单独进行调整，但直接修改一个元组中的元素，会出现异常:`error:tuple' object does not support item assignment`。解决方法是:\n```Python\nif(subject_EN == 'snnu_xsc'):\n\tnew_data = []\n    for item in data:\n\t\ttemp = (item[1], item[2], item[0])\n        new_data.append(temp)\n    data = new_data\n```\n- Python3中的print函数是自动换行的，若不需要自动换行，则可写作:`print(str,end='')`\n- 不同网站的编码格式可能不同，应按照各自的编码方式进行解码。若均采用`utf-8`的方式，则可能会出现各种编码问题，如:\n<div class=\"note danger\"><p>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc9 in position 167\n</p></div>\n解决方法是:\n```Python\nif find1 == -1 & find2 == -1:\n\tCoding = 'utf-8'\nelse:\n\t# 教务处网页源码编码格式为为gbk\n\t# 学生处网页源码编码格式为gb2312\n\tCoding = 'gbk'\ndata = response.read().decode(Coding)\n```\n## Python程序打包为exe(Pyinstaller)\n### 安装及使用\n1. 使用`pip install pywin32`安装pywin32\n2. 使用`pip install PyInstaller`安装Pyinstaller\n3. 使用`pyinstaller -F main.py`即可将Python程序打包为exe程序\n\n### 注意事项\n- 打包之前应将用到的第三方库(此项目仅用到Twilio)复制到与要打包的py文件同一目录下。\n- 可使用`pyinstaller -F -i logo.ico main.py`,为生成的exe程序添加图标\n- 使用的ico文件像素不能过小，否则有可能出现:打包后的程序图标只有在资源管理器中设置为以小图标查看的情况下才显示的是自己的图标，其他情况仍未默认图标\n\n## 使用截图\n![](/images/Screenshot_2018-03-13-09-32-23-47.jpg)\n![](/images/send_email.jpg)\n![](/images/20180426015859.jpg)\n## 参考博客\n1. [应用python对校园通知的更新进行推送](https://blog.csdn.net/hanyou11/article/details/50756800)\n2. [使用python发短信给自己的手机](https://blog.csdn.net/zyc121561/article/details/78169168)\n3. [Python打包方法——Pyinstaller](https://www.cnblogs.com/gopythoner/p/6337543.html)","source":"_posts/用Python实现校园通知更新提醒.md","raw":"---\ntitle: 用Python实现校园通知更新提醒\ncategories: Python\ntags:\n  - Python\n  - 爬虫\n  - Twilio\n  - 正则表达式\nabbrlink: 45013\ndate: 2018-04-21 21:26:25\n---\n## 前言\n这个项目实已经在一个月前已经完成了，一直都想写一篇博客来总结这个过程中遇到的一些问题。但最近一个月来都比较忙，所以一直拖到了现在。\n首先说说起因吧，我没事的时候，总喜欢依次点开学校主页、教务处、图书馆以及学院的网站，看看有没有什么新通知，虽然大多与我无关。恰逢最近正在学Python，经常听到别人说用Python写爬虫很简单，但自己尚未接触过爬虫。于是抱着试一试的心态看了几篇关于Python爬虫的博客，发现实现起来的确很简单。于是，便一边看着官方的文档说明，一边看着别人的博客，终于完成了自己的第一次爬虫。\n\n## 简介\n使用`urllib.request`库获取到目标url(各个网站的'更多通知'页)的源代码，然后利用Python的`re`库进行正则匹配，提取到通知相关信息后，与文件中存取的上一次爬取到的信息进行对比。\n若检测到有新的通知，则利用`twilio`库向指定手机号码发送SMS，利用`smtplib`库向指定邮箱发送提醒信息。\n此外，还具有发送日志以及异常日志的功能。\n目前仅支持本校的通知提醒，后续会逐步提高项目的通用性。\n\n## 源码：\nGithub地址:[School_Notice](https://github.com/ZhaoQi99/School_Notice)\n\n## 准备工作\n- 安装twilio库:`pip install twilio`\n- 注册twilio账号:[Twilio](https://www.twilio.com)\n- 验证手机号:用来接收短信提醒的号码必须在twilio上进行验证\n\n## 遇到的问题\n### 邮件发送\n- 若用名为msg的变量来保存邮件文本，则`msg['From']`以及`msg['To']`必须为实际的发件人地址，否则可能会出现异常:`SMTPDataError(code, resp)`.如必须写作:`msg['From'] = 'xxxxx@qq.com'`.我是使用的QQ邮箱来发邮件，至于其他邮箱需不需要这样写还不清楚。 \n- 原本想用一个for循环来实现多人发送，后来发现smtplib库的sendmail方法支持多人发送，但参数应为一个list，故可用`str.split(',')`将字符串转为list。\n- 我使用的是Windows下的Python，若计算机名为中文，则有可能会导致出现异常，可通过右击此电脑->属性，修改计算机名。\n- 程序代码中使用的邮箱密码不是QQ密码，应在邮箱设置->账户->SMTP服务处，获取授权码。\n\n### 其他问题\n- 有时候会接收不到Twilio发送的短信，给10086打电话也没问出个所以然，可能是因为短信中有敏感词(如:学校名)，修改短信内容后就可以了\n- 对上述几个网站的源码使用`re.findall`后返回的列表中的每个元组中的元素的顺序均为时间、标题、链接，但对学生处网站的源码正则匹配后的元素顺序并不是按照上述顺序的。所以应单独进行调整，但直接修改一个元组中的元素，会出现异常:`error:tuple' object does not support item assignment`。解决方法是:\n```Python\nif(subject_EN == 'snnu_xsc'):\n\tnew_data = []\n    for item in data:\n\t\ttemp = (item[1], item[2], item[0])\n        new_data.append(temp)\n    data = new_data\n```\n- Python3中的print函数是自动换行的，若不需要自动换行，则可写作:`print(str,end='')`\n- 不同网站的编码格式可能不同，应按照各自的编码方式进行解码。若均采用`utf-8`的方式，则可能会出现各种编码问题，如:\n<div class=\"note danger\"><p>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc9 in position 167\n</p></div>\n解决方法是:\n```Python\nif find1 == -1 & find2 == -1:\n\tCoding = 'utf-8'\nelse:\n\t# 教务处网页源码编码格式为为gbk\n\t# 学生处网页源码编码格式为gb2312\n\tCoding = 'gbk'\ndata = response.read().decode(Coding)\n```\n## Python程序打包为exe(Pyinstaller)\n### 安装及使用\n1. 使用`pip install pywin32`安装pywin32\n2. 使用`pip install PyInstaller`安装Pyinstaller\n3. 使用`pyinstaller -F main.py`即可将Python程序打包为exe程序\n\n### 注意事项\n- 打包之前应将用到的第三方库(此项目仅用到Twilio)复制到与要打包的py文件同一目录下。\n- 可使用`pyinstaller -F -i logo.ico main.py`,为生成的exe程序添加图标\n- 使用的ico文件像素不能过小，否则有可能出现:打包后的程序图标只有在资源管理器中设置为以小图标查看的情况下才显示的是自己的图标，其他情况仍未默认图标\n\n## 使用截图\n![](/images/Screenshot_2018-03-13-09-32-23-47.jpg)\n![](/images/send_email.jpg)\n![](/images/20180426015859.jpg)\n## 参考博客\n1. [应用python对校园通知的更新进行推送](https://blog.csdn.net/hanyou11/article/details/50756800)\n2. [使用python发短信给自己的手机](https://blog.csdn.net/zyc121561/article/details/78169168)\n3. [Python打包方法——Pyinstaller](https://www.cnblogs.com/gopythoner/p/6337543.html)","slug":"用Python实现校园通知更新提醒","published":1,"updated":"2019-03-28T10:45:16.812Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8j0017kchiwzbnc2en","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这个项目实已经在一个月前已经完成了，一直都想写一篇博客来总结这个过程中遇到的一些问题。但最近一个月来都比较忙，所以一直拖到了现在。<br>首先说说起因吧，我没事的时候，总喜欢依次点开学校主页、教务处、图书馆以及学院的网站，看看有没有什么新通知，虽然大多与我无关。恰逢最近正在学Python，经常听到别人说用Python写爬虫很简单，但自己尚未接触过爬虫。于是抱着试一试的心态看了几篇关于Python爬虫的博客，发现实现起来的确很简单。于是，便一边看着官方的文档说明，一边看着别人的博客，终于完成了自己的第一次爬虫。</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>使用<code>urllib.request</code>库获取到目标url(各个网站的’更多通知’页)的源代码，然后利用Python的<code>re</code>库进行正则匹配，提取到通知相关信息后，与文件中存取的上一次爬取到的信息进行对比。<br>若检测到有新的通知，则利用<code>twilio</code>库向指定手机号码发送SMS，利用<code>smtplib</code>库向指定邮箱发送提醒信息。<br>此外，还具有发送日志以及异常日志的功能。<br>目前仅支持本校的通知提醒，后续会逐步提高项目的通用性。</p>\n<h2 id=\"源码：\"><a href=\"#源码：\" class=\"headerlink\" title=\"源码：\"></a>源码：</h2><p>Github地址:<a href=\"https://github.com/ZhaoQi99/School_Notice\" target=\"_blank\" rel=\"noopener\">School_Notice</a></p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li>安装twilio库:<code>pip install twilio</code></li>\n<li>注册twilio账号:<a href=\"https://www.twilio.com\" target=\"_blank\" rel=\"noopener\">Twilio</a></li>\n<li>验证手机号:用来接收短信提醒的号码必须在twilio上进行验证</li>\n</ul>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><h3 id=\"邮件发送\"><a href=\"#邮件发送\" class=\"headerlink\" title=\"邮件发送\"></a>邮件发送</h3><ul>\n<li>若用名为msg的变量来保存邮件文本，则<code>msg[&#39;From&#39;]</code>以及<code>msg[&#39;To&#39;]</code>必须为实际的发件人地址，否则可能会出现异常:<code>SMTPDataError(code, resp)</code>.如必须写作:<code>msg[&#39;From&#39;] = &#39;xxxxx@qq.com&#39;</code>.我是使用的QQ邮箱来发邮件，至于其他邮箱需不需要这样写还不清楚。 </li>\n<li>原本想用一个for循环来实现多人发送，后来发现smtplib库的sendmail方法支持多人发送，但参数应为一个list，故可用<code>str.split(&#39;,&#39;)</code>将字符串转为list。</li>\n<li>我使用的是Windows下的Python，若计算机名为中文，则有可能会导致出现异常，可通过右击此电脑-&gt;属性，修改计算机名。</li>\n<li>程序代码中使用的邮箱密码不是QQ密码，应在邮箱设置-&gt;账户-&gt;SMTP服务处，获取授权码。</li>\n</ul>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><ul>\n<li>有时候会接收不到Twilio发送的短信，给10086打电话也没问出个所以然，可能是因为短信中有敏感词(如:学校名)，修改短信内容后就可以了</li>\n<li><p>对上述几个网站的源码使用<code>re.findall</code>后返回的列表中的每个元组中的元素的顺序均为时间、标题、链接，但对学生处网站的源码正则匹配后的元素顺序并不是按照上述顺序的。所以应单独进行调整，但直接修改一个元组中的元素，会出现异常:<code>error:tuple&#39; object does not support item assignment</code>。解决方法是:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(subject_EN == <span class=\"string\">'snnu_xsc'</span>):</span><br><span class=\"line\">\tnew_data = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">\t\ttemp = (item[<span class=\"number\">1</span>], item[<span class=\"number\">2</span>], item[<span class=\"number\">0</span>])</span><br><span class=\"line\">        new_data.append(temp)</span><br><span class=\"line\">    data = new_data</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Python3中的print函数是自动换行的，若不需要自动换行，则可写作:<code>print(str,end=&#39;&#39;)</code></p>\n</li>\n<li>不同网站的编码格式可能不同，应按照各自的编码方式进行解码。若均采用<code>utf-8</code>的方式，则可能会出现各种编码问题，如:<br><div class=\"note danger\"><p>UnicodeDecodeError: ‘utf-8’ codec can’t decode byte 0xc9 in position 167<br></p></div><br>解决方法是:<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> find1 == <span class=\"number\">-1</span> &amp; find2 == <span class=\"number\">-1</span>:</span><br><span class=\"line\">\tCoding = <span class=\"string\">'utf-8'</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t<span class=\"comment\"># 教务处网页源码编码格式为为gbk</span></span><br><span class=\"line\">\t<span class=\"comment\"># 学生处网页源码编码格式为gb2312</span></span><br><span class=\"line\">\tCoding = <span class=\"string\">'gbk'</span></span><br><span class=\"line\">data = response.read().decode(Coding)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Python程序打包为exe-Pyinstaller\"><a href=\"#Python程序打包为exe-Pyinstaller\" class=\"headerlink\" title=\"Python程序打包为exe(Pyinstaller)\"></a>Python程序打包为exe(Pyinstaller)</h2><h3 id=\"安装及使用\"><a href=\"#安装及使用\" class=\"headerlink\" title=\"安装及使用\"></a>安装及使用</h3><ol>\n<li>使用<code>pip install pywin32</code>安装pywin32</li>\n<li>使用<code>pip install PyInstaller</code>安装Pyinstaller</li>\n<li>使用<code>pyinstaller -F main.py</code>即可将Python程序打包为exe程序</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>打包之前应将用到的第三方库(此项目仅用到Twilio)复制到与要打包的py文件同一目录下。</li>\n<li>可使用<code>pyinstaller -F -i logo.ico main.py</code>,为生成的exe程序添加图标</li>\n<li>使用的ico文件像素不能过小，否则有可能出现:打包后的程序图标只有在资源管理器中设置为以小图标查看的情况下才显示的是自己的图标，其他情况仍未默认图标</li>\n</ul>\n<h2 id=\"使用截图\"><a href=\"#使用截图\" class=\"headerlink\" title=\"使用截图\"></a>使用截图</h2><p><img src=\"/images/Screenshot_2018-03-13-09-32-23-47.jpg\" alt><br><img src=\"/images/send_email.jpg\" alt><br><img src=\"/images/20180426015859.jpg\" alt></p>\n<h2 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h2><ol>\n<li><a href=\"https://blog.csdn.net/hanyou11/article/details/50756800\" target=\"_blank\" rel=\"noopener\">应用python对校园通知的更新进行推送</a></li>\n<li><a href=\"https://blog.csdn.net/zyc121561/article/details/78169168\" target=\"_blank\" rel=\"noopener\">使用python发短信给自己的手机</a></li>\n<li><a href=\"https://www.cnblogs.com/gopythoner/p/6337543.html\" target=\"_blank\" rel=\"noopener\">Python打包方法——Pyinstaller</a></li>\n</ol>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这个项目实已经在一个月前已经完成了，一直都想写一篇博客来总结这个过程中遇到的一些问题。但最近一个月来都比较忙，所以一直拖到了现在。<br>首先说说起因吧，我没事的时候，总喜欢依次点开学校主页、教务处、图书馆以及学院的网站，看看有没有什么新通知，虽然大多与我无关。恰逢最近正在学Python，经常听到别人说用Python写爬虫很简单，但自己尚未接触过爬虫。于是抱着试一试的心态看了几篇关于Python爬虫的博客，发现实现起来的确很简单。于是，便一边看着官方的文档说明，一边看着别人的博客，终于完成了自己的第一次爬虫。</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>使用<code>urllib.request</code>库获取到目标url(各个网站的’更多通知’页)的源代码，然后利用Python的<code>re</code>库进行正则匹配，提取到通知相关信息后，与文件中存取的上一次爬取到的信息进行对比。<br>若检测到有新的通知，则利用<code>twilio</code>库向指定手机号码发送SMS，利用<code>smtplib</code>库向指定邮箱发送提醒信息。<br>此外，还具有发送日志以及异常日志的功能。<br>目前仅支持本校的通知提醒，后续会逐步提高项目的通用性。</p>\n<h2 id=\"源码：\"><a href=\"#源码：\" class=\"headerlink\" title=\"源码：\"></a>源码：</h2><p>Github地址:<a href=\"https://github.com/ZhaoQi99/School_Notice\" target=\"_blank\" rel=\"noopener\">School_Notice</a></p>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li>安装twilio库:<code>pip install twilio</code></li>\n<li>注册twilio账号:<a href=\"https://www.twilio.com\" target=\"_blank\" rel=\"noopener\">Twilio</a></li>\n<li>验证手机号:用来接收短信提醒的号码必须在twilio上进行验证</li>\n</ul>\n<h2 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h2><h3 id=\"邮件发送\"><a href=\"#邮件发送\" class=\"headerlink\" title=\"邮件发送\"></a>邮件发送</h3><ul>\n<li>若用名为msg的变量来保存邮件文本，则<code>msg[&#39;From&#39;]</code>以及<code>msg[&#39;To&#39;]</code>必须为实际的发件人地址，否则可能会出现异常:<code>SMTPDataError(code, resp)</code>.如必须写作:<code>msg[&#39;From&#39;] = &#39;xxxxx@qq.com&#39;</code>.我是使用的QQ邮箱来发邮件，至于其他邮箱需不需要这样写还不清楚。 </li>\n<li>原本想用一个for循环来实现多人发送，后来发现smtplib库的sendmail方法支持多人发送，但参数应为一个list，故可用<code>str.split(&#39;,&#39;)</code>将字符串转为list。</li>\n<li>我使用的是Windows下的Python，若计算机名为中文，则有可能会导致出现异常，可通过右击此电脑-&gt;属性，修改计算机名。</li>\n<li>程序代码中使用的邮箱密码不是QQ密码，应在邮箱设置-&gt;账户-&gt;SMTP服务处，获取授权码。</li>\n</ul>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><ul>\n<li>有时候会接收不到Twilio发送的短信，给10086打电话也没问出个所以然，可能是因为短信中有敏感词(如:学校名)，修改短信内容后就可以了</li>\n<li><p>对上述几个网站的源码使用<code>re.findall</code>后返回的列表中的每个元组中的元素的顺序均为时间、标题、链接，但对学生处网站的源码正则匹配后的元素顺序并不是按照上述顺序的。所以应单独进行调整，但直接修改一个元组中的元素，会出现异常:<code>error:tuple&#39; object does not support item assignment</code>。解决方法是:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(subject_EN == <span class=\"string\">'snnu_xsc'</span>):</span><br><span class=\"line\">\tnew_data = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">\t\ttemp = (item[<span class=\"number\">1</span>], item[<span class=\"number\">2</span>], item[<span class=\"number\">0</span>])</span><br><span class=\"line\">        new_data.append(temp)</span><br><span class=\"line\">    data = new_data</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Python3中的print函数是自动换行的，若不需要自动换行，则可写作:<code>print(str,end=&#39;&#39;)</code></p>\n</li>\n<li>不同网站的编码格式可能不同，应按照各自的编码方式进行解码。若均采用<code>utf-8</code>的方式，则可能会出现各种编码问题，如:<br><div class=\"note danger\"><p>UnicodeDecodeError: ‘utf-8’ codec can’t decode byte 0xc9 in position 167<br></p></div><br>解决方法是:<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> find1 == <span class=\"number\">-1</span> &amp; find2 == <span class=\"number\">-1</span>:</span><br><span class=\"line\">\tCoding = <span class=\"string\">'utf-8'</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t<span class=\"comment\"># 教务处网页源码编码格式为为gbk</span></span><br><span class=\"line\">\t<span class=\"comment\"># 学生处网页源码编码格式为gb2312</span></span><br><span class=\"line\">\tCoding = <span class=\"string\">'gbk'</span></span><br><span class=\"line\">data = response.read().decode(Coding)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Python程序打包为exe-Pyinstaller\"><a href=\"#Python程序打包为exe-Pyinstaller\" class=\"headerlink\" title=\"Python程序打包为exe(Pyinstaller)\"></a>Python程序打包为exe(Pyinstaller)</h2><h3 id=\"安装及使用\"><a href=\"#安装及使用\" class=\"headerlink\" title=\"安装及使用\"></a>安装及使用</h3><ol>\n<li>使用<code>pip install pywin32</code>安装pywin32</li>\n<li>使用<code>pip install PyInstaller</code>安装Pyinstaller</li>\n<li>使用<code>pyinstaller -F main.py</code>即可将Python程序打包为exe程序</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>打包之前应将用到的第三方库(此项目仅用到Twilio)复制到与要打包的py文件同一目录下。</li>\n<li>可使用<code>pyinstaller -F -i logo.ico main.py</code>,为生成的exe程序添加图标</li>\n<li>使用的ico文件像素不能过小，否则有可能出现:打包后的程序图标只有在资源管理器中设置为以小图标查看的情况下才显示的是自己的图标，其他情况仍未默认图标</li>\n</ul>\n<h2 id=\"使用截图\"><a href=\"#使用截图\" class=\"headerlink\" title=\"使用截图\"></a>使用截图</h2><p><img src=\"/images/Screenshot_2018-03-13-09-32-23-47.jpg\" alt><br><img src=\"/images/send_email.jpg\" alt><br><img src=\"/images/20180426015859.jpg\" alt></p>\n<h2 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h2><ol>\n<li><a href=\"https://blog.csdn.net/hanyou11/article/details/50756800\" target=\"_blank\" rel=\"noopener\">应用python对校园通知的更新进行推送</a></li>\n<li><a href=\"https://blog.csdn.net/zyc121561/article/details/78169168\" target=\"_blank\" rel=\"noopener\">使用python发短信给自己的手机</a></li>\n<li><a href=\"https://www.cnblogs.com/gopythoner/p/6337543.html\" target=\"_blank\" rel=\"noopener\">Python打包方法——Pyinstaller</a></li>\n</ol>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/Screenshot_2018-03-13-09-32-23-47.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"用Python实现校园通知更新提醒","path":"45013.html","eyeCatchImage":"/images/Screenshot_2018-03-13-09-32-23-47.jpg","excerpt":null,"date":"2018-04-21T13:26:25.000Z","pv":0,"totalPV":0,"categories":"Python","tags":["Python","爬虫","Twilio","正则表达式"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"用Python绘制七段数码管","abbrlink":48183,"date":"2017-12-05T12:19:25.000Z","_content":"## 题目：\n数码管是一种价格便宜、使用简单的发光电子器件，广泛应用在价格较低的电子类产品中，其中，七段数码管最为常用。七段数码管\n（seven-segment indicator）由7 段数码管拼接而成，每段有亮或不亮两种情况，改进型的七段数码管还包括一个小数点位置，如图1 所示。\n![](/images/20171205201558358.jpg)\n\n　　　　　　　　　　　　　　　　　　　　　　　　　　图 1：七段数码管的结构图\n七段数码管能形成27=128 种不同状态，其中部分状态能够显示易于人们理解的数字或字母含义，因此被广泛使用。图2 给出了十六进制中16 个字符的七段数码管表示。\n![](/images/20171205201607868.jpg)\n　　　　　　　　　　　　　　　　　　　　　　　　　　图 2：十六进制中16 个字符的七段数码管表示\n请采用turtle 库并使用函数封装绘制七段数码管，显示当前系统日期和时间。该问题的IPO 描述如下：输入：当前日期的数字形式处理：根据每个数字绘制七段数码管表示输出：绘制当前日期的七段数码管表示程序的预期运行效果如图3 和图4 所示，与两个效果中任何一个相似均可。\n![](/images/20171205201613806.jpg)\n![](/images/20171205201625796.jpg)\n## 源码：\n```Python\n'''\nCreated on Dec 5, 2017\n\n@author: QiZhao\n'''\nimport turtle,datetime  \n\ndef drawGap():#画数码管间隔\n    turtle.penup()\n    turtle.fd(5)\n    \ndef drawline(flag):#画单条数码管\n    drawGap()\n    turtle.pendown()\n    if(flag==False):\n        turtle.penup()\n    turtle.fd(40)\n    drawGap()\n    turtle.right(90)\n    \ndef drawdight(dight):#根据数字绘制对应数字的数码管\n    if dight in [2,3,4,5,6,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,1,3,4,5,6,7,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,2,3,5,6,8]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,2,6,8]:\n        drawline(True)\n    else:\n        drawline(False)\n    turtle.left(90)\n    if dight in [0,4,5,6,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,2,3,5,6,7,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,1,2,3,4,7,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    turtle.setheading(0)\n    turtle.fd(25)\n\ndef drawdata(data):#根据日期画出对应数字\n    turtle.color(\"red\")\n    for i in data:\n        if i=='+':\n            turtle.write('年',font=(\"宋体\", 24, \"normal\"))\n            turtle.color(\"green\")\n            turtle.fd(30)\n        elif i=='-':\n            turtle.write('月',font=(\"宋体\", 24, \"normal\"))\n            turtle.color(\"blue\")\n            turtle.fd(30)\n        elif i=='*':\n            turtle.write('日',font=(\"宋体\", 24, \"normal\"))\n        else:\n            drawdight(eval(i))\n            \ndef main():\n    turtle.setup(800,500)\n    turtle.penup()\n    turtle.fd(-350)\n    turtle.pendown()\n    turtle.hideturtle()\n    turtle.pensize(6)\n    turtle.speed(9)\n    drawdata(datetime.datetime.now().strftime('%Y+%m-%d*'))\n    a=input()\nmain()\n```\n## 效果图\n![](/images/20171205202005054.jpg)","source":"_posts/用Python绘制七段数码管.md","raw":"---\ntitle: 用Python绘制七段数码管\ncategories: Python\ntags:\n  - Python\nabbrlink: 48183\ndate: 2017-12-05 20:19:25\n---\n## 题目：\n数码管是一种价格便宜、使用简单的发光电子器件，广泛应用在价格较低的电子类产品中，其中，七段数码管最为常用。七段数码管\n（seven-segment indicator）由7 段数码管拼接而成，每段有亮或不亮两种情况，改进型的七段数码管还包括一个小数点位置，如图1 所示。\n![](/images/20171205201558358.jpg)\n\n　　　　　　　　　　　　　　　　　　　　　　　　　　图 1：七段数码管的结构图\n七段数码管能形成27=128 种不同状态，其中部分状态能够显示易于人们理解的数字或字母含义，因此被广泛使用。图2 给出了十六进制中16 个字符的七段数码管表示。\n![](/images/20171205201607868.jpg)\n　　　　　　　　　　　　　　　　　　　　　　　　　　图 2：十六进制中16 个字符的七段数码管表示\n请采用turtle 库并使用函数封装绘制七段数码管，显示当前系统日期和时间。该问题的IPO 描述如下：输入：当前日期的数字形式处理：根据每个数字绘制七段数码管表示输出：绘制当前日期的七段数码管表示程序的预期运行效果如图3 和图4 所示，与两个效果中任何一个相似均可。\n![](/images/20171205201613806.jpg)\n![](/images/20171205201625796.jpg)\n## 源码：\n```Python\n'''\nCreated on Dec 5, 2017\n\n@author: QiZhao\n'''\nimport turtle,datetime  \n\ndef drawGap():#画数码管间隔\n    turtle.penup()\n    turtle.fd(5)\n    \ndef drawline(flag):#画单条数码管\n    drawGap()\n    turtle.pendown()\n    if(flag==False):\n        turtle.penup()\n    turtle.fd(40)\n    drawGap()\n    turtle.right(90)\n    \ndef drawdight(dight):#根据数字绘制对应数字的数码管\n    if dight in [2,3,4,5,6,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,1,3,4,5,6,7,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,2,3,5,6,8]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,2,6,8]:\n        drawline(True)\n    else:\n        drawline(False)\n    turtle.left(90)\n    if dight in [0,4,5,6,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,2,3,5,6,7,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    if dight in [0,1,2,3,4,7,8,9]:\n        drawline(True)\n    else:\n        drawline(False)\n    turtle.setheading(0)\n    turtle.fd(25)\n\ndef drawdata(data):#根据日期画出对应数字\n    turtle.color(\"red\")\n    for i in data:\n        if i=='+':\n            turtle.write('年',font=(\"宋体\", 24, \"normal\"))\n            turtle.color(\"green\")\n            turtle.fd(30)\n        elif i=='-':\n            turtle.write('月',font=(\"宋体\", 24, \"normal\"))\n            turtle.color(\"blue\")\n            turtle.fd(30)\n        elif i=='*':\n            turtle.write('日',font=(\"宋体\", 24, \"normal\"))\n        else:\n            drawdight(eval(i))\n            \ndef main():\n    turtle.setup(800,500)\n    turtle.penup()\n    turtle.fd(-350)\n    turtle.pendown()\n    turtle.hideturtle()\n    turtle.pensize(6)\n    turtle.speed(9)\n    drawdata(datetime.datetime.now().strftime('%Y+%m-%d*'))\n    a=input()\nmain()\n```\n## 效果图\n![](/images/20171205202005054.jpg)","slug":"用Python绘制七段数码管","published":1,"updated":"2019-03-28T10:45:16.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8m001akchifnla2p2t","content":"<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><p>数码管是一种价格便宜、使用简单的发光电子器件，广泛应用在价格较低的电子类产品中，其中，七段数码管最为常用。七段数码管<br>（seven-segment indicator）由7 段数码管拼接而成，每段有亮或不亮两种情况，改进型的七段数码管还包括一个小数点位置，如图1 所示。<br><img src=\"/images/20171205201558358.jpg\" alt></p>\n<p>　　　　　　　　　　　　　　　　　　　　　　　　　　图 1：七段数码管的结构图<br>七段数码管能形成27=128 种不同状态，其中部分状态能够显示易于人们理解的数字或字母含义，因此被广泛使用。图2 给出了十六进制中16 个字符的七段数码管表示。<br><img src=\"/images/20171205201607868.jpg\" alt><br>　　　　　　　　　　　　　　　　　　　　　　　　　　图 2：十六进制中16 个字符的七段数码管表示<br>请采用turtle 库并使用函数封装绘制七段数码管，显示当前系统日期和时间。该问题的IPO 描述如下：输入：当前日期的数字形式处理：根据每个数字绘制七段数码管表示输出：绘制当前日期的七段数码管表示程序的预期运行效果如图3 和图4 所示，与两个效果中任何一个相似均可。<br><img src=\"/images/20171205201613806.jpg\" alt><br><img src=\"/images/20171205201625796.jpg\" alt></p>\n<h2 id=\"源码：\"><a href=\"#源码：\" class=\"headerlink\" title=\"源码：\"></a>源码：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Created on Dec 5, 2017</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">@author: QiZhao</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> turtle,datetime  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawGap</span><span class=\"params\">()</span>:</span><span class=\"comment\">#画数码管间隔</span></span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">5</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawline</span><span class=\"params\">(flag)</span>:</span><span class=\"comment\">#画单条数码管</span></span><br><span class=\"line\">    drawGap()</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(flag==<span class=\"literal\">False</span>):</span><br><span class=\"line\">        turtle.penup()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">40</span>)</span><br><span class=\"line\">    drawGap()</span><br><span class=\"line\">    turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawdight</span><span class=\"params\">(dight)</span>:</span><span class=\"comment\">#根据数字绘制对应数字的数码管</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    turtle.setheading(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawdata</span><span class=\"params\">(data)</span>:</span><span class=\"comment\">#根据日期画出对应数字</span></span><br><span class=\"line\">    turtle.color(<span class=\"string\">\"red\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i==<span class=\"string\">'+'</span>:</span><br><span class=\"line\">            turtle.write(<span class=\"string\">'年'</span>,font=(<span class=\"string\">\"宋体\"</span>, <span class=\"number\">24</span>, <span class=\"string\">\"normal\"</span>))</span><br><span class=\"line\">            turtle.color(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">            turtle.fd(<span class=\"number\">30</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> i==<span class=\"string\">'-'</span>:</span><br><span class=\"line\">            turtle.write(<span class=\"string\">'月'</span>,font=(<span class=\"string\">\"宋体\"</span>, <span class=\"number\">24</span>, <span class=\"string\">\"normal\"</span>))</span><br><span class=\"line\">            turtle.color(<span class=\"string\">\"blue\"</span>)</span><br><span class=\"line\">            turtle.fd(<span class=\"number\">30</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> i==<span class=\"string\">'*'</span>:</span><br><span class=\"line\">            turtle.write(<span class=\"string\">'日'</span>,font=(<span class=\"string\">\"宋体\"</span>, <span class=\"number\">24</span>, <span class=\"string\">\"normal\"</span>))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            drawdight(eval(i))</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    turtle.setup(<span class=\"number\">800</span>,<span class=\"number\">500</span>)</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">-350</span>)</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    turtle.hideturtle()</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">6</span>)</span><br><span class=\"line\">    turtle.speed(<span class=\"number\">9</span>)</span><br><span class=\"line\">    drawdata(datetime.datetime.now().strftime(<span class=\"string\">'%Y+%m-%d*'</span>))</span><br><span class=\"line\">    a=input()</span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/20171205202005054.jpg\" alt></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><p>数码管是一种价格便宜、使用简单的发光电子器件，广泛应用在价格较低的电子类产品中，其中，七段数码管最为常用。七段数码管<br>（seven-segment indicator）由7 段数码管拼接而成，每段有亮或不亮两种情况，改进型的七段数码管还包括一个小数点位置，如图1 所示。<br><img src=\"/images/20171205201558358.jpg\" alt></p>\n<p>　　　　　　　　　　　　　　　　　　　　　　　　　　图 1：七段数码管的结构图<br>七段数码管能形成27=128 种不同状态，其中部分状态能够显示易于人们理解的数字或字母含义，因此被广泛使用。图2 给出了十六进制中16 个字符的七段数码管表示。<br><img src=\"/images/20171205201607868.jpg\" alt><br>　　　　　　　　　　　　　　　　　　　　　　　　　　图 2：十六进制中16 个字符的七段数码管表示<br>请采用turtle 库并使用函数封装绘制七段数码管，显示当前系统日期和时间。该问题的IPO 描述如下：输入：当前日期的数字形式处理：根据每个数字绘制七段数码管表示输出：绘制当前日期的七段数码管表示程序的预期运行效果如图3 和图4 所示，与两个效果中任何一个相似均可。<br><img src=\"/images/20171205201613806.jpg\" alt><br><img src=\"/images/20171205201625796.jpg\" alt></p>\n<h2 id=\"源码：\"><a href=\"#源码：\" class=\"headerlink\" title=\"源码：\"></a>源码：</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Created on Dec 5, 2017</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">@author: QiZhao</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> turtle,datetime  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawGap</span><span class=\"params\">()</span>:</span><span class=\"comment\">#画数码管间隔</span></span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">5</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawline</span><span class=\"params\">(flag)</span>:</span><span class=\"comment\">#画单条数码管</span></span><br><span class=\"line\">    drawGap()</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(flag==<span class=\"literal\">False</span>):</span><br><span class=\"line\">        turtle.penup()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">40</span>)</span><br><span class=\"line\">    drawGap()</span><br><span class=\"line\">    turtle.right(<span class=\"number\">90</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawdight</span><span class=\"params\">(dight)</span>:</span><span class=\"comment\">#根据数字绘制对应数字的数码管</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    turtle.left(<span class=\"number\">90</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> dight <span class=\"keyword\">in</span> [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]:</span><br><span class=\"line\">        drawline(<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        drawline(<span class=\"literal\">False</span>)</span><br><span class=\"line\">    turtle.setheading(<span class=\"number\">0</span>)</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drawdata</span><span class=\"params\">(data)</span>:</span><span class=\"comment\">#根据日期画出对应数字</span></span><br><span class=\"line\">    turtle.color(<span class=\"string\">\"red\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i==<span class=\"string\">'+'</span>:</span><br><span class=\"line\">            turtle.write(<span class=\"string\">'年'</span>,font=(<span class=\"string\">\"宋体\"</span>, <span class=\"number\">24</span>, <span class=\"string\">\"normal\"</span>))</span><br><span class=\"line\">            turtle.color(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">            turtle.fd(<span class=\"number\">30</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> i==<span class=\"string\">'-'</span>:</span><br><span class=\"line\">            turtle.write(<span class=\"string\">'月'</span>,font=(<span class=\"string\">\"宋体\"</span>, <span class=\"number\">24</span>, <span class=\"string\">\"normal\"</span>))</span><br><span class=\"line\">            turtle.color(<span class=\"string\">\"blue\"</span>)</span><br><span class=\"line\">            turtle.fd(<span class=\"number\">30</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> i==<span class=\"string\">'*'</span>:</span><br><span class=\"line\">            turtle.write(<span class=\"string\">'日'</span>,font=(<span class=\"string\">\"宋体\"</span>, <span class=\"number\">24</span>, <span class=\"string\">\"normal\"</span>))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            drawdight(eval(i))</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    turtle.setup(<span class=\"number\">800</span>,<span class=\"number\">500</span>)</span><br><span class=\"line\">    turtle.penup()</span><br><span class=\"line\">    turtle.fd(<span class=\"number\">-350</span>)</span><br><span class=\"line\">    turtle.pendown()</span><br><span class=\"line\">    turtle.hideturtle()</span><br><span class=\"line\">    turtle.pensize(<span class=\"number\">6</span>)</span><br><span class=\"line\">    turtle.speed(<span class=\"number\">9</span>)</span><br><span class=\"line\">    drawdata(datetime.datetime.now().strftime(<span class=\"string\">'%Y+%m-%d*'</span>))</span><br><span class=\"line\">    a=input()</span><br><span class=\"line\">main()</span><br></pre></td></tr></table></figure>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/20171205202005054.jpg\" alt></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/20171205201558358.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"用Python绘制七段数码管","path":"48183.html","eyeCatchImage":"/images/20171205201558358.jpg","excerpt":null,"date":"2017-12-05T12:19:25.000Z","pv":0,"totalPV":0,"categories":"Python","tags":["Python"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"第三周编程题_查找里程","abbrlink":25475,"date":"2017-08-21T06:06:05.000Z","_content":"## 题目内容：\n下图为国内主要城市之间的公路里程：\n\n![](/images/6630868754095812824.jpg)\n\n你的程序要读入这样的一张表，然后，根据输入的两个城市的名称，给出这两个城市之间的里程。\n\n注意：任何两个城市之间的里程都已经给出，不需要计算经第三地中转。\n注意：你并不需要去录入上图的数据，数据是在程序输入中给的。\n\n## 输入格式:\n首先，你会读到若干个城市的名字。每个名字都只是一个英文单词，中间不含空格或其他符号。当读到名字为“###”（三个#号）时，表示城市名字输入结束，###并不是一个城市的名字。如果记读到的城市名字的数量为n。\n然后，你会读到nxn的一个整数矩阵。第一行的每一个数字，表示上述城市名单中第一个城市依次到另一个城市之间的里程。表中同一个城市之间的里程为0。\n最后，你会读到两个城市的名字。\n\n## 输出格式：\n输出这两个城市之间的距离。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>Hagzou Hugzou Jigxng ###\n0 1108 708\n1108 0 994\n708 994 0\nHagzou Jigxng\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>708\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n## 代码：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Third_Week\n{\n\tprivate ArrayList<String> city = new ArrayList<String>();\n\tprivate HashMap<String, HashMap<String, Integer>> distince = new HashMap<String, HashMap<String, Integer>>();\n\tprivate static Scanner in = new Scanner(System.in);\n\n\t// 输入城市名及距离\n\tpublic void input()\n\t{\n//\t\tScanner in = new Scanner(System.in);\n\t\tString temp;\n\t\t// 读入城市名\n\t\twhile (true)\n\t\t{\n\t\t\ttemp = in.next();\n\t\t\tif (temp.equals(\"###\") == true)\n\t\t\t\tbreak;\n\t\t\tcity.add(temp);\n\t\t}\n\t\t// 读入距离\n\t\tfor (int i = 0; i < city.size(); i++)\n\t\t{\n\t\t\tHashMap<String, Integer> temp_hashmap = new HashMap<String, Integer>();\n\t\t\tfor (int j = 0; j < city.size(); j++)\n\t\t\t{\n\t\t\t\tint dis = in.nextInt();\n\t\t\t\ttemp_hashmap.put(city.get(j), dis);\n\t\t\t}\n\t\t\tdistince.put(city.get(i), temp_hashmap);\n\t\t}\n//\t\tin.close();\n\t}\n\n\t// 查找两个城市间的距离\n\tpublic int search(String start, String end)\n\t{\n\t\tint dis = 0;\n\t\tdis = distince.get(start).get(end);\n\t\treturn dis;\n\t}\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tThird_Week dis = new Third_Week();\n//\t\tScanner in = new Scanner(System.in);\n\t\tdis.input();\n\t\tString start = in.next();\n\t\tString end = in.next();\n\t\tSystem.out.println(dis.search(start, end));\n\t\tin.close();\n\t}\n\n}\n\n```\n## 小结：\n题目中给的样例有问题，有的地方多了几个空格，导致在本机测样例的时候，一直无输出，调试了半天。\n手打了样例之后，发现要查询的两个城市的名字无法读入，怀疑是scanner关闭了两次的问题，注释掉input()方法中的`in.close()`，果然。。。\n但是又有个warning，提示`input()`方法中的in没有关闭。强迫症，把scanner写成全局的，完美解决。\n开始没读清题意，以为要查询多组城市间的距离，查了下Java中读到末尾的方法，学会了`hasnext()`等方法。\n链接：[java中关于判断文本文件读到文件尾](http://blog.csdn.net/kejizuiqianfang/article/details/55253698)\n链接：[java使用两个scanner，关闭输入流](http://blog.csdn.net/wn1017888485/article/details/46039361)","source":"_posts/第三周编程题_查找里程.md","raw":"---\ntitle: 第三周编程题_查找里程\ncategories: 面向对象程序设计_Java语言_翁恺\ntags:\n  - Java\nabbrlink: 25475\ndate: 2017-08-21 14:06:05\n---\n## 题目内容：\n下图为国内主要城市之间的公路里程：\n\n![](/images/6630868754095812824.jpg)\n\n你的程序要读入这样的一张表，然后，根据输入的两个城市的名称，给出这两个城市之间的里程。\n\n注意：任何两个城市之间的里程都已经给出，不需要计算经第三地中转。\n注意：你并不需要去录入上图的数据，数据是在程序输入中给的。\n\n## 输入格式:\n首先，你会读到若干个城市的名字。每个名字都只是一个英文单词，中间不含空格或其他符号。当读到名字为“###”（三个#号）时，表示城市名字输入结束，###并不是一个城市的名字。如果记读到的城市名字的数量为n。\n然后，你会读到nxn的一个整数矩阵。第一行的每一个数字，表示上述城市名单中第一个城市依次到另一个城市之间的里程。表中同一个城市之间的里程为0。\n最后，你会读到两个城市的名字。\n\n## 输出格式：\n输出这两个城市之间的距离。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>Hagzou Hugzou Jigxng ###\n0 1108 708\n1108 0 994\n708 994 0\nHagzou Jigxng\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>708\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n## 代码：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Third_Week\n{\n\tprivate ArrayList<String> city = new ArrayList<String>();\n\tprivate HashMap<String, HashMap<String, Integer>> distince = new HashMap<String, HashMap<String, Integer>>();\n\tprivate static Scanner in = new Scanner(System.in);\n\n\t// 输入城市名及距离\n\tpublic void input()\n\t{\n//\t\tScanner in = new Scanner(System.in);\n\t\tString temp;\n\t\t// 读入城市名\n\t\twhile (true)\n\t\t{\n\t\t\ttemp = in.next();\n\t\t\tif (temp.equals(\"###\") == true)\n\t\t\t\tbreak;\n\t\t\tcity.add(temp);\n\t\t}\n\t\t// 读入距离\n\t\tfor (int i = 0; i < city.size(); i++)\n\t\t{\n\t\t\tHashMap<String, Integer> temp_hashmap = new HashMap<String, Integer>();\n\t\t\tfor (int j = 0; j < city.size(); j++)\n\t\t\t{\n\t\t\t\tint dis = in.nextInt();\n\t\t\t\ttemp_hashmap.put(city.get(j), dis);\n\t\t\t}\n\t\t\tdistince.put(city.get(i), temp_hashmap);\n\t\t}\n//\t\tin.close();\n\t}\n\n\t// 查找两个城市间的距离\n\tpublic int search(String start, String end)\n\t{\n\t\tint dis = 0;\n\t\tdis = distince.get(start).get(end);\n\t\treturn dis;\n\t}\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tThird_Week dis = new Third_Week();\n//\t\tScanner in = new Scanner(System.in);\n\t\tdis.input();\n\t\tString start = in.next();\n\t\tString end = in.next();\n\t\tSystem.out.println(dis.search(start, end));\n\t\tin.close();\n\t}\n\n}\n\n```\n## 小结：\n题目中给的样例有问题，有的地方多了几个空格，导致在本机测样例的时候，一直无输出，调试了半天。\n手打了样例之后，发现要查询的两个城市的名字无法读入，怀疑是scanner关闭了两次的问题，注释掉input()方法中的`in.close()`，果然。。。\n但是又有个warning，提示`input()`方法中的in没有关闭。强迫症，把scanner写成全局的，完美解决。\n开始没读清题意，以为要查询多组城市间的距离，查了下Java中读到末尾的方法，学会了`hasnext()`等方法。\n链接：[java中关于判断文本文件读到文件尾](http://blog.csdn.net/kejizuiqianfang/article/details/55253698)\n链接：[java使用两个scanner，关闭输入流](http://blog.csdn.net/wn1017888485/article/details/46039361)","slug":"第三周编程题_查找里程","published":1,"updated":"2019-03-28T10:45:16.815Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8o001ekchi72gzb8ml","content":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>下图为国内主要城市之间的公路里程：</p>\n<p><img src=\"/images/6630868754095812824.jpg\" alt></p>\n<p>你的程序要读入这样的一张表，然后，根据输入的两个城市的名称，给出这两个城市之间的里程。</p>\n<p>注意：任何两个城市之间的里程都已经给出，不需要计算经第三地中转。<br>注意：你并不需要去录入上图的数据，数据是在程序输入中给的。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>首先，你会读到若干个城市的名字。每个名字都只是一个英文单词，中间不含空格或其他符号。当读到名字为“###”（三个#号）时，表示城市名字输入结束，###并不是一个城市的名字。如果记读到的城市名字的数量为n。<br>然后，你会读到nxn的一个整数矩阵。第一行的每一个数字，表示上述城市名单中第一个城市依次到另一个城市之间的里程。表中同一个城市之间的里程为0。<br>最后，你会读到两个城市的名字。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>输出这两个城市之间的距离。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>Hagzou Hugzou Jigxng ###<br>0 1108 708<br>1108 0 994<br>708 994 0<br>Hagzou Jigxng<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>708<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Third_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ArrayList&lt;String&gt; city = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> HashMap&lt;String, HashMap&lt;String, Integer&gt;&gt; distince = <span class=\"keyword\">new</span> HashMap&lt;String, HashMap&lt;String, Integer&gt;&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 输入城市名及距离</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//\t\tScanner in = new Scanner(System.in);</span></span><br><span class=\"line\">\t\tString temp;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入城市名</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp = in.next();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (temp.equals(<span class=\"string\">\"###\"</span>) == <span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\tcity.add(temp);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入距离</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; city.size(); i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tHashMap&lt;String, Integer&gt; temp_hashmap = <span class=\"keyword\">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; city.size(); j++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> dis = in.nextInt();</span><br><span class=\"line\">\t\t\t\ttemp_hashmap.put(city.get(j), dis);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tdistince.put(city.get(i), temp_hashmap);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"><span class=\"comment\">//\t\tin.close();</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 查找两个城市间的距离</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">search</span><span class=\"params\">(String start, String end)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> dis = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tdis = distince.get(start).get(end);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> dis;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tThird_Week dis = <span class=\"keyword\">new</span> Third_Week();</span><br><span class=\"line\"><span class=\"comment\">//\t\tScanner in = new Scanner(System.in);</span></span><br><span class=\"line\">\t\tdis.input();</span><br><span class=\"line\">\t\tString start = in.next();</span><br><span class=\"line\">\t\tString end = in.next();</span><br><span class=\"line\">\t\tSystem.out.println(dis.search(start, end));</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"小结：\"><a href=\"#小结：\" class=\"headerlink\" title=\"小结：\"></a>小结：</h2><p>题目中给的样例有问题，有的地方多了几个空格，导致在本机测样例的时候，一直无输出，调试了半天。<br>手打了样例之后，发现要查询的两个城市的名字无法读入，怀疑是scanner关闭了两次的问题，注释掉input()方法中的<code>in.close()</code>，果然。。。<br>但是又有个warning，提示<code>input()</code>方法中的in没有关闭。强迫症，把scanner写成全局的，完美解决。<br>开始没读清题意，以为要查询多组城市间的距离，查了下Java中读到末尾的方法，学会了<code>hasnext()</code>等方法。<br>链接：<a href=\"http://blog.csdn.net/kejizuiqianfang/article/details/55253698\" target=\"_blank\" rel=\"noopener\">java中关于判断文本文件读到文件尾</a><br>链接：<a href=\"http://blog.csdn.net/wn1017888485/article/details/46039361\" target=\"_blank\" rel=\"noopener\">java使用两个scanner，关闭输入流</a></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>下图为国内主要城市之间的公路里程：</p>\n<p><img src=\"/images/6630868754095812824.jpg\" alt></p>\n<p>你的程序要读入这样的一张表，然后，根据输入的两个城市的名称，给出这两个城市之间的里程。</p>\n<p>注意：任何两个城市之间的里程都已经给出，不需要计算经第三地中转。<br>注意：你并不需要去录入上图的数据，数据是在程序输入中给的。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>首先，你会读到若干个城市的名字。每个名字都只是一个英文单词，中间不含空格或其他符号。当读到名字为“###”（三个#号）时，表示城市名字输入结束，###并不是一个城市的名字。如果记读到的城市名字的数量为n。<br>然后，你会读到nxn的一个整数矩阵。第一行的每一个数字，表示上述城市名单中第一个城市依次到另一个城市之间的里程。表中同一个城市之间的里程为0。<br>最后，你会读到两个城市的名字。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>输出这两个城市之间的距离。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>Hagzou Hugzou Jigxng ###<br>0 1108 708<br>1108 0 994<br>708 994 0<br>Hagzou Jigxng<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>708<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Third_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ArrayList&lt;String&gt; city = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> HashMap&lt;String, HashMap&lt;String, Integer&gt;&gt; distince = <span class=\"keyword\">new</span> HashMap&lt;String, HashMap&lt;String, Integer&gt;&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 输入城市名及距离</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//\t\tScanner in = new Scanner(System.in);</span></span><br><span class=\"line\">\t\tString temp;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入城市名</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp = in.next();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (temp.equals(<span class=\"string\">\"###\"</span>) == <span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\tcity.add(temp);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入距离</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; city.size(); i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tHashMap&lt;String, Integer&gt; temp_hashmap = <span class=\"keyword\">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; city.size(); j++)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> dis = in.nextInt();</span><br><span class=\"line\">\t\t\t\ttemp_hashmap.put(city.get(j), dis);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tdistince.put(city.get(i), temp_hashmap);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"><span class=\"comment\">//\t\tin.close();</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 查找两个城市间的距离</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">search</span><span class=\"params\">(String start, String end)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> dis = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tdis = distince.get(start).get(end);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> dis;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tThird_Week dis = <span class=\"keyword\">new</span> Third_Week();</span><br><span class=\"line\"><span class=\"comment\">//\t\tScanner in = new Scanner(System.in);</span></span><br><span class=\"line\">\t\tdis.input();</span><br><span class=\"line\">\t\tString start = in.next();</span><br><span class=\"line\">\t\tString end = in.next();</span><br><span class=\"line\">\t\tSystem.out.println(dis.search(start, end));</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"小结：\"><a href=\"#小结：\" class=\"headerlink\" title=\"小结：\"></a>小结：</h2><p>题目中给的样例有问题，有的地方多了几个空格，导致在本机测样例的时候，一直无输出，调试了半天。<br>手打了样例之后，发现要查询的两个城市的名字无法读入，怀疑是scanner关闭了两次的问题，注释掉input()方法中的<code>in.close()</code>，果然。。。<br>但是又有个warning，提示<code>input()</code>方法中的in没有关闭。强迫症，把scanner写成全局的，完美解决。<br>开始没读清题意，以为要查询多组城市间的距离，查了下Java中读到末尾的方法，学会了<code>hasnext()</code>等方法。<br>链接：<a href=\"http://blog.csdn.net/kejizuiqianfang/article/details/55253698\" target=\"_blank\" rel=\"noopener\">java中关于判断文本文件读到文件尾</a><br>链接：<a href=\"http://blog.csdn.net/wn1017888485/article/details/46039361\" target=\"_blank\" rel=\"noopener\">java使用两个scanner，关闭输入流</a></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/6630868754095812824.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"第三周编程题_查找里程","path":"25475.html","eyeCatchImage":"/images/6630868754095812824.jpg","excerpt":null,"date":"2017-08-21T06:06:05.000Z","pv":0,"totalPV":0,"categories":"面向对象程序设计_Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"第一周编程题_分数","abbrlink":47907,"date":"2017-08-19T16:32:54.000Z","_content":"## 题目内容：\n设计一个表示分数的类Fraction。这个类用两个int类型的变量分别表示分子和分母。\n\n这个类的构造函数是：\nFraction(int a, int b)\n&#160; &#160; &#160; &#160;构造一个a/b的分数。\n\n这个类要提供以下的功能：\ndouble toDouble();\n&#160; &#160; &#160; &#160;将分数转换double\nFraction plus(Fraction r);\n&#160; &#160; &#160; &#160;将自己的分数和r的分数相加，产生一个新的Fraction的对象。注意小学四年级学过两个分数如何相加的哈。\nFraction multiply(Fraction r);\n&#160; &#160; &#160; &#160;将自己的分数和r的分数相乘，产生一个新的Fraction的对象。\nvoid print();\n&#160; &#160; &#160; &#160;将自己以“分子/分母”的形式输出到标准输出，并带有回车换行。如果分数是1/1，应该输出1。当分子大于分母时，不需要提出整数部分，即31/30是一个正确的输出。\n\n注意，在创建和做完运算后应该化简分数为最简形式。如2/4应该被化简为1/2。\n\n你写的类要和以下的代码放在一起，并请勿修改这个代码：\n<div class=\"note warnging\"><p>\nimport java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nFraction a = new Fraction(in.nextInt(), in.nextInt());\nFraction b = new Fraction(in.nextInt(),in.nextInt());\na.print();\nb.print();\na.plus(b).print();\na.multiply(b).plus(new Fraction(5,6)).print();\na.print();\nb.print();\nin.close();\n}\n}\n</p></div>\n\n注意，你的类的定义应该这样开始：\n\n`class Fraction {`\n\n也就是说，在你的类的class前面不要有public。\n\n## 输入格式:\n程序运行时会得到四个数字，分别构成两个分数，依次是分子和分母。\n\n## 输出格式：\n输出一些算式。这些输入和输出都是由Main类的代码完成的，你的代码不要做输入和输出。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>2 4 1 3\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>1/2\n1/3\n5/6\n1\n1/2\n1/3\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码如下：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class First_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in);\n\t\tFraction a = new Fraction(in.nextInt(), in.nextInt());\n\t\tFraction b = new Fraction(in.nextInt(), in.nextInt());\n\t\ta.print();\n\t\tb.print();\n\t\ta.plus(b).print();\n\t\ta.multiply(b).plus(new Fraction(5, 6)).print();\n\t\ta.print();\n\t\tb.print();\n\t\tin.close();\n\t}\n\n}\n\nclass Fraction\n{\n\tprivate int a;\n\tprivate int b;\n\n\tpublic Fraction(int a, int b)\n\t{\n\t\t// TODO Auto-generated constructor stub\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t}\n\n\tpublic Fraction plus(Fraction r)\n\t{\n\t\tint aa = a * r.b + r.a * b;\n\t\tint bb = b * r.b;\n\t\tFraction temp = new Fraction(aa, bb);\n\t\treturn temp;\n\t}\n\n\tpublic Fraction multiply(Fraction r)\n\t{\n\t\tint aa = a * r.a;\n\t\tint bb = b * r.b;\n\t\tFraction temp = new Fraction(aa, bb);\n\t\treturn temp;\n\t}\n\n\tpublic double toDouble()\n\t{\n\t\treturn a * 1.0 / b;\n\t}\n\n\tpublic void print()\n\t{\n\t\tint x = a, y = b, r = 1;\n\t\twhile (y != 0)\n\t\t{\n\t\t\tr = x % y;\n\t\t\tx = y;\n\t\t\ty = r;\n\t\t}\n\t\ta /= x;\n\t\tb /= x;\n\t\tif (a == b)\n\t\t\tSystem.out.println(1);\n\t\telse\n\t\t\tSystem.out.println(a + \"/\" + b);\n\t}\n\n}\n```\n\n初学Java，按照C++中的习惯，开始的时候果断写成了下图这样/捂脸~\n好菜~~\n```Java\n\tpublic Fraction plus(Fraction r)\n\t{\n\t\tint aa = a * r.b + r.a * b;\n\t\tint bb = b * r.b;\n\t\tFraction temp(aa, bb);\n\t\treturn temp;\n\t}\n```","source":"_posts/第一周编程题_分数.md","raw":"---\ntitle: 第一周编程题_分数\ncategories: 面向对象程序设计_Java语言_翁恺\ntags:\n  - Java\nabbrlink: 47907\ndate: 2017-08-20 00:32:54\n---\n## 题目内容：\n设计一个表示分数的类Fraction。这个类用两个int类型的变量分别表示分子和分母。\n\n这个类的构造函数是：\nFraction(int a, int b)\n&#160; &#160; &#160; &#160;构造一个a/b的分数。\n\n这个类要提供以下的功能：\ndouble toDouble();\n&#160; &#160; &#160; &#160;将分数转换double\nFraction plus(Fraction r);\n&#160; &#160; &#160; &#160;将自己的分数和r的分数相加，产生一个新的Fraction的对象。注意小学四年级学过两个分数如何相加的哈。\nFraction multiply(Fraction r);\n&#160; &#160; &#160; &#160;将自己的分数和r的分数相乘，产生一个新的Fraction的对象。\nvoid print();\n&#160; &#160; &#160; &#160;将自己以“分子/分母”的形式输出到标准输出，并带有回车换行。如果分数是1/1，应该输出1。当分子大于分母时，不需要提出整数部分，即31/30是一个正确的输出。\n\n注意，在创建和做完运算后应该化简分数为最简形式。如2/4应该被化简为1/2。\n\n你写的类要和以下的代码放在一起，并请勿修改这个代码：\n<div class=\"note warnging\"><p>\nimport java.util.Scanner;\n\npublic class Main {\n\npublic static void main(String[] args) {\nScanner in = new Scanner(System.in);\nFraction a = new Fraction(in.nextInt(), in.nextInt());\nFraction b = new Fraction(in.nextInt(),in.nextInt());\na.print();\nb.print();\na.plus(b).print();\na.multiply(b).plus(new Fraction(5,6)).print();\na.print();\nb.print();\nin.close();\n}\n}\n</p></div>\n\n注意，你的类的定义应该这样开始：\n\n`class Fraction {`\n\n也就是说，在你的类的class前面不要有public。\n\n## 输入格式:\n程序运行时会得到四个数字，分别构成两个分数，依次是分子和分母。\n\n## 输出格式：\n输出一些算式。这些输入和输出都是由Main类的代码完成的，你的代码不要做输入和输出。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>2 4 1 3\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>1/2\n1/3\n5/6\n1\n1/2\n1/3\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码如下：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class First_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in);\n\t\tFraction a = new Fraction(in.nextInt(), in.nextInt());\n\t\tFraction b = new Fraction(in.nextInt(), in.nextInt());\n\t\ta.print();\n\t\tb.print();\n\t\ta.plus(b).print();\n\t\ta.multiply(b).plus(new Fraction(5, 6)).print();\n\t\ta.print();\n\t\tb.print();\n\t\tin.close();\n\t}\n\n}\n\nclass Fraction\n{\n\tprivate int a;\n\tprivate int b;\n\n\tpublic Fraction(int a, int b)\n\t{\n\t\t// TODO Auto-generated constructor stub\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t}\n\n\tpublic Fraction plus(Fraction r)\n\t{\n\t\tint aa = a * r.b + r.a * b;\n\t\tint bb = b * r.b;\n\t\tFraction temp = new Fraction(aa, bb);\n\t\treturn temp;\n\t}\n\n\tpublic Fraction multiply(Fraction r)\n\t{\n\t\tint aa = a * r.a;\n\t\tint bb = b * r.b;\n\t\tFraction temp = new Fraction(aa, bb);\n\t\treturn temp;\n\t}\n\n\tpublic double toDouble()\n\t{\n\t\treturn a * 1.0 / b;\n\t}\n\n\tpublic void print()\n\t{\n\t\tint x = a, y = b, r = 1;\n\t\twhile (y != 0)\n\t\t{\n\t\t\tr = x % y;\n\t\t\tx = y;\n\t\t\ty = r;\n\t\t}\n\t\ta /= x;\n\t\tb /= x;\n\t\tif (a == b)\n\t\t\tSystem.out.println(1);\n\t\telse\n\t\t\tSystem.out.println(a + \"/\" + b);\n\t}\n\n}\n```\n\n初学Java，按照C++中的习惯，开始的时候果断写成了下图这样/捂脸~\n好菜~~\n```Java\n\tpublic Fraction plus(Fraction r)\n\t{\n\t\tint aa = a * r.b + r.a * b;\n\t\tint bb = b * r.b;\n\t\tFraction temp(aa, bb);\n\t\treturn temp;\n\t}\n```","slug":"第一周编程题_分数","published":1,"updated":"2019-03-28T10:45:16.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8q001hkchi8k8k8wey","content":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>设计一个表示分数的类Fraction。这个类用两个int类型的变量分别表示分子和分母。</p>\n<p>这个类的构造函数是：<br>Fraction(int a, int b)<br>&#160; &#160; &#160; &#160;构造一个a/b的分数。</p>\n<p>这个类要提供以下的功能：<br>double toDouble();<br>&#160; &#160; &#160; &#160;将分数转换double<br>Fraction plus(Fraction r);<br>&#160; &#160; &#160; &#160;将自己的分数和r的分数相加，产生一个新的Fraction的对象。注意小学四年级学过两个分数如何相加的哈。<br>Fraction multiply(Fraction r);<br>&#160; &#160; &#160; &#160;将自己的分数和r的分数相乘，产生一个新的Fraction的对象。<br>void print();<br>&#160; &#160; &#160; &#160;将自己以“分子/分母”的形式输出到标准输出，并带有回车换行。如果分数是1/1，应该输出1。当分子大于分母时，不需要提出整数部分，即31/30是一个正确的输出。</p>\n<p>注意，在创建和做完运算后应该化简分数为最简形式。如2/4应该被化简为1/2。</p>\n<p>你写的类要和以下的代码放在一起，并请勿修改这个代码：</p>\n<div class=\"note warnging\"><p><br>import java.util.Scanner;<br><br>public class Main {<br><br>public static void main(String[] args) {<br>Scanner in = new Scanner(System.in);<br>Fraction a = new Fraction(in.nextInt(), in.nextInt());<br>Fraction b = new Fraction(in.nextInt(),in.nextInt());<br>a.print();<br>b.print();<br>a.plus(b).print();<br>a.multiply(b).plus(new Fraction(5,6)).print();<br>a.print();<br>b.print();<br>in.close();<br>}<br>}<br></p></div>\n\n<p>注意，你的类的定义应该这样开始：</p>\n<p><code>class Fraction {</code></p>\n<p>也就是说，在你的类的class前面不要有public。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>程序运行时会得到四个数字，分别构成两个分数，依次是分子和分母。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>输出一些算式。这些输入和输出都是由Main类的代码完成的，你的代码不要做输入和输出。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>2 4 1 3<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>1/2<br>1/3<br>5/6<br>1<br>1/2<br>1/3<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码如下：\"><a href=\"#代码如下：\" class=\"headerlink\" title=\"代码如下：\"></a>代码如下：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">First_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tFraction a = <span class=\"keyword\">new</span> Fraction(in.nextInt(), in.nextInt());</span><br><span class=\"line\">\t\tFraction b = <span class=\"keyword\">new</span> Fraction(in.nextInt(), in.nextInt());</span><br><span class=\"line\">\t\ta.print();</span><br><span class=\"line\">\t\tb.print();</span><br><span class=\"line\">\t\ta.plus(b).print();</span><br><span class=\"line\">\t\ta.multiply(b).plus(<span class=\"keyword\">new</span> Fraction(<span class=\"number\">5</span>, <span class=\"number\">6</span>)).print();</span><br><span class=\"line\">\t\ta.print();</span><br><span class=\"line\">\t\tb.print();</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fraction</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> b;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Fraction</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated constructor stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.a = a;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.b = b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Fraction <span class=\"title\">plus</span><span class=\"params\">(Fraction r)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> aa = a * r.b + r.a * b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> bb = b * r.b;</span><br><span class=\"line\">\t\tFraction temp = <span class=\"keyword\">new</span> Fraction(aa, bb);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Fraction <span class=\"title\">multiply</span><span class=\"params\">(Fraction r)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> aa = a * r.a;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> bb = b * r.b;</span><br><span class=\"line\">\t\tFraction temp = <span class=\"keyword\">new</span> Fraction(aa, bb);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">toDouble</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a * <span class=\"number\">1.0</span> / b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x = a, y = b, r = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (y != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tr = x % y;</span><br><span class=\"line\">\t\t\tx = y;</span><br><span class=\"line\">\t\t\ty = r;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta /= x;</span><br><span class=\"line\">\t\tb /= x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a == b)</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tSystem.out.println(a + <span class=\"string\">\"/\"</span> + b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>初学Java，按照C++中的习惯，开始的时候果断写成了下图这样/捂脸~<br>好菜~~<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Fraction <span class=\"title\">plus</span><span class=\"params\">(Fraction r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> aa = a * r.b + r.a * b;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> bb = b * r.b;</span><br><span class=\"line\">\t<span class=\"function\">Fraction <span class=\"title\">temp</span><span class=\"params\">(aa, bb)</span></span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>设计一个表示分数的类Fraction。这个类用两个int类型的变量分别表示分子和分母。</p>\n<p>这个类的构造函数是：<br>Fraction(int a, int b)<br>&#160; &#160; &#160; &#160;构造一个a/b的分数。</p>\n<p>这个类要提供以下的功能：<br>double toDouble();<br>&#160; &#160; &#160; &#160;将分数转换double<br>Fraction plus(Fraction r);<br>&#160; &#160; &#160; &#160;将自己的分数和r的分数相加，产生一个新的Fraction的对象。注意小学四年级学过两个分数如何相加的哈。<br>Fraction multiply(Fraction r);<br>&#160; &#160; &#160; &#160;将自己的分数和r的分数相乘，产生一个新的Fraction的对象。<br>void print();<br>&#160; &#160; &#160; &#160;将自己以“分子/分母”的形式输出到标准输出，并带有回车换行。如果分数是1/1，应该输出1。当分子大于分母时，不需要提出整数部分，即31/30是一个正确的输出。</p>\n<p>注意，在创建和做完运算后应该化简分数为最简形式。如2/4应该被化简为1/2。</p>\n<p>你写的类要和以下的代码放在一起，并请勿修改这个代码：</p>\n<div class=\"note warnging\"><p><br>import java.util.Scanner;<br><br>public class Main {<br><br>public static void main(String[] args) {<br>Scanner in = new Scanner(System.in);<br>Fraction a = new Fraction(in.nextInt(), in.nextInt());<br>Fraction b = new Fraction(in.nextInt(),in.nextInt());<br>a.print();<br>b.print();<br>a.plus(b).print();<br>a.multiply(b).plus(new Fraction(5,6)).print();<br>a.print();<br>b.print();<br>in.close();<br>}<br>}<br></p></div>\n\n<p>注意，你的类的定义应该这样开始：</p>\n<p><code>class Fraction {</code></p>\n<p>也就是说，在你的类的class前面不要有public。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>程序运行时会得到四个数字，分别构成两个分数，依次是分子和分母。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>输出一些算式。这些输入和输出都是由Main类的代码完成的，你的代码不要做输入和输出。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>2 4 1 3<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>1/2<br>1/3<br>5/6<br>1<br>1/2<br>1/3<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码如下：\"><a href=\"#代码如下：\" class=\"headerlink\" title=\"代码如下：\"></a>代码如下：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">First_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tFraction a = <span class=\"keyword\">new</span> Fraction(in.nextInt(), in.nextInt());</span><br><span class=\"line\">\t\tFraction b = <span class=\"keyword\">new</span> Fraction(in.nextInt(), in.nextInt());</span><br><span class=\"line\">\t\ta.print();</span><br><span class=\"line\">\t\tb.print();</span><br><span class=\"line\">\t\ta.plus(b).print();</span><br><span class=\"line\">\t\ta.multiply(b).plus(<span class=\"keyword\">new</span> Fraction(<span class=\"number\">5</span>, <span class=\"number\">6</span>)).print();</span><br><span class=\"line\">\t\ta.print();</span><br><span class=\"line\">\t\tb.print();</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fraction</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> b;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Fraction</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated constructor stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.a = a;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.b = b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Fraction <span class=\"title\">plus</span><span class=\"params\">(Fraction r)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> aa = a * r.b + r.a * b;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> bb = b * r.b;</span><br><span class=\"line\">\t\tFraction temp = <span class=\"keyword\">new</span> Fraction(aa, bb);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Fraction <span class=\"title\">multiply</span><span class=\"params\">(Fraction r)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> aa = a * r.a;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> bb = b * r.b;</span><br><span class=\"line\">\t\tFraction temp = <span class=\"keyword\">new</span> Fraction(aa, bb);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">toDouble</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a * <span class=\"number\">1.0</span> / b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x = a, y = b, r = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (y != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tr = x % y;</span><br><span class=\"line\">\t\t\tx = y;</span><br><span class=\"line\">\t\t\ty = r;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\ta /= x;</span><br><span class=\"line\">\t\tb /= x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a == b)</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tSystem.out.println(a + <span class=\"string\">\"/\"</span> + b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>初学Java，按照C++中的习惯，开始的时候果断写成了下图这样/捂脸~<br>好菜~~<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Fraction <span class=\"title\">plus</span><span class=\"params\">(Fraction r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> aa = a * r.b + r.a * b;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> bb = b * r.b;</span><br><span class=\"line\">\t<span class=\"function\">Fraction <span class=\"title\">temp</span><span class=\"params\">(aa, bb)</span></span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"第一周编程题_分数","path":"47907.html","eyeCatchImage":null,"excerpt":null,"date":"2017-08-19T16:32:54.000Z","pv":0,"totalPV":0,"categories":"面向对象程序设计_Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"第三周讨论区_学生成绩的数据结构","abbrlink":13223,"date":"2017-08-20T17:13:15.000Z","_content":"\n## 题目：\n\n如果要写程序表达一个班级的很多个学生的很多门课的成绩，应该如何表达这些数据？\n\n如果我们希望通过学生的姓名，可以找到他的所有的成绩，而每一门课的成绩，是由课程名称和分数构成的。\n\n而如果我们还希望这个程序能找出某一门课的全部学生的成绩应该怎样做呢？\n\n注意，并非所有的学生都参加了所有的课程。\n\n## 代码：\n```Java\npackage test;\n\nimport java.util.HashMap;\n\npublic class Student_Grade\n{\n\tprivate HashMap<String, HashMap<String, Double>> studentInfo = new HashMap<String, HashMap<String, Double>>();\n\n\t// 通过姓名添加成绩\n\tpublic void add(String name, String course, double grade)\n\t{\n\t\tif (studentInfo.containsKey(name))\n\t\t{\n\t\t\tstudentInfo.get(name).put(course, grade);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\t\ttemp.put(course, grade);\n\t\t\tstudentInfo.put(name, temp);\n\t\t}\n\t}\n\n\t// 通过姓名找到这名学生的所有成绩\n\tpublic String getScore_name(String name)\n\t{\n\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\tfor (String k : studentInfo.keySet())\n\t\t{\n\t\t\tif (k == name)\n\t\t\t{\n\t\t\t\ttemp = studentInfo.get(name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn name+\" \"+temp.toString();\n\t}\n\n\t// 通过课程名找到这一门课的全部学生的成绩\n\tpublic String getScore_subject(String subject)\n\t{\n\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\tfor (String k : studentInfo.keySet())\n\t\t{\n\t\t\tif (studentInfo.get(k).containsKey(subject))\n\t\t\t{\n\t\t\t\ttemp.put(k, studentInfo.get(k).get(subject));\n\t\t\t}\n\t\t}\n\t\treturn subject+\":\"+temp.toString();\n\t}\n\n\t// 重载toString()方法\n\tpublic String toString()\n\t{\n\t\tString temp=\"\";\n\t\tfor(String k:studentInfo.keySet())\n\t\t\ttemp+=(k+\":\"+studentInfo.get(k).toString()+\"\\n\");\n\t\treturn temp;\n\t}\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tStudent_Grade student = new Student_Grade();\n\t\tstudent.add(\"张三\", \"Java\", 60.0);\n\t\tstudent.add(\"张三\", \"C++\", 70.0);\n\t\tstudent.add(\"李四\", \"C++\", 80.0);\n\t\tstudent.add(\"王五\", \"C++\", 90.2);\n\t\tSystem.out.println(student.getScore_name(\"张三\"));\n\t\tSystem.out.println(student.getScore_subject(\"C++\"));\n\t\tSystem.out.println(student);\n\t}\n}\n\n```\n## 运行结果:\n\n![](/images/20170821012136233.jpg)\n## 总结：\n\n起初，两个查询的方法如下所示，返回值是一个Hasmap&lt;String,Doubole&gt;。\n\n后来在为Student_Grade写`toString（）`方法以便输出所有学生的所有成绩时，想到可以在两个查询的方法中临时建立一个String，调用`toString()`方法，赋值给它，并对该字符串进行处理，返回一个字符串。使得输出有”姓名“和”课程名“，信息更完整。（强迫症）\n```Java\n\t// 通过姓名找到这名学生的所有成绩\n\tpublic HashMap<String, Double> getScore_name(String name)\n\t{\n\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\tfor (String k : studentInfo.keySet())\n\t\t{\n\t\t\tif (k == name)\n\t\t\t{\n\t\t\t\ttemp = studentInfo.get(name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn temp;\n\t}\n\n\t// 通过课程名找到这一门课的全部学生的成绩\n\tpublic HashMap<String, Double> getScore_subject(String subject)\n\t{\n\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\tfor (String k : studentInfo.keySet())\n\t\t{\n\t\t\tif (studentInfo.get(k).containsKey(subject))\n\t\t\t{\n\t\t\t\ttemp.put(k, studentInfo.get(k).get(subject));\n\t\t\t}\n\t\t}\n\t\treturn temp;\n\t}\n```","source":"_posts/第三周讨论区_学生成绩的数据结构.md","raw":"---\ntitle: 第三周讨论区_学生成绩的数据结构\ncategories: 面向对象程序设计_Java语言_翁恺\ntags:\n  - Java\nabbrlink: 13223\ndate: 2017-08-21 01:13:15\n---\n\n## 题目：\n\n如果要写程序表达一个班级的很多个学生的很多门课的成绩，应该如何表达这些数据？\n\n如果我们希望通过学生的姓名，可以找到他的所有的成绩，而每一门课的成绩，是由课程名称和分数构成的。\n\n而如果我们还希望这个程序能找出某一门课的全部学生的成绩应该怎样做呢？\n\n注意，并非所有的学生都参加了所有的课程。\n\n## 代码：\n```Java\npackage test;\n\nimport java.util.HashMap;\n\npublic class Student_Grade\n{\n\tprivate HashMap<String, HashMap<String, Double>> studentInfo = new HashMap<String, HashMap<String, Double>>();\n\n\t// 通过姓名添加成绩\n\tpublic void add(String name, String course, double grade)\n\t{\n\t\tif (studentInfo.containsKey(name))\n\t\t{\n\t\t\tstudentInfo.get(name).put(course, grade);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\t\ttemp.put(course, grade);\n\t\t\tstudentInfo.put(name, temp);\n\t\t}\n\t}\n\n\t// 通过姓名找到这名学生的所有成绩\n\tpublic String getScore_name(String name)\n\t{\n\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\tfor (String k : studentInfo.keySet())\n\t\t{\n\t\t\tif (k == name)\n\t\t\t{\n\t\t\t\ttemp = studentInfo.get(name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn name+\" \"+temp.toString();\n\t}\n\n\t// 通过课程名找到这一门课的全部学生的成绩\n\tpublic String getScore_subject(String subject)\n\t{\n\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\tfor (String k : studentInfo.keySet())\n\t\t{\n\t\t\tif (studentInfo.get(k).containsKey(subject))\n\t\t\t{\n\t\t\t\ttemp.put(k, studentInfo.get(k).get(subject));\n\t\t\t}\n\t\t}\n\t\treturn subject+\":\"+temp.toString();\n\t}\n\n\t// 重载toString()方法\n\tpublic String toString()\n\t{\n\t\tString temp=\"\";\n\t\tfor(String k:studentInfo.keySet())\n\t\t\ttemp+=(k+\":\"+studentInfo.get(k).toString()+\"\\n\");\n\t\treturn temp;\n\t}\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tStudent_Grade student = new Student_Grade();\n\t\tstudent.add(\"张三\", \"Java\", 60.0);\n\t\tstudent.add(\"张三\", \"C++\", 70.0);\n\t\tstudent.add(\"李四\", \"C++\", 80.0);\n\t\tstudent.add(\"王五\", \"C++\", 90.2);\n\t\tSystem.out.println(student.getScore_name(\"张三\"));\n\t\tSystem.out.println(student.getScore_subject(\"C++\"));\n\t\tSystem.out.println(student);\n\t}\n}\n\n```\n## 运行结果:\n\n![](/images/20170821012136233.jpg)\n## 总结：\n\n起初，两个查询的方法如下所示，返回值是一个Hasmap&lt;String,Doubole&gt;。\n\n后来在为Student_Grade写`toString（）`方法以便输出所有学生的所有成绩时，想到可以在两个查询的方法中临时建立一个String，调用`toString()`方法，赋值给它，并对该字符串进行处理，返回一个字符串。使得输出有”姓名“和”课程名“，信息更完整。（强迫症）\n```Java\n\t// 通过姓名找到这名学生的所有成绩\n\tpublic HashMap<String, Double> getScore_name(String name)\n\t{\n\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\tfor (String k : studentInfo.keySet())\n\t\t{\n\t\t\tif (k == name)\n\t\t\t{\n\t\t\t\ttemp = studentInfo.get(name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn temp;\n\t}\n\n\t// 通过课程名找到这一门课的全部学生的成绩\n\tpublic HashMap<String, Double> getScore_subject(String subject)\n\t{\n\t\tHashMap<String, Double> temp = new HashMap<String, Double>();\n\t\tfor (String k : studentInfo.keySet())\n\t\t{\n\t\t\tif (studentInfo.get(k).containsKey(subject))\n\t\t\t{\n\t\t\t\ttemp.put(k, studentInfo.get(k).get(subject));\n\t\t\t}\n\t\t}\n\t\treturn temp;\n\t}\n```","slug":"第三周讨论区_学生成绩的数据结构","published":1,"updated":"2019-03-28T10:45:16.816Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8r001jkchiasl3l9f7","content":"<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><p>如果要写程序表达一个班级的很多个学生的很多门课的成绩，应该如何表达这些数据？</p>\n<p>如果我们希望通过学生的姓名，可以找到他的所有的成绩，而每一门课的成绩，是由课程名称和分数构成的。</p>\n<p>而如果我们还希望这个程序能找出某一门课的全部学生的成绩应该怎样做呢？</p>\n<p>注意，并非所有的学生都参加了所有的课程。</p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student_Grade</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> HashMap&lt;String, HashMap&lt;String, Double&gt;&gt; studentInfo = <span class=\"keyword\">new</span> HashMap&lt;String, HashMap&lt;String, Double&gt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 通过姓名添加成绩</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(String name, String course, <span class=\"keyword\">double</span> grade)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (studentInfo.containsKey(name))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tstudentInfo.get(name).put(course, grade);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t\t\ttemp.put(course, grade);</span><br><span class=\"line\">\t\t\tstudentInfo.put(name, temp);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 通过姓名找到这名学生的所有成绩</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getScore_name</span><span class=\"params\">(String name)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (String k : studentInfo.keySet())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (k == name)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\ttemp = studentInfo.get(name);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name+<span class=\"string\">\" \"</span>+temp.toString();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 通过课程名找到这一门课的全部学生的成绩</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getScore_subject</span><span class=\"params\">(String subject)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (String k : studentInfo.keySet())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (studentInfo.get(k).containsKey(subject))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\ttemp.put(k, studentInfo.get(k).get(subject));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> subject+<span class=\"string\">\":\"</span>+temp.toString();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 重载toString()方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tString temp=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(String k:studentInfo.keySet())</span><br><span class=\"line\">\t\t\ttemp+=(k+<span class=\"string\">\":\"</span>+studentInfo.get(k).toString()+<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tStudent_Grade student = <span class=\"keyword\">new</span> Student_Grade();</span><br><span class=\"line\">\t\tstudent.add(<span class=\"string\">\"张三\"</span>, <span class=\"string\">\"Java\"</span>, <span class=\"number\">60.0</span>);</span><br><span class=\"line\">\t\tstudent.add(<span class=\"string\">\"张三\"</span>, <span class=\"string\">\"C++\"</span>, <span class=\"number\">70.0</span>);</span><br><span class=\"line\">\t\tstudent.add(<span class=\"string\">\"李四\"</span>, <span class=\"string\">\"C++\"</span>, <span class=\"number\">80.0</span>);</span><br><span class=\"line\">\t\tstudent.add(<span class=\"string\">\"王五\"</span>, <span class=\"string\">\"C++\"</span>, <span class=\"number\">90.2</span>);</span><br><span class=\"line\">\t\tSystem.out.println(student.getScore_name(<span class=\"string\">\"张三\"</span>));</span><br><span class=\"line\">\t\tSystem.out.println(student.getScore_subject(<span class=\"string\">\"C++\"</span>));</span><br><span class=\"line\">\t\tSystem.out.println(student);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果:\"></a>运行结果:</h2><p><img src=\"/images/20170821012136233.jpg\" alt></p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><p>起初，两个查询的方法如下所示，返回值是一个Hasmap&lt;String,Doubole&gt;。</p>\n<p>后来在为Student_Grade写<code>toString（）</code>方法以便输出所有学生的所有成绩时，想到可以在两个查询的方法中临时建立一个String，调用<code>toString()</code>方法，赋值给它，并对该字符串进行处理，返回一个字符串。使得输出有”姓名“和”课程名“，信息更完整。（强迫症）<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过姓名找到这名学生的所有成绩</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> HashMap&lt;String, Double&gt; <span class=\"title\">getScore_name</span><span class=\"params\">(String name)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (String k : studentInfo.keySet())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (k == name)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp = studentInfo.get(name);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过课程名找到这一门课的全部学生的成绩</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> HashMap&lt;String, Double&gt; <span class=\"title\">getScore_subject</span><span class=\"params\">(String subject)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (String k : studentInfo.keySet())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (studentInfo.get(k).containsKey(subject))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp.put(k, studentInfo.get(k).get(subject));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><p>如果要写程序表达一个班级的很多个学生的很多门课的成绩，应该如何表达这些数据？</p>\n<p>如果我们希望通过学生的姓名，可以找到他的所有的成绩，而每一门课的成绩，是由课程名称和分数构成的。</p>\n<p>而如果我们还希望这个程序能找出某一门课的全部学生的成绩应该怎样做呢？</p>\n<p>注意，并非所有的学生都参加了所有的课程。</p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student_Grade</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> HashMap&lt;String, HashMap&lt;String, Double&gt;&gt; studentInfo = <span class=\"keyword\">new</span> HashMap&lt;String, HashMap&lt;String, Double&gt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 通过姓名添加成绩</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(String name, String course, <span class=\"keyword\">double</span> grade)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (studentInfo.containsKey(name))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tstudentInfo.get(name).put(course, grade);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t\t\ttemp.put(course, grade);</span><br><span class=\"line\">\t\t\tstudentInfo.put(name, temp);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 通过姓名找到这名学生的所有成绩</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getScore_name</span><span class=\"params\">(String name)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (String k : studentInfo.keySet())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (k == name)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\ttemp = studentInfo.get(name);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> name+<span class=\"string\">\" \"</span>+temp.toString();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 通过课程名找到这一门课的全部学生的成绩</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getScore_subject</span><span class=\"params\">(String subject)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (String k : studentInfo.keySet())</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (studentInfo.get(k).containsKey(subject))</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\ttemp.put(k, studentInfo.get(k).get(subject));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> subject+<span class=\"string\">\":\"</span>+temp.toString();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 重载toString()方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tString temp=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(String k:studentInfo.keySet())</span><br><span class=\"line\">\t\t\ttemp+=(k+<span class=\"string\">\":\"</span>+studentInfo.get(k).toString()+<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tStudent_Grade student = <span class=\"keyword\">new</span> Student_Grade();</span><br><span class=\"line\">\t\tstudent.add(<span class=\"string\">\"张三\"</span>, <span class=\"string\">\"Java\"</span>, <span class=\"number\">60.0</span>);</span><br><span class=\"line\">\t\tstudent.add(<span class=\"string\">\"张三\"</span>, <span class=\"string\">\"C++\"</span>, <span class=\"number\">70.0</span>);</span><br><span class=\"line\">\t\tstudent.add(<span class=\"string\">\"李四\"</span>, <span class=\"string\">\"C++\"</span>, <span class=\"number\">80.0</span>);</span><br><span class=\"line\">\t\tstudent.add(<span class=\"string\">\"王五\"</span>, <span class=\"string\">\"C++\"</span>, <span class=\"number\">90.2</span>);</span><br><span class=\"line\">\t\tSystem.out.println(student.getScore_name(<span class=\"string\">\"张三\"</span>));</span><br><span class=\"line\">\t\tSystem.out.println(student.getScore_subject(<span class=\"string\">\"C++\"</span>));</span><br><span class=\"line\">\t\tSystem.out.println(student);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果:\"></a>运行结果:</h2><p><img src=\"/images/20170821012136233.jpg\" alt></p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><p>起初，两个查询的方法如下所示，返回值是一个Hasmap&lt;String,Doubole&gt;。</p>\n<p>后来在为Student_Grade写<code>toString（）</code>方法以便输出所有学生的所有成绩时，想到可以在两个查询的方法中临时建立一个String，调用<code>toString()</code>方法，赋值给它，并对该字符串进行处理，返回一个字符串。使得输出有”姓名“和”课程名“，信息更完整。（强迫症）<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 通过姓名找到这名学生的所有成绩</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> HashMap&lt;String, Double&gt; <span class=\"title\">getScore_name</span><span class=\"params\">(String name)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (String k : studentInfo.keySet())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (k == name)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp = studentInfo.get(name);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过课程名找到这一门课的全部学生的成绩</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> HashMap&lt;String, Double&gt; <span class=\"title\">getScore_subject</span><span class=\"params\">(String subject)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tHashMap&lt;String, Double&gt; temp = <span class=\"keyword\">new</span> HashMap&lt;String, Double&gt;();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (String k : studentInfo.keySet())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (studentInfo.get(k).containsKey(subject))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ttemp.put(k, studentInfo.get(k).get(subject));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/20170821012136233.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"第三周讨论区_学生成绩的数据结构","path":"13223.html","eyeCatchImage":"/images/20170821012136233.jpg","excerpt":null,"date":"2017-08-20T17:13:15.000Z","pv":0,"totalPV":0,"categories":"面向对象程序设计_Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"第二周编程题_有秒计时的数字时钟","abbrlink":2173,"date":"2017-08-19T16:32:54.000Z","_content":"## 题目内容：\n&#160; &#160; &#160; &#160;这一周的编程题是需要你在课程所给的时钟程序的基础上修改而成。但是我们并不直接给你时钟程序的代码，请根据视频自己输入时钟程序的Display和Clock类的代码，然后来做这个题目。\n&#160; &#160; &#160; &#160;我们需要给时钟程序加上一个表示秒的Display，然后为Clock增加以下public的成员函数：\n\npublic Clock(int hour, int minute, int second);\n&#160; &#160; &#160; &#160;用hour, minute和second初始化时间。\npublic void tick();\n&#160; &#160; &#160; &#160;“嘀嗒”一下，时间走1秒。\npublic String toString();\n&#160; &#160; &#160; &#160;返回一个String的值，以“hh:mm:ss“的形式表示当前时间。这里每个数值都占据两位，不足两位时补0。如“00:01:22\"。注意其中的冒号是西文的，不是中文的。\n\n提示：`String.format()`可以用和printf一样的方式来格式化一个字符串。\n\n另外写一个Main类，它的main函数为下面的样子，注意，必须原封不动地作为Main的main函数：\n<div class=\"note default no-icon\"><p>\npublic static void main(String[] args) {\njava.util.Scanner in = new java.util.Scanner(System.in);\nClock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());\nclock.tick();\nSystem.out.println(clock);\nin.close();\n}\n</p></div>\n<div class=\"note warning\"><p>\n注意！在提交的时候，把Main、Clock和Display三个类的代码合并在一起，其中Main类是public的，而Clock和Display类是没有修饰符的。另外，千万注意第一行不能有package语句。\n</p></div>\n## 输入格式:\n采用给定的main函数无需考虑输入输出。\n\n## 输出格式：\n采用给定的main函数无需考虑输入输出。\n\n## 输入样例：\n采用给定的main函数无需考虑输入输出。\n\n## 输出样例：\n采用给定的main函数无需考虑输入输出。\n**时间限制：500ms内存限制：32000kb**\n\n## 代码如下：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\npublic class Second_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tjava.util.Scanner in = new java.util.Scanner(System.in);\n\t\tClock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());\n\t\tclock.tick();\n\t\tSystem.out.println(clock);\n\t\tin.close();\n\t}\n\n}\n\nclass Display\n{\n\tprivate int limit = 0;\n\tprivate int value = 0;\n\n\tpublic Display(int limit)\n\t{\n\t\t// TODO Auto-generated constructor stub\n\t\tthis.limit = limit;\n\t}\n\n\tpublic void setvalue(int value)\n\t{\n\t\tthis.value = value;\n\t}\n\n\tpublic boolean increase()\n\t{\n\t\tboolean temp = false;\n\t\tvalue++;\n\t\tif (value == limit)\n\t\t{\n\t\t\tvalue = 0;\n\t\t\ttemp = true;\n\t\t}\n\t\treturn temp;\n\t}\n\n\tpublic int getvalue()\n\t{\n\t\treturn value;\n\t}\n}\n\nclass Clock\n{\n\tprivate Display hour = new Display(24);\n\tprivate Display minute = new Display(60);\n\tprivate Display second = new Display(60);\n\n\tpublic Clock(int hour, int minute, int second)\n\t{\n\t\tthis.hour.setvalue(hour);\n\t\tthis.minute.setvalue(minute);\n\t\tthis.second.setvalue(second);\n\t}\n\n\tpublic String toString()\n\t{\n\t\treturn String.format(\"%02d:%02d:%02d\", hour.getvalue(), minute.getvalue(), second.getvalue());\n\t}\n\n\tpublic void tick()\n\t{\n\n\t\tif (this.second.increase() == true)\n\t\t{\n\t\t\tif (this.minute.increase() == true)\n\t\t\t\tthis.hour.increase();\n\t\t}\n//\t\tSystem.out.println(toString());\n\t}\n\n}\n\n```\n没写toString()方法时，输出为：\n面向对象程序设计_Java语言_翁恺.Clock@7d4991ad\n\n## 学习心得：\ntoString（）方法是Object类的一个实例方法，所有的Java类都是Object类的子类，故所有的Java类都有toString（）方法。\n除此外，所有的Java类的对象都可以和字符串进行连接运算，当Java类对象和字符串进行连接运算时，系统自动调用Java对象toString（）方法的返回值和字符串进行连接操作，如：\n&#160; &#160; &#160; &#160;String str=p+“123”；\n&#160; &#160; &#160; &#160;String str=p.toString()+\"123\";\ntoString()方法是一个非常特殊的方法，是一个“自我描述”方法，该方法通常用于实现当程序员直接打印该对象时，系统将会输出该对象的“自我描述”信息，用以告诉外界该对象具有的状态信息。\nObject类提供的toString()方法总是返回该对象实现类的”类名+@+hashCode”值，这个返回值不能真正实现“自我描述”功能，因此我们可以重写object的toString()方法。","source":"_posts/第二周编程题_有秒计时的数字时钟.md","raw":"---\ntitle: 第二周编程题_有秒计时的数字时钟\ncategories: 面向对象程序设计_Java语言_翁恺\ntags:\n  - Java\nabbrlink: 2173\ndate: 2017-08-20 00:32:54\n---\n## 题目内容：\n&#160; &#160; &#160; &#160;这一周的编程题是需要你在课程所给的时钟程序的基础上修改而成。但是我们并不直接给你时钟程序的代码，请根据视频自己输入时钟程序的Display和Clock类的代码，然后来做这个题目。\n&#160; &#160; &#160; &#160;我们需要给时钟程序加上一个表示秒的Display，然后为Clock增加以下public的成员函数：\n\npublic Clock(int hour, int minute, int second);\n&#160; &#160; &#160; &#160;用hour, minute和second初始化时间。\npublic void tick();\n&#160; &#160; &#160; &#160;“嘀嗒”一下，时间走1秒。\npublic String toString();\n&#160; &#160; &#160; &#160;返回一个String的值，以“hh:mm:ss“的形式表示当前时间。这里每个数值都占据两位，不足两位时补0。如“00:01:22\"。注意其中的冒号是西文的，不是中文的。\n\n提示：`String.format()`可以用和printf一样的方式来格式化一个字符串。\n\n另外写一个Main类，它的main函数为下面的样子，注意，必须原封不动地作为Main的main函数：\n<div class=\"note default no-icon\"><p>\npublic static void main(String[] args) {\njava.util.Scanner in = new java.util.Scanner(System.in);\nClock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());\nclock.tick();\nSystem.out.println(clock);\nin.close();\n}\n</p></div>\n<div class=\"note warning\"><p>\n注意！在提交的时候，把Main、Clock和Display三个类的代码合并在一起，其中Main类是public的，而Clock和Display类是没有修饰符的。另外，千万注意第一行不能有package语句。\n</p></div>\n## 输入格式:\n采用给定的main函数无需考虑输入输出。\n\n## 输出格式：\n采用给定的main函数无需考虑输入输出。\n\n## 输入样例：\n采用给定的main函数无需考虑输入输出。\n\n## 输出样例：\n采用给定的main函数无需考虑输入输出。\n**时间限制：500ms内存限制：32000kb**\n\n## 代码如下：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\npublic class Second_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tjava.util.Scanner in = new java.util.Scanner(System.in);\n\t\tClock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());\n\t\tclock.tick();\n\t\tSystem.out.println(clock);\n\t\tin.close();\n\t}\n\n}\n\nclass Display\n{\n\tprivate int limit = 0;\n\tprivate int value = 0;\n\n\tpublic Display(int limit)\n\t{\n\t\t// TODO Auto-generated constructor stub\n\t\tthis.limit = limit;\n\t}\n\n\tpublic void setvalue(int value)\n\t{\n\t\tthis.value = value;\n\t}\n\n\tpublic boolean increase()\n\t{\n\t\tboolean temp = false;\n\t\tvalue++;\n\t\tif (value == limit)\n\t\t{\n\t\t\tvalue = 0;\n\t\t\ttemp = true;\n\t\t}\n\t\treturn temp;\n\t}\n\n\tpublic int getvalue()\n\t{\n\t\treturn value;\n\t}\n}\n\nclass Clock\n{\n\tprivate Display hour = new Display(24);\n\tprivate Display minute = new Display(60);\n\tprivate Display second = new Display(60);\n\n\tpublic Clock(int hour, int minute, int second)\n\t{\n\t\tthis.hour.setvalue(hour);\n\t\tthis.minute.setvalue(minute);\n\t\tthis.second.setvalue(second);\n\t}\n\n\tpublic String toString()\n\t{\n\t\treturn String.format(\"%02d:%02d:%02d\", hour.getvalue(), minute.getvalue(), second.getvalue());\n\t}\n\n\tpublic void tick()\n\t{\n\n\t\tif (this.second.increase() == true)\n\t\t{\n\t\t\tif (this.minute.increase() == true)\n\t\t\t\tthis.hour.increase();\n\t\t}\n//\t\tSystem.out.println(toString());\n\t}\n\n}\n\n```\n没写toString()方法时，输出为：\n面向对象程序设计_Java语言_翁恺.Clock@7d4991ad\n\n## 学习心得：\ntoString（）方法是Object类的一个实例方法，所有的Java类都是Object类的子类，故所有的Java类都有toString（）方法。\n除此外，所有的Java类的对象都可以和字符串进行连接运算，当Java类对象和字符串进行连接运算时，系统自动调用Java对象toString（）方法的返回值和字符串进行连接操作，如：\n&#160; &#160; &#160; &#160;String str=p+“123”；\n&#160; &#160; &#160; &#160;String str=p.toString()+\"123\";\ntoString()方法是一个非常特殊的方法，是一个“自我描述”方法，该方法通常用于实现当程序员直接打印该对象时，系统将会输出该对象的“自我描述”信息，用以告诉外界该对象具有的状态信息。\nObject类提供的toString()方法总是返回该对象实现类的”类名+@+hashCode”值，这个返回值不能真正实现“自我描述”功能，因此我们可以重写object的toString()方法。","slug":"第二周编程题_有秒计时的数字时钟","published":1,"updated":"2019-03-28T10:45:16.816Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8t001nkchij3ebjwpp","content":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>&#160; &#160; &#160; &#160;这一周的编程题是需要你在课程所给的时钟程序的基础上修改而成。但是我们并不直接给你时钟程序的代码，请根据视频自己输入时钟程序的Display和Clock类的代码，然后来做这个题目。<br>&#160; &#160; &#160; &#160;我们需要给时钟程序加上一个表示秒的Display，然后为Clock增加以下public的成员函数：</p>\n<p>public Clock(int hour, int minute, int second);<br>&#160; &#160; &#160; &#160;用hour, minute和second初始化时间。<br>public void tick();<br>&#160; &#160; &#160; &#160;“嘀嗒”一下，时间走1秒。<br>public String toString();<br>&#160; &#160; &#160; &#160;返回一个String的值，以“hh:mm:ss“的形式表示当前时间。这里每个数值都占据两位，不足两位时补0。如“00:01:22”。注意其中的冒号是西文的，不是中文的。</p>\n<p>提示：<code>String.format()</code>可以用和printf一样的方式来格式化一个字符串。</p>\n<p>另外写一个Main类，它的main函数为下面的样子，注意，必须原封不动地作为Main的main函数：</p>\n<p><div class=\"note default no-icon\"><p><br>public static void main(String[] args) {<br>java.util.Scanner in = new java.util.Scanner(System.in);<br>Clock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());<br>clock.tick();<br>System.out.println(clock);<br>in.close();<br>}<br></p></div></p>\n<p><div class=\"note warning\"><p><br>注意！在提交的时候，把Main、Clock和Display三个类的代码合并在一起，其中Main类是public的，而Clock和Display类是没有修饰符的。另外，千万注意第一行不能有package语句。<br></p></div></p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>采用给定的main函数无需考虑输入输出。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>采用给定的main函数无需考虑输入输出。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><p>采用给定的main函数无需考虑输入输出。</p>\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><p>采用给定的main函数无需考虑输入输出。<br><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码如下：\"><a href=\"#代码如下：\" class=\"headerlink\" title=\"代码如下：\"></a>代码如下：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Second_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tjava.util.Scanner in = <span class=\"keyword\">new</span> java.util.Scanner(System.in);</span><br><span class=\"line\">\t\tClock clock = <span class=\"keyword\">new</span> Clock(in.nextInt(), in.nextInt(), in.nextInt());</span><br><span class=\"line\">\t\tclock.tick();</span><br><span class=\"line\">\t\tSystem.out.println(clock);</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Display</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> limit = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> value = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Display</span><span class=\"params\">(<span class=\"keyword\">int</span> limit)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated constructor stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.limit = limit;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setvalue</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">increase</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> temp = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\tvalue++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (value == limit)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tvalue = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\ttemp = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getvalue</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Clock</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Display hour = <span class=\"keyword\">new</span> Display(<span class=\"number\">24</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Display minute = <span class=\"keyword\">new</span> Display(<span class=\"number\">60</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Display second = <span class=\"keyword\">new</span> Display(<span class=\"number\">60</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Clock</span><span class=\"params\">(<span class=\"keyword\">int</span> hour, <span class=\"keyword\">int</span> minute, <span class=\"keyword\">int</span> second)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.hour.setvalue(hour);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.minute.setvalue(minute);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.second.setvalue(second);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> String.format(<span class=\"string\">\"%02d:%02d:%02d\"</span>, hour.getvalue(), minute.getvalue(), second.getvalue());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">tick</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.second.increase() == <span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.minute.increase() == <span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.hour.increase();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"><span class=\"comment\">//\t\tSystem.out.println(toString());</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>没写toString()方法时，输出为：<br>面向对象程序设计<em>Java语言</em>翁恺.Clock@7d4991ad</p>\n<h2 id=\"学习心得：\"><a href=\"#学习心得：\" class=\"headerlink\" title=\"学习心得：\"></a>学习心得：</h2><p>toString（）方法是Object类的一个实例方法，所有的Java类都是Object类的子类，故所有的Java类都有toString（）方法。<br>除此外，所有的Java类的对象都可以和字符串进行连接运算，当Java类对象和字符串进行连接运算时，系统自动调用Java对象toString（）方法的返回值和字符串进行连接操作，如：<br>&#160; &#160; &#160; &#160;String str=p+“123”；<br>&#160; &#160; &#160; &#160;String str=p.toString()+”123”;<br>toString()方法是一个非常特殊的方法，是一个“自我描述”方法，该方法通常用于实现当程序员直接打印该对象时，系统将会输出该对象的“自我描述”信息，用以告诉外界该对象具有的状态信息。<br>Object类提供的toString()方法总是返回该对象实现类的”类名+@+hashCode”值，这个返回值不能真正实现“自我描述”功能，因此我们可以重写object的toString()方法。</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>&#160; &#160; &#160; &#160;这一周的编程题是需要你在课程所给的时钟程序的基础上修改而成。但是我们并不直接给你时钟程序的代码，请根据视频自己输入时钟程序的Display和Clock类的代码，然后来做这个题目。<br>&#160; &#160; &#160; &#160;我们需要给时钟程序加上一个表示秒的Display，然后为Clock增加以下public的成员函数：</p>\n<p>public Clock(int hour, int minute, int second);<br>&#160; &#160; &#160; &#160;用hour, minute和second初始化时间。<br>public void tick();<br>&#160; &#160; &#160; &#160;“嘀嗒”一下，时间走1秒。<br>public String toString();<br>&#160; &#160; &#160; &#160;返回一个String的值，以“hh:mm:ss“的形式表示当前时间。这里每个数值都占据两位，不足两位时补0。如“00:01:22”。注意其中的冒号是西文的，不是中文的。</p>\n<p>提示：<code>String.format()</code>可以用和printf一样的方式来格式化一个字符串。</p>\n<p>另外写一个Main类，它的main函数为下面的样子，注意，必须原封不动地作为Main的main函数：</p>\n<p><div class=\"note default no-icon\"><p><br>public static void main(String[] args) {<br>java.util.Scanner in = new java.util.Scanner(System.in);<br>Clock clock = new Clock(in.nextInt(), in.nextInt(), in.nextInt());<br>clock.tick();<br>System.out.println(clock);<br>in.close();<br>}<br></p></div></p>\n<p><div class=\"note warning\"><p><br>注意！在提交的时候，把Main、Clock和Display三个类的代码合并在一起，其中Main类是public的，而Clock和Display类是没有修饰符的。另外，千万注意第一行不能有package语句。<br></p></div></p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>采用给定的main函数无需考虑输入输出。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>采用给定的main函数无需考虑输入输出。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><p>采用给定的main函数无需考虑输入输出。</p>\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><p>采用给定的main函数无需考虑输入输出。<br><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码如下：\"><a href=\"#代码如下：\" class=\"headerlink\" title=\"代码如下：\"></a>代码如下：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Second_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tjava.util.Scanner in = <span class=\"keyword\">new</span> java.util.Scanner(System.in);</span><br><span class=\"line\">\t\tClock clock = <span class=\"keyword\">new</span> Clock(in.nextInt(), in.nextInt(), in.nextInt());</span><br><span class=\"line\">\t\tclock.tick();</span><br><span class=\"line\">\t\tSystem.out.println(clock);</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Display</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> limit = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> value = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Display</span><span class=\"params\">(<span class=\"keyword\">int</span> limit)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated constructor stub</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.limit = limit;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setvalue</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">increase</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> temp = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\tvalue++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (value == limit)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tvalue = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\ttemp = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getvalue</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> value;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Clock</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Display hour = <span class=\"keyword\">new</span> Display(<span class=\"number\">24</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Display minute = <span class=\"keyword\">new</span> Display(<span class=\"number\">60</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Display second = <span class=\"keyword\">new</span> Display(<span class=\"number\">60</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Clock</span><span class=\"params\">(<span class=\"keyword\">int</span> hour, <span class=\"keyword\">int</span> minute, <span class=\"keyword\">int</span> second)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.hour.setvalue(hour);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.minute.setvalue(minute);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.second.setvalue(second);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> String.format(<span class=\"string\">\"%02d:%02d:%02d\"</span>, hour.getvalue(), minute.getvalue(), second.getvalue());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">tick</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.second.increase() == <span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.minute.increase() == <span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">this</span>.hour.increase();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"><span class=\"comment\">//\t\tSystem.out.println(toString());</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>没写toString()方法时，输出为：<br>面向对象程序设计<em>Java语言</em>翁恺.Clock@7d4991ad</p>\n<h2 id=\"学习心得：\"><a href=\"#学习心得：\" class=\"headerlink\" title=\"学习心得：\"></a>学习心得：</h2><p>toString（）方法是Object类的一个实例方法，所有的Java类都是Object类的子类，故所有的Java类都有toString（）方法。<br>除此外，所有的Java类的对象都可以和字符串进行连接运算，当Java类对象和字符串进行连接运算时，系统自动调用Java对象toString（）方法的返回值和字符串进行连接操作，如：<br>&#160; &#160; &#160; &#160;String str=p+“123”；<br>&#160; &#160; &#160; &#160;String str=p.toString()+”123”;<br>toString()方法是一个非常特殊的方法，是一个“自我描述”方法，该方法通常用于实现当程序员直接打印该对象时，系统将会输出该对象的“自我描述”信息，用以告诉外界该对象具有的状态信息。<br>Object类提供的toString()方法总是返回该对象实现类的”类名+@+hashCode”值，这个返回值不能真正实现“自我描述”功能，因此我们可以重写object的toString()方法。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"第二周编程题_有秒计时的数字时钟","path":"2173.html","eyeCatchImage":null,"excerpt":null,"date":"2017-08-19T16:32:54.000Z","pv":0,"totalPV":0,"categories":"面向对象程序设计_Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"第五周编程题_多项式加法","abbrlink":51603,"date":"2017-10-09T13:28:02.000Z","_content":"## 题目内容：\n一个多项式可以表达为x的各次幂与系数乘积的和，比如：\n2x6+3x5+12x3+6x+20\n现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出。\n程序要处理的幂最大为100。\n\n## 输入格式:\n总共要输入两个多项式，每个多项式的输入格式如下：\n每行输入两个数字，第一个表示幂次，第二个表示该幂次的系数，所有的系数都是整数。第一行一定是最高幂，最后一行一定是0次幂。\n注意第一行和最后一行之间不一定按照幂次降低顺序排列；如果某个幂次的系数为0，就不出现在输入数据中了；0次幂的系数为0时还是会出现在输入数据中。\n\n## 输出格式：\n从最高幂开始依次降到0幂，如：\n2x6+3x5+12x3-6x+20\n注意其中的x是小写字母x，而且所有的符号之间都没有空格，如果某个幂的系数为0则不需要有那项。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>6 2\n5 3\n3 12\n1 6\n0 20\n6 2\n5 3\n2 12\n1 6\n0 20\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>4x6+6x5+12x3+12x2+12x+40\n</p></div>\n\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码：\n```Java\npackage 零基础学Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class Fifth_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in);\n\t\tint[] a = new int[101];\n\t\tint m = 0, n = 0;\n\t\tboolean flag = false;\n\t\tfor(int i=0;i<100;i++)\n\t\t\ta[i]=0;\n\t\tint m_max = 0;\n\t\t// 读入第一个多项式\n\t\tdo\n\t\t{\n\t\t\tm = in.nextInt();\n\t\t\tn = in.nextInt();\n\t\t\ta[m] = n;\n\t\t\tif (m > m_max)\n\t\t\t\tm_max = m;\n\t\t}while(m!=0);\n\t\t// 读入第二个多项式\n\t\tdo\n\t\t{\n\t\t\tm = in.nextInt();\n\t\t\tn = in.nextInt();\n\t\t\ta[m] += n;\n\t\t\tif (m > m_max)\n\t\t\t\tm_max = m;\n\t\t}while (m!=0);\n\t\tfor (int j = m_max; j >=0; j--)\n\t\t{\n\t\t\tif (a[j] != 0)\n\t\t\t{\n\t\t\t\tif(a[j]>0&&flag==true)\n\t\t\t\t\tSystem.out.print(\"+\");\n\t\t\t\tif(a[j]!=1)\n\t\t\t\t\tSystem.out.print(a[j]);\n\t\t\t\tif(j!=1&&j!=0)\n\t\t\t\t\tSystem.out.print(\"x\"+j);\n\t\t\t\tif(j==1)\n\t\t\t\t\tSystem.out.print(\"x\");\n\t\t\t\tflag=true;\n\t\t\t}\n\t\t}\n\t\tin.close();\n\t}\n\n}\n\n```\n只有一个测试点没过.....不想改了.....\n## 总结：\n用一个大小为101的数组来存系数，数组的下标即为幂指数....\n若系数不为0则输出...\n需要注意的是：\n        系数为1或-1时不用输出系数；\n        系数小于0时，不输出加号；\n        幂指数为1时,不输出幂指数；\n        幂指数为0时，只输出系数；\n开始的思路是对幂指数为0或1时的输出单独处理，但没有考虑到系数为1或-1的情况...导致没有一个测试点通过...\n## 错误代码:\n```Java\npackage 零基础学Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class Fifth_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in \n\n);\n\t\tint[] a = new int[101];\n\t\tint m = 0, n = 0;\n\t\tboolean flag = false;\n\t\tfor(int i=0;i<100;i++)\n\t\t\ta[i]=0;\n\t\tint m_max = 0;\n\t\t// 读入第一个多项式\n\t\tdo\n\t\t{\n\t\t\tm = in.nextInt();\n\t\t\tn = in.nextInt();\n\t\t\ta[m] = n;\n\t\t\tif (m > m_max)\n\t\t\t\tm_max = m;\n\t\t}while(m!=0);\n\t\t// 读入第二个多项式\n\t\tdo\n\t\t{\n\t\t\tm = in.nextInt();\n\t\t\tn = in.nextInt();\n\t\t\ta[m] += n;\n\t\t\tif (m > m_max)\n\t\t\t\tm_max = m;\n\t\t}while (m!=0);\n\t\tfor (int j = m_max; j > 1; j--)\n\t\t{\n\t\t\tif (a[j] != 0)\n\t\t\t{\n\t\t\t\tif (flag&&a[j]>0)\n\t\t\t\t\tSystem.out.print(\"+\");\n\t\t\t\tif(a[j]==-1)\n\t\t\t\t\tSystem.out.print(\"-\");\n\t\t\t\tflag = true;\n\t\t\t\tSystem.out.print(a[j] + \"x\" + j);\n\t\t\t}\n\t\t\telse\n\t\t\t\tcontinue;\n\t\t}\n\t\t// 处理幂次为1的情况\n\t\tif (a[1] != 0)\n\t\t{\n\t\t\tif (flag&&a[1]>0)\n\t\t\t\tSystem.out.print(\"+\");\n\t\t\tif(a[1]==-1)\n\t\t\t\tSystem.out.print(\"-\");\n\t\t\tSystem.out.print(a[1] + \"x\");\n\t\t\tflag = true;\n\t\t}\n\t\t// 处理幂次为0的情况\n\t\tif (a[0] != 0)\n\t\t{\n\t\t\tif (flag)\n\t\t\t\tSystem.out.print(\"+\");\n\t\t\tSystem.out.print(a[0]);\n\t\t}\n\t\t// System.out.println();\n\t\tin.close();\n\t}\n\n}\n```\n## 补充：\n&#160;&#160;&#160;&#160;把源码发到了MOOC的讨论区，在热心网友的帮助下，终于找到了有一个测试点没通过的原因.....\n&#160;&#160;&#160;&#160;对于系数全部为0的情况，程序会无输出.....\n&#160;&#160;&#160;&#160;例：对于下列这组数据\n<div class=\"note default no-icon\"><p>\n6 3\n2 5\n0 3\n6 -3\n2 -5\n0 -3\n</p></div>\n在`in.close()`前面加上这一段就好了\n`if(!flag)`\n`　　System.out.print(\"0\");`\n","source":"_posts/第五周编程题_多项式加法.md","raw":"---\ntitle: 第五周编程题_多项式加法\ncategories: 零基础学Java语言_翁恺\ntags:\n  - Java\nabbrlink: 51603\ndate: 2017-10-09 21:28:02\n---\n## 题目内容：\n一个多项式可以表达为x的各次幂与系数乘积的和，比如：\n2x6+3x5+12x3+6x+20\n现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出。\n程序要处理的幂最大为100。\n\n## 输入格式:\n总共要输入两个多项式，每个多项式的输入格式如下：\n每行输入两个数字，第一个表示幂次，第二个表示该幂次的系数，所有的系数都是整数。第一行一定是最高幂，最后一行一定是0次幂。\n注意第一行和最后一行之间不一定按照幂次降低顺序排列；如果某个幂次的系数为0，就不出现在输入数据中了；0次幂的系数为0时还是会出现在输入数据中。\n\n## 输出格式：\n从最高幂开始依次降到0幂，如：\n2x6+3x5+12x3-6x+20\n注意其中的x是小写字母x，而且所有的符号之间都没有空格，如果某个幂的系数为0则不需要有那项。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>6 2\n5 3\n3 12\n1 6\n0 20\n6 2\n5 3\n2 12\n1 6\n0 20\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>4x6+6x5+12x3+12x2+12x+40\n</p></div>\n\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码：\n```Java\npackage 零基础学Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class Fifth_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in);\n\t\tint[] a = new int[101];\n\t\tint m = 0, n = 0;\n\t\tboolean flag = false;\n\t\tfor(int i=0;i<100;i++)\n\t\t\ta[i]=0;\n\t\tint m_max = 0;\n\t\t// 读入第一个多项式\n\t\tdo\n\t\t{\n\t\t\tm = in.nextInt();\n\t\t\tn = in.nextInt();\n\t\t\ta[m] = n;\n\t\t\tif (m > m_max)\n\t\t\t\tm_max = m;\n\t\t}while(m!=0);\n\t\t// 读入第二个多项式\n\t\tdo\n\t\t{\n\t\t\tm = in.nextInt();\n\t\t\tn = in.nextInt();\n\t\t\ta[m] += n;\n\t\t\tif (m > m_max)\n\t\t\t\tm_max = m;\n\t\t}while (m!=0);\n\t\tfor (int j = m_max; j >=0; j--)\n\t\t{\n\t\t\tif (a[j] != 0)\n\t\t\t{\n\t\t\t\tif(a[j]>0&&flag==true)\n\t\t\t\t\tSystem.out.print(\"+\");\n\t\t\t\tif(a[j]!=1)\n\t\t\t\t\tSystem.out.print(a[j]);\n\t\t\t\tif(j!=1&&j!=0)\n\t\t\t\t\tSystem.out.print(\"x\"+j);\n\t\t\t\tif(j==1)\n\t\t\t\t\tSystem.out.print(\"x\");\n\t\t\t\tflag=true;\n\t\t\t}\n\t\t}\n\t\tin.close();\n\t}\n\n}\n\n```\n只有一个测试点没过.....不想改了.....\n## 总结：\n用一个大小为101的数组来存系数，数组的下标即为幂指数....\n若系数不为0则输出...\n需要注意的是：\n        系数为1或-1时不用输出系数；\n        系数小于0时，不输出加号；\n        幂指数为1时,不输出幂指数；\n        幂指数为0时，只输出系数；\n开始的思路是对幂指数为0或1时的输出单独处理，但没有考虑到系数为1或-1的情况...导致没有一个测试点通过...\n## 错误代码:\n```Java\npackage 零基础学Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class Fifth_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in \n\n);\n\t\tint[] a = new int[101];\n\t\tint m = 0, n = 0;\n\t\tboolean flag = false;\n\t\tfor(int i=0;i<100;i++)\n\t\t\ta[i]=0;\n\t\tint m_max = 0;\n\t\t// 读入第一个多项式\n\t\tdo\n\t\t{\n\t\t\tm = in.nextInt();\n\t\t\tn = in.nextInt();\n\t\t\ta[m] = n;\n\t\t\tif (m > m_max)\n\t\t\t\tm_max = m;\n\t\t}while(m!=0);\n\t\t// 读入第二个多项式\n\t\tdo\n\t\t{\n\t\t\tm = in.nextInt();\n\t\t\tn = in.nextInt();\n\t\t\ta[m] += n;\n\t\t\tif (m > m_max)\n\t\t\t\tm_max = m;\n\t\t}while (m!=0);\n\t\tfor (int j = m_max; j > 1; j--)\n\t\t{\n\t\t\tif (a[j] != 0)\n\t\t\t{\n\t\t\t\tif (flag&&a[j]>0)\n\t\t\t\t\tSystem.out.print(\"+\");\n\t\t\t\tif(a[j]==-1)\n\t\t\t\t\tSystem.out.print(\"-\");\n\t\t\t\tflag = true;\n\t\t\t\tSystem.out.print(a[j] + \"x\" + j);\n\t\t\t}\n\t\t\telse\n\t\t\t\tcontinue;\n\t\t}\n\t\t// 处理幂次为1的情况\n\t\tif (a[1] != 0)\n\t\t{\n\t\t\tif (flag&&a[1]>0)\n\t\t\t\tSystem.out.print(\"+\");\n\t\t\tif(a[1]==-1)\n\t\t\t\tSystem.out.print(\"-\");\n\t\t\tSystem.out.print(a[1] + \"x\");\n\t\t\tflag = true;\n\t\t}\n\t\t// 处理幂次为0的情况\n\t\tif (a[0] != 0)\n\t\t{\n\t\t\tif (flag)\n\t\t\t\tSystem.out.print(\"+\");\n\t\t\tSystem.out.print(a[0]);\n\t\t}\n\t\t// System.out.println();\n\t\tin.close();\n\t}\n\n}\n```\n## 补充：\n&#160;&#160;&#160;&#160;把源码发到了MOOC的讨论区，在热心网友的帮助下，终于找到了有一个测试点没通过的原因.....\n&#160;&#160;&#160;&#160;对于系数全部为0的情况，程序会无输出.....\n&#160;&#160;&#160;&#160;例：对于下列这组数据\n<div class=\"note default no-icon\"><p>\n6 3\n2 5\n0 3\n6 -3\n2 -5\n0 -3\n</p></div>\n在`in.close()`前面加上这一段就好了\n`if(!flag)`\n`　　System.out.print(\"0\");`\n","slug":"第五周编程题_多项式加法","published":1,"updated":"2019-03-28T10:45:16.817Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8v001pkchiytrtv8bk","content":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>一个多项式可以表达为x的各次幂与系数乘积的和，比如：<br>2x6+3x5+12x3+6x+20<br>现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出。<br>程序要处理的幂最大为100。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>总共要输入两个多项式，每个多项式的输入格式如下：<br>每行输入两个数字，第一个表示幂次，第二个表示该幂次的系数，所有的系数都是整数。第一行一定是最高幂，最后一行一定是0次幂。<br>注意第一行和最后一行之间不一定按照幂次降低顺序排列；如果某个幂次的系数为0，就不出现在输入数据中了；0次幂的系数为0时还是会出现在输入数据中。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>从最高幂开始依次降到0幂，如：<br>2x6+3x5+12x3-6x+20<br>注意其中的x是小写字母x，而且所有的符号之间都没有空格，如果某个幂的系数为0则不需要有那项。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>6 2<br>5 3<br>3 12<br>1 6<br>0 20<br>6 2<br>5 3<br>2 12<br>1 6<br>0 20<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>4x6+6x5+12x3+12x2+12x+40<br></p></div>\n\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 零基础学Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fifth_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">101</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>, n = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)</span><br><span class=\"line\">\t\t\ta[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> m_max = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入第一个多项式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = in.nextInt();</span><br><span class=\"line\">\t\t\tn = in.nextInt();</span><br><span class=\"line\">\t\t\ta[m] = n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &gt; m_max)</span><br><span class=\"line\">\t\t\t\tm_max = m;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">while</span>(m!=<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入第二个多项式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = in.nextInt();</span><br><span class=\"line\">\t\t\tn = in.nextInt();</span><br><span class=\"line\">\t\t\ta[m] += n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &gt; m_max)</span><br><span class=\"line\">\t\t\t\tm_max = m;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">while</span> (m!=<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = m_max; j &gt;=<span class=\"number\">0</span>; j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[j] != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[j]&gt;<span class=\"number\">0</span>&amp;&amp;flag==<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"+\"</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[j]!=<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(a[j]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(j!=<span class=\"number\">1</span>&amp;&amp;j!=<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"x\"</span>+j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(j==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"x\"</span>);</span><br><span class=\"line\">\t\t\t\tflag=<span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只有一个测试点没过…..不想改了…..</p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><p>用一个大小为101的数组来存系数，数组的下标即为幂指数….<br>若系数不为0则输出…<br>需要注意的是：<br>        系数为1或-1时不用输出系数；<br>        系数小于0时，不输出加号；<br>        幂指数为1时,不输出幂指数；<br>        幂指数为0时，只输出系数；<br>开始的思路是对幂指数为0或1时的输出单独处理，但没有考虑到系数为1或-1的情况…导致没有一个测试点通过…</p>\n<h2 id=\"错误代码\"><a href=\"#错误代码\" class=\"headerlink\" title=\"错误代码:\"></a>错误代码:</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 零基础学Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fifth_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in </span><br><span class=\"line\"></span><br><span class=\"line\">);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">101</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>, n = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)</span><br><span class=\"line\">\t\t\ta[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> m_max = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入第一个多项式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = in.nextInt();</span><br><span class=\"line\">\t\t\tn = in.nextInt();</span><br><span class=\"line\">\t\t\ta[m] = n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &gt; m_max)</span><br><span class=\"line\">\t\t\t\tm_max = m;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">while</span>(m!=<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入第二个多项式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = in.nextInt();</span><br><span class=\"line\">\t\t\tn = in.nextInt();</span><br><span class=\"line\">\t\t\ta[m] += n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &gt; m_max)</span><br><span class=\"line\">\t\t\t\tm_max = m;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">while</span> (m!=<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = m_max; j &gt; <span class=\"number\">1</span>; j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[j] != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag&amp;&amp;a[j]&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"+\"</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[j]==-<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(a[j] + <span class=\"string\">\"x\"</span> + j);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 处理幂次为1的情况</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[<span class=\"number\">1</span>] != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (flag&amp;&amp;a[<span class=\"number\">1</span>]&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">\"+\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[<span class=\"number\">1</span>]==-<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">\t\t\tSystem.out.print(a[<span class=\"number\">1</span>] + <span class=\"string\">\"x\"</span>);</span><br><span class=\"line\">\t\t\tflag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 处理幂次为0的情况</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[<span class=\"number\">0</span>] != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">\"+\"</span>);</span><br><span class=\"line\">\t\t\tSystem.out.print(a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// System.out.println();</span></span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"补充：\"><a href=\"#补充：\" class=\"headerlink\" title=\"补充：\"></a>补充：</h2><p>&#160;&#160;&#160;&#160;把源码发到了MOOC的讨论区，在热心网友的帮助下，终于找到了有一个测试点没通过的原因…..<br>&#160;&#160;&#160;&#160;对于系数全部为0的情况，程序会无输出…..<br>&#160;&#160;&#160;&#160;例：对于下列这组数据</p>\n<p><div class=\"note default no-icon\"><p><br>6 3<br>2 5<br>0 3<br>6 -3<br>2 -5<br>0 -3<br></p></div><br>在<code>in.close()</code>前面加上这一段就好了<br><code>if(!flag)</code><br><code>System.out.print(&quot;0&quot;);</code></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>一个多项式可以表达为x的各次幂与系数乘积的和，比如：<br>2x6+3x5+12x3+6x+20<br>现在，你的程序要读入两个多项式，然后输出这两个多项式的和，也就是把对应的幂上的系数相加然后输出。<br>程序要处理的幂最大为100。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>总共要输入两个多项式，每个多项式的输入格式如下：<br>每行输入两个数字，第一个表示幂次，第二个表示该幂次的系数，所有的系数都是整数。第一行一定是最高幂，最后一行一定是0次幂。<br>注意第一行和最后一行之间不一定按照幂次降低顺序排列；如果某个幂次的系数为0，就不出现在输入数据中了；0次幂的系数为0时还是会出现在输入数据中。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>从最高幂开始依次降到0幂，如：<br>2x6+3x5+12x3-6x+20<br>注意其中的x是小写字母x，而且所有的符号之间都没有空格，如果某个幂的系数为0则不需要有那项。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>6 2<br>5 3<br>3 12<br>1 6<br>0 20<br>6 2<br>5 3<br>2 12<br>1 6<br>0 20<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>4x6+6x5+12x3+12x2+12x+40<br></p></div>\n\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 零基础学Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fifth_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">101</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>, n = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)</span><br><span class=\"line\">\t\t\ta[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> m_max = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入第一个多项式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = in.nextInt();</span><br><span class=\"line\">\t\t\tn = in.nextInt();</span><br><span class=\"line\">\t\t\ta[m] = n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &gt; m_max)</span><br><span class=\"line\">\t\t\t\tm_max = m;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">while</span>(m!=<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入第二个多项式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = in.nextInt();</span><br><span class=\"line\">\t\t\tn = in.nextInt();</span><br><span class=\"line\">\t\t\ta[m] += n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &gt; m_max)</span><br><span class=\"line\">\t\t\t\tm_max = m;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">while</span> (m!=<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = m_max; j &gt;=<span class=\"number\">0</span>; j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[j] != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[j]&gt;<span class=\"number\">0</span>&amp;&amp;flag==<span class=\"keyword\">true</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"+\"</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[j]!=<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(a[j]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(j!=<span class=\"number\">1</span>&amp;&amp;j!=<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"x\"</span>+j);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(j==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"x\"</span>);</span><br><span class=\"line\">\t\t\t\tflag=<span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>只有一个测试点没过…..不想改了…..</p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><p>用一个大小为101的数组来存系数，数组的下标即为幂指数….<br>若系数不为0则输出…<br>需要注意的是：<br>        系数为1或-1时不用输出系数；<br>        系数小于0时，不输出加号；<br>        幂指数为1时,不输出幂指数；<br>        幂指数为0时，只输出系数；<br>开始的思路是对幂指数为0或1时的输出单独处理，但没有考虑到系数为1或-1的情况…导致没有一个测试点通过…</p>\n<h2 id=\"错误代码\"><a href=\"#错误代码\" class=\"headerlink\" title=\"错误代码:\"></a>错误代码:</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 零基础学Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fifth_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in </span><br><span class=\"line\"></span><br><span class=\"line\">);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">101</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>, n = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">100</span>;i++)</span><br><span class=\"line\">\t\t\ta[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> m_max = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入第一个多项式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = in.nextInt();</span><br><span class=\"line\">\t\t\tn = in.nextInt();</span><br><span class=\"line\">\t\t\ta[m] = n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &gt; m_max)</span><br><span class=\"line\">\t\t\t\tm_max = m;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">while</span>(m!=<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 读入第二个多项式</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tm = in.nextInt();</span><br><span class=\"line\">\t\t\tn = in.nextInt();</span><br><span class=\"line\">\t\t\ta[m] += n;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (m &gt; m_max)</span><br><span class=\"line\">\t\t\t\tm_max = m;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">while</span> (m!=<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = m_max; j &gt; <span class=\"number\">1</span>; j--)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (a[j] != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (flag&amp;&amp;a[j]&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"+\"</span>);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[j]==-<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(<span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">\t\t\t\tflag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(a[j] + <span class=\"string\">\"x\"</span> + j);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 处理幂次为1的情况</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[<span class=\"number\">1</span>] != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (flag&amp;&amp;a[<span class=\"number\">1</span>]&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">\"+\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[<span class=\"number\">1</span>]==-<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">\t\t\tSystem.out.print(a[<span class=\"number\">1</span>] + <span class=\"string\">\"x\"</span>);</span><br><span class=\"line\">\t\t\tflag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 处理幂次为0的情况</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[<span class=\"number\">0</span>] != <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (flag)</span><br><span class=\"line\">\t\t\t\tSystem.out.print(<span class=\"string\">\"+\"</span>);</span><br><span class=\"line\">\t\t\tSystem.out.print(a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// System.out.println();</span></span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"补充：\"><a href=\"#补充：\" class=\"headerlink\" title=\"补充：\"></a>补充：</h2><p>&#160;&#160;&#160;&#160;把源码发到了MOOC的讨论区，在热心网友的帮助下，终于找到了有一个测试点没通过的原因…..<br>&#160;&#160;&#160;&#160;对于系数全部为0的情况，程序会无输出…..<br>&#160;&#160;&#160;&#160;例：对于下列这组数据</p>\n<p><div class=\"note default no-icon\"><p><br>6 3<br>2 5<br>0 3<br>6 -3<br>2 -5<br>0 -3<br></p></div><br>在<code>in.close()</code>前面加上这一段就好了<br><code>if(!flag)</code><br><code>System.out.print(&quot;0&quot;);</code></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"第五周编程题_多项式加法","path":"51603.html","eyeCatchImage":null,"excerpt":null,"date":"2017-10-09T13:28:02.000Z","pv":0,"totalPV":0,"categories":"零基础学Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"第六周编程题_GPS数据处理","abbrlink":48389,"date":"2017-10-16T10:59:45.000Z","_content":"## 题目内容：\nNMEA-0183协议是为了在不同的GPS（全球定位系统）导航设备中建立统一的BTCM（海事无线电技术委员会）标准，由美国国家海洋电子协会（NMEA-The National Marine Electronics Associa-tion）制定的一套通讯协议。GPS接收机根据NMEA-0183协议的标准规范，将位置、速度等信息通过串口传送到PC机、PDA等设备。\n\nNMEA-0183协议是GPS接收机应当遵守的标准协议，也是目前GPS接收机上使用最广泛的协议，大多数常见的GPS接收机、GPS数据处理软件、导航软件都遵守或者至少兼容这个协议。\n\nNMEA-0183协议定义的语句非常多，但是常用的或者说兼容性最广的语句只有$GPGGA、$GPGSA、$GPGSV、$GPRMC、$GPVTG、$GPGLL等。\n\n其中$GPRMC语句的格式如下：\n\n$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50\n\n这里整条语句是一个文本行，行中以逗号“,”隔开各个字段，每个字段的大小（长度）不一，这里的示例只是一种可能，并不能认为字段的大小就如上述例句一样。\n\n字段0：$GPRMC，语句ID，表明该语句为Recommended Minimum Specific GPS/TRANSIT Data（RMC）推荐最小定位信息\n字段1：UTC时间，hhmmss.sss格式\n字段2：状态，A=定位，V=未定位\n字段3：纬度ddmm.mmmm，度分格式（前导位数不足则补0）\n字段4：纬度N（北纬）或S（南纬）\n字段5：经度dddmm.mmmm，度分格式（前导位数不足则补0）\n字段6：经度E（东经）或W（西经）\n字段7：速度，节，Knots\n字段8：方位角，度\n字段9：UTC日期，DDMMYY格式\n字段10：磁偏角，（000 - 180）度（前导位数不足则补0）\n字段11：磁偏角方向，E=东W=西\n字段16：校验值\n\n这里，“*”为校验和识别符，其后面的两位数为校验和，代表了“$”和“*”之间所有字符（不包括这两个字符）的异或值的十六进制值。上面这条例句的校验和是十六进制的50，也就是十进制的80。\n\n提示：^运算符的作用是异或。将$和*之间所有的字符做^运算(第一个字符和第二个字符异或，结果再和第三个字符异或，依此类推)之后的值对65536取余后的结果，应该和*后面的两个十六进制数字的值相等，否则的话说明这条语句在传输中发生了错误。注意这个十六进制值中是会出现A-F的大写字母的。另外，如果你需要的话，可以用Integer.parseInt(s)从String变量s中得到其所表达的整数数字；而Integer.parseInt(s, 16)从String变量s中得到其所表达的十六进制数字\n\n现在，你的程序要读入一系列GPS输出，其中包含$GPRMC，也包含其他语句。在数据的最后，有一行单独的\nEND\n表示数据的结束。\n\n你的程序要从中找出$GPRMC语句，计算校验和，找出其中校验正确，并且字段2表示已定位的语句，从中计算出时间，换算成北京时间。一次数据中会包含多条$GPRMC语句，以最后一条语句得到的北京时间作为结果输出。\n\n你的程序一定会读到一条有效的$GPRMC语句。\n\n## 输入格式:\n多条GPS语句，每条均以回车换行结束。最后一行是END三个大写字母。\n\n## 输出格式：\n6位数时间，表达为：\nhh:mm:ss\n其中，hh是两位数的小时，不足两位时前面补0；mm是两位数的分钟，不足两位时前面补0；ss是两位数的秒，不足两位时前面补0。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50\nEND\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>10:48:13\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码：\n```\npackage 零基础学Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class Sixth_Week_2\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tfinal int mod = 65536;\n\t\tScanner in = new Scanner(System.in);\n\t\tString s = null;\n\t\tint hh = 0, mm = 0, ss = 0;\n\t\tint cnt = 0;\n\t\tchar state = 0;\n\t\tString utc = null;\n\t\tint judge = 0;\n\t\tint judge_temp = 0;\n\t\tString temp = null;\n\t\twhile (true)\n\t\t{\n\t\t\ts = in.nextLine();\n\t\t\tcnt = 0;\n\t\t\tif (s.equals(\"END\"))\t\t\t// 读入结束\n\t\t\t\tbreak;\n\t\t\ttemp = s.substring(0, 6);\n\t\t\tif (temp.equals(\"$GPRMC\"))\t\t\t// 判断是否为$GPRMC\n\t\t\t{\n\t\t\t\tutc = s.substring(7, 13);\n\t\t\t\ttemp = null;\n\t\t\t\tfor (int i = 0; i < s.length(); i++)\t\t\t\t// 获取字段2（定位）\n\t\t\t\t{\n\t\t\t\t\tif (s.charAt(i) == ',')\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\tif (cnt == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = s.charAt(i + 1);\n\t\t\t\t\t\tcnt = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (state == 'A')\t\t\t\t// 判断是否定位\n\t\t\t\t{\n\t\t\t\t\tfor (int i = 0; i < s.length(); i++)\t\t\t\t\t// 获取字段16(校验值）\n\t\t\t\t\t{\n\t\t\t\t\t\tif (s.charAt(i) == ',')\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\tif (cnt == 12)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp = s.substring(i + 3, s.length());\n\t\t\t\t\t\t\tjudge = Integer.parseInt(temp, 16);\n\t\t\t\t\t\t\ttemp = null;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tjudge_temp = (int)s.charAt(1) ^ (int)s.charAt(2);// 计算校验值\n\t\t\t\t\tfor (int i = 3; s.charAt(i) != '*'; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (s.charAt(i) == ',')\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tjudge_temp = judge_temp ^ (int)s.charAt(i)%mod;\n\t\t\t\t\t}\n\t\t\t\t\tif (judge == judge_temp)\t\t\t\t\t// 判断校验值是否相等\n\t\t\t\t\t{\n\t\t\t\t\t\t// utc时间转换bjt时间\n\t\t\t\t\t\tss = (utc.charAt(5) - '0') + (utc.charAt(4) - '0') * 10;\n\t\t\t\t\t\tmm = (utc.charAt(3) - '0') + (utc.charAt(2) - '0') * 10;\n\t\t\t\t\t\thh = (utc.charAt(1) - '0') + (utc.charAt(0) - '0') * 10 + 8;\n\t\t\t\t\t\thh = hh % 24;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.printf(\"%02d:%02d:%02d\", hh, mm, ss);\n\t\tin.close();\n\t}\n\n}\n```\n## 做法:\n先判断前6个字符是否为“$GPRMC\"，然后判断字段2(定位)是否为A，然后将字段16(校验值)用Integer.parseInt(str,16)方法转换为十进制，对'$'和‘*’之间的所有字符作^运算，并与校验值进行比较，再将UTC时间转换为BJT时间，并输出。\n注意：对字符进行^运算时，要先使用强制类型转换为int型；\n　　　输出时间时，不足两位的前面要补0；\n　　　UTC时间转换为BJT时间时对跨日的处理。","source":"_posts/第六周编程题_GPS数据处理.md","raw":"---\ntitle: 第六周编程题_GPS数据处理\ncategories: 零基础学Java语言_翁恺\ntags:\n  - Java\nabbrlink: 48389\ndate: 2017-10-16 18:59:45\n---\n## 题目内容：\nNMEA-0183协议是为了在不同的GPS（全球定位系统）导航设备中建立统一的BTCM（海事无线电技术委员会）标准，由美国国家海洋电子协会（NMEA-The National Marine Electronics Associa-tion）制定的一套通讯协议。GPS接收机根据NMEA-0183协议的标准规范，将位置、速度等信息通过串口传送到PC机、PDA等设备。\n\nNMEA-0183协议是GPS接收机应当遵守的标准协议，也是目前GPS接收机上使用最广泛的协议，大多数常见的GPS接收机、GPS数据处理软件、导航软件都遵守或者至少兼容这个协议。\n\nNMEA-0183协议定义的语句非常多，但是常用的或者说兼容性最广的语句只有$GPGGA、$GPGSA、$GPGSV、$GPRMC、$GPVTG、$GPGLL等。\n\n其中$GPRMC语句的格式如下：\n\n$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50\n\n这里整条语句是一个文本行，行中以逗号“,”隔开各个字段，每个字段的大小（长度）不一，这里的示例只是一种可能，并不能认为字段的大小就如上述例句一样。\n\n字段0：$GPRMC，语句ID，表明该语句为Recommended Minimum Specific GPS/TRANSIT Data（RMC）推荐最小定位信息\n字段1：UTC时间，hhmmss.sss格式\n字段2：状态，A=定位，V=未定位\n字段3：纬度ddmm.mmmm，度分格式（前导位数不足则补0）\n字段4：纬度N（北纬）或S（南纬）\n字段5：经度dddmm.mmmm，度分格式（前导位数不足则补0）\n字段6：经度E（东经）或W（西经）\n字段7：速度，节，Knots\n字段8：方位角，度\n字段9：UTC日期，DDMMYY格式\n字段10：磁偏角，（000 - 180）度（前导位数不足则补0）\n字段11：磁偏角方向，E=东W=西\n字段16：校验值\n\n这里，“*”为校验和识别符，其后面的两位数为校验和，代表了“$”和“*”之间所有字符（不包括这两个字符）的异或值的十六进制值。上面这条例句的校验和是十六进制的50，也就是十进制的80。\n\n提示：^运算符的作用是异或。将$和*之间所有的字符做^运算(第一个字符和第二个字符异或，结果再和第三个字符异或，依此类推)之后的值对65536取余后的结果，应该和*后面的两个十六进制数字的值相等，否则的话说明这条语句在传输中发生了错误。注意这个十六进制值中是会出现A-F的大写字母的。另外，如果你需要的话，可以用Integer.parseInt(s)从String变量s中得到其所表达的整数数字；而Integer.parseInt(s, 16)从String变量s中得到其所表达的十六进制数字\n\n现在，你的程序要读入一系列GPS输出，其中包含$GPRMC，也包含其他语句。在数据的最后，有一行单独的\nEND\n表示数据的结束。\n\n你的程序要从中找出$GPRMC语句，计算校验和，找出其中校验正确，并且字段2表示已定位的语句，从中计算出时间，换算成北京时间。一次数据中会包含多条$GPRMC语句，以最后一条语句得到的北京时间作为结果输出。\n\n你的程序一定会读到一条有效的$GPRMC语句。\n\n## 输入格式:\n多条GPS语句，每条均以回车换行结束。最后一行是END三个大写字母。\n\n## 输出格式：\n6位数时间，表达为：\nhh:mm:ss\n其中，hh是两位数的小时，不足两位时前面补0；mm是两位数的分钟，不足两位时前面补0；ss是两位数的秒，不足两位时前面补0。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50\nEND\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>10:48:13\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码：\n```\npackage 零基础学Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class Sixth_Week_2\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tfinal int mod = 65536;\n\t\tScanner in = new Scanner(System.in);\n\t\tString s = null;\n\t\tint hh = 0, mm = 0, ss = 0;\n\t\tint cnt = 0;\n\t\tchar state = 0;\n\t\tString utc = null;\n\t\tint judge = 0;\n\t\tint judge_temp = 0;\n\t\tString temp = null;\n\t\twhile (true)\n\t\t{\n\t\t\ts = in.nextLine();\n\t\t\tcnt = 0;\n\t\t\tif (s.equals(\"END\"))\t\t\t// 读入结束\n\t\t\t\tbreak;\n\t\t\ttemp = s.substring(0, 6);\n\t\t\tif (temp.equals(\"$GPRMC\"))\t\t\t// 判断是否为$GPRMC\n\t\t\t{\n\t\t\t\tutc = s.substring(7, 13);\n\t\t\t\ttemp = null;\n\t\t\t\tfor (int i = 0; i < s.length(); i++)\t\t\t\t// 获取字段2（定位）\n\t\t\t\t{\n\t\t\t\t\tif (s.charAt(i) == ',')\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\tif (cnt == 2)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = s.charAt(i + 1);\n\t\t\t\t\t\tcnt = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (state == 'A')\t\t\t\t// 判断是否定位\n\t\t\t\t{\n\t\t\t\t\tfor (int i = 0; i < s.length(); i++)\t\t\t\t\t// 获取字段16(校验值）\n\t\t\t\t\t{\n\t\t\t\t\t\tif (s.charAt(i) == ',')\n\t\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\tif (cnt == 12)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttemp = s.substring(i + 3, s.length());\n\t\t\t\t\t\t\tjudge = Integer.parseInt(temp, 16);\n\t\t\t\t\t\t\ttemp = null;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tjudge_temp = (int)s.charAt(1) ^ (int)s.charAt(2);// 计算校验值\n\t\t\t\t\tfor (int i = 3; s.charAt(i) != '*'; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (s.charAt(i) == ',')\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tjudge_temp = judge_temp ^ (int)s.charAt(i)%mod;\n\t\t\t\t\t}\n\t\t\t\t\tif (judge == judge_temp)\t\t\t\t\t// 判断校验值是否相等\n\t\t\t\t\t{\n\t\t\t\t\t\t// utc时间转换bjt时间\n\t\t\t\t\t\tss = (utc.charAt(5) - '0') + (utc.charAt(4) - '0') * 10;\n\t\t\t\t\t\tmm = (utc.charAt(3) - '0') + (utc.charAt(2) - '0') * 10;\n\t\t\t\t\t\thh = (utc.charAt(1) - '0') + (utc.charAt(0) - '0') * 10 + 8;\n\t\t\t\t\t\thh = hh % 24;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.printf(\"%02d:%02d:%02d\", hh, mm, ss);\n\t\tin.close();\n\t}\n\n}\n```\n## 做法:\n先判断前6个字符是否为“$GPRMC\"，然后判断字段2(定位)是否为A，然后将字段16(校验值)用Integer.parseInt(str,16)方法转换为十进制，对'$'和‘*’之间的所有字符作^运算，并与校验值进行比较，再将UTC时间转换为BJT时间，并输出。\n注意：对字符进行^运算时，要先使用强制类型转换为int型；\n　　　输出时间时，不足两位的前面要补0；\n　　　UTC时间转换为BJT时间时对跨日的处理。","slug":"第六周编程题_GPS数据处理","published":1,"updated":"2019-03-28T10:45:16.818Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8x001tkchigsv20k59","content":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>NMEA-0183协议是为了在不同的GPS（全球定位系统）导航设备中建立统一的BTCM（海事无线电技术委员会）标准，由美国国家海洋电子协会（NMEA-The National Marine Electronics Associa-tion）制定的一套通讯协议。GPS接收机根据NMEA-0183协议的标准规范，将位置、速度等信息通过串口传送到PC机、PDA等设备。</p>\n<p>NMEA-0183协议是GPS接收机应当遵守的标准协议，也是目前GPS接收机上使用最广泛的协议，大多数常见的GPS接收机、GPS数据处理软件、导航软件都遵守或者至少兼容这个协议。</p>\n<p>NMEA-0183协议定义的语句非常多，但是常用的或者说兼容性最广的语句只有$GPGGA、$GPGSA、$GPGSV、$GPRMC、$GPVTG、$GPGLL等。</p>\n<p>其中$GPRMC语句的格式如下：</p>\n<p>$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50</p>\n<p>这里整条语句是一个文本行，行中以逗号“,”隔开各个字段，每个字段的大小（长度）不一，这里的示例只是一种可能，并不能认为字段的大小就如上述例句一样。</p>\n<p>字段0：$GPRMC，语句ID，表明该语句为Recommended Minimum Specific GPS/TRANSIT Data（RMC）推荐最小定位信息<br>字段1：UTC时间，hhmmss.sss格式<br>字段2：状态，A=定位，V=未定位<br>字段3：纬度ddmm.mmmm，度分格式（前导位数不足则补0）<br>字段4：纬度N（北纬）或S（南纬）<br>字段5：经度dddmm.mmmm，度分格式（前导位数不足则补0）<br>字段6：经度E（东经）或W（西经）<br>字段7：速度，节，Knots<br>字段8：方位角，度<br>字段9：UTC日期，DDMMYY格式<br>字段10：磁偏角，（000 - 180）度（前导位数不足则补0）<br>字段11：磁偏角方向，E=东W=西<br>字段16：校验值</p>\n<p>这里，“<em>”为校验和识别符，其后面的两位数为校验和，代表了“$”和“</em>”之间所有字符（不包括这两个字符）的异或值的十六进制值。上面这条例句的校验和是十六进制的50，也就是十进制的80。</p>\n<p>提示：^运算符的作用是异或。将$和<em>之间所有的字符做^运算(第一个字符和第二个字符异或，结果再和第三个字符异或，依此类推)之后的值对65536取余后的结果，应该和</em>后面的两个十六进制数字的值相等，否则的话说明这条语句在传输中发生了错误。注意这个十六进制值中是会出现A-F的大写字母的。另外，如果你需要的话，可以用Integer.parseInt(s)从String变量s中得到其所表达的整数数字；而Integer.parseInt(s, 16)从String变量s中得到其所表达的十六进制数字</p>\n<p>现在，你的程序要读入一系列GPS输出，其中包含$GPRMC，也包含其他语句。在数据的最后，有一行单独的<br>END<br>表示数据的结束。</p>\n<p>你的程序要从中找出$GPRMC语句，计算校验和，找出其中校验正确，并且字段2表示已定位的语句，从中计算出时间，换算成北京时间。一次数据中会包含多条$GPRMC语句，以最后一条语句得到的北京时间作为结果输出。</p>\n<p>你的程序一定会读到一条有效的$GPRMC语句。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>多条GPS语句，每条均以回车换行结束。最后一行是END三个大写字母。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>6位数时间，表达为：<br>hh:mm:ss<br>其中，hh是两位数的小时，不足两位时前面补0；mm是两位数的分钟，不足两位时前面补0；ss是两位数的秒，不足两位时前面补0。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50<br>END<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>10:48:13<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package 零基础学Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Sixth_Week_2</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t// TODO Auto-generated method stub</span><br><span class=\"line\">\t\tfinal int mod = 65536;</span><br><span class=\"line\">\t\tScanner in = new Scanner(System.in);</span><br><span class=\"line\">\t\tString s = null;</span><br><span class=\"line\">\t\tint hh = 0, mm = 0, ss = 0;</span><br><span class=\"line\">\t\tint cnt = 0;</span><br><span class=\"line\">\t\tchar state = 0;</span><br><span class=\"line\">\t\tString utc = null;</span><br><span class=\"line\">\t\tint judge = 0;</span><br><span class=\"line\">\t\tint judge_temp = 0;</span><br><span class=\"line\">\t\tString temp = null;</span><br><span class=\"line\">\t\twhile (true)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ts = in.nextLine();</span><br><span class=\"line\">\t\t\tcnt = 0;</span><br><span class=\"line\">\t\t\tif (s.equals(&quot;END&quot;))\t\t\t// 读入结束</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\ttemp = s.substring(0, 6);</span><br><span class=\"line\">\t\t\tif (temp.equals(&quot;$GPRMC&quot;))\t\t\t// 判断是否为$GPRMC</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tutc = s.substring(7, 13);</span><br><span class=\"line\">\t\t\t\ttemp = null;</span><br><span class=\"line\">\t\t\t\tfor (int i = 0; i &lt; s.length(); i++)\t\t\t\t// 获取字段2（定位）</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tif (s.charAt(i) == &apos;,&apos;)</span><br><span class=\"line\">\t\t\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t\t\tif (cnt == 2)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tstate = s.charAt(i + 1);</span><br><span class=\"line\">\t\t\t\t\t\tcnt = 0;</span><br><span class=\"line\">\t\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tif (state == &apos;A&apos;)\t\t\t\t// 判断是否定位</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tfor (int i = 0; i &lt; s.length(); i++)\t\t\t\t\t// 获取字段16(校验值）</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tif (s.charAt(i) == &apos;,&apos;)</span><br><span class=\"line\">\t\t\t\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t\t\t\tif (cnt == 12)</span><br><span class=\"line\">\t\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\ttemp = s.substring(i + 3, s.length());</span><br><span class=\"line\">\t\t\t\t\t\t\tjudge = Integer.parseInt(temp, 16);</span><br><span class=\"line\">\t\t\t\t\t\t\ttemp = null;</span><br><span class=\"line\">\t\t\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tjudge_temp = (int)s.charAt(1) ^ (int)s.charAt(2);// 计算校验值</span><br><span class=\"line\">\t\t\t\t\tfor (int i = 3; s.charAt(i) != &apos;*&apos;; i++)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tif (s.charAt(i) == &apos;,&apos;)</span><br><span class=\"line\">\t\t\t\t\t\t\tcontinue;</span><br><span class=\"line\">\t\t\t\t\t\telse</span><br><span class=\"line\">\t\t\t\t\t\t\tjudge_temp = judge_temp ^ (int)s.charAt(i)%mod;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tif (judge == judge_temp)\t\t\t\t\t// 判断校验值是否相等</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t// utc时间转换bjt时间</span><br><span class=\"line\">\t\t\t\t\t\tss = (utc.charAt(5) - &apos;0&apos;) + (utc.charAt(4) - &apos;0&apos;) * 10;</span><br><span class=\"line\">\t\t\t\t\t\tmm = (utc.charAt(3) - &apos;0&apos;) + (utc.charAt(2) - &apos;0&apos;) * 10;</span><br><span class=\"line\">\t\t\t\t\t\thh = (utc.charAt(1) - &apos;0&apos;) + (utc.charAt(0) - &apos;0&apos;) * 10 + 8;</span><br><span class=\"line\">\t\t\t\t\t\thh = hh % 24;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.printf(&quot;%02d:%02d:%02d&quot;, hh, mm, ss);</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"做法\"><a href=\"#做法\" class=\"headerlink\" title=\"做法:\"></a>做法:</h2><p>先判断前6个字符是否为“$GPRMC”，然后判断字段2(定位)是否为A，然后将字段16(校验值)用Integer.parseInt(str,16)方法转换为十进制，对’$’和‘*’之间的所有字符作^运算，并与校验值进行比较，再将UTC时间转换为BJT时间，并输出。<br>注意：对字符进行^运算时，要先使用强制类型转换为int型；<br>　　　输出时间时，不足两位的前面要补0；<br>　　　UTC时间转换为BJT时间时对跨日的处理。</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>NMEA-0183协议是为了在不同的GPS（全球定位系统）导航设备中建立统一的BTCM（海事无线电技术委员会）标准，由美国国家海洋电子协会（NMEA-The National Marine Electronics Associa-tion）制定的一套通讯协议。GPS接收机根据NMEA-0183协议的标准规范，将位置、速度等信息通过串口传送到PC机、PDA等设备。</p>\n<p>NMEA-0183协议是GPS接收机应当遵守的标准协议，也是目前GPS接收机上使用最广泛的协议，大多数常见的GPS接收机、GPS数据处理软件、导航软件都遵守或者至少兼容这个协议。</p>\n<p>NMEA-0183协议定义的语句非常多，但是常用的或者说兼容性最广的语句只有$GPGGA、$GPGSA、$GPGSV、$GPRMC、$GPVTG、$GPGLL等。</p>\n<p>其中$GPRMC语句的格式如下：</p>\n<p>$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50</p>\n<p>这里整条语句是一个文本行，行中以逗号“,”隔开各个字段，每个字段的大小（长度）不一，这里的示例只是一种可能，并不能认为字段的大小就如上述例句一样。</p>\n<p>字段0：$GPRMC，语句ID，表明该语句为Recommended Minimum Specific GPS/TRANSIT Data（RMC）推荐最小定位信息<br>字段1：UTC时间，hhmmss.sss格式<br>字段2：状态，A=定位，V=未定位<br>字段3：纬度ddmm.mmmm，度分格式（前导位数不足则补0）<br>字段4：纬度N（北纬）或S（南纬）<br>字段5：经度dddmm.mmmm，度分格式（前导位数不足则补0）<br>字段6：经度E（东经）或W（西经）<br>字段7：速度，节，Knots<br>字段8：方位角，度<br>字段9：UTC日期，DDMMYY格式<br>字段10：磁偏角，（000 - 180）度（前导位数不足则补0）<br>字段11：磁偏角方向，E=东W=西<br>字段16：校验值</p>\n<p>这里，“<em>”为校验和识别符，其后面的两位数为校验和，代表了“$”和“</em>”之间所有字符（不包括这两个字符）的异或值的十六进制值。上面这条例句的校验和是十六进制的50，也就是十进制的80。</p>\n<p>提示：^运算符的作用是异或。将$和<em>之间所有的字符做^运算(第一个字符和第二个字符异或，结果再和第三个字符异或，依此类推)之后的值对65536取余后的结果，应该和</em>后面的两个十六进制数字的值相等，否则的话说明这条语句在传输中发生了错误。注意这个十六进制值中是会出现A-F的大写字母的。另外，如果你需要的话，可以用Integer.parseInt(s)从String变量s中得到其所表达的整数数字；而Integer.parseInt(s, 16)从String变量s中得到其所表达的十六进制数字</p>\n<p>现在，你的程序要读入一系列GPS输出，其中包含$GPRMC，也包含其他语句。在数据的最后，有一行单独的<br>END<br>表示数据的结束。</p>\n<p>你的程序要从中找出$GPRMC语句，计算校验和，找出其中校验正确，并且字段2表示已定位的语句，从中计算出时间，换算成北京时间。一次数据中会包含多条$GPRMC语句，以最后一条语句得到的北京时间作为结果输出。</p>\n<p>你的程序一定会读到一条有效的$GPRMC语句。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>多条GPS语句，每条均以回车换行结束。最后一行是END三个大写字母。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>6位数时间，表达为：<br>hh:mm:ss<br>其中，hh是两位数的小时，不足两位时前面补0；mm是两位数的分钟，不足两位时前面补0；ss是两位数的秒，不足两位时前面补0。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>$GPRMC,024813.640,A,3158.4608,N,11848.3737,E,10.05,324.27,150706,,,A*50<br>END<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>10:48:13<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package 零基础学Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Sixth_Week_2</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t// TODO Auto-generated method stub</span><br><span class=\"line\">\t\tfinal int mod = 65536;</span><br><span class=\"line\">\t\tScanner in = new Scanner(System.in);</span><br><span class=\"line\">\t\tString s = null;</span><br><span class=\"line\">\t\tint hh = 0, mm = 0, ss = 0;</span><br><span class=\"line\">\t\tint cnt = 0;</span><br><span class=\"line\">\t\tchar state = 0;</span><br><span class=\"line\">\t\tString utc = null;</span><br><span class=\"line\">\t\tint judge = 0;</span><br><span class=\"line\">\t\tint judge_temp = 0;</span><br><span class=\"line\">\t\tString temp = null;</span><br><span class=\"line\">\t\twhile (true)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\ts = in.nextLine();</span><br><span class=\"line\">\t\t\tcnt = 0;</span><br><span class=\"line\">\t\t\tif (s.equals(&quot;END&quot;))\t\t\t// 读入结束</span><br><span class=\"line\">\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\ttemp = s.substring(0, 6);</span><br><span class=\"line\">\t\t\tif (temp.equals(&quot;$GPRMC&quot;))\t\t\t// 判断是否为$GPRMC</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tutc = s.substring(7, 13);</span><br><span class=\"line\">\t\t\t\ttemp = null;</span><br><span class=\"line\">\t\t\t\tfor (int i = 0; i &lt; s.length(); i++)\t\t\t\t// 获取字段2（定位）</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tif (s.charAt(i) == &apos;,&apos;)</span><br><span class=\"line\">\t\t\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t\t\tif (cnt == 2)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tstate = s.charAt(i + 1);</span><br><span class=\"line\">\t\t\t\t\t\tcnt = 0;</span><br><span class=\"line\">\t\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tif (state == &apos;A&apos;)\t\t\t\t// 判断是否定位</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tfor (int i = 0; i &lt; s.length(); i++)\t\t\t\t\t// 获取字段16(校验值）</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tif (s.charAt(i) == &apos;,&apos;)</span><br><span class=\"line\">\t\t\t\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t\t\t\tif (cnt == 12)</span><br><span class=\"line\">\t\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\ttemp = s.substring(i + 3, s.length());</span><br><span class=\"line\">\t\t\t\t\t\t\tjudge = Integer.parseInt(temp, 16);</span><br><span class=\"line\">\t\t\t\t\t\t\ttemp = null;</span><br><span class=\"line\">\t\t\t\t\t\t\tbreak;</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tjudge_temp = (int)s.charAt(1) ^ (int)s.charAt(2);// 计算校验值</span><br><span class=\"line\">\t\t\t\t\tfor (int i = 3; s.charAt(i) != &apos;*&apos;; i++)</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\tif (s.charAt(i) == &apos;,&apos;)</span><br><span class=\"line\">\t\t\t\t\t\t\tcontinue;</span><br><span class=\"line\">\t\t\t\t\t\telse</span><br><span class=\"line\">\t\t\t\t\t\t\tjudge_temp = judge_temp ^ (int)s.charAt(i)%mod;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\tif (judge == judge_temp)\t\t\t\t\t// 判断校验值是否相等</span><br><span class=\"line\">\t\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\t\t// utc时间转换bjt时间</span><br><span class=\"line\">\t\t\t\t\t\tss = (utc.charAt(5) - &apos;0&apos;) + (utc.charAt(4) - &apos;0&apos;) * 10;</span><br><span class=\"line\">\t\t\t\t\t\tmm = (utc.charAt(3) - &apos;0&apos;) + (utc.charAt(2) - &apos;0&apos;) * 10;</span><br><span class=\"line\">\t\t\t\t\t\thh = (utc.charAt(1) - &apos;0&apos;) + (utc.charAt(0) - &apos;0&apos;) * 10 + 8;</span><br><span class=\"line\">\t\t\t\t\t\thh = hh % 24;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.printf(&quot;%02d:%02d:%02d&quot;, hh, mm, ss);</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"做法\"><a href=\"#做法\" class=\"headerlink\" title=\"做法:\"></a>做法:</h2><p>先判断前6个字符是否为“$GPRMC”，然后判断字段2(定位)是否为A，然后将字段16(校验值)用Integer.parseInt(str,16)方法转换为十进制，对’$’和‘*’之间的所有字符作^运算，并与校验值进行比较，再将UTC时间转换为BJT时间，并输出。<br>注意：对字符进行^运算时，要先使用强制类型转换为int型；<br>　　　输出时间时，不足两位的前面要补0；<br>　　　UTC时间转换为BJT时间时对跨日的处理。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"第六周编程题_GPS数据处理","path":"48389.html","eyeCatchImage":null,"excerpt":null,"date":"2017-10-16T10:59:45.000Z","pv":0,"totalPV":0,"categories":"零基础学Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"第六周编程题_单词长度","abbrlink":26108,"date":"2017-10-16T10:57:39.000Z","_content":"## 题目内容：\n你的程序要读入一行文本，其中以空格分隔为若干个单词，以‘.’结束。你要输出这行文本中每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如“it's”算一个单词，长度为4。注意，行中可能出现连续的空格。\n\n## 输入格式:\n输入在一行中给出一行文本，以‘.’结束，结尾的句号不能计算在最后一个单词的长度内。\n\n## 输出格式：\n在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>It's great to see you here.\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>4 5 2 3 3 4\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码：\n```Java\npackage 零基础学Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class Sixth_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in);\n\t\tString s = null;\n\t\tint ans = 0;\n\t\ts = in.nextLine();\n\t\tif (s.charAt(0) != '.')//处理输入为一个\".\"时的情况\n\t\t{\n\t\t\tfor (int i = 0; i < s.length();)\n\t\t\t{\n\t\t\t\tfor (int j = i; j < s.length(); j++)\n\t\t\t\t{\n\t\t\t\t\ti = j;\n\t\t\t\t\tif (s.charAt(j) == ' ')\n\t\t\t\t\t\tbreak;\n\t\t\t\t\telse if (s.charAt(j) == '.')\n\t\t\t\t\t\tbreak;\n\t\t\t\t\telse\n\t\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\tif (s.charAt(i) == '.')\n\t\t\t\t{\n\t\t\t\t\tSystem.out.print(ans);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tSystem.out.print(ans + \" \");\n\t\t\t\t}\n\t\t\t\tans = 0;\n\t\t\t\twhile (s.charAt(i) == ' ')// 行中可能出现连续的空格\n\t\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tin.close();\n\t}\n\n}\n\n```\n## 坑点:\n一是行中可能出现连续的空格；\n二是要处理好输入为\".\"时的情况。","source":"_posts/第六周编程题_单词长度.md","raw":"---\ntitle: 第六周编程题_单词长度\ncategories: 零基础学Java语言_翁恺\ntags:\n  - Java\nabbrlink: 26108\ndate: 2017-10-16 18:57:39\n---\n## 题目内容：\n你的程序要读入一行文本，其中以空格分隔为若干个单词，以‘.’结束。你要输出这行文本中每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如“it's”算一个单词，长度为4。注意，行中可能出现连续的空格。\n\n## 输入格式:\n输入在一行中给出一行文本，以‘.’结束，结尾的句号不能计算在最后一个单词的长度内。\n\n## 输出格式：\n在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。\n\n## 输入样例：\n<div class=\"note default no-icon\"><p>It's great to see you here.\n</p></div>\n\n## 输出样例：\n<div class=\"note default no-icon\"><p>4 5 2 3 3 4\n</p></div>\n\n**时间限制：500ms内存限制：32000kb**\n\n## 代码：\n```Java\npackage 零基础学Java语言_翁恺;\n\nimport java.util.Scanner;\n\npublic class Sixth_Week\n{\n\n\tpublic static void main(String[] args)\n\t{\n\t\t// TODO Auto-generated method stub\n\t\tScanner in = new Scanner(System.in);\n\t\tString s = null;\n\t\tint ans = 0;\n\t\ts = in.nextLine();\n\t\tif (s.charAt(0) != '.')//处理输入为一个\".\"时的情况\n\t\t{\n\t\t\tfor (int i = 0; i < s.length();)\n\t\t\t{\n\t\t\t\tfor (int j = i; j < s.length(); j++)\n\t\t\t\t{\n\t\t\t\t\ti = j;\n\t\t\t\t\tif (s.charAt(j) == ' ')\n\t\t\t\t\t\tbreak;\n\t\t\t\t\telse if (s.charAt(j) == '.')\n\t\t\t\t\t\tbreak;\n\t\t\t\t\telse\n\t\t\t\t\t\tans++;\n\t\t\t\t}\n\t\t\t\tif (s.charAt(i) == '.')\n\t\t\t\t{\n\t\t\t\t\tSystem.out.print(ans);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tSystem.out.print(ans + \" \");\n\t\t\t\t}\n\t\t\t\tans = 0;\n\t\t\t\twhile (s.charAt(i) == ' ')// 行中可能出现连续的空格\n\t\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tin.close();\n\t}\n\n}\n\n```\n## 坑点:\n一是行中可能出现连续的空格；\n二是要处理好输入为\".\"时的情况。","slug":"第六周编程题_单词长度","published":1,"updated":"2019-03-28T10:45:16.819Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw8y001ukchiqfu4113s","content":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>你的程序要读入一行文本，其中以空格分隔为若干个单词，以‘.’结束。你要输出这行文本中每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如“it’s”算一个单词，长度为4。注意，行中可能出现连续的空格。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>输入在一行中给出一行文本，以‘.’结束，结尾的句号不能计算在最后一个单词的长度内。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>It’s great to see you here.<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>4 5 2 3 3 4<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 零基础学Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sixth_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tString s = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ts = in.nextLine();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (s.charAt(<span class=\"number\">0</span>) != <span class=\"string\">'.'</span>)<span class=\"comment\">//处理输入为一个\".\"时的情况</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length();)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; s.length(); j++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\ti = j;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (s.charAt(j) == <span class=\"string\">' '</span>)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.charAt(j) == <span class=\"string\">'.'</span>)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (s.charAt(i) == <span class=\"string\">'.'</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(ans);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(ans + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (s.charAt(i) == <span class=\"string\">' '</span>)<span class=\"comment\">// 行中可能出现连续的空格</span></span><br><span class=\"line\">\t\t\t\t\ti++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"坑点\"><a href=\"#坑点\" class=\"headerlink\" title=\"坑点:\"></a>坑点:</h2><p>一是行中可能出现连续的空格；<br>二是要处理好输入为”.”时的情况。</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目内容：\"><a href=\"#题目内容：\" class=\"headerlink\" title=\"题目内容：\"></a>题目内容：</h2><p>你的程序要读入一行文本，其中以空格分隔为若干个单词，以‘.’结束。你要输出这行文本中每个单词的长度。这里的单词与语言无关，可以包括各种符号，比如“it’s”算一个单词，长度为4。注意，行中可能出现连续的空格。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式:\"></a>输入格式:</h2><p>输入在一行中给出一行文本，以‘.’结束，结尾的句号不能计算在最后一个单词的长度内。</p>\n<h2 id=\"输出格式：\"><a href=\"#输出格式：\" class=\"headerlink\" title=\"输出格式：\"></a>输出格式：</h2><p>在一行中输出这行文本对应的单词的长度，每个长度之间以空格隔开，行末没有最后的空格。</p>\n<h2 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h2><div class=\"note default no-icon\"><p>It’s great to see you here.<br></p></div>\n\n<h2 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h2><div class=\"note default no-icon\"><p>4 5 2 3 3 4<br></p></div>\n\n<p><strong>时间限制：500ms内存限制：32000kb</strong></p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 零基础学Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sixth_Week</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">\t\tScanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tString s = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\ts = in.nextLine();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (s.charAt(<span class=\"number\">0</span>) != <span class=\"string\">'.'</span>)<span class=\"comment\">//处理输入为一个\".\"时的情况</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length();)</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &lt; s.length(); j++)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\ti = j;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> (s.charAt(j) == <span class=\"string\">' '</span>)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.charAt(j) == <span class=\"string\">'.'</span>)</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t\t\tans++;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (s.charAt(i) == <span class=\"string\">'.'</span>)</span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(ans);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\t\tSystem.out.print(ans + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">while</span> (s.charAt(i) == <span class=\"string\">' '</span>)<span class=\"comment\">// 行中可能出现连续的空格</span></span><br><span class=\"line\">\t\t\t\t\ti++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tin.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"坑点\"><a href=\"#坑点\" class=\"headerlink\" title=\"坑点:\"></a>坑点:</h2><p>一是行中可能出现连续的空格；<br>二是要处理好输入为”.”时的情况。</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"第六周编程题_单词长度","path":"26108.html","eyeCatchImage":null,"excerpt":null,"date":"2017-10-16T10:57:39.000Z","pv":0,"totalPV":0,"categories":"零基础学Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"第四周编程题_实现一个表达MP3的媒体类型","abbrlink":46392,"date":"2017-08-22T16:22:19.000Z","_content":"## 题目：\n本周我们介绍了以继承方式实现的媒体资料库，在课程代码实现的基础上，请实现一个表达MP3的媒体类型，能和CD、DVD一样存放进这个Database。请提交这个MP3类的代码。如果你认为为了能存放MP3，需要修改Item和Database，也请一并提交Item和Database的代码。\n## 代码：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\nimport java.util.ArrayList;\n\nclass Item\n{\n\tprivate String title;\n\tprivate int playTime;\n\tprivate boolean gotIt = false;\n\tprivate String comment;\n\n\tpublic Item(String title, int playTime, boolean gotIt, String comment)\n\t{\n\t\tthis.title = title;\n\t\tthis.playTime = playTime;\n\t\tthis.gotIt = gotIt;\n\t\tthis.comment = comment;\n\t}\n\t\n\tpublic void print()\n\t{\n\t\tSystem.out.print(\"title:\"+title+\";\"+\"playTime:\"+playTime+\";\"+\"gotIt:\"+gotIt+\";\"+\"comment:\"+comment+\";\");\n\t}\n}\n\nclass Mp3 extends Item\n{\n\tprivate String artist;\n\tprivate int numofTracks;\n\t\n\tpublic Mp3(String title, int playTime, boolean gotIt, String comment,String artist,int numofTracks)\n\t{\n\t\tsuper(title, playTime, gotIt, comment);\n\t\tthis.artist=artist;\n\t\tthis.numofTracks=numofTracks;\n\t}\n\n\t@Override\n\tpublic void print()\n\t{\n\t\tSystem.out.print(\"Mp3:{\");\n\t\tsuper.print();\n\t\tSystem.out.println(\"artist:\"+artist+\";\"+\"numofTracks:\"+numofTracks+\"}\");\n\t}\n\t\n}\n\npublic class Database\n{\n\tprivate ArrayList<Item> list=new ArrayList<Item>();\n\t\n\tpublic void add(Item item)\n\t{\n\t\tlist.add(item);\n\t}\n\t\n\tpublic void list()\n\t{\n\t\tfor(Item item:list)\n\t\t\titem.print();\n\t}\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tDatabase db=new Database();\n\t\tdb.add(new Mp3(\"A\", 60, true, \"good\", \"John\", 20));\n\t\tdb.add(new Mp3(\"B\", 80, true, \"vrey good\", \"Tom\", 10));\n\t\tdb.list();\n\t}\n\n}\n```\n## 运行结果：\n![](/images/20170823002504047.jpg)","source":"_posts/第四周编程题_实现一个表达MP3的媒体类型.md","raw":"---\ntitle: 第四周编程题_实现一个表达MP3的媒体类型\ncategories: 面向对象程序设计_Java语言_翁恺\ntags:\n  - Java\nabbrlink: 46392\ndate: 2017-08-23 00:22:19\n---\n## 题目：\n本周我们介绍了以继承方式实现的媒体资料库，在课程代码实现的基础上，请实现一个表达MP3的媒体类型，能和CD、DVD一样存放进这个Database。请提交这个MP3类的代码。如果你认为为了能存放MP3，需要修改Item和Database，也请一并提交Item和Database的代码。\n## 代码：\n```Java\npackage 面向对象程序设计_Java语言_翁恺;\n\nimport java.util.ArrayList;\n\nclass Item\n{\n\tprivate String title;\n\tprivate int playTime;\n\tprivate boolean gotIt = false;\n\tprivate String comment;\n\n\tpublic Item(String title, int playTime, boolean gotIt, String comment)\n\t{\n\t\tthis.title = title;\n\t\tthis.playTime = playTime;\n\t\tthis.gotIt = gotIt;\n\t\tthis.comment = comment;\n\t}\n\t\n\tpublic void print()\n\t{\n\t\tSystem.out.print(\"title:\"+title+\";\"+\"playTime:\"+playTime+\";\"+\"gotIt:\"+gotIt+\";\"+\"comment:\"+comment+\";\");\n\t}\n}\n\nclass Mp3 extends Item\n{\n\tprivate String artist;\n\tprivate int numofTracks;\n\t\n\tpublic Mp3(String title, int playTime, boolean gotIt, String comment,String artist,int numofTracks)\n\t{\n\t\tsuper(title, playTime, gotIt, comment);\n\t\tthis.artist=artist;\n\t\tthis.numofTracks=numofTracks;\n\t}\n\n\t@Override\n\tpublic void print()\n\t{\n\t\tSystem.out.print(\"Mp3:{\");\n\t\tsuper.print();\n\t\tSystem.out.println(\"artist:\"+artist+\";\"+\"numofTracks:\"+numofTracks+\"}\");\n\t}\n\t\n}\n\npublic class Database\n{\n\tprivate ArrayList<Item> list=new ArrayList<Item>();\n\t\n\tpublic void add(Item item)\n\t{\n\t\tlist.add(item);\n\t}\n\t\n\tpublic void list()\n\t{\n\t\tfor(Item item:list)\n\t\t\titem.print();\n\t}\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tDatabase db=new Database();\n\t\tdb.add(new Mp3(\"A\", 60, true, \"good\", \"John\", 20));\n\t\tdb.add(new Mp3(\"B\", 80, true, \"vrey good\", \"Tom\", 10));\n\t\tdb.list();\n\t}\n\n}\n```\n## 运行结果：\n![](/images/20170823002504047.jpg)","slug":"第四周编程题_实现一个表达MP3的媒体类型","published":1,"updated":"2019-03-28T10:45:16.820Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bsw90001ykchia8pv6i5l","content":"<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><p>本周我们介绍了以继承方式实现的媒体资料库，在课程代码实现的基础上，请实现一个表达MP3的媒体类型，能和CD、DVD一样存放进这个Database。请提交这个MP3类的代码。如果你认为为了能存放MP3，需要修改Item和Database，也请一并提交Item和Database的代码。</p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Item</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String title;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> playTime;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> gotIt = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String comment;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Item</span><span class=\"params\">(String title, <span class=\"keyword\">int</span> playTime, <span class=\"keyword\">boolean</span> gotIt, String comment)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.title = title;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.playTime = playTime;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.gotIt = gotIt;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.comment = comment;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"title:\"</span>+title+<span class=\"string\">\";\"</span>+<span class=\"string\">\"playTime:\"</span>+playTime+<span class=\"string\">\";\"</span>+<span class=\"string\">\"gotIt:\"</span>+gotIt+<span class=\"string\">\";\"</span>+<span class=\"string\">\"comment:\"</span>+comment+<span class=\"string\">\";\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mp3</span> <span class=\"keyword\">extends</span> <span class=\"title\">Item</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String artist;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> numofTracks;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Mp3</span><span class=\"params\">(String title, <span class=\"keyword\">int</span> playTime, <span class=\"keyword\">boolean</span> gotIt, String comment,String artist,<span class=\"keyword\">int</span> numofTracks)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(title, playTime, gotIt, comment);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.artist=artist;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.numofTracks=numofTracks;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"Mp3:&#123;\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.print();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"artist:\"</span>+artist+<span class=\"string\">\";\"</span>+<span class=\"string\">\"numofTracks:\"</span>+numofTracks+<span class=\"string\">\"&#125;\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Database</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ArrayList&lt;Item&gt; list=<span class=\"keyword\">new</span> ArrayList&lt;Item&gt;();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Item item)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tlist.add(item);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">list</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(Item item:list)</span><br><span class=\"line\">\t\t\titem.print();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tDatabase db=<span class=\"keyword\">new</span> Database();</span><br><span class=\"line\">\t\tdb.add(<span class=\"keyword\">new</span> Mp3(<span class=\"string\">\"A\"</span>, <span class=\"number\">60</span>, <span class=\"keyword\">true</span>, <span class=\"string\">\"good\"</span>, <span class=\"string\">\"John\"</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\t\tdb.add(<span class=\"keyword\">new</span> Mp3(<span class=\"string\">\"B\"</span>, <span class=\"number\">80</span>, <span class=\"keyword\">true</span>, <span class=\"string\">\"vrey good\"</span>, <span class=\"string\">\"Tom\"</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\t\tdb.list();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"运行结果：\"><a href=\"#运行结果：\" class=\"headerlink\" title=\"运行结果：\"></a>运行结果：</h2><p><img src=\"/images/20170823002504047.jpg\" alt></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h2><p>本周我们介绍了以继承方式实现的媒体资料库，在课程代码实现的基础上，请实现一个表达MP3的媒体类型，能和CD、DVD一样存放进这个Database。请提交这个MP3类的代码。如果你认为为了能存放MP3，需要修改Item和Database，也请一并提交Item和Database的代码。</p>\n<h2 id=\"代码：\"><a href=\"#代码：\" class=\"headerlink\" title=\"代码：\"></a>代码：</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> 面向对象程序设计_Java语言_翁恺;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Item</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String title;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> playTime;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> gotIt = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String comment;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Item</span><span class=\"params\">(String title, <span class=\"keyword\">int</span> playTime, <span class=\"keyword\">boolean</span> gotIt, String comment)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.title = title;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.playTime = playTime;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.gotIt = gotIt;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.comment = comment;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"title:\"</span>+title+<span class=\"string\">\";\"</span>+<span class=\"string\">\"playTime:\"</span>+playTime+<span class=\"string\">\";\"</span>+<span class=\"string\">\"gotIt:\"</span>+gotIt+<span class=\"string\">\";\"</span>+<span class=\"string\">\"comment:\"</span>+comment+<span class=\"string\">\";\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mp3</span> <span class=\"keyword\">extends</span> <span class=\"title\">Item</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String artist;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> numofTracks;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Mp3</span><span class=\"params\">(String title, <span class=\"keyword\">int</span> playTime, <span class=\"keyword\">boolean</span> gotIt, String comment,String artist,<span class=\"keyword\">int</span> numofTracks)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(title, playTime, gotIt, comment);</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.artist=artist;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.numofTracks=numofTracks;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">\"Mp3:&#123;\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>.print();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"artist:\"</span>+artist+<span class=\"string\">\";\"</span>+<span class=\"string\">\"numofTracks:\"</span>+numofTracks+<span class=\"string\">\"&#125;\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Database</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ArrayList&lt;Item&gt; list=<span class=\"keyword\">new</span> ArrayList&lt;Item&gt;();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Item item)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tlist.add(item);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">list</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(Item item:list)</span><br><span class=\"line\">\t\t\titem.print();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tDatabase db=<span class=\"keyword\">new</span> Database();</span><br><span class=\"line\">\t\tdb.add(<span class=\"keyword\">new</span> Mp3(<span class=\"string\">\"A\"</span>, <span class=\"number\">60</span>, <span class=\"keyword\">true</span>, <span class=\"string\">\"good\"</span>, <span class=\"string\">\"John\"</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\t\tdb.add(<span class=\"keyword\">new</span> Mp3(<span class=\"string\">\"B\"</span>, <span class=\"number\">80</span>, <span class=\"keyword\">true</span>, <span class=\"string\">\"vrey good\"</span>, <span class=\"string\">\"Tom\"</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\t\tdb.list();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"运行结果：\"><a href=\"#运行结果：\" class=\"headerlink\" title=\"运行结果：\"></a>运行结果：</h2><p><img src=\"/images/20170823002504047.jpg\" alt></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/20170823002504047.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"第四周编程题_实现一个表达MP3的媒体类型","path":"46392.html","eyeCatchImage":"/images/20170823002504047.jpg","excerpt":null,"date":"2017-08-22T16:22:19.000Z","pv":0,"totalPV":0,"categories":"面向对象程序设计_Java语言_翁恺","tags":["Java"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"银行家算法(使用DFS找出所有安全序列)","abbrlink":647653334,"date":"2018-06-02T04:41:13.000Z","_content":"## 背景\n\n### 银行家算法\n银行家算法是一种最有代表性的避免死锁的算法。在避免死锁方法中允许进程动态地申请资源，但系统在进行资源分配之前，应先计算此次分配资源的安全性，若分配不会导致系统进入不安全状态，则分配，否则等待。为实现银行家算法，系统必须设置若干数据结构。\n\n### 安全状态\n* 系统能按某种进程推进顺序{P<sub>1</sub>，…，P<sub>n</sub>}为每个进程P<sub>i</sub>分配其所需资源，直至满足每个进程对资源的最大需求，使每个进程都可顺利地完成。\n* 此时称{P<sub>1</sub>，…，P<sub>n</sub>}为安全序列。如果系统无法找到这样一个安全序列，则称系统处于不安全状态。\n* 并非所有不安全状态都必然会转为死锁状态，但当系统进入不安全状态后，就有可能进入死锁状态。反之，只要系统处于安全状态，系统便不会进入死锁状态。\n* 因此，避免死锁的实质在于，系统在进行资源分配时，应用系统不进入不安全状态。\n\n## 数据结构\n1. 可利用资源向量Available\n是个含有m个元素的数组，其中的每一个元素代表一类可利用的资源数目。如果Available[j]=K，则表示系统中现有Rj类资源K个。\n2. 最大需求矩阵Max\n这是一个n×m的矩阵，它定义了系统中n个进程中的每一个进程对m类资源的最大需求。如果Max[i,j]=K，则表示进程i需要R<sub>j</sub>类资源的最大数目为K。\n3. 分配矩阵Allocation\n这也是一个n×m的矩阵，它定义了系统中每一类资源当前已分配给每一进程的资源数。如果Allocation[i,j]=K，则表示进程i当前已分得R<sub>j</sub>类资源的数目为K。\n4. 需求矩阵Need。\n这也是一个n×m的矩阵，用以表示每一个进程尚需的各类资源数。如果Need[i,j]=K，则表示进程i还需要R<sub>j</sub>类资源K个，方能完成其任务。\nNeed[i,j]=Max[i,j]-Allocation[i,j]\n\n## 银行家算法\n设Request<sub>i</sub>是进程P<sub>i</sub>的请求向量，如果Request<sub>i</sub>[j]=K,表示进程P<sub>i</sub>需要K个R<sub>j</sub>类型。当P<sub>i</sub>发出资源请求后，系统按下输步骤进行检查:\n1. 如果Request<sub>i</sub>[j] <= Need[i][j],便转向步骤2；否则认为出错，因为它所需要的资源数已超过它所宣布的最大值\n2. 如果Request<sub>i</sub>[j] <= Available[i][j]，便转向步骤3；否则表示尚无足够资源，P<sub>i</sub>需等待  \n3. 系统试探着把资源分配给进程P<sub>i</sub>,并修改下面数据结构中的数值:\n\t* Available[j] -= Request<sub>i</sub>[j]\n\t* Allocation[i][j] += Request<sub>i</sub>[j]\n\t* Need[i][j] -= Request<sub>i</sub>[j]\n4. 系统执行安全性算法，检查此次资源分配后系统是否处于安全状态.若安全，正式将资源分配给进程P<sub>i</sub>，以完成本次分配；否则，讲将本次的试探分配作废,恢复原来的资源分配状态，让进程P<sub>i</sub>等待\n\n```C++\nbool check_bank(int i, int Request[]) //按照银行家算法检查资源请求\n{\n    for(int j = 0; j < m; j++)\n    {\n        if(Request[j] > Need[i][j] || Request[j] > Available[j])\n            return false;\n    }\n    update(i, Request);\n    return true;\n}\n```\n## 尝试分配资源/恢复原来的资源分配状态\n\n### 尝试分配资源\n```C++\nvoid update(int i, int Request[]) //更新数据\n{\n    for(int j = 0; j < m; j++)\n    {\n        Available[j] -= Request[j];\n        Allocation[i][j] += Request[j];\n        Need[i][j] -= Request[j];\n    }\n}\n```\n### 恢复原来的资源分配状态\n```C++\nvoid recovery(int i, int Request[])//还原数据\n{\n    for(int j = 0; j < m; j++)\n    {\n        Available[j] += Request[j];\n        Allocation[i][j] -= Request[j];\n        Need[i][j] += Request[j];\n    }\n}\n```\n\n## 安全性算法\n1. 设置两个工作向量:\n① 工作向量WORK，它表示系统可提供给进程继续运行所需的各类资源数目，它含有m个元素，在执行安全算法开始时，WORK:=Available \n② Finish:它表示系统是否有足够的资源分配给进程，使之运行完成。初始Finish[i]: = false；当有足够资源分配给进程时，再令Finish[i]：=true。 \n2. 从进程集合中找出一个满足下列条件的进程： \n① Finish[i] = false\n② Need[i][j] <= work[j] \n若找到，执行3,否则，执行步骤4\n3. 当进程p<sub>i</sub>获得资源后，可顺利执行，直至完成，并释放出分配给它的资源，故应执行:\n* Finish[i] = true \n* WORK[j] += Allocation[i][j]\n* go to step 2\n4. 如果所有进程的Finish[i] = true，则表示系统处于安全性状态，否则，系统处于不安全状态。\n\n```C++\nint check_safe(int i, int Request[]) //检查系统安全性\n{\n    int Work[MaxNumber];\n    bool Finished[MaxNumber];\n    memset(Finished, false, sizeof(Finished));\n    for(int i = 0; i < m; i++)\n        Work[i] = Available[i];\n    sta = UnSafe;\n    Dfs(0, Work, Finished);\n    if(sta==UnSafe)\n        recovery(i, Request);//还原数据\n    return sta;\n}\n```\n复杂度分析:安全性检查算法，有两种for循环，最内层for循环每次继续向下一层搜索，故时间复杂度为O((n * m)^ n)\n\n## 利用Dfs找出所有安全序列\n```C++\nvoid Dfs(int i, int Work[], bool Finished[])//深度优先搜索,找到所有的安全序列\n{\n    if(i == n)\n    {\n        for(int j = 0; j < n; j++)\n        {\n            if(Finished[j] == false)\n            {\n                return ;\n            }\n        }\n        sta = Safe;\n        SafeOrder.push_back(temp);\n        //temp.clear();\n        return;\n    }\n    for(int j = 0; j < n; j++)\n    {\n        if(Finished[j] == false)\n        {\n            bool t = true;\n            for(int k = 0; k < m; k++)\n            {\n                if(Need[j][k] > Work[k])\n                {\n                    t = false;\n                    break;\n                }\n            }\n            if(t == true)\n            {\n                for(int k = 0; k < m; k++)\n                    Work[k] += Allocation[j][k];\n                Finished[j] = true;\n                temp.push_back(j);\n                Dfs(i + 1, Work, Finished);\n                temp.pop_back();       //回溯,将第i个进程所做的改变恢复\n                for(int k = 0; k < m; k++)\n                {\n                    Work[k] -= Allocation[j][k];\n                }\n                Finished[j] = false;\n            }\n        }\n    }\n    return ;\n}\n```\n\n## 测试数据\n<div class=\"note default no-icon\"><p>3\nA 3\nB 3\nC 2\n5\n7 5 3\n3 2 2\n9 0 2\n2 2 2\n4 3 3\n0 1 0\n2 0 0\n3 0 2\n2 1 1\n0 0 2\n2\n1\n1\n0\n2\n</p></div>\n\n## 实验截图\n![合理且安全的资源请求](/images/Banker's Algorithm1.jpg)\n<center>合理且安全的资源请求</center>\n![不合理的资源请求](/images/Banker's Algorithm2.jpg)\n<center>不合理的资源请求</center>\n![会导致系统处于不安全状态的资源请求](/images/Banker's Algorithm3.jpg)\n<center>会导致系统处于不安全状态的资源请求</center>\n\n## 完整代码\n```C++\n/*\nProblem:银行家算法\nAuthor:QiZhao\nData:2018-05-31\nDescription:预防进程死锁的银行家算法\nCopyright  2018 QiZhao. All rights reserved.\n*/\n#include<iostream>\n#include<vector>//提供vector\n#include<cstring>//提供memset函数\n#include<cstdio>//提供fflush函数\n#include<cstdlib>//提供exit函数\n\nusing namespace std;\n\nenum status {Safe, UnSafe};//安全性检查的结果\nconst int MaxNumber = 100;//进程数量的最大值\n\nint Available[MaxNumber];//每种资源的可用数量\nint Max[MaxNumber][MaxNumber];//n*m的矩阵,表示每个进程所需的最大资源量\nstring name[MaxNumber];//n个进程的进程名\nint Allocation[MaxNumber][MaxNumber];//n*m的矩阵,表示每个进程每种资源已经分配的量\nint Need[MaxNumber][MaxNumber];//n*m的矩阵,表示每个进程还需的每种资源量\nint Request[MaxNumber];//所请求的每种资源的资源量\nvector<vector<int> > SafeOrder;//存储所有的安全序列\nvector<int> temp;//存储一个临时安全序列\nint n, m;//进程数，资源种类数\n\nstatus sta = UnSafe;//安全性检查的结果\n\n//函数声明\nvoid input();\nvoid init();\nvoid show();\nvoid update(int i, int Request[]);\nvoid recovery(int i, int Request[]);\nbool check_bank(int i, int Request[]);\nint check_safe(int i, int Request[]);\nvoid request();\nvoid choose();\nvoid Dfs(int i,int Wordk[],bool Finished[]);\nvoid menu();\n\n//函数实现\nvoid input()//读入数据\n{\n    cout << \"请输入系统资源的种类数:\";\n    cin >> m;\n    cout << \"请依次输入\" << m << \"种系统资源的名称与数量:\" << endl;\n    for(int i = 0; i < m; i++)\n        cin >> name[i] >> Available[i];\n    cout << \"请输入进程的数量:\";\n    cin >> n;\n    cout << \"请输入各个进程的最大需求量<\" << n << \"*\" << m << \"矩阵>[MAX]\" << endl;\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n            cin >> Max[i][j];\n    }\n    cout << \"请输入各进程已申请的资量<\" << n << \"*\" << m << \"矩阵>[Allocation]\" << endl;\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n            cin >> Allocation[i][j];\n    }\n}\n\nvoid init()//计算Need\n{\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n        {\n            Need[i][j] = Max[i][j] - Allocation[i][j];\n        }\n    }\n}\n\nvoid show()//显示资源使用情况\n{\n    cout << \" Max\\tAllocation\\tNeed\\tAvaliable\" << endl;\n    for(int j = 0; j < 4; j++)\n    {\n        if(j==3)\n            cout<<\" \";\n        for(int i = 0; i < m; i++)\n        {\n            cout << name[i] << \" \";\n            if(j == 1)\n                cout << \"  \";\n        }\n        cout << \"\\t\";\n    }\n    cout<<endl;\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n        {\n            cout << Max[i][j] << \" \";\n        }\n        cout << \"\\t\";\n        for(int j = 0; j < m; j++)\n        {\n            cout << Allocation[i][j] << \"   \";\n        }\n        cout << \"\\t\";\n        for(int j = 0; j < m; j++)\n        {\n            cout << Need[i][j] << \" \";\n        }\n        cout << \"\\t \";\n        for(int j = 0; j < m; j++)\n        {\n            cout << Available[j] << \" \";\n        }\n        cout << endl;\n    }\n}\n\nvoid update(int i, int Request[]) //更新数据\n{\n    for(int j = 0; j < m; j++)\n    {\n        Available[j] -= Request[j];\n        Allocation[i][j] += Request[j];\n        Need[i][j] -= Request[j];\n    }\n}\n\nvoid recovery(int i, int Request[])//还原数据\n{\n    for(int j = 0; j < m; j++)\n    {\n        Available[j] += Request[j];\n        Allocation[i][j] -= Request[j];\n        Need[i][j] += Request[j];\n    }\n}\n\nbool check_bank(int i, int Request[]) //按照银行家算法检查资源请求\n{\n    for(int j = 0; j < m; j++)\n    {\n        if(Request[j] > Need[i][j] || Request[j] > Available[j])\n            return false;\n    }\n    update(i, Request);\n    return true;\n}\n\nvoid Dfs(int i, int Work[], bool Finished[])//深度优先搜索,找到所有的安全序列\n{\n    if(i == n)\n    {\n        for(int j = 0; j < n; j++)\n        {\n            if(Finished[j] == false)\n            {\n                return ;\n            }\n        }\n        sta = Safe;\n        SafeOrder.push_back(temp);\n        //temp.clear();\n        return;\n    }\n    for(int j = 0; j < n; j++)\n    {\n        if(Finished[j] == false)\n        {\n            bool t = true;\n            for(int k = 0; k < m; k++)\n            {\n                if(Need[j][k] > Work[k])\n                {\n                    t = false;\n                    break;\n                }\n            }\n            if(t == true)\n            {\n                for(int k = 0; k < m; k++)\n                    Work[k] += Allocation[j][k];\n                Finished[j] = true;\n                temp.push_back(j);\n                Dfs(i + 1, Work, Finished);\n                temp.pop_back();       //回溯,将第i个进程所做的改变恢复\n                for(int k = 0; k < m; k++)\n                {\n                    Work[k] -= Allocation[j][k];\n                }\n                Finished[j] = false;\n            }\n        }\n    }\n    return ;\n}\n\nint check_safe(int i, int Request[]) //检查系统安全性\n{\n    int Work[MaxNumber];\n    bool Finished[MaxNumber];\n    memset(Finished, false, sizeof(Finished));\n    for(int i = 0; i < m; i++)\n        Work[i] = Available[i];\n    sta = UnSafe;\n    Dfs(0, Work, Finished);\n    if(sta==UnSafe)\n        recovery(i, Request);//还原数据\n    return sta;\n}\n\nvoid request()//某个进程申请资源\n{\n    int i;\n    memset(Request, 0, sizeof(Request));\n    cout << \"请输入要请求分配资源的进程号<0~\" << n << \">:\";\n    cin >> i;\n    cout << \"请输入进程\" << i << \"申请的资源数目\" << endl;\n    for(int j = 0; j < m; j++)\n    {\n        cout << name[j] << \":\";\n        cin >> Request[j];\n    }\n    SafeOrder.clear();\n    if(check_bank(i, Request) == true)\n    {\n        if(check_safe(i, Request) == Safe)\n        {\n            cout << \"系统是安全的!\" << endl;\n            cout << \"安全序列有:\"<<SafeOrder.size()<<\"种\"<<endl;\n            for(int j = 0; j < SafeOrder.size(); j++)//输出所有的安全序列\n            {\n                for(int k = 0; k < SafeOrder[j].size(); k++)\n                {\n                    cout << \"P\" << SafeOrder[j][k];\n                    if(k != SafeOrder[j].size() - 1)\n                        cout << \"->\";\n                }\n                if(SafeOrder[j].size()!=0)\n                cout << endl;\n            }\n            return;\n        }\n        else\n        {\n            cout << \"系统不安全,恢复原来状态!\" << endl;\n            return;\n        }\n    }\n    else\n        cout << \"资源请求不合理!\" << endl;\n    return;\n}\nvoid choose()//选择菜单\n{\n    char i = -1;\n    while(true)\n    {\n        fflush(stdin);\n        cout << \"请选择你要进行的操作\" << endl;\n        cin >> i;\n        switch(i)\n        {\n        case '0':\n            exit(0);\n            break;\n        case '2':\n            request();\n            break;\n        case '1':\n            show();\n            break;\n        default:\n            cout << \"输入有误,请重新输入\" << endl;\n        }\n        menu();\n    }\n}\n\nvoid menu()//显示菜单\n{\n    cout << \"****************银行家算法演示***************\" << endl;\n    cout << \"\\t\\t1:显示各个矩阵的内容\" << endl;\n    cout << \"\\t\\t2:进程请求系统分配资源\" << endl;\n    cout << \"\\t\\t0:退出程序\" << endl;\n    cout << \"*********************************************\" << endl;\n}\n\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    input();\n    init();\n    menu();\n    choose();\n    return 0;\n}\n```\n\n## 参考资料\n[银行家算法实现——找出所有安全序列](https://blog.csdn.net/qq_27008079/article/details/53946253)\n[百度百科_银行家算法](https://baike.baidu.com/item/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95/1679781?fr=aladdin)\n[《计算机操作系统（第四版）》](https://baike.baidu.com/item/计算机操作系统（第四版）/19925494)，汤小丹，西安电子科技大学出版社，2014.5","source":"_posts/银行家算法(使用DFS找出所有安全序列).md","raw":"---\ntitle: 银行家算法(使用DFS找出所有安全序列)\ncategories: 操作系统\ntags:\n  - DFS\n  - 操作系统\nabbrlink: 647653334\ndate: 2018-06-02 12:41:13\n---\n## 背景\n\n### 银行家算法\n银行家算法是一种最有代表性的避免死锁的算法。在避免死锁方法中允许进程动态地申请资源，但系统在进行资源分配之前，应先计算此次分配资源的安全性，若分配不会导致系统进入不安全状态，则分配，否则等待。为实现银行家算法，系统必须设置若干数据结构。\n\n### 安全状态\n* 系统能按某种进程推进顺序{P<sub>1</sub>，…，P<sub>n</sub>}为每个进程P<sub>i</sub>分配其所需资源，直至满足每个进程对资源的最大需求，使每个进程都可顺利地完成。\n* 此时称{P<sub>1</sub>，…，P<sub>n</sub>}为安全序列。如果系统无法找到这样一个安全序列，则称系统处于不安全状态。\n* 并非所有不安全状态都必然会转为死锁状态，但当系统进入不安全状态后，就有可能进入死锁状态。反之，只要系统处于安全状态，系统便不会进入死锁状态。\n* 因此，避免死锁的实质在于，系统在进行资源分配时，应用系统不进入不安全状态。\n\n## 数据结构\n1. 可利用资源向量Available\n是个含有m个元素的数组，其中的每一个元素代表一类可利用的资源数目。如果Available[j]=K，则表示系统中现有Rj类资源K个。\n2. 最大需求矩阵Max\n这是一个n×m的矩阵，它定义了系统中n个进程中的每一个进程对m类资源的最大需求。如果Max[i,j]=K，则表示进程i需要R<sub>j</sub>类资源的最大数目为K。\n3. 分配矩阵Allocation\n这也是一个n×m的矩阵，它定义了系统中每一类资源当前已分配给每一进程的资源数。如果Allocation[i,j]=K，则表示进程i当前已分得R<sub>j</sub>类资源的数目为K。\n4. 需求矩阵Need。\n这也是一个n×m的矩阵，用以表示每一个进程尚需的各类资源数。如果Need[i,j]=K，则表示进程i还需要R<sub>j</sub>类资源K个，方能完成其任务。\nNeed[i,j]=Max[i,j]-Allocation[i,j]\n\n## 银行家算法\n设Request<sub>i</sub>是进程P<sub>i</sub>的请求向量，如果Request<sub>i</sub>[j]=K,表示进程P<sub>i</sub>需要K个R<sub>j</sub>类型。当P<sub>i</sub>发出资源请求后，系统按下输步骤进行检查:\n1. 如果Request<sub>i</sub>[j] <= Need[i][j],便转向步骤2；否则认为出错，因为它所需要的资源数已超过它所宣布的最大值\n2. 如果Request<sub>i</sub>[j] <= Available[i][j]，便转向步骤3；否则表示尚无足够资源，P<sub>i</sub>需等待  \n3. 系统试探着把资源分配给进程P<sub>i</sub>,并修改下面数据结构中的数值:\n\t* Available[j] -= Request<sub>i</sub>[j]\n\t* Allocation[i][j] += Request<sub>i</sub>[j]\n\t* Need[i][j] -= Request<sub>i</sub>[j]\n4. 系统执行安全性算法，检查此次资源分配后系统是否处于安全状态.若安全，正式将资源分配给进程P<sub>i</sub>，以完成本次分配；否则，讲将本次的试探分配作废,恢复原来的资源分配状态，让进程P<sub>i</sub>等待\n\n```C++\nbool check_bank(int i, int Request[]) //按照银行家算法检查资源请求\n{\n    for(int j = 0; j < m; j++)\n    {\n        if(Request[j] > Need[i][j] || Request[j] > Available[j])\n            return false;\n    }\n    update(i, Request);\n    return true;\n}\n```\n## 尝试分配资源/恢复原来的资源分配状态\n\n### 尝试分配资源\n```C++\nvoid update(int i, int Request[]) //更新数据\n{\n    for(int j = 0; j < m; j++)\n    {\n        Available[j] -= Request[j];\n        Allocation[i][j] += Request[j];\n        Need[i][j] -= Request[j];\n    }\n}\n```\n### 恢复原来的资源分配状态\n```C++\nvoid recovery(int i, int Request[])//还原数据\n{\n    for(int j = 0; j < m; j++)\n    {\n        Available[j] += Request[j];\n        Allocation[i][j] -= Request[j];\n        Need[i][j] += Request[j];\n    }\n}\n```\n\n## 安全性算法\n1. 设置两个工作向量:\n① 工作向量WORK，它表示系统可提供给进程继续运行所需的各类资源数目，它含有m个元素，在执行安全算法开始时，WORK:=Available \n② Finish:它表示系统是否有足够的资源分配给进程，使之运行完成。初始Finish[i]: = false；当有足够资源分配给进程时，再令Finish[i]：=true。 \n2. 从进程集合中找出一个满足下列条件的进程： \n① Finish[i] = false\n② Need[i][j] <= work[j] \n若找到，执行3,否则，执行步骤4\n3. 当进程p<sub>i</sub>获得资源后，可顺利执行，直至完成，并释放出分配给它的资源，故应执行:\n* Finish[i] = true \n* WORK[j] += Allocation[i][j]\n* go to step 2\n4. 如果所有进程的Finish[i] = true，则表示系统处于安全性状态，否则，系统处于不安全状态。\n\n```C++\nint check_safe(int i, int Request[]) //检查系统安全性\n{\n    int Work[MaxNumber];\n    bool Finished[MaxNumber];\n    memset(Finished, false, sizeof(Finished));\n    for(int i = 0; i < m; i++)\n        Work[i] = Available[i];\n    sta = UnSafe;\n    Dfs(0, Work, Finished);\n    if(sta==UnSafe)\n        recovery(i, Request);//还原数据\n    return sta;\n}\n```\n复杂度分析:安全性检查算法，有两种for循环，最内层for循环每次继续向下一层搜索，故时间复杂度为O((n * m)^ n)\n\n## 利用Dfs找出所有安全序列\n```C++\nvoid Dfs(int i, int Work[], bool Finished[])//深度优先搜索,找到所有的安全序列\n{\n    if(i == n)\n    {\n        for(int j = 0; j < n; j++)\n        {\n            if(Finished[j] == false)\n            {\n                return ;\n            }\n        }\n        sta = Safe;\n        SafeOrder.push_back(temp);\n        //temp.clear();\n        return;\n    }\n    for(int j = 0; j < n; j++)\n    {\n        if(Finished[j] == false)\n        {\n            bool t = true;\n            for(int k = 0; k < m; k++)\n            {\n                if(Need[j][k] > Work[k])\n                {\n                    t = false;\n                    break;\n                }\n            }\n            if(t == true)\n            {\n                for(int k = 0; k < m; k++)\n                    Work[k] += Allocation[j][k];\n                Finished[j] = true;\n                temp.push_back(j);\n                Dfs(i + 1, Work, Finished);\n                temp.pop_back();       //回溯,将第i个进程所做的改变恢复\n                for(int k = 0; k < m; k++)\n                {\n                    Work[k] -= Allocation[j][k];\n                }\n                Finished[j] = false;\n            }\n        }\n    }\n    return ;\n}\n```\n\n## 测试数据\n<div class=\"note default no-icon\"><p>3\nA 3\nB 3\nC 2\n5\n7 5 3\n3 2 2\n9 0 2\n2 2 2\n4 3 3\n0 1 0\n2 0 0\n3 0 2\n2 1 1\n0 0 2\n2\n1\n1\n0\n2\n</p></div>\n\n## 实验截图\n![合理且安全的资源请求](/images/Banker's Algorithm1.jpg)\n<center>合理且安全的资源请求</center>\n![不合理的资源请求](/images/Banker's Algorithm2.jpg)\n<center>不合理的资源请求</center>\n![会导致系统处于不安全状态的资源请求](/images/Banker's Algorithm3.jpg)\n<center>会导致系统处于不安全状态的资源请求</center>\n\n## 完整代码\n```C++\n/*\nProblem:银行家算法\nAuthor:QiZhao\nData:2018-05-31\nDescription:预防进程死锁的银行家算法\nCopyright  2018 QiZhao. All rights reserved.\n*/\n#include<iostream>\n#include<vector>//提供vector\n#include<cstring>//提供memset函数\n#include<cstdio>//提供fflush函数\n#include<cstdlib>//提供exit函数\n\nusing namespace std;\n\nenum status {Safe, UnSafe};//安全性检查的结果\nconst int MaxNumber = 100;//进程数量的最大值\n\nint Available[MaxNumber];//每种资源的可用数量\nint Max[MaxNumber][MaxNumber];//n*m的矩阵,表示每个进程所需的最大资源量\nstring name[MaxNumber];//n个进程的进程名\nint Allocation[MaxNumber][MaxNumber];//n*m的矩阵,表示每个进程每种资源已经分配的量\nint Need[MaxNumber][MaxNumber];//n*m的矩阵,表示每个进程还需的每种资源量\nint Request[MaxNumber];//所请求的每种资源的资源量\nvector<vector<int> > SafeOrder;//存储所有的安全序列\nvector<int> temp;//存储一个临时安全序列\nint n, m;//进程数，资源种类数\n\nstatus sta = UnSafe;//安全性检查的结果\n\n//函数声明\nvoid input();\nvoid init();\nvoid show();\nvoid update(int i, int Request[]);\nvoid recovery(int i, int Request[]);\nbool check_bank(int i, int Request[]);\nint check_safe(int i, int Request[]);\nvoid request();\nvoid choose();\nvoid Dfs(int i,int Wordk[],bool Finished[]);\nvoid menu();\n\n//函数实现\nvoid input()//读入数据\n{\n    cout << \"请输入系统资源的种类数:\";\n    cin >> m;\n    cout << \"请依次输入\" << m << \"种系统资源的名称与数量:\" << endl;\n    for(int i = 0; i < m; i++)\n        cin >> name[i] >> Available[i];\n    cout << \"请输入进程的数量:\";\n    cin >> n;\n    cout << \"请输入各个进程的最大需求量<\" << n << \"*\" << m << \"矩阵>[MAX]\" << endl;\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n            cin >> Max[i][j];\n    }\n    cout << \"请输入各进程已申请的资量<\" << n << \"*\" << m << \"矩阵>[Allocation]\" << endl;\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n            cin >> Allocation[i][j];\n    }\n}\n\nvoid init()//计算Need\n{\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n        {\n            Need[i][j] = Max[i][j] - Allocation[i][j];\n        }\n    }\n}\n\nvoid show()//显示资源使用情况\n{\n    cout << \" Max\\tAllocation\\tNeed\\tAvaliable\" << endl;\n    for(int j = 0; j < 4; j++)\n    {\n        if(j==3)\n            cout<<\" \";\n        for(int i = 0; i < m; i++)\n        {\n            cout << name[i] << \" \";\n            if(j == 1)\n                cout << \"  \";\n        }\n        cout << \"\\t\";\n    }\n    cout<<endl;\n    for(int i = 0; i < n; i++)\n    {\n        for(int j = 0; j < m; j++)\n        {\n            cout << Max[i][j] << \" \";\n        }\n        cout << \"\\t\";\n        for(int j = 0; j < m; j++)\n        {\n            cout << Allocation[i][j] << \"   \";\n        }\n        cout << \"\\t\";\n        for(int j = 0; j < m; j++)\n        {\n            cout << Need[i][j] << \" \";\n        }\n        cout << \"\\t \";\n        for(int j = 0; j < m; j++)\n        {\n            cout << Available[j] << \" \";\n        }\n        cout << endl;\n    }\n}\n\nvoid update(int i, int Request[]) //更新数据\n{\n    for(int j = 0; j < m; j++)\n    {\n        Available[j] -= Request[j];\n        Allocation[i][j] += Request[j];\n        Need[i][j] -= Request[j];\n    }\n}\n\nvoid recovery(int i, int Request[])//还原数据\n{\n    for(int j = 0; j < m; j++)\n    {\n        Available[j] += Request[j];\n        Allocation[i][j] -= Request[j];\n        Need[i][j] += Request[j];\n    }\n}\n\nbool check_bank(int i, int Request[]) //按照银行家算法检查资源请求\n{\n    for(int j = 0; j < m; j++)\n    {\n        if(Request[j] > Need[i][j] || Request[j] > Available[j])\n            return false;\n    }\n    update(i, Request);\n    return true;\n}\n\nvoid Dfs(int i, int Work[], bool Finished[])//深度优先搜索,找到所有的安全序列\n{\n    if(i == n)\n    {\n        for(int j = 0; j < n; j++)\n        {\n            if(Finished[j] == false)\n            {\n                return ;\n            }\n        }\n        sta = Safe;\n        SafeOrder.push_back(temp);\n        //temp.clear();\n        return;\n    }\n    for(int j = 0; j < n; j++)\n    {\n        if(Finished[j] == false)\n        {\n            bool t = true;\n            for(int k = 0; k < m; k++)\n            {\n                if(Need[j][k] > Work[k])\n                {\n                    t = false;\n                    break;\n                }\n            }\n            if(t == true)\n            {\n                for(int k = 0; k < m; k++)\n                    Work[k] += Allocation[j][k];\n                Finished[j] = true;\n                temp.push_back(j);\n                Dfs(i + 1, Work, Finished);\n                temp.pop_back();       //回溯,将第i个进程所做的改变恢复\n                for(int k = 0; k < m; k++)\n                {\n                    Work[k] -= Allocation[j][k];\n                }\n                Finished[j] = false;\n            }\n        }\n    }\n    return ;\n}\n\nint check_safe(int i, int Request[]) //检查系统安全性\n{\n    int Work[MaxNumber];\n    bool Finished[MaxNumber];\n    memset(Finished, false, sizeof(Finished));\n    for(int i = 0; i < m; i++)\n        Work[i] = Available[i];\n    sta = UnSafe;\n    Dfs(0, Work, Finished);\n    if(sta==UnSafe)\n        recovery(i, Request);//还原数据\n    return sta;\n}\n\nvoid request()//某个进程申请资源\n{\n    int i;\n    memset(Request, 0, sizeof(Request));\n    cout << \"请输入要请求分配资源的进程号<0~\" << n << \">:\";\n    cin >> i;\n    cout << \"请输入进程\" << i << \"申请的资源数目\" << endl;\n    for(int j = 0; j < m; j++)\n    {\n        cout << name[j] << \":\";\n        cin >> Request[j];\n    }\n    SafeOrder.clear();\n    if(check_bank(i, Request) == true)\n    {\n        if(check_safe(i, Request) == Safe)\n        {\n            cout << \"系统是安全的!\" << endl;\n            cout << \"安全序列有:\"<<SafeOrder.size()<<\"种\"<<endl;\n            for(int j = 0; j < SafeOrder.size(); j++)//输出所有的安全序列\n            {\n                for(int k = 0; k < SafeOrder[j].size(); k++)\n                {\n                    cout << \"P\" << SafeOrder[j][k];\n                    if(k != SafeOrder[j].size() - 1)\n                        cout << \"->\";\n                }\n                if(SafeOrder[j].size()!=0)\n                cout << endl;\n            }\n            return;\n        }\n        else\n        {\n            cout << \"系统不安全,恢复原来状态!\" << endl;\n            return;\n        }\n    }\n    else\n        cout << \"资源请求不合理!\" << endl;\n    return;\n}\nvoid choose()//选择菜单\n{\n    char i = -1;\n    while(true)\n    {\n        fflush(stdin);\n        cout << \"请选择你要进行的操作\" << endl;\n        cin >> i;\n        switch(i)\n        {\n        case '0':\n            exit(0);\n            break;\n        case '2':\n            request();\n            break;\n        case '1':\n            show();\n            break;\n        default:\n            cout << \"输入有误,请重新输入\" << endl;\n        }\n        menu();\n    }\n}\n\nvoid menu()//显示菜单\n{\n    cout << \"****************银行家算法演示***************\" << endl;\n    cout << \"\\t\\t1:显示各个矩阵的内容\" << endl;\n    cout << \"\\t\\t2:进程请求系统分配资源\" << endl;\n    cout << \"\\t\\t0:退出程序\" << endl;\n    cout << \"*********************************************\" << endl;\n}\n\nint main()\n{\n    //freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    input();\n    init();\n    menu();\n    choose();\n    return 0;\n}\n```\n\n## 参考资料\n[银行家算法实现——找出所有安全序列](https://blog.csdn.net/qq_27008079/article/details/53946253)\n[百度百科_银行家算法](https://baike.baidu.com/item/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95/1679781?fr=aladdin)\n[《计算机操作系统（第四版）》](https://baike.baidu.com/item/计算机操作系统（第四版）/19925494)，汤小丹，西安电子科技大学出版社，2014.5","slug":"银行家算法(使用DFS找出所有安全序列)","published":1,"updated":"2019-03-28T10:45:16.820Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bswgn0043kchietsdczh0","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><h3 id=\"银行家算法\"><a href=\"#银行家算法\" class=\"headerlink\" title=\"银行家算法\"></a>银行家算法</h3><p>银行家算法是一种最有代表性的避免死锁的算法。在避免死锁方法中允许进程动态地申请资源，但系统在进行资源分配之前，应先计算此次分配资源的安全性，若分配不会导致系统进入不安全状态，则分配，否则等待。为实现银行家算法，系统必须设置若干数据结构。</p>\n<h3 id=\"安全状态\"><a href=\"#安全状态\" class=\"headerlink\" title=\"安全状态\"></a>安全状态</h3><ul>\n<li>系统能按某种进程推进顺序{P<sub>1</sub>，…，P<sub>n</sub>}为每个进程P<sub>i</sub>分配其所需资源，直至满足每个进程对资源的最大需求，使每个进程都可顺利地完成。</li>\n<li>此时称{P<sub>1</sub>，…，P<sub>n</sub>}为安全序列。如果系统无法找到这样一个安全序列，则称系统处于不安全状态。</li>\n<li>并非所有不安全状态都必然会转为死锁状态，但当系统进入不安全状态后，就有可能进入死锁状态。反之，只要系统处于安全状态，系统便不会进入死锁状态。</li>\n<li>因此，避免死锁的实质在于，系统在进行资源分配时，应用系统不进入不安全状态。</li>\n</ul>\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><ol>\n<li>可利用资源向量Available<br>是个含有m个元素的数组，其中的每一个元素代表一类可利用的资源数目。如果Available[j]=K，则表示系统中现有Rj类资源K个。</li>\n<li>最大需求矩阵Max<br>这是一个n×m的矩阵，它定义了系统中n个进程中的每一个进程对m类资源的最大需求。如果Max[i,j]=K，则表示进程i需要R<sub>j</sub>类资源的最大数目为K。</li>\n<li>分配矩阵Allocation<br>这也是一个n×m的矩阵，它定义了系统中每一类资源当前已分配给每一进程的资源数。如果Allocation[i,j]=K，则表示进程i当前已分得R<sub>j</sub>类资源的数目为K。</li>\n<li>需求矩阵Need。<br>这也是一个n×m的矩阵，用以表示每一个进程尚需的各类资源数。如果Need[i,j]=K，则表示进程i还需要R<sub>j</sub>类资源K个，方能完成其任务。<br>Need[i,j]=Max[i,j]-Allocation[i,j]</li>\n</ol>\n<h2 id=\"银行家算法-1\"><a href=\"#银行家算法-1\" class=\"headerlink\" title=\"银行家算法\"></a>银行家算法</h2><p>设Request<sub>i</sub>是进程P<sub>i</sub>的请求向量，如果Request<sub>i</sub>[j]=K,表示进程P<sub>i</sub>需要K个R<sub>j</sub>类型。当P<sub>i</sub>发出资源请求后，系统按下输步骤进行检查:</p>\n<ol>\n<li>如果Request<sub>i</sub>[j] &lt;= Need[i][j],便转向步骤2；否则认为出错，因为它所需要的资源数已超过它所宣布的最大值</li>\n<li>如果Request<sub>i</sub>[j] &lt;= Available[i][j]，便转向步骤3；否则表示尚无足够资源，P<sub>i</sub>需等待  </li>\n<li>系统试探着把资源分配给进程P<sub>i</sub>,并修改下面数据结构中的数值:<ul>\n<li>Available[j] -= Request<sub>i</sub>[j]</li>\n<li>Allocation[i][j] += Request<sub>i</sub>[j]</li>\n<li>Need[i][j] -= Request<sub>i</sub>[j]</li>\n</ul>\n</li>\n<li>系统执行安全性算法，检查此次资源分配后系统是否处于安全状态.若安全，正式将资源分配给进程P<sub>i</sub>，以完成本次分配；否则，讲将本次的试探分配作废,恢复原来的资源分配状态，让进程P<sub>i</sub>等待</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check_bank</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//按照银行家算法检查资源请求</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Request[j] &gt; Need[i][j] || Request[j] &gt; Available[j])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    update(i, Request);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"尝试分配资源-恢复原来的资源分配状态\"><a href=\"#尝试分配资源-恢复原来的资源分配状态\" class=\"headerlink\" title=\"尝试分配资源/恢复原来的资源分配状态\"></a>尝试分配资源/恢复原来的资源分配状态</h2><h3 id=\"尝试分配资源\"><a href=\"#尝试分配资源\" class=\"headerlink\" title=\"尝试分配资源\"></a>尝试分配资源</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//更新数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Available[j] -= Request[j];</span><br><span class=\"line\">        Allocation[i][j] += Request[j];</span><br><span class=\"line\">        Need[i][j] -= Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"恢复原来的资源分配状态\"><a href=\"#恢复原来的资源分配状态\" class=\"headerlink\" title=\"恢复原来的资源分配状态\"></a>恢复原来的资源分配状态</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">recovery</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span><span class=\"comment\">//还原数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Available[j] += Request[j];</span><br><span class=\"line\">        Allocation[i][j] -= Request[j];</span><br><span class=\"line\">        Need[i][j] += Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安全性算法\"><a href=\"#安全性算法\" class=\"headerlink\" title=\"安全性算法\"></a>安全性算法</h2><ol>\n<li>设置两个工作向量:<br>① 工作向量WORK，它表示系统可提供给进程继续运行所需的各类资源数目，它含有m个元素，在执行安全算法开始时，WORK:=Available<br>② Finish:它表示系统是否有足够的资源分配给进程，使之运行完成。初始Finish[i]: = false；当有足够资源分配给进程时，再令Finish[i]：=true。 </li>\n<li>从进程集合中找出一个满足下列条件的进程：<br>① Finish[i] = false<br>② Need[i][j] &lt;= work[j]<br>若找到，执行3,否则，执行步骤4</li>\n<li>当进程p<sub>i</sub>获得资源后，可顺利执行，直至完成，并释放出分配给它的资源，故应执行:</li>\n</ol>\n<ul>\n<li>Finish[i] = true </li>\n<li>WORK[j] += Allocation[i][j]</li>\n<li>go to step 2</li>\n</ul>\n<ol start=\"4\">\n<li>如果所有进程的Finish[i] = true，则表示系统处于安全性状态，否则，系统处于不安全状态。</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">check_safe</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//检查系统安全性</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Work[MaxNumber];</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> Finished[MaxNumber];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Finished, <span class=\"literal\">false</span>, <span class=\"keyword\">sizeof</span>(Finished));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        Work[i] = Available[i];</span><br><span class=\"line\">    sta = UnSafe;</span><br><span class=\"line\">    Dfs(<span class=\"number\">0</span>, Work, Finished);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sta==UnSafe)</span><br><span class=\"line\">        recovery(i, Request);<span class=\"comment\">//还原数据</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sta;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析:安全性检查算法，有两种for循环，最内层for循环每次继续向下一层搜索，故时间复杂度为O((n * m)^ n)</p>\n<h2 id=\"利用Dfs找出所有安全序列\"><a href=\"#利用Dfs找出所有安全序列\" class=\"headerlink\" title=\"利用Dfs找出所有安全序列\"></a>利用Dfs找出所有安全序列</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Work[], <span class=\"keyword\">bool</span> Finished[])</span><span class=\"comment\">//深度优先搜索,找到所有的安全序列</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i == n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Finished[j] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sta = Safe;</span><br><span class=\"line\">        SafeOrder.push_back(temp);</span><br><span class=\"line\">        <span class=\"comment\">//temp.clear();</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Finished[j] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">bool</span> t = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(Need[j][k] &gt; Work[k])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    t = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t == <span class=\"literal\">true</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">                    Work[k] += Allocation[j][k];</span><br><span class=\"line\">                Finished[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                temp.push_back(j);</span><br><span class=\"line\">                Dfs(i + <span class=\"number\">1</span>, Work, Finished);</span><br><span class=\"line\">                temp.pop_back();       <span class=\"comment\">//回溯,将第i个进程所做的改变恢复</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Work[k] -= Allocation[j][k];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Finished[j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"测试数据\"><a href=\"#测试数据\" class=\"headerlink\" title=\"测试数据\"></a>测试数据</h2><div class=\"note default no-icon\"><p>3<br>A 3<br>B 3<br>C 2<br>5<br>7 5 3<br>3 2 2<br>9 0 2<br>2 2 2<br>4 3 3<br>0 1 0<br>2 0 0<br>3 0 2<br>2 1 1<br>0 0 2<br>2<br>1<br>1<br>0<br>2<br></p></div>\n\n<h2 id=\"实验截图\"><a href=\"#实验截图\" class=\"headerlink\" title=\"实验截图\"></a>实验截图</h2><p><img src=\"/images/Banker&#39;s Algorithm1.jpg\" alt=\"合理且安全的资源请求\"></p>\n<center>合理且安全的资源请求</center><br><img src=\"/images/Banker&#39;s Algorithm2.jpg\" alt=\"不合理的资源请求\"><br><center>不合理的资源请求</center><br><img src=\"/images/Banker&#39;s Algorithm3.jpg\" alt=\"会导致系统处于不安全状态的资源请求\"><br><center>会导致系统处于不安全状态的资源请求</center>\n\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Problem:银行家算法</span></span><br><span class=\"line\"><span class=\"comment\">Author:QiZhao</span></span><br><span class=\"line\"><span class=\"comment\">Data:2018-05-31</span></span><br><span class=\"line\"><span class=\"comment\">Description:预防进程死锁的银行家算法</span></span><br><span class=\"line\"><span class=\"comment\">Copyright  2018 QiZhao. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;//提供vector</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;//提供memset函数</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;//提供fflush函数</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdlib&gt;//提供exit函数</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">enum</span> status &#123;Safe, UnSafe&#125;;<span class=\"comment\">//安全性检查的结果</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MaxNumber = <span class=\"number\">100</span>;<span class=\"comment\">//进程数量的最大值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> Available[MaxNumber];<span class=\"comment\">//每种资源的可用数量</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> Max[MaxNumber][MaxNumber];<span class=\"comment\">//n*m的矩阵,表示每个进程所需的最大资源量</span></span><br><span class=\"line\"><span class=\"built_in\">string</span> name[MaxNumber];<span class=\"comment\">//n个进程的进程名</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> Allocation[MaxNumber][MaxNumber];<span class=\"comment\">//n*m的矩阵,表示每个进程每种资源已经分配的量</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> Need[MaxNumber][MaxNumber];<span class=\"comment\">//n*m的矩阵,表示每个进程还需的每种资源量</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> Request[MaxNumber];<span class=\"comment\">//所请求的每种资源的资源量</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; SafeOrder;<span class=\"comment\">//存储所有的安全序列</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; temp;<span class=\"comment\">//存储一个临时安全序列</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n, m;<span class=\"comment\">//进程数，资源种类数</span></span><br><span class=\"line\"></span><br><span class=\"line\">status sta = UnSafe;<span class=\"comment\">//安全性检查的结果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数声明</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">recovery</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check_bank</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">check_safe</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">request</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">choose</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> Wordk[],<span class=\"keyword\">bool</span> Finished[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">menu</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数实现</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span><span class=\"comment\">//读入数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入系统资源的种类数:\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请依次输入\"</span> &lt;&lt; m &lt;&lt; <span class=\"string\">\"种系统资源的名称与数量:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; name[i] &gt;&gt; Available[i];</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入进程的数量:\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入各个进程的最大需求量&lt;\"</span> &lt;&lt; n &lt;&lt; <span class=\"string\">\"*\"</span> &lt;&lt; m &lt;&lt; <span class=\"string\">\"矩阵&gt;[MAX]\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; Max[i][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入各进程已申请的资量&lt;\"</span> &lt;&lt; n &lt;&lt; <span class=\"string\">\"*\"</span> &lt;&lt; m &lt;&lt; <span class=\"string\">\"矩阵&gt;[Allocation]\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; Allocation[i][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span><span class=\"comment\">//计算Need</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Need[i][j] = Max[i][j] - Allocation[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span><span class=\"comment\">//显示资源使用情况</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" Max\\tAllocation\\tNeed\\tAvaliable\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">4</span>; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">3</span>)</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; name[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j == <span class=\"number\">1</span>)</span><br><span class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"  \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; Max[i][j] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; Allocation[i][j] &lt;&lt; <span class=\"string\">\"   \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; Need[i][j] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t \"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; Available[j] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//更新数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Available[j] -= Request[j];</span><br><span class=\"line\">        Allocation[i][j] += Request[j];</span><br><span class=\"line\">        Need[i][j] -= Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">recovery</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span><span class=\"comment\">//还原数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Available[j] += Request[j];</span><br><span class=\"line\">        Allocation[i][j] -= Request[j];</span><br><span class=\"line\">        Need[i][j] += Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check_bank</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//按照银行家算法检查资源请求</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Request[j] &gt; Need[i][j] || Request[j] &gt; Available[j])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    update(i, Request);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Work[], <span class=\"keyword\">bool</span> Finished[])</span><span class=\"comment\">//深度优先搜索,找到所有的安全序列</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i == n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Finished[j] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sta = Safe;</span><br><span class=\"line\">        SafeOrder.push_back(temp);</span><br><span class=\"line\">        <span class=\"comment\">//temp.clear();</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Finished[j] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">bool</span> t = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(Need[j][k] &gt; Work[k])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    t = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t == <span class=\"literal\">true</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">                    Work[k] += Allocation[j][k];</span><br><span class=\"line\">                Finished[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                temp.push_back(j);</span><br><span class=\"line\">                Dfs(i + <span class=\"number\">1</span>, Work, Finished);</span><br><span class=\"line\">                temp.pop_back();       <span class=\"comment\">//回溯,将第i个进程所做的改变恢复</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Work[k] -= Allocation[j][k];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Finished[j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">check_safe</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//检查系统安全性</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Work[MaxNumber];</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> Finished[MaxNumber];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Finished, <span class=\"literal\">false</span>, <span class=\"keyword\">sizeof</span>(Finished));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        Work[i] = Available[i];</span><br><span class=\"line\">    sta = UnSafe;</span><br><span class=\"line\">    Dfs(<span class=\"number\">0</span>, Work, Finished);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sta==UnSafe)</span><br><span class=\"line\">        recovery(i, Request);<span class=\"comment\">//还原数据</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sta;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">request</span><span class=\"params\">()</span><span class=\"comment\">//某个进程申请资源</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Request, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(Request));</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入要请求分配资源的进程号&lt;0~\"</span> &lt;&lt; n &lt;&lt; <span class=\"string\">\"&gt;:\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; i;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入进程\"</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\"申请的资源数目\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; name[j] &lt;&lt; <span class=\"string\">\":\"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SafeOrder.clear();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(check_bank(i, Request) == <span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(check_safe(i, Request) == Safe)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"系统是安全的!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"安全序列有:\"</span>&lt;&lt;SafeOrder.size()&lt;&lt;<span class=\"string\">\"种\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; SafeOrder.size(); j++)<span class=\"comment\">//输出所有的安全序列</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; SafeOrder[j].size(); k++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"P\"</span> &lt;&lt; SafeOrder[j][k];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(k != SafeOrder[j].size() - <span class=\"number\">1</span>)</span><br><span class=\"line\">                        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-&gt;\"</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(SafeOrder[j].size()!=<span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"系统不安全,恢复原来状态!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"资源请求不合理!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">choose</span><span class=\"params\">()</span><span class=\"comment\">//选择菜单</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> i = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fflush(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请选择你要进行的操作\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; i;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'0'</span>:</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'2'</span>:</span><br><span class=\"line\">            request();</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:</span><br><span class=\"line\">            show();</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"输入有误,请重新输入\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">menu</span><span class=\"params\">()</span><span class=\"comment\">//显示菜单</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"****************银行家算法演示***************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\\t1:显示各个矩阵的内容\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\\t2:进程请求系统分配资源\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\\t0:退出程序\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"in.txt\", \"r\", stdin);</span></span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"out.txt\", \"w\", stdout);</span></span><br><span class=\"line\">    input();</span><br><span class=\"line\">    init();</span><br><span class=\"line\">    menu();</span><br><span class=\"line\">    choose();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_27008079/article/details/53946253\" target=\"_blank\" rel=\"noopener\">银行家算法实现——找出所有安全序列</a><br><a href=\"https://baike.baidu.com/item/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95/1679781?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科_银行家算法</a><br><a href=\"https://baike.baidu.com/item/计算机操作系统（第四版）/19925494\" target=\"_blank\" rel=\"noopener\">《计算机操作系统（第四版）》</a>，汤小丹，西安电子科技大学出版社，2014.5</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><h3 id=\"银行家算法\"><a href=\"#银行家算法\" class=\"headerlink\" title=\"银行家算法\"></a>银行家算法</h3><p>银行家算法是一种最有代表性的避免死锁的算法。在避免死锁方法中允许进程动态地申请资源，但系统在进行资源分配之前，应先计算此次分配资源的安全性，若分配不会导致系统进入不安全状态，则分配，否则等待。为实现银行家算法，系统必须设置若干数据结构。</p>\n<h3 id=\"安全状态\"><a href=\"#安全状态\" class=\"headerlink\" title=\"安全状态\"></a>安全状态</h3><ul>\n<li>系统能按某种进程推进顺序{P<sub>1</sub>，…，P<sub>n</sub>}为每个进程P<sub>i</sub>分配其所需资源，直至满足每个进程对资源的最大需求，使每个进程都可顺利地完成。</li>\n<li>此时称{P<sub>1</sub>，…，P<sub>n</sub>}为安全序列。如果系统无法找到这样一个安全序列，则称系统处于不安全状态。</li>\n<li>并非所有不安全状态都必然会转为死锁状态，但当系统进入不安全状态后，就有可能进入死锁状态。反之，只要系统处于安全状态，系统便不会进入死锁状态。</li>\n<li>因此，避免死锁的实质在于，系统在进行资源分配时，应用系统不进入不安全状态。</li>\n</ul>\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><ol>\n<li>可利用资源向量Available<br>是个含有m个元素的数组，其中的每一个元素代表一类可利用的资源数目。如果Available[j]=K，则表示系统中现有Rj类资源K个。</li>\n<li>最大需求矩阵Max<br>这是一个n×m的矩阵，它定义了系统中n个进程中的每一个进程对m类资源的最大需求。如果Max[i,j]=K，则表示进程i需要R<sub>j</sub>类资源的最大数目为K。</li>\n<li>分配矩阵Allocation<br>这也是一个n×m的矩阵，它定义了系统中每一类资源当前已分配给每一进程的资源数。如果Allocation[i,j]=K，则表示进程i当前已分得R<sub>j</sub>类资源的数目为K。</li>\n<li>需求矩阵Need。<br>这也是一个n×m的矩阵，用以表示每一个进程尚需的各类资源数。如果Need[i,j]=K，则表示进程i还需要R<sub>j</sub>类资源K个，方能完成其任务。<br>Need[i,j]=Max[i,j]-Allocation[i,j]</li>\n</ol>\n<h2 id=\"银行家算法-1\"><a href=\"#银行家算法-1\" class=\"headerlink\" title=\"银行家算法\"></a>银行家算法</h2><p>设Request<sub>i</sub>是进程P<sub>i</sub>的请求向量，如果Request<sub>i</sub>[j]=K,表示进程P<sub>i</sub>需要K个R<sub>j</sub>类型。当P<sub>i</sub>发出资源请求后，系统按下输步骤进行检查:</p>\n<ol>\n<li>如果Request<sub>i</sub>[j] &lt;= Need[i][j],便转向步骤2；否则认为出错，因为它所需要的资源数已超过它所宣布的最大值</li>\n<li>如果Request<sub>i</sub>[j] &lt;= Available[i][j]，便转向步骤3；否则表示尚无足够资源，P<sub>i</sub>需等待  </li>\n<li>系统试探着把资源分配给进程P<sub>i</sub>,并修改下面数据结构中的数值:<ul>\n<li>Available[j] -= Request<sub>i</sub>[j]</li>\n<li>Allocation[i][j] += Request<sub>i</sub>[j]</li>\n<li>Need[i][j] -= Request<sub>i</sub>[j]</li>\n</ul>\n</li>\n<li>系统执行安全性算法，检查此次资源分配后系统是否处于安全状态.若安全，正式将资源分配给进程P<sub>i</sub>，以完成本次分配；否则，讲将本次的试探分配作废,恢复原来的资源分配状态，让进程P<sub>i</sub>等待</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check_bank</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//按照银行家算法检查资源请求</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Request[j] &gt; Need[i][j] || Request[j] &gt; Available[j])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    update(i, Request);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"尝试分配资源-恢复原来的资源分配状态\"><a href=\"#尝试分配资源-恢复原来的资源分配状态\" class=\"headerlink\" title=\"尝试分配资源/恢复原来的资源分配状态\"></a>尝试分配资源/恢复原来的资源分配状态</h2><h3 id=\"尝试分配资源\"><a href=\"#尝试分配资源\" class=\"headerlink\" title=\"尝试分配资源\"></a>尝试分配资源</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//更新数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Available[j] -= Request[j];</span><br><span class=\"line\">        Allocation[i][j] += Request[j];</span><br><span class=\"line\">        Need[i][j] -= Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"恢复原来的资源分配状态\"><a href=\"#恢复原来的资源分配状态\" class=\"headerlink\" title=\"恢复原来的资源分配状态\"></a>恢复原来的资源分配状态</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">recovery</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span><span class=\"comment\">//还原数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Available[j] += Request[j];</span><br><span class=\"line\">        Allocation[i][j] -= Request[j];</span><br><span class=\"line\">        Need[i][j] += Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"安全性算法\"><a href=\"#安全性算法\" class=\"headerlink\" title=\"安全性算法\"></a>安全性算法</h2><ol>\n<li>设置两个工作向量:<br>① 工作向量WORK，它表示系统可提供给进程继续运行所需的各类资源数目，它含有m个元素，在执行安全算法开始时，WORK:=Available<br>② Finish:它表示系统是否有足够的资源分配给进程，使之运行完成。初始Finish[i]: = false；当有足够资源分配给进程时，再令Finish[i]：=true。 </li>\n<li>从进程集合中找出一个满足下列条件的进程：<br>① Finish[i] = false<br>② Need[i][j] &lt;= work[j]<br>若找到，执行3,否则，执行步骤4</li>\n<li>当进程p<sub>i</sub>获得资源后，可顺利执行，直至完成，并释放出分配给它的资源，故应执行:</li>\n</ol>\n<ul>\n<li>Finish[i] = true </li>\n<li>WORK[j] += Allocation[i][j]</li>\n<li>go to step 2</li>\n</ul>\n<ol start=\"4\">\n<li>如果所有进程的Finish[i] = true，则表示系统处于安全性状态，否则，系统处于不安全状态。</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">check_safe</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//检查系统安全性</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Work[MaxNumber];</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> Finished[MaxNumber];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Finished, <span class=\"literal\">false</span>, <span class=\"keyword\">sizeof</span>(Finished));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        Work[i] = Available[i];</span><br><span class=\"line\">    sta = UnSafe;</span><br><span class=\"line\">    Dfs(<span class=\"number\">0</span>, Work, Finished);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sta==UnSafe)</span><br><span class=\"line\">        recovery(i, Request);<span class=\"comment\">//还原数据</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sta;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析:安全性检查算法，有两种for循环，最内层for循环每次继续向下一层搜索，故时间复杂度为O((n * m)^ n)</p>\n<h2 id=\"利用Dfs找出所有安全序列\"><a href=\"#利用Dfs找出所有安全序列\" class=\"headerlink\" title=\"利用Dfs找出所有安全序列\"></a>利用Dfs找出所有安全序列</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Work[], <span class=\"keyword\">bool</span> Finished[])</span><span class=\"comment\">//深度优先搜索,找到所有的安全序列</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i == n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Finished[j] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sta = Safe;</span><br><span class=\"line\">        SafeOrder.push_back(temp);</span><br><span class=\"line\">        <span class=\"comment\">//temp.clear();</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Finished[j] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">bool</span> t = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(Need[j][k] &gt; Work[k])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    t = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t == <span class=\"literal\">true</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">                    Work[k] += Allocation[j][k];</span><br><span class=\"line\">                Finished[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                temp.push_back(j);</span><br><span class=\"line\">                Dfs(i + <span class=\"number\">1</span>, Work, Finished);</span><br><span class=\"line\">                temp.pop_back();       <span class=\"comment\">//回溯,将第i个进程所做的改变恢复</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Work[k] -= Allocation[j][k];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Finished[j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"测试数据\"><a href=\"#测试数据\" class=\"headerlink\" title=\"测试数据\"></a>测试数据</h2><div class=\"note default no-icon\"><p>3<br>A 3<br>B 3<br>C 2<br>5<br>7 5 3<br>3 2 2<br>9 0 2<br>2 2 2<br>4 3 3<br>0 1 0<br>2 0 0<br>3 0 2<br>2 1 1<br>0 0 2<br>2<br>1<br>1<br>0<br>2<br></p></div>\n\n<h2 id=\"实验截图\"><a href=\"#实验截图\" class=\"headerlink\" title=\"实验截图\"></a>实验截图</h2><p><img src=\"/images/Banker&#39;s Algorithm1.jpg\" alt=\"合理且安全的资源请求\"></p>\n<center>合理且安全的资源请求</center><br><img src=\"/images/Banker&#39;s Algorithm2.jpg\" alt=\"不合理的资源请求\"><br><center>不合理的资源请求</center><br><img src=\"/images/Banker&#39;s Algorithm3.jpg\" alt=\"会导致系统处于不安全状态的资源请求\"><br><center>会导致系统处于不安全状态的资源请求</center>\n\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Problem:银行家算法</span></span><br><span class=\"line\"><span class=\"comment\">Author:QiZhao</span></span><br><span class=\"line\"><span class=\"comment\">Data:2018-05-31</span></span><br><span class=\"line\"><span class=\"comment\">Description:预防进程死锁的银行家算法</span></span><br><span class=\"line\"><span class=\"comment\">Copyright  2018 QiZhao. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;//提供vector</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;//提供memset函数</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;//提供fflush函数</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdlib&gt;//提供exit函数</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">enum</span> status &#123;Safe, UnSafe&#125;;<span class=\"comment\">//安全性检查的结果</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> MaxNumber = <span class=\"number\">100</span>;<span class=\"comment\">//进程数量的最大值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> Available[MaxNumber];<span class=\"comment\">//每种资源的可用数量</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> Max[MaxNumber][MaxNumber];<span class=\"comment\">//n*m的矩阵,表示每个进程所需的最大资源量</span></span><br><span class=\"line\"><span class=\"built_in\">string</span> name[MaxNumber];<span class=\"comment\">//n个进程的进程名</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> Allocation[MaxNumber][MaxNumber];<span class=\"comment\">//n*m的矩阵,表示每个进程每种资源已经分配的量</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> Need[MaxNumber][MaxNumber];<span class=\"comment\">//n*m的矩阵,表示每个进程还需的每种资源量</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> Request[MaxNumber];<span class=\"comment\">//所请求的每种资源的资源量</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; &gt; SafeOrder;<span class=\"comment\">//存储所有的安全序列</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; temp;<span class=\"comment\">//存储一个临时安全序列</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n, m;<span class=\"comment\">//进程数，资源种类数</span></span><br><span class=\"line\"></span><br><span class=\"line\">status sta = UnSafe;<span class=\"comment\">//安全性检查的结果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数声明</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">recovery</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check_bank</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">check_safe</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">request</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">choose</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> Wordk[],<span class=\"keyword\">bool</span> Finished[])</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">menu</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//函数实现</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">input</span><span class=\"params\">()</span><span class=\"comment\">//读入数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入系统资源的种类数:\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请依次输入\"</span> &lt;&lt; m &lt;&lt; <span class=\"string\">\"种系统资源的名称与数量:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; name[i] &gt;&gt; Available[i];</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入进程的数量:\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入各个进程的最大需求量&lt;\"</span> &lt;&lt; n &lt;&lt; <span class=\"string\">\"*\"</span> &lt;&lt; m &lt;&lt; <span class=\"string\">\"矩阵&gt;[MAX]\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; Max[i][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入各进程已申请的资量&lt;\"</span> &lt;&lt; n &lt;&lt; <span class=\"string\">\"*\"</span> &lt;&lt; m &lt;&lt; <span class=\"string\">\"矩阵&gt;[Allocation]\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; Allocation[i][j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span><span class=\"comment\">//计算Need</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Need[i][j] = Max[i][j] - Allocation[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span><span class=\"comment\">//显示资源使用情况</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" Max\\tAllocation\\tNeed\\tAvaliable\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">4</span>; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j==<span class=\"number\">3</span>)</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; name[i] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j == <span class=\"number\">1</span>)</span><br><span class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"  \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; Max[i][j] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; Allocation[i][j] &lt;&lt; <span class=\"string\">\"   \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; Need[i][j] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t \"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; Available[j] &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//更新数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Available[j] -= Request[j];</span><br><span class=\"line\">        Allocation[i][j] += Request[j];</span><br><span class=\"line\">        Need[i][j] -= Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">recovery</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span><span class=\"comment\">//还原数据</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Available[j] += Request[j];</span><br><span class=\"line\">        Allocation[i][j] -= Request[j];</span><br><span class=\"line\">        Need[i][j] += Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">check_bank</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//按照银行家算法检查资源请求</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Request[j] &gt; Need[i][j] || Request[j] &gt; Available[j])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    update(i, Request);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Work[], <span class=\"keyword\">bool</span> Finished[])</span><span class=\"comment\">//深度优先搜索,找到所有的安全序列</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i == n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Finished[j] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sta = Safe;</span><br><span class=\"line\">        SafeOrder.push_back(temp);</span><br><span class=\"line\">        <span class=\"comment\">//temp.clear();</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Finished[j] == <span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">bool</span> t = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(Need[j][k] &gt; Work[k])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    t = <span class=\"literal\">false</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t == <span class=\"literal\">true</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">                    Work[k] += Allocation[j][k];</span><br><span class=\"line\">                Finished[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                temp.push_back(j);</span><br><span class=\"line\">                Dfs(i + <span class=\"number\">1</span>, Work, Finished);</span><br><span class=\"line\">                temp.pop_back();       <span class=\"comment\">//回溯,将第i个进程所做的改变恢复</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; m; k++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Work[k] -= Allocation[j][k];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                Finished[j] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">check_safe</span><span class=\"params\">(<span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> Request[])</span> <span class=\"comment\">//检查系统安全性</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Work[MaxNumber];</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> Finished[MaxNumber];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Finished, <span class=\"literal\">false</span>, <span class=\"keyword\">sizeof</span>(Finished));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">        Work[i] = Available[i];</span><br><span class=\"line\">    sta = UnSafe;</span><br><span class=\"line\">    Dfs(<span class=\"number\">0</span>, Work, Finished);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sta==UnSafe)</span><br><span class=\"line\">        recovery(i, Request);<span class=\"comment\">//还原数据</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sta;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">request</span><span class=\"params\">()</span><span class=\"comment\">//某个进程申请资源</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Request, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(Request));</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入要请求分配资源的进程号&lt;0~\"</span> &lt;&lt; n &lt;&lt; <span class=\"string\">\"&gt;:\"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; i;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请输入进程\"</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\"申请的资源数目\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; name[j] &lt;&lt; <span class=\"string\">\":\"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; Request[j];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    SafeOrder.clear();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(check_bank(i, Request) == <span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(check_safe(i, Request) == Safe)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"系统是安全的!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"安全序列有:\"</span>&lt;&lt;SafeOrder.size()&lt;&lt;<span class=\"string\">\"种\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; SafeOrder.size(); j++)<span class=\"comment\">//输出所有的安全序列</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; SafeOrder[j].size(); k++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"P\"</span> &lt;&lt; SafeOrder[j][k];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(k != SafeOrder[j].size() - <span class=\"number\">1</span>)</span><br><span class=\"line\">                        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-&gt;\"</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(SafeOrder[j].size()!=<span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"系统不安全,恢复原来状态!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"资源请求不合理!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">choose</span><span class=\"params\">()</span><span class=\"comment\">//选择菜单</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> i = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        fflush(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请选择你要进行的操作\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; i;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'0'</span>:</span><br><span class=\"line\">            <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'2'</span>:</span><br><span class=\"line\">            request();</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:</span><br><span class=\"line\">            show();</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"输入有误,请重新输入\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        menu();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">menu</span><span class=\"params\">()</span><span class=\"comment\">//显示菜单</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"****************银行家算法演示***************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\\t1:显示各个矩阵的内容\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\\t2:进程请求系统分配资源\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\\t0:退出程序\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"in.txt\", \"r\", stdin);</span></span><br><span class=\"line\">    <span class=\"comment\">//freopen(\"out.txt\", \"w\", stdout);</span></span><br><span class=\"line\">    input();</span><br><span class=\"line\">    init();</span><br><span class=\"line\">    menu();</span><br><span class=\"line\">    choose();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://blog.csdn.net/qq_27008079/article/details/53946253\" target=\"_blank\" rel=\"noopener\">银行家算法实现——找出所有安全序列</a><br><a href=\"https://baike.baidu.com/item/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95/1679781?fr=aladdin\" target=\"_blank\" rel=\"noopener\">百度百科_银行家算法</a><br><a href=\"https://baike.baidu.com/item/计算机操作系统（第四版）/19925494\" target=\"_blank\" rel=\"noopener\">《计算机操作系统（第四版）》</a>，汤小丹，西安电子科技大学出版社，2014.5</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/Banker's Algorithm1.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"银行家算法(使用DFS找出所有安全序列)","path":"647653334.html","eyeCatchImage":"/images/Banker's Algorithm1.jpg","excerpt":null,"date":"2018-06-02T04:41:13.000Z","pv":0,"totalPV":0,"categories":"操作系统","tags":["DFS","操作系统"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"使用c#中的HttpWebRequest实现12306余票查询","date":"2018-06-18T18:41:13.000Z","abbrlink":1797370495,"_content":"## 准备工作\n1. 下载用于解析JSON的类库(Newtonsoft.Json.dll)(下载地址:[Newtonsoft.Json.dll](https://archive.codeplex.com/?p=json))；\n2. 在C#项目中添加对其的引用。\n3. 在程序中导入命名空间:\n```csharp\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Linq;\nusing System.Net;\nusing System.Text.RegularExpressions;\nusing System.Xml;\n```\n\n## 思路\n### API地址\n在浏览器中打开12306主页，点击**余票查询**，并使用浏览器中的开发者工具，进行抓包。这里，我们查询的是2018.06.25的上海至长沙的车票信息。\n![开发者工具抓包](/images/trainticket1.jpg)\n此时浏览器发送请求的地址为：\n`\nhttps://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=2018-06-25&leftTicketDTO.from_station=SHH&leftTicketDTO.to_station=CSQ&purpose_codes=ADULT\n`\n由此,我们不难分析出API地址为：\n```csharp\nstring url=\"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date={0}&leftTicketDTO.from_station={1}&leftTicketDTO.to_station={2}&purpose_codes={3}\";\nurl=string.Format(url,date,from,to,id);\n```\n其中，date代表出发日(格式为yyyy-MM-dd),from代表出发站的代码，to代表到达站的代码，id代表车票类型(成人为`ADULT`,学生为`OX00`);\n### 车站代码\n车站对应的代码可在此下载:[https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055](https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055)\n我们可以使用正则表达式从中提取出关键信息，并保存在一个XML文档中，便于以后的使用。\n```csharp\n        public static void StationNameXml()\n        {\n            string nowpath = Environment.CurrentDirectory;\n            if (Directory.Exists(nowpath+\"/Data\")==false)\n                Directory.CreateDirectory(nowpath + \"/Data\");//创建新路径\n            if (File.Exists(nowpath + \"/Data/StationName.xml\") == true)\n                return;\n\n\t\t\tHttpWebRequest request;\n     \t\tHttpWebResponse response;\n\n            string url=@\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\";\n\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = \"GET\";\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n\n            string str = string.Empty;\n            try\n            {\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(\"UTF-8\"));\n                    str = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch(Exception e)\n            {\n\t\t\t\tConsole.WriteLine(e.Message);\n            }\n\n            string pattern = @\"@\\S{2,5}?[|](?<Name>\\S{1,8}?)[|](?<Code>\\S{3,5}?)[|]\";\n            Regex r = new Regex(pattern, RegexOptions.ExplicitCapture);\n\n            XmlDocument xmldoc = new XmlDocument();\n            XmlDeclaration xmldecl;\n\n            xmldecl = xmldoc.CreateXmlDeclaration(\"1.0\", \"UTF-8\", null);//加入XML的声明段落\n            xmldoc.AppendChild(xmldecl);\n\n            XmlElement root = xmldoc.CreateElement(\"\", \"Dict\", \"\");//加入一个根元素\n            xmldoc.AppendChild(root);\n\n            MatchCollection mc = r.Matches(str);\n            foreach (Match m in mc)\n            {\n                GroupCollection group = m.Groups;\n                XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, \"Pair\", null);\n\n                XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, \"Station\", null);\n                temp.InnerText = group[\"Name\"].Value; \n                node.AppendChild(temp);\n\n                XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, \"Code\", null);\n                temp2.InnerText = group[\"Code\"].Value;\n                node.AppendChild(temp2);\n\n                root.AppendChild(node);\n            }\n            xmldoc.Save(nowpath+\"/Data/\"+\"StationName.xml\");\n        }\n```\n![车站代码](/images/trainticket2.jpg)\n依据中文车站名获取对应车站代码的方法为:\n```csharp\n        private static string StationCode(string StationName)\n        {\n            XmlDocument doc = new XmlDocument();\n            doc.Load(Environment.CurrentDirectory + \"/Data/StationName.xml\");\n            XmlNodeList data = doc.DocumentElement.ChildNodes;\n            foreach (XmlNode node in data)\n            {\n                XmlElement xe = (XmlElement)node;\n                XmlNodeList xnl0 = xe.ChildNodes;\n                string s = xnl0.Item(0).InnerText;\n                if(s==StationName)\n                {\n                    return xnl0.Item(1).InnerText;\n                }\n            }\n            return string.Empty;\n        }\n```\n### 数据模型\n为了存储查询结果，我们需要构建一个车票的数据模型，具体如下；\n```csharp\n   public class Ticket\n    {\n        #region 数据模型\n        private string trainid=string.Empty;//车次\n        private string fromstation = \"--\";//出发站\n        private string totation = \"--\";//到达站\n        private string ticketdate = string.Empty;//车票日期\n        private string starttime = \"--\";//发车时间\n        private string arrivetime = \"--\";//到达时间\n        private string lastedtime = \"--\";//历时\n        private string tzNum = \"--\";//特等座\n        private string ydNum = \"--\";//一等座\n        private string edNum = \"--\";//二等座\n        private string grwNum = \"--\";//高级软卧\n        private string rwNum = \"--\";//软卧\n        private string dwNum = \"--\";//动卧\n        private string ywNum = \"--\";//硬卧\n        private string rzNum = \"--\";//软座\n        private string yzNum = \"--\";//硬座\n        private string wzNum = \"--\";//无座\n        private string qtNum = \"--\";//其他\n        private string identity = string.Empty;//车票类型(学生/成人)\n        public string TrainId { get { return trainid; } set { trainid = value; } }\n        public string FromStation { get { return fromstation; } set { fromstation = value; } }\n        public string ToStation { get { return totation; } set { totation = value; } }\n        public string TicketDate { get { return ticketdate; } set { ticketdate = value; } }\n        public string StartTime { get { return starttime; } set { starttime = value; } }\n        public string ArriveTime { get { return arrivetime; }set { arrivetime = value; } }\n        public string LastedTime { get { return lastedtime; } set { lastedtime = value; } }\n        public string TzNum { get { return tzNum; } set { tzNum = value; } }\n        public string YdNum { get { return ydNum; } set { ydNum = value; } }\n        public string EdNum { get { return edNum; } set { edNum = value; } }\n        public string GrwNum { get { return grwNum; } set { grwNum = value; } }\n        public string RwNum { get { return rwNum; } set { rwNum = value; } }\n        public string DwNum { get { return dwNum; } set { dwNum = value; } }\n        public string YwNum {get{ return ywNum; }set{ ywNum = value; } }\n        public string RzNum {get{ return rzNum; }set{ rzNum = value; } }\n        public string YzNum {get{ return yzNum; }set{ yzNum = value; } }\n        public string WzNum {get{ return wzNum; }set{ wzNum = value; } }\n        public string QtNum {get{ return qtNum; }set{ qtNum = value; } }\n        public string Identity { get { return identity; }set { identity = value; } }\n        #endregion\n        public Ticket() { }\n\n        public Dictionary<string, string> getMap()\n        {\n            Dictionary<string, string> result = new Dictionary<string, string>();\n            result.Add(\"车次\", trainid);\n            result.Add(\"出发站\", FromStation);\n            result.Add(\"到达站\", ToStation);\n            result.Add(\"发车时间\", StartTime);\n            result.Add(\"到达时间\", ArriveTime);\n            result.Add(\"历时\", LastedTime);\n            result.Add(\"特等座\", TzNum);\n            result.Add(\"一等座\", YdNum);\n            result.Add(\"二等座\", EdNum);\n            result.Add(\"高级软卧\", GrwNum);\n            result.Add(\"软卧\", RwNum);\n            result.Add(\"动卧\", DwNum);\n            result.Add(\"硬卧\", YwNum);\n            result.Add(\"软座\", RzNum);\n            result.Add(\"硬座\", YzNum);\n            result.Add(\"无座\", WzNum);\n            result.Add(\"其他\", QtNum);\n            return result;\n        }\n\t}\n```\n### 解析JSON\n![JSON格式的字符串](/images/trainticket3.jpg)\n返回的报文为一个JSON格式的字符串，里面包含有各类车票信息、发车时间以及历时，为了对其进行解析，我们需要下载一个用于解析JSON的类库(下载地址:[Newtonsoft.Json.dll](https://archive.codeplex.com/?p=json))\n```csharp\n       private static Ticket[] SpiderTicket(string date, string from, string to, string id)\n        {\n            HttpWebRequest request;\n            HttpWebResponse response;\n\n            string url = \"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date={0}&leftTicketDTO.from_station={1}&leftTicketDTO.to_station={2}&purpose_codes={3}\";\n            url = string.Format(url, date, from, to, id);\n\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = \"GET\";\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n\n            string str = string.Empty;\n            try\n            {\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(\"UTF-8\"));\n                    str = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n            }\n\n            Dictionary<string, string> map=new Dictionary<string, string>();//保存返回的JSON串中的车站代码与车站名之间的映\n            ArrayList AllTicket = new ArrayList();//所有的车票信息\n\n            JObject jo = (JObject)JsonConvert.DeserializeObject(str);\n            JToken record = jo[\"data\"][\"map\"];\n            foreach (JProperty item in record)\n            {\n                map.Add(item.Name.ToString(), item.Value.ToString());\n            }\n\n            record = jo[\"data\"][\"result\"];\n            foreach (string s in record)\n            {\n                string[] result = s.Split('|');\n                Ticket t = new Ticket();\n                t.TrainId = result[3];\n                t.FromStation = map[result[6]];\n                t.ToStation = map[result[7]];\n                t.StartTime = result[8];\n                t.ArriveTime = result[9];\n                t.LastedTime = result[10];\n                t.TicketDate = result[13];\n                t.DwNum = result[33] != \"\" ? result[33] : t.DwNum;\n                t.TzNum = result[32] != \"\" ? result[32] : t.TzNum;\n                t.YdNum = result[31] != \"\" ? result[31] : t.YdNum;\n                t.EdNum = result[30] != \"\" ? result[30] : t.EdNum;\n                t.YzNum = result[29] != \"\" ? result[29] : t.YzNum;\n                t.YwNum = result[28] != \"\" ? result[28] : t.YwNum;\n                t.WzNum = result[26] != \"\" ? result[26] : t.WzNum;\n                t.RzNum = result[24] != \"\" ? result[24] : t.RzNum;\n                t.RwNum = result[23] != \"\" ? result[23] : t.RwNum;\n                t.GrwNum = result[21] != \"\" ? result[21] : t.GrwNum;\n                AllTicket.Add(t);\n            }\n            Ticket[] All = new Ticket[AllTicket.Count];\n            int flag = 0;\n            foreach (object t in AllTicket)\n            {\n                All[flag++] = t as Ticket;\n            }\n            return All;\n        }\n```\n## 效果图\n![](/images/spiderticket.jpg)\n![](/images/spiderticket2.jpg)\n项目地址:[EasyLife](https://github.com/ZhaoQi99/EasyLife/tree/Course_Design/)\n\n## 参考博客\n[C#调用12306API做余票查询](https://blog.csdn.net/xiahn1a/article/details/42584507)(该参考博客中的方法已不可用)\n\n## 完整代码\n```csharp\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Linq;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Net;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing System.Xml;\n\nnamespace Ticket\n{\n    class Program\n    {\n        public static void StationNameXml()\n        {\n            string nowpath = Environment.CurrentDirectory;\n            if (Directory.Exists(nowpath + \"/Data\") == false)\n                Directory.CreateDirectory(nowpath + \"/Data\");//创建新路径\n            if (File.Exists(nowpath + \"/Data/StationName.xml\") == true)\n                return;\n\n            HttpWebRequest request;\n            HttpWebResponse response;\n\n            string url = @\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\";\n\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = \"GET\";\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n\n            string str = string.Empty;\n            try\n            {\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(\"UTF-8\"));\n                    str = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n            }\n\n            string pattern = @\"@\\S{2,5}?[|](?<Name>\\S{1,8}?)[|](?<Code>\\S{3,5}?)[|]\";\n            Regex r = new Regex(pattern, RegexOptions.ExplicitCapture);\n\n            XmlDocument xmldoc = new XmlDocument();\n            XmlDeclaration xmldecl;\n\n            xmldecl = xmldoc.CreateXmlDeclaration(\"1.0\", \"UTF-8\", null);//加入XML的声明段落\n            xmldoc.AppendChild(xmldecl);\n\n            XmlElement root = xmldoc.CreateElement(\"\", \"Dict\", \"\");//加入一个根元素\n            xmldoc.AppendChild(root);\n\n            MatchCollection mc = r.Matches(str);\n            foreach (Match m in mc)\n            {\n                GroupCollection group = m.Groups;\n                XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, \"Pair\", null);\n\n                XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, \"Station\", null);\n                temp.InnerText = group[\"Name\"].Value;\n                node.AppendChild(temp);\n\n                XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, \"Code\", null);\n                temp2.InnerText = group[\"Code\"].Value;\n                node.AppendChild(temp2);\n\n                root.AppendChild(node);\n            }\n            xmldoc.Save(nowpath + \"/Data/\" + \"StationName.xml\");\n        }\n        private static string StationCode(string StationName)\n        {\n            XmlDocument doc = new XmlDocument();\n            doc.Load(Environment.CurrentDirectory + \"/Data/StationName.xml\");\n            XmlNodeList data = doc.DocumentElement.ChildNodes;\n            foreach (XmlNode node in data)\n            {\n                XmlElement xe = (XmlElement)node;\n                XmlNodeList xnl0 = xe.ChildNodes;\n                string s = xnl0.Item(0).InnerText;\n                if (s == StationName)\n                {\n                    return xnl0.Item(1).InnerText;\n                }\n            }\n            return string.Empty;\n        }\n\n\n       private static Ticket[] SpiderTicket(string date, string from, string to, string id)\n        {\n            HttpWebRequest request;\n            HttpWebResponse response;\n\n            string url = \"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date={0}&leftTicketDTO.from_station={1}&leftTicketDTO.to_station={2}&purpose_codes={3}\";\n            url = string.Format(url, date, from, to, id);\n\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = \"GET\";\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n\n            string str = string.Empty;\n            try\n            {\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(\"UTF-8\"));\n                    str = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n            }\n\n            Dictionary<string, string> map=new Dictionary<string, string>();//保存返回的JSON串中的车站代码与车站名之间的映\n            ArrayList AllTicket = new ArrayList();//所有的车票信息\n\n            JObject jo = (JObject)JsonConvert.DeserializeObject(str);\n            JToken record = jo[\"data\"][\"map\"];\n            foreach (JProperty item in record)\n            {\n                map.Add(item.Name.ToString(), item.Value.ToString());\n            }\n\n            record = jo[\"data\"][\"result\"];\n            foreach (string s in record)\n            {\n                string[] result = s.Split('|');\n                Ticket t = new Ticket();\n                t.TrainId = result[3];\n                t.FromStation = map[result[6]];\n                t.ToStation = map[result[7]];\n                t.StartTime = result[8];\n                t.ArriveTime = result[9];\n                t.LastedTime = result[10];\n                t.TicketDate = result[13];\n                t.DwNum = result[33] != \"\" ? result[33] : t.DwNum;\n                t.TzNum = result[32] != \"\" ? result[32] : t.TzNum;\n                t.YdNum = result[31] != \"\" ? result[31] : t.YdNum;\n                t.EdNum = result[30] != \"\" ? result[30] : t.EdNum;\n                t.YzNum = result[29] != \"\" ? result[29] : t.YzNum;\n                t.YwNum = result[28] != \"\" ? result[28] : t.YwNum;\n                t.WzNum = result[26] != \"\" ? result[26] : t.WzNum;\n                t.RzNum = result[24] != \"\" ? result[24] : t.RzNum;\n                t.RwNum = result[23] != \"\" ? result[23] : t.RwNum;\n                t.GrwNum = result[21] != \"\" ? result[21] : t.GrwNum;\n                AllTicket.Add(t);\n            }\n            Ticket[] All = new Ticket[AllTicket.Count];\n            int flag = 0;\n            foreach (object t in AllTicket)\n            {\n                All[flag++] = t as Ticket;\n            }\n            return All;\n        }\n        static void Main(string[] args)\n        {\n            StationNameXml();\n            string from = \"上海\";\n            string to = \"北京\";\n            Ticket[] All=new Ticket[50];\n            All=SpiderTicket(DateTime.Now.ToString(\"yyyy-MM-dd\"), StationCode(from), StationCode(to), \"ADULT\");\n            for(int i=0;i<All.Length;i++)\n            {\n                Dictionary<string, string> map = new Dictionary<string, string>();\n                map = All[i].getMap();\n                foreach (object j in map.Keys)\n                    Console.Write(j.ToString()+\":\"+map[j.ToString()].ToString()+\" \");\n                Console.WriteLine();\n            }\n            Console.Read();\n        }\n    }\n}\n```","source":"_posts/使用c#中的HttpWebRequest实现12306余票查询.md","raw":"---\ntitle: '使用c#中的HttpWebRequest实现12306余票查询'\ncategories: 'C#'\ntags:\n  - 'C#'\n  - .NET\ndate: '2018-06-19 02:41:13'\nabbrlink: 1797370495\n---\n## 准备工作\n1. 下载用于解析JSON的类库(Newtonsoft.Json.dll)(下载地址:[Newtonsoft.Json.dll](https://archive.codeplex.com/?p=json))；\n2. 在C#项目中添加对其的引用。\n3. 在程序中导入命名空间:\n```csharp\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Linq;\nusing System.Net;\nusing System.Text.RegularExpressions;\nusing System.Xml;\n```\n\n## 思路\n### API地址\n在浏览器中打开12306主页，点击**余票查询**，并使用浏览器中的开发者工具，进行抓包。这里，我们查询的是2018.06.25的上海至长沙的车票信息。\n![开发者工具抓包](/images/trainticket1.jpg)\n此时浏览器发送请求的地址为：\n`\nhttps://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=2018-06-25&leftTicketDTO.from_station=SHH&leftTicketDTO.to_station=CSQ&purpose_codes=ADULT\n`\n由此,我们不难分析出API地址为：\n```csharp\nstring url=\"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date={0}&leftTicketDTO.from_station={1}&leftTicketDTO.to_station={2}&purpose_codes={3}\";\nurl=string.Format(url,date,from,to,id);\n```\n其中，date代表出发日(格式为yyyy-MM-dd),from代表出发站的代码，to代表到达站的代码，id代表车票类型(成人为`ADULT`,学生为`OX00`);\n### 车站代码\n车站对应的代码可在此下载:[https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055](https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055)\n我们可以使用正则表达式从中提取出关键信息，并保存在一个XML文档中，便于以后的使用。\n```csharp\n        public static void StationNameXml()\n        {\n            string nowpath = Environment.CurrentDirectory;\n            if (Directory.Exists(nowpath+\"/Data\")==false)\n                Directory.CreateDirectory(nowpath + \"/Data\");//创建新路径\n            if (File.Exists(nowpath + \"/Data/StationName.xml\") == true)\n                return;\n\n\t\t\tHttpWebRequest request;\n     \t\tHttpWebResponse response;\n\n            string url=@\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\";\n\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = \"GET\";\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n\n            string str = string.Empty;\n            try\n            {\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(\"UTF-8\"));\n                    str = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch(Exception e)\n            {\n\t\t\t\tConsole.WriteLine(e.Message);\n            }\n\n            string pattern = @\"@\\S{2,5}?[|](?<Name>\\S{1,8}?)[|](?<Code>\\S{3,5}?)[|]\";\n            Regex r = new Regex(pattern, RegexOptions.ExplicitCapture);\n\n            XmlDocument xmldoc = new XmlDocument();\n            XmlDeclaration xmldecl;\n\n            xmldecl = xmldoc.CreateXmlDeclaration(\"1.0\", \"UTF-8\", null);//加入XML的声明段落\n            xmldoc.AppendChild(xmldecl);\n\n            XmlElement root = xmldoc.CreateElement(\"\", \"Dict\", \"\");//加入一个根元素\n            xmldoc.AppendChild(root);\n\n            MatchCollection mc = r.Matches(str);\n            foreach (Match m in mc)\n            {\n                GroupCollection group = m.Groups;\n                XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, \"Pair\", null);\n\n                XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, \"Station\", null);\n                temp.InnerText = group[\"Name\"].Value; \n                node.AppendChild(temp);\n\n                XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, \"Code\", null);\n                temp2.InnerText = group[\"Code\"].Value;\n                node.AppendChild(temp2);\n\n                root.AppendChild(node);\n            }\n            xmldoc.Save(nowpath+\"/Data/\"+\"StationName.xml\");\n        }\n```\n![车站代码](/images/trainticket2.jpg)\n依据中文车站名获取对应车站代码的方法为:\n```csharp\n        private static string StationCode(string StationName)\n        {\n            XmlDocument doc = new XmlDocument();\n            doc.Load(Environment.CurrentDirectory + \"/Data/StationName.xml\");\n            XmlNodeList data = doc.DocumentElement.ChildNodes;\n            foreach (XmlNode node in data)\n            {\n                XmlElement xe = (XmlElement)node;\n                XmlNodeList xnl0 = xe.ChildNodes;\n                string s = xnl0.Item(0).InnerText;\n                if(s==StationName)\n                {\n                    return xnl0.Item(1).InnerText;\n                }\n            }\n            return string.Empty;\n        }\n```\n### 数据模型\n为了存储查询结果，我们需要构建一个车票的数据模型，具体如下；\n```csharp\n   public class Ticket\n    {\n        #region 数据模型\n        private string trainid=string.Empty;//车次\n        private string fromstation = \"--\";//出发站\n        private string totation = \"--\";//到达站\n        private string ticketdate = string.Empty;//车票日期\n        private string starttime = \"--\";//发车时间\n        private string arrivetime = \"--\";//到达时间\n        private string lastedtime = \"--\";//历时\n        private string tzNum = \"--\";//特等座\n        private string ydNum = \"--\";//一等座\n        private string edNum = \"--\";//二等座\n        private string grwNum = \"--\";//高级软卧\n        private string rwNum = \"--\";//软卧\n        private string dwNum = \"--\";//动卧\n        private string ywNum = \"--\";//硬卧\n        private string rzNum = \"--\";//软座\n        private string yzNum = \"--\";//硬座\n        private string wzNum = \"--\";//无座\n        private string qtNum = \"--\";//其他\n        private string identity = string.Empty;//车票类型(学生/成人)\n        public string TrainId { get { return trainid; } set { trainid = value; } }\n        public string FromStation { get { return fromstation; } set { fromstation = value; } }\n        public string ToStation { get { return totation; } set { totation = value; } }\n        public string TicketDate { get { return ticketdate; } set { ticketdate = value; } }\n        public string StartTime { get { return starttime; } set { starttime = value; } }\n        public string ArriveTime { get { return arrivetime; }set { arrivetime = value; } }\n        public string LastedTime { get { return lastedtime; } set { lastedtime = value; } }\n        public string TzNum { get { return tzNum; } set { tzNum = value; } }\n        public string YdNum { get { return ydNum; } set { ydNum = value; } }\n        public string EdNum { get { return edNum; } set { edNum = value; } }\n        public string GrwNum { get { return grwNum; } set { grwNum = value; } }\n        public string RwNum { get { return rwNum; } set { rwNum = value; } }\n        public string DwNum { get { return dwNum; } set { dwNum = value; } }\n        public string YwNum {get{ return ywNum; }set{ ywNum = value; } }\n        public string RzNum {get{ return rzNum; }set{ rzNum = value; } }\n        public string YzNum {get{ return yzNum; }set{ yzNum = value; } }\n        public string WzNum {get{ return wzNum; }set{ wzNum = value; } }\n        public string QtNum {get{ return qtNum; }set{ qtNum = value; } }\n        public string Identity { get { return identity; }set { identity = value; } }\n        #endregion\n        public Ticket() { }\n\n        public Dictionary<string, string> getMap()\n        {\n            Dictionary<string, string> result = new Dictionary<string, string>();\n            result.Add(\"车次\", trainid);\n            result.Add(\"出发站\", FromStation);\n            result.Add(\"到达站\", ToStation);\n            result.Add(\"发车时间\", StartTime);\n            result.Add(\"到达时间\", ArriveTime);\n            result.Add(\"历时\", LastedTime);\n            result.Add(\"特等座\", TzNum);\n            result.Add(\"一等座\", YdNum);\n            result.Add(\"二等座\", EdNum);\n            result.Add(\"高级软卧\", GrwNum);\n            result.Add(\"软卧\", RwNum);\n            result.Add(\"动卧\", DwNum);\n            result.Add(\"硬卧\", YwNum);\n            result.Add(\"软座\", RzNum);\n            result.Add(\"硬座\", YzNum);\n            result.Add(\"无座\", WzNum);\n            result.Add(\"其他\", QtNum);\n            return result;\n        }\n\t}\n```\n### 解析JSON\n![JSON格式的字符串](/images/trainticket3.jpg)\n返回的报文为一个JSON格式的字符串，里面包含有各类车票信息、发车时间以及历时，为了对其进行解析，我们需要下载一个用于解析JSON的类库(下载地址:[Newtonsoft.Json.dll](https://archive.codeplex.com/?p=json))\n```csharp\n       private static Ticket[] SpiderTicket(string date, string from, string to, string id)\n        {\n            HttpWebRequest request;\n            HttpWebResponse response;\n\n            string url = \"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date={0}&leftTicketDTO.from_station={1}&leftTicketDTO.to_station={2}&purpose_codes={3}\";\n            url = string.Format(url, date, from, to, id);\n\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = \"GET\";\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n\n            string str = string.Empty;\n            try\n            {\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(\"UTF-8\"));\n                    str = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n            }\n\n            Dictionary<string, string> map=new Dictionary<string, string>();//保存返回的JSON串中的车站代码与车站名之间的映\n            ArrayList AllTicket = new ArrayList();//所有的车票信息\n\n            JObject jo = (JObject)JsonConvert.DeserializeObject(str);\n            JToken record = jo[\"data\"][\"map\"];\n            foreach (JProperty item in record)\n            {\n                map.Add(item.Name.ToString(), item.Value.ToString());\n            }\n\n            record = jo[\"data\"][\"result\"];\n            foreach (string s in record)\n            {\n                string[] result = s.Split('|');\n                Ticket t = new Ticket();\n                t.TrainId = result[3];\n                t.FromStation = map[result[6]];\n                t.ToStation = map[result[7]];\n                t.StartTime = result[8];\n                t.ArriveTime = result[9];\n                t.LastedTime = result[10];\n                t.TicketDate = result[13];\n                t.DwNum = result[33] != \"\" ? result[33] : t.DwNum;\n                t.TzNum = result[32] != \"\" ? result[32] : t.TzNum;\n                t.YdNum = result[31] != \"\" ? result[31] : t.YdNum;\n                t.EdNum = result[30] != \"\" ? result[30] : t.EdNum;\n                t.YzNum = result[29] != \"\" ? result[29] : t.YzNum;\n                t.YwNum = result[28] != \"\" ? result[28] : t.YwNum;\n                t.WzNum = result[26] != \"\" ? result[26] : t.WzNum;\n                t.RzNum = result[24] != \"\" ? result[24] : t.RzNum;\n                t.RwNum = result[23] != \"\" ? result[23] : t.RwNum;\n                t.GrwNum = result[21] != \"\" ? result[21] : t.GrwNum;\n                AllTicket.Add(t);\n            }\n            Ticket[] All = new Ticket[AllTicket.Count];\n            int flag = 0;\n            foreach (object t in AllTicket)\n            {\n                All[flag++] = t as Ticket;\n            }\n            return All;\n        }\n```\n## 效果图\n![](/images/spiderticket.jpg)\n![](/images/spiderticket2.jpg)\n项目地址:[EasyLife](https://github.com/ZhaoQi99/EasyLife/tree/Course_Design/)\n\n## 参考博客\n[C#调用12306API做余票查询](https://blog.csdn.net/xiahn1a/article/details/42584507)(该参考博客中的方法已不可用)\n\n## 完整代码\n```csharp\nusing Newtonsoft.Json;\nusing Newtonsoft.Json.Linq;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Net;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing System.Xml;\n\nnamespace Ticket\n{\n    class Program\n    {\n        public static void StationNameXml()\n        {\n            string nowpath = Environment.CurrentDirectory;\n            if (Directory.Exists(nowpath + \"/Data\") == false)\n                Directory.CreateDirectory(nowpath + \"/Data\");//创建新路径\n            if (File.Exists(nowpath + \"/Data/StationName.xml\") == true)\n                return;\n\n            HttpWebRequest request;\n            HttpWebResponse response;\n\n            string url = @\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\";\n\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = \"GET\";\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n\n            string str = string.Empty;\n            try\n            {\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(\"UTF-8\"));\n                    str = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n            }\n\n            string pattern = @\"@\\S{2,5}?[|](?<Name>\\S{1,8}?)[|](?<Code>\\S{3,5}?)[|]\";\n            Regex r = new Regex(pattern, RegexOptions.ExplicitCapture);\n\n            XmlDocument xmldoc = new XmlDocument();\n            XmlDeclaration xmldecl;\n\n            xmldecl = xmldoc.CreateXmlDeclaration(\"1.0\", \"UTF-8\", null);//加入XML的声明段落\n            xmldoc.AppendChild(xmldecl);\n\n            XmlElement root = xmldoc.CreateElement(\"\", \"Dict\", \"\");//加入一个根元素\n            xmldoc.AppendChild(root);\n\n            MatchCollection mc = r.Matches(str);\n            foreach (Match m in mc)\n            {\n                GroupCollection group = m.Groups;\n                XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, \"Pair\", null);\n\n                XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, \"Station\", null);\n                temp.InnerText = group[\"Name\"].Value;\n                node.AppendChild(temp);\n\n                XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, \"Code\", null);\n                temp2.InnerText = group[\"Code\"].Value;\n                node.AppendChild(temp2);\n\n                root.AppendChild(node);\n            }\n            xmldoc.Save(nowpath + \"/Data/\" + \"StationName.xml\");\n        }\n        private static string StationCode(string StationName)\n        {\n            XmlDocument doc = new XmlDocument();\n            doc.Load(Environment.CurrentDirectory + \"/Data/StationName.xml\");\n            XmlNodeList data = doc.DocumentElement.ChildNodes;\n            foreach (XmlNode node in data)\n            {\n                XmlElement xe = (XmlElement)node;\n                XmlNodeList xnl0 = xe.ChildNodes;\n                string s = xnl0.Item(0).InnerText;\n                if (s == StationName)\n                {\n                    return xnl0.Item(1).InnerText;\n                }\n            }\n            return string.Empty;\n        }\n\n\n       private static Ticket[] SpiderTicket(string date, string from, string to, string id)\n        {\n            HttpWebRequest request;\n            HttpWebResponse response;\n\n            string url = \"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date={0}&leftTicketDTO.from_station={1}&leftTicketDTO.to_station={2}&purpose_codes={3}\";\n            url = string.Format(url, date, from, to, id);\n\n            request = (HttpWebRequest)WebRequest.Create(url);\n            request.Method = \"GET\";\n            request.Credentials = CredentialCache.DefaultCredentials;\n            request.UserAgent = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\";\n\n            string str = string.Empty;\n            try\n            {\n                response = (HttpWebResponse)request.GetResponse();\n                if (response.StatusCode == HttpStatusCode.OK)\n                {\n                    StreamReader sr = new StreamReader(response.GetResponseStream(), Encoding.GetEncoding(\"UTF-8\"));\n                    str = sr.ReadToEnd();\n                    sr.Close();\n                    response.Close();//关闭response响应流\n                }\n                else\n                    throw new Exception();\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n            }\n\n            Dictionary<string, string> map=new Dictionary<string, string>();//保存返回的JSON串中的车站代码与车站名之间的映\n            ArrayList AllTicket = new ArrayList();//所有的车票信息\n\n            JObject jo = (JObject)JsonConvert.DeserializeObject(str);\n            JToken record = jo[\"data\"][\"map\"];\n            foreach (JProperty item in record)\n            {\n                map.Add(item.Name.ToString(), item.Value.ToString());\n            }\n\n            record = jo[\"data\"][\"result\"];\n            foreach (string s in record)\n            {\n                string[] result = s.Split('|');\n                Ticket t = new Ticket();\n                t.TrainId = result[3];\n                t.FromStation = map[result[6]];\n                t.ToStation = map[result[7]];\n                t.StartTime = result[8];\n                t.ArriveTime = result[9];\n                t.LastedTime = result[10];\n                t.TicketDate = result[13];\n                t.DwNum = result[33] != \"\" ? result[33] : t.DwNum;\n                t.TzNum = result[32] != \"\" ? result[32] : t.TzNum;\n                t.YdNum = result[31] != \"\" ? result[31] : t.YdNum;\n                t.EdNum = result[30] != \"\" ? result[30] : t.EdNum;\n                t.YzNum = result[29] != \"\" ? result[29] : t.YzNum;\n                t.YwNum = result[28] != \"\" ? result[28] : t.YwNum;\n                t.WzNum = result[26] != \"\" ? result[26] : t.WzNum;\n                t.RzNum = result[24] != \"\" ? result[24] : t.RzNum;\n                t.RwNum = result[23] != \"\" ? result[23] : t.RwNum;\n                t.GrwNum = result[21] != \"\" ? result[21] : t.GrwNum;\n                AllTicket.Add(t);\n            }\n            Ticket[] All = new Ticket[AllTicket.Count];\n            int flag = 0;\n            foreach (object t in AllTicket)\n            {\n                All[flag++] = t as Ticket;\n            }\n            return All;\n        }\n        static void Main(string[] args)\n        {\n            StationNameXml();\n            string from = \"上海\";\n            string to = \"北京\";\n            Ticket[] All=new Ticket[50];\n            All=SpiderTicket(DateTime.Now.ToString(\"yyyy-MM-dd\"), StationCode(from), StationCode(to), \"ADULT\");\n            for(int i=0;i<All.Length;i++)\n            {\n                Dictionary<string, string> map = new Dictionary<string, string>();\n                map = All[i].getMap();\n                foreach (object j in map.Keys)\n                    Console.Write(j.ToString()+\":\"+map[j.ToString()].ToString()+\" \");\n                Console.WriteLine();\n            }\n            Console.Read();\n        }\n    }\n}\n```","slug":"使用c#中的HttpWebRequest实现12306余票查询","published":1,"updated":"2019-03-28T10:45:16.807Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cju1bswiw004akchixamog769","content":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ol>\n<li>下载用于解析JSON的类库(Newtonsoft.Json.dll)(下载地址:<a href=\"https://archive.codeplex.com/?p=json\" target=\"_blank\" rel=\"noopener\">Newtonsoft.Json.dll</a>)；</li>\n<li>在C#项目中添加对其的引用。</li>\n<li>在程序中导入命名空间:<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Net;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Xml;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><h3 id=\"API地址\"><a href=\"#API地址\" class=\"headerlink\" title=\"API地址\"></a>API地址</h3><p>在浏览器中打开12306主页，点击<strong>余票查询</strong>，并使用浏览器中的开发者工具，进行抓包。这里，我们查询的是2018.06.25的上海至长沙的车票信息。<br><img src=\"/images/trainticket1.jpg\" alt=\"开发者工具抓包\"><br>此时浏览器发送请求的地址为：<br><code>https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=2018-06-25&amp;leftTicketDTO.from_station=SHH&amp;leftTicketDTO.to_station=CSQ&amp;purpose_codes=ADULT</code><br>由此,我们不难分析出API地址为：<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> url=<span class=\"string\">\"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;\"</span>;</span><br><span class=\"line\">url=<span class=\"keyword\">string</span>.Format(url,date,<span class=\"keyword\">from</span>,to,id);</span><br></pre></td></tr></table></figure></p>\n<p>其中，date代表出发日(格式为yyyy-MM-dd),from代表出发站的代码，to代表到达站的代码，id代表车票类型(成人为<code>ADULT</code>,学生为<code>OX00</code>);</p>\n<h3 id=\"车站代码\"><a href=\"#车站代码\" class=\"headerlink\" title=\"车站代码\"></a>车站代码</h3><p>车站对应的代码可在此下载:<a href=\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\" target=\"_blank\" rel=\"noopener\">https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055</a><br>我们可以使用正则表达式从中提取出关键信息，并保存在一个XML文档中，便于以后的使用。<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">StationNameXml</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">string</span> nowpath = Environment.CurrentDirectory;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (Directory.Exists(nowpath+<span class=\"string\">\"/Data\"</span>)==<span class=\"literal\">false</span>)</span><br><span class=\"line\">             Directory.CreateDirectory(nowpath + <span class=\"string\">\"/Data\"</span>);<span class=\"comment\">//创建新路径</span></span><br><span class=\"line\">         <span class=\"keyword\">if</span> (File.Exists(nowpath + <span class=\"string\">\"/Data/StationName.xml\"</span>) == <span class=\"literal\">true</span>)</span><br><span class=\"line\">             <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">HttpWebRequest request;</span><br><span class=\"line\">  \t\tHttpWebResponse response;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">string</span> url=<span class=\"string\">@\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">         request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">         request.Method = <span class=\"string\">\"GET\"</span>;</span><br><span class=\"line\">         request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">         request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">string</span> str = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">         <span class=\"keyword\">try</span></span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">                 StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"UTF-8\"</span>));</span><br><span class=\"line\">                 str = sr.ReadToEnd();</span><br><span class=\"line\">                 sr.Close();</span><br><span class=\"line\">                 response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">else</span></span><br><span class=\"line\">                 <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">\tConsole.WriteLine(e.Message);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">string</span> pattern = <span class=\"string\">@\"@\\S&#123;2,5&#125;?[|](?&lt;Name&gt;\\S&#123;1,8&#125;?)[|](?&lt;Code&gt;\\S&#123;3,5&#125;?)[|]\"</span>;</span><br><span class=\"line\">         Regex r = <span class=\"keyword\">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class=\"line\"></span><br><span class=\"line\">         XmlDocument xmldoc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">         XmlDeclaration xmldecl;</span><br><span class=\"line\"></span><br><span class=\"line\">         xmldecl = xmldoc.CreateXmlDeclaration(<span class=\"string\">\"1.0\"</span>, <span class=\"string\">\"UTF-8\"</span>, <span class=\"literal\">null</span>);<span class=\"comment\">//加入XML的声明段落</span></span><br><span class=\"line\">         xmldoc.AppendChild(xmldecl);</span><br><span class=\"line\"></span><br><span class=\"line\">         XmlElement root = xmldoc.CreateElement(<span class=\"string\">\"\"</span>, <span class=\"string\">\"Dict\"</span>, <span class=\"string\">\"\"</span>);<span class=\"comment\">//加入一个根元素</span></span><br><span class=\"line\">         xmldoc.AppendChild(root);</span><br><span class=\"line\"></span><br><span class=\"line\">         MatchCollection mc = r.Matches(str);</span><br><span class=\"line\">         <span class=\"keyword\">foreach</span> (Match m <span class=\"keyword\">in</span> mc)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             GroupCollection <span class=\"keyword\">group</span> = m.Groups;</span><br><span class=\"line\">             XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Pair\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">             XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Station\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">             temp.InnerText = <span class=\"keyword\">group</span>[<span class=\"string\">\"Name\"</span>].Value; </span><br><span class=\"line\">             node.AppendChild(temp);</span><br><span class=\"line\"></span><br><span class=\"line\">             XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Code\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">             temp2.InnerText = <span class=\"keyword\">group</span>[<span class=\"string\">\"Code\"</span>].Value;</span><br><span class=\"line\">             node.AppendChild(temp2);</span><br><span class=\"line\"></span><br><span class=\"line\">             root.AppendChild(node);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         xmldoc.Save(nowpath+<span class=\"string\">\"/Data/\"</span>+<span class=\"string\">\"StationName.xml\"</span>);</span><br><span class=\"line\">     &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/images/trainticket2.jpg\" alt=\"车站代码\"><br>依据中文车站名获取对应车站代码的方法为:<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">StationCode</span>(<span class=\"params\"><span class=\"keyword\">string</span> StationName</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    XmlDocument doc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">    doc.Load(Environment.CurrentDirectory + <span class=\"string\">\"/Data/StationName.xml\"</span>);</span><br><span class=\"line\">    XmlNodeList data = doc.DocumentElement.ChildNodes;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (XmlNode node <span class=\"keyword\">in</span> data)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        XmlElement xe = (XmlElement)node;</span><br><span class=\"line\">        XmlNodeList xnl0 = xe.ChildNodes;</span><br><span class=\"line\">        <span class=\"keyword\">string</span> s = xnl0.Item(<span class=\"number\">0</span>).InnerText;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s==StationName)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> xnl0.Item(<span class=\"number\">1</span>).InnerText;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据模型\"><a href=\"#数据模型\" class=\"headerlink\" title=\"数据模型\"></a>数据模型</h3><p>为了存储查询结果，我们需要构建一个车票的数据模型，具体如下；<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Ticket</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">       <span class=\"meta\">#<span class=\"meta-keyword\">region</span> 数据模型</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> trainid=<span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//车次</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> fromstation = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//出发站</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> totation = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//到达站</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> ticketdate = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//车票日期</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> starttime = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//发车时间</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> arrivetime = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//到达时间</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> lastedtime = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//历时</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> tzNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//特等座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> ydNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//一等座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> edNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//二等座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> grwNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//高级软卧</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> rwNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//软卧</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> dwNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//动卧</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> ywNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//硬卧</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> rzNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//软座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> yzNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//硬座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> wzNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//无座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> qtNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//其他</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> identity = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//车票类型(学生/成人)</span></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> TrainId &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> trainid; &#125; <span class=\"keyword\">set</span> &#123; trainid = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> FromStation &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> fromstation; &#125; <span class=\"keyword\">set</span> &#123; fromstation = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> ToStation &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> totation; &#125; <span class=\"keyword\">set</span> &#123; totation = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> TicketDate &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> ticketdate; &#125; <span class=\"keyword\">set</span> &#123; ticketdate = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> StartTime &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> starttime; &#125; <span class=\"keyword\">set</span> &#123; starttime = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> ArriveTime &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> arrivetime; &#125;<span class=\"keyword\">set</span> &#123; arrivetime = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> LastedTime &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> lastedtime; &#125; <span class=\"keyword\">set</span> &#123; lastedtime = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> TzNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> tzNum; &#125; <span class=\"keyword\">set</span> &#123; tzNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> YdNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> ydNum; &#125; <span class=\"keyword\">set</span> &#123; ydNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> EdNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> edNum; &#125; <span class=\"keyword\">set</span> &#123; edNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GrwNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> grwNum; &#125; <span class=\"keyword\">set</span> &#123; grwNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> RwNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> rwNum; &#125; <span class=\"keyword\">set</span> &#123; rwNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> DwNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> dwNum; &#125; <span class=\"keyword\">set</span> &#123; dwNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> YwNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> ywNum; &#125;<span class=\"keyword\">set</span>&#123; ywNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> RzNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> rzNum; &#125;<span class=\"keyword\">set</span>&#123; rzNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> YzNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> yzNum; &#125;<span class=\"keyword\">set</span>&#123; yzNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> WzNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> wzNum; &#125;<span class=\"keyword\">set</span>&#123; wzNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> QtNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> qtNum; &#125;<span class=\"keyword\">set</span>&#123; qtNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Identity &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> identity; &#125;<span class=\"keyword\">set</span> &#123; identity = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"meta\">#<span class=\"meta-keyword\">endregion</span></span></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Ticket</span>(<span class=\"params\"></span>)</span> &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; <span class=\"title\">getMap</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>       &#123;</span><br><span class=\"line\">           Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; result = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt;();</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"车次\"</span>, trainid);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"出发站\"</span>, FromStation);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"到达站\"</span>, ToStation);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"发车时间\"</span>, StartTime);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"到达时间\"</span>, ArriveTime);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"历时\"</span>, LastedTime);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"特等座\"</span>, TzNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"一等座\"</span>, YdNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"二等座\"</span>, EdNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"高级软卧\"</span>, GrwNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"软卧\"</span>, RwNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"动卧\"</span>, DwNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"硬卧\"</span>, YwNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"软座\"</span>, RzNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"硬座\"</span>, YzNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"无座\"</span>, WzNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"其他\"</span>, QtNum);</span><br><span class=\"line\">           <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"解析JSON\"><a href=\"#解析JSON\" class=\"headerlink\" title=\"解析JSON\"></a>解析JSON</h3><p><img src=\"/images/trainticket3.jpg\" alt=\"JSON格式的字符串\"><br>返回的报文为一个JSON格式的字符串，里面包含有各类车票信息、发车时间以及历时，为了对其进行解析，我们需要下载一个用于解析JSON的类库(下载地址:<a href=\"https://archive.codeplex.com/?p=json\" target=\"_blank\" rel=\"noopener\">Newtonsoft.Json.dll</a>)<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Ticket[] <span class=\"title\">SpiderTicket</span>(<span class=\"params\"><span class=\"keyword\">string</span> date, <span class=\"keyword\">string</span> <span class=\"keyword\">from</span>, <span class=\"keyword\">string</span> to, <span class=\"keyword\">string</span> id</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span> &#123;</span><br><span class=\"line\">     HttpWebRequest request;</span><br><span class=\"line\">     HttpWebResponse response;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">string</span> url = <span class=\"string\">\"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;\"</span>;</span><br><span class=\"line\">     url = <span class=\"keyword\">string</span>.Format(url, date, <span class=\"keyword\">from</span>, to, id);</span><br><span class=\"line\"></span><br><span class=\"line\">     request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">     request.Method = <span class=\"string\">\"GET\"</span>;</span><br><span class=\"line\">     request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">     request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">string</span> str = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">     <span class=\"keyword\">try</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"UTF-8\"</span>));</span><br><span class=\"line\">             str = sr.ReadToEnd();</span><br><span class=\"line\">             sr.Close();</span><br><span class=\"line\">             response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span></span><br><span class=\"line\">             <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         Console.WriteLine(e.Message);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; map=<span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt;();<span class=\"comment\">//保存返回的JSON串中的车站代码与车站名之间的映</span></span><br><span class=\"line\">     ArrayList AllTicket = <span class=\"keyword\">new</span> ArrayList();<span class=\"comment\">//所有的车票信息</span></span><br><span class=\"line\"></span><br><span class=\"line\">     JObject jo = (JObject)JsonConvert.DeserializeObject(str);</span><br><span class=\"line\">     JToken record = jo[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"map\"</span>];</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> (JProperty item <span class=\"keyword\">in</span> record)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         map.Add(item.Name.ToString(), item.Value.ToString());</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     record = jo[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"result\"</span>];</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> s <span class=\"keyword\">in</span> record)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">string</span>[] result = s.Split(<span class=\"string\">'|'</span>);</span><br><span class=\"line\">         Ticket t = <span class=\"keyword\">new</span> Ticket();</span><br><span class=\"line\">         t.TrainId = result[<span class=\"number\">3</span>];</span><br><span class=\"line\">         t.FromStation = map[result[<span class=\"number\">6</span>]];</span><br><span class=\"line\">         t.ToStation = map[result[<span class=\"number\">7</span>]];</span><br><span class=\"line\">         t.StartTime = result[<span class=\"number\">8</span>];</span><br><span class=\"line\">         t.ArriveTime = result[<span class=\"number\">9</span>];</span><br><span class=\"line\">         t.LastedTime = result[<span class=\"number\">10</span>];</span><br><span class=\"line\">         t.TicketDate = result[<span class=\"number\">13</span>];</span><br><span class=\"line\">         t.DwNum = result[<span class=\"number\">33</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">33</span>] : t.DwNum;</span><br><span class=\"line\">         t.TzNum = result[<span class=\"number\">32</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">32</span>] : t.TzNum;</span><br><span class=\"line\">         t.YdNum = result[<span class=\"number\">31</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">31</span>] : t.YdNum;</span><br><span class=\"line\">         t.EdNum = result[<span class=\"number\">30</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">30</span>] : t.EdNum;</span><br><span class=\"line\">         t.YzNum = result[<span class=\"number\">29</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">29</span>] : t.YzNum;</span><br><span class=\"line\">         t.YwNum = result[<span class=\"number\">28</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">28</span>] : t.YwNum;</span><br><span class=\"line\">         t.WzNum = result[<span class=\"number\">26</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">26</span>] : t.WzNum;</span><br><span class=\"line\">         t.RzNum = result[<span class=\"number\">24</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">24</span>] : t.RzNum;</span><br><span class=\"line\">         t.RwNum = result[<span class=\"number\">23</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">23</span>] : t.RwNum;</span><br><span class=\"line\">         t.GrwNum = result[<span class=\"number\">21</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">21</span>] : t.GrwNum;</span><br><span class=\"line\">         AllTicket.Add(t);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     Ticket[] All = <span class=\"keyword\">new</span> Ticket[AllTicket.Count];</span><br><span class=\"line\">     <span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> (<span class=\"keyword\">object</span> t <span class=\"keyword\">in</span> AllTicket)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         All[flag++] = t <span class=\"keyword\">as</span> Ticket;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> All;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/spiderticket.jpg\" alt><br><img src=\"/images/spiderticket2.jpg\" alt><br>项目地址:<a href=\"https://github.com/ZhaoQi99/EasyLife/tree/Course_Design/\" target=\"_blank\" rel=\"noopener\">EasyLife</a></p>\n<h2 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h2><p><a href=\"https://blog.csdn.net/xiahn1a/article/details/42584507\" target=\"_blank\" rel=\"noopener\">C#调用12306API做余票查询</a>(该参考博客中的方法已不可用)</p>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.IO;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Net;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Xml;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Ticket</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">StationNameXml</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> nowpath = Environment.CurrentDirectory;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (Directory.Exists(nowpath + <span class=\"string\">\"/Data\"</span>) == <span class=\"literal\">false</span>)</span><br><span class=\"line\">                Directory.CreateDirectory(nowpath + <span class=\"string\">\"/Data\"</span>);<span class=\"comment\">//创建新路径</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(nowpath + <span class=\"string\">\"/Data/StationName.xml\"</span>) == <span class=\"literal\">true</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            HttpWebRequest request;</span><br><span class=\"line\">            HttpWebResponse response;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> url = <span class=\"string\">@\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">            request.Method = <span class=\"string\">\"GET\"</span>;</span><br><span class=\"line\">            request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">            request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> str = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"UTF-8\"</span>));</span><br><span class=\"line\">                    str = sr.ReadToEnd();</span><br><span class=\"line\">                    sr.Close();</span><br><span class=\"line\">                    response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(e.Message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> pattern = <span class=\"string\">@\"@\\S&#123;2,5&#125;?[|](?&lt;Name&gt;\\S&#123;1,8&#125;?)[|](?&lt;Code&gt;\\S&#123;3,5&#125;?)[|]\"</span>;</span><br><span class=\"line\">            Regex r = <span class=\"keyword\">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class=\"line\"></span><br><span class=\"line\">            XmlDocument xmldoc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">            XmlDeclaration xmldecl;</span><br><span class=\"line\"></span><br><span class=\"line\">            xmldecl = xmldoc.CreateXmlDeclaration(<span class=\"string\">\"1.0\"</span>, <span class=\"string\">\"UTF-8\"</span>, <span class=\"literal\">null</span>);<span class=\"comment\">//加入XML的声明段落</span></span><br><span class=\"line\">            xmldoc.AppendChild(xmldecl);</span><br><span class=\"line\"></span><br><span class=\"line\">            XmlElement root = xmldoc.CreateElement(<span class=\"string\">\"\"</span>, <span class=\"string\">\"Dict\"</span>, <span class=\"string\">\"\"</span>);<span class=\"comment\">//加入一个根元素</span></span><br><span class=\"line\">            xmldoc.AppendChild(root);</span><br><span class=\"line\"></span><br><span class=\"line\">            MatchCollection mc = r.Matches(str);</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (Match m <span class=\"keyword\">in</span> mc)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                GroupCollection <span class=\"keyword\">group</span> = m.Groups;</span><br><span class=\"line\">                XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Pair\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Station\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">                temp.InnerText = <span class=\"keyword\">group</span>[<span class=\"string\">\"Name\"</span>].Value;</span><br><span class=\"line\">                node.AppendChild(temp);</span><br><span class=\"line\"></span><br><span class=\"line\">                XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Code\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">                temp2.InnerText = <span class=\"keyword\">group</span>[<span class=\"string\">\"Code\"</span>].Value;</span><br><span class=\"line\">                node.AppendChild(temp2);</span><br><span class=\"line\"></span><br><span class=\"line\">                root.AppendChild(node);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            xmldoc.Save(nowpath + <span class=\"string\">\"/Data/\"</span> + <span class=\"string\">\"StationName.xml\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">StationCode</span>(<span class=\"params\"><span class=\"keyword\">string</span> StationName</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            XmlDocument doc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">            doc.Load(Environment.CurrentDirectory + <span class=\"string\">\"/Data/StationName.xml\"</span>);</span><br><span class=\"line\">            XmlNodeList data = doc.DocumentElement.ChildNodes;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (XmlNode node <span class=\"keyword\">in</span> data)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                XmlElement xe = (XmlElement)node;</span><br><span class=\"line\">                XmlNodeList xnl0 = xe.ChildNodes;</span><br><span class=\"line\">                <span class=\"keyword\">string</span> s = xnl0.Item(<span class=\"number\">0</span>).InnerText;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (s == StationName)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> xnl0.Item(<span class=\"number\">1</span>).InnerText;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Ticket[] <span class=\"title\">SpiderTicket</span>(<span class=\"params\"><span class=\"keyword\">string</span> date, <span class=\"keyword\">string</span> <span class=\"keyword\">from</span>, <span class=\"keyword\">string</span> to, <span class=\"keyword\">string</span> id</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            HttpWebRequest request;</span><br><span class=\"line\">            HttpWebResponse response;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> url = <span class=\"string\">\"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;\"</span>;</span><br><span class=\"line\">            url = <span class=\"keyword\">string</span>.Format(url, date, <span class=\"keyword\">from</span>, to, id);</span><br><span class=\"line\"></span><br><span class=\"line\">            request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">            request.Method = <span class=\"string\">\"GET\"</span>;</span><br><span class=\"line\">            request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">            request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> str = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"UTF-8\"</span>));</span><br><span class=\"line\">                    str = sr.ReadToEnd();</span><br><span class=\"line\">                    sr.Close();</span><br><span class=\"line\">                    response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(e.Message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; map=<span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt;();<span class=\"comment\">//保存返回的JSON串中的车站代码与车站名之间的映</span></span><br><span class=\"line\">            ArrayList AllTicket = <span class=\"keyword\">new</span> ArrayList();<span class=\"comment\">//所有的车票信息</span></span><br><span class=\"line\"></span><br><span class=\"line\">            JObject jo = (JObject)JsonConvert.DeserializeObject(str);</span><br><span class=\"line\">            JToken record = jo[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"map\"</span>];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (JProperty item <span class=\"keyword\">in</span> record)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                map.Add(item.Name.ToString(), item.Value.ToString());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            record = jo[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"result\"</span>];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> s <span class=\"keyword\">in</span> record)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">string</span>[] result = s.Split(<span class=\"string\">'|'</span>);</span><br><span class=\"line\">                Ticket t = <span class=\"keyword\">new</span> Ticket();</span><br><span class=\"line\">                t.TrainId = result[<span class=\"number\">3</span>];</span><br><span class=\"line\">                t.FromStation = map[result[<span class=\"number\">6</span>]];</span><br><span class=\"line\">                t.ToStation = map[result[<span class=\"number\">7</span>]];</span><br><span class=\"line\">                t.StartTime = result[<span class=\"number\">8</span>];</span><br><span class=\"line\">                t.ArriveTime = result[<span class=\"number\">9</span>];</span><br><span class=\"line\">                t.LastedTime = result[<span class=\"number\">10</span>];</span><br><span class=\"line\">                t.TicketDate = result[<span class=\"number\">13</span>];</span><br><span class=\"line\">                t.DwNum = result[<span class=\"number\">33</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">33</span>] : t.DwNum;</span><br><span class=\"line\">                t.TzNum = result[<span class=\"number\">32</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">32</span>] : t.TzNum;</span><br><span class=\"line\">                t.YdNum = result[<span class=\"number\">31</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">31</span>] : t.YdNum;</span><br><span class=\"line\">                t.EdNum = result[<span class=\"number\">30</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">30</span>] : t.EdNum;</span><br><span class=\"line\">                t.YzNum = result[<span class=\"number\">29</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">29</span>] : t.YzNum;</span><br><span class=\"line\">                t.YwNum = result[<span class=\"number\">28</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">28</span>] : t.YwNum;</span><br><span class=\"line\">                t.WzNum = result[<span class=\"number\">26</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">26</span>] : t.WzNum;</span><br><span class=\"line\">                t.RzNum = result[<span class=\"number\">24</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">24</span>] : t.RzNum;</span><br><span class=\"line\">                t.RwNum = result[<span class=\"number\">23</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">23</span>] : t.RwNum;</span><br><span class=\"line\">                t.GrwNum = result[<span class=\"number\">21</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">21</span>] : t.GrwNum;</span><br><span class=\"line\">                AllTicket.Add(t);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Ticket[] All = <span class=\"keyword\">new</span> Ticket[AllTicket.Count];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">object</span> t <span class=\"keyword\">in</span> AllTicket)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                All[flag++] = t <span class=\"keyword\">as</span> Ticket;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> All;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            StationNameXml();</span><br><span class=\"line\">            <span class=\"keyword\">string</span> <span class=\"keyword\">from</span> = <span class=\"string\">\"上海\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> to = <span class=\"string\">\"北京\"</span>;</span><br><span class=\"line\">            Ticket[] All=<span class=\"keyword\">new</span> Ticket[<span class=\"number\">50</span>];</span><br><span class=\"line\">            All=SpiderTicket(DateTime.Now.ToString(<span class=\"string\">\"yyyy-MM-dd\"</span>), StationCode(<span class=\"keyword\">from</span>), StationCode(to), <span class=\"string\">\"ADULT\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;All.Length;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; map = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt;();</span><br><span class=\"line\">                map = All[i].getMap();</span><br><span class=\"line\">                <span class=\"keyword\">foreach</span> (<span class=\"keyword\">object</span> j <span class=\"keyword\">in</span> map.Keys)</span><br><span class=\"line\">                    Console.Write(j.ToString()+<span class=\"string\">\":\"</span>+map[j.ToString()].ToString()+<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">                Console.WriteLine();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Console.Read();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ol>\n<li>下载用于解析JSON的类库(Newtonsoft.Json.dll)(下载地址:<a href=\"https://archive.codeplex.com/?p=json\" target=\"_blank\" rel=\"noopener\">Newtonsoft.Json.dll</a>)；</li>\n<li>在C#项目中添加对其的引用。</li>\n<li>在程序中导入命名空间:<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Net;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Xml;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><h3 id=\"API地址\"><a href=\"#API地址\" class=\"headerlink\" title=\"API地址\"></a>API地址</h3><p>在浏览器中打开12306主页，点击<strong>余票查询</strong>，并使用浏览器中的开发者工具，进行抓包。这里，我们查询的是2018.06.25的上海至长沙的车票信息。<br><img src=\"/images/trainticket1.jpg\" alt=\"开发者工具抓包\"><br>此时浏览器发送请求的地址为：<br><code>https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=2018-06-25&amp;leftTicketDTO.from_station=SHH&amp;leftTicketDTO.to_station=CSQ&amp;purpose_codes=ADULT</code><br>由此,我们不难分析出API地址为：<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> url=<span class=\"string\">\"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;\"</span>;</span><br><span class=\"line\">url=<span class=\"keyword\">string</span>.Format(url,date,<span class=\"keyword\">from</span>,to,id);</span><br></pre></td></tr></table></figure></p>\n<p>其中，date代表出发日(格式为yyyy-MM-dd),from代表出发站的代码，to代表到达站的代码，id代表车票类型(成人为<code>ADULT</code>,学生为<code>OX00</code>);</p>\n<h3 id=\"车站代码\"><a href=\"#车站代码\" class=\"headerlink\" title=\"车站代码\"></a>车站代码</h3><p>车站对应的代码可在此下载:<a href=\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\" target=\"_blank\" rel=\"noopener\">https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055</a><br>我们可以使用正则表达式从中提取出关键信息，并保存在一个XML文档中，便于以后的使用。<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">StationNameXml</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">string</span> nowpath = Environment.CurrentDirectory;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (Directory.Exists(nowpath+<span class=\"string\">\"/Data\"</span>)==<span class=\"literal\">false</span>)</span><br><span class=\"line\">             Directory.CreateDirectory(nowpath + <span class=\"string\">\"/Data\"</span>);<span class=\"comment\">//创建新路径</span></span><br><span class=\"line\">         <span class=\"keyword\">if</span> (File.Exists(nowpath + <span class=\"string\">\"/Data/StationName.xml\"</span>) == <span class=\"literal\">true</span>)</span><br><span class=\"line\">             <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">HttpWebRequest request;</span><br><span class=\"line\">  \t\tHttpWebResponse response;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">string</span> url=<span class=\"string\">@\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">         request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">         request.Method = <span class=\"string\">\"GET\"</span>;</span><br><span class=\"line\">         request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">         request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">string</span> str = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">         <span class=\"keyword\">try</span></span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">             &#123;</span><br><span class=\"line\">                 StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"UTF-8\"</span>));</span><br><span class=\"line\">                 str = sr.ReadToEnd();</span><br><span class=\"line\">                 sr.Close();</span><br><span class=\"line\">                 response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">             <span class=\"keyword\">else</span></span><br><span class=\"line\">                 <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">catch</span>(Exception e)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">\tConsole.WriteLine(e.Message);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">string</span> pattern = <span class=\"string\">@\"@\\S&#123;2,5&#125;?[|](?&lt;Name&gt;\\S&#123;1,8&#125;?)[|](?&lt;Code&gt;\\S&#123;3,5&#125;?)[|]\"</span>;</span><br><span class=\"line\">         Regex r = <span class=\"keyword\">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class=\"line\"></span><br><span class=\"line\">         XmlDocument xmldoc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">         XmlDeclaration xmldecl;</span><br><span class=\"line\"></span><br><span class=\"line\">         xmldecl = xmldoc.CreateXmlDeclaration(<span class=\"string\">\"1.0\"</span>, <span class=\"string\">\"UTF-8\"</span>, <span class=\"literal\">null</span>);<span class=\"comment\">//加入XML的声明段落</span></span><br><span class=\"line\">         xmldoc.AppendChild(xmldecl);</span><br><span class=\"line\"></span><br><span class=\"line\">         XmlElement root = xmldoc.CreateElement(<span class=\"string\">\"\"</span>, <span class=\"string\">\"Dict\"</span>, <span class=\"string\">\"\"</span>);<span class=\"comment\">//加入一个根元素</span></span><br><span class=\"line\">         xmldoc.AppendChild(root);</span><br><span class=\"line\"></span><br><span class=\"line\">         MatchCollection mc = r.Matches(str);</span><br><span class=\"line\">         <span class=\"keyword\">foreach</span> (Match m <span class=\"keyword\">in</span> mc)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             GroupCollection <span class=\"keyword\">group</span> = m.Groups;</span><br><span class=\"line\">             XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Pair\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">             XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Station\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">             temp.InnerText = <span class=\"keyword\">group</span>[<span class=\"string\">\"Name\"</span>].Value; </span><br><span class=\"line\">             node.AppendChild(temp);</span><br><span class=\"line\"></span><br><span class=\"line\">             XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Code\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">             temp2.InnerText = <span class=\"keyword\">group</span>[<span class=\"string\">\"Code\"</span>].Value;</span><br><span class=\"line\">             node.AppendChild(temp2);</span><br><span class=\"line\"></span><br><span class=\"line\">             root.AppendChild(node);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         xmldoc.Save(nowpath+<span class=\"string\">\"/Data/\"</span>+<span class=\"string\">\"StationName.xml\"</span>);</span><br><span class=\"line\">     &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/images/trainticket2.jpg\" alt=\"车站代码\"><br>依据中文车站名获取对应车站代码的方法为:<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">StationCode</span>(<span class=\"params\"><span class=\"keyword\">string</span> StationName</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    XmlDocument doc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">    doc.Load(Environment.CurrentDirectory + <span class=\"string\">\"/Data/StationName.xml\"</span>);</span><br><span class=\"line\">    XmlNodeList data = doc.DocumentElement.ChildNodes;</span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (XmlNode node <span class=\"keyword\">in</span> data)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        XmlElement xe = (XmlElement)node;</span><br><span class=\"line\">        XmlNodeList xnl0 = xe.ChildNodes;</span><br><span class=\"line\">        <span class=\"keyword\">string</span> s = xnl0.Item(<span class=\"number\">0</span>).InnerText;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s==StationName)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> xnl0.Item(<span class=\"number\">1</span>).InnerText;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据模型\"><a href=\"#数据模型\" class=\"headerlink\" title=\"数据模型\"></a>数据模型</h3><p>为了存储查询结果，我们需要构建一个车票的数据模型，具体如下；<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Ticket</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">       <span class=\"meta\">#<span class=\"meta-keyword\">region</span> 数据模型</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> trainid=<span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//车次</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> fromstation = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//出发站</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> totation = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//到达站</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> ticketdate = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//车票日期</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> starttime = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//发车时间</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> arrivetime = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//到达时间</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> lastedtime = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//历时</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> tzNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//特等座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> ydNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//一等座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> edNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//二等座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> grwNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//高级软卧</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> rwNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//软卧</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> dwNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//动卧</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> ywNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//硬卧</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> rzNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//软座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> yzNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//硬座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> wzNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//无座</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> qtNum = <span class=\"string\">\"--\"</span>;<span class=\"comment\">//其他</span></span><br><span class=\"line\">       <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> identity = <span class=\"keyword\">string</span>.Empty;<span class=\"comment\">//车票类型(学生/成人)</span></span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> TrainId &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> trainid; &#125; <span class=\"keyword\">set</span> &#123; trainid = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> FromStation &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> fromstation; &#125; <span class=\"keyword\">set</span> &#123; fromstation = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> ToStation &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> totation; &#125; <span class=\"keyword\">set</span> &#123; totation = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> TicketDate &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> ticketdate; &#125; <span class=\"keyword\">set</span> &#123; ticketdate = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> StartTime &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> starttime; &#125; <span class=\"keyword\">set</span> &#123; starttime = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> ArriveTime &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> arrivetime; &#125;<span class=\"keyword\">set</span> &#123; arrivetime = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> LastedTime &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> lastedtime; &#125; <span class=\"keyword\">set</span> &#123; lastedtime = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> TzNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> tzNum; &#125; <span class=\"keyword\">set</span> &#123; tzNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> YdNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> ydNum; &#125; <span class=\"keyword\">set</span> &#123; ydNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> EdNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> edNum; &#125; <span class=\"keyword\">set</span> &#123; edNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> GrwNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> grwNum; &#125; <span class=\"keyword\">set</span> &#123; grwNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> RwNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> rwNum; &#125; <span class=\"keyword\">set</span> &#123; rwNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> DwNum &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> dwNum; &#125; <span class=\"keyword\">set</span> &#123; dwNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> YwNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> ywNum; &#125;<span class=\"keyword\">set</span>&#123; ywNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> RzNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> rzNum; &#125;<span class=\"keyword\">set</span>&#123; rzNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> YzNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> yzNum; &#125;<span class=\"keyword\">set</span>&#123; yzNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> WzNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> wzNum; &#125;<span class=\"keyword\">set</span>&#123; wzNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> QtNum &#123;<span class=\"keyword\">get</span>&#123; <span class=\"keyword\">return</span> qtNum; &#125;<span class=\"keyword\">set</span>&#123; qtNum = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Identity &#123; <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> identity; &#125;<span class=\"keyword\">set</span> &#123; identity = <span class=\"keyword\">value</span>; &#125; &#125;</span><br><span class=\"line\">       <span class=\"meta\">#<span class=\"meta-keyword\">endregion</span></span></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Ticket</span>(<span class=\"params\"></span>)</span> &#123; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; <span class=\"title\">getMap</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>       &#123;</span><br><span class=\"line\">           Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; result = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt;();</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"车次\"</span>, trainid);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"出发站\"</span>, FromStation);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"到达站\"</span>, ToStation);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"发车时间\"</span>, StartTime);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"到达时间\"</span>, ArriveTime);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"历时\"</span>, LastedTime);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"特等座\"</span>, TzNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"一等座\"</span>, YdNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"二等座\"</span>, EdNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"高级软卧\"</span>, GrwNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"软卧\"</span>, RwNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"动卧\"</span>, DwNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"硬卧\"</span>, YwNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"软座\"</span>, RzNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"硬座\"</span>, YzNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"无座\"</span>, WzNum);</span><br><span class=\"line\">           result.Add(<span class=\"string\">\"其他\"</span>, QtNum);</span><br><span class=\"line\">           <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"解析JSON\"><a href=\"#解析JSON\" class=\"headerlink\" title=\"解析JSON\"></a>解析JSON</h3><p><img src=\"/images/trainticket3.jpg\" alt=\"JSON格式的字符串\"><br>返回的报文为一个JSON格式的字符串，里面包含有各类车票信息、发车时间以及历时，为了对其进行解析，我们需要下载一个用于解析JSON的类库(下载地址:<a href=\"https://archive.codeplex.com/?p=json\" target=\"_blank\" rel=\"noopener\">Newtonsoft.Json.dll</a>)<br><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Ticket[] <span class=\"title\">SpiderTicket</span>(<span class=\"params\"><span class=\"keyword\">string</span> date, <span class=\"keyword\">string</span> <span class=\"keyword\">from</span>, <span class=\"keyword\">string</span> to, <span class=\"keyword\">string</span> id</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span> &#123;</span><br><span class=\"line\">     HttpWebRequest request;</span><br><span class=\"line\">     HttpWebResponse response;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">string</span> url = <span class=\"string\">\"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;\"</span>;</span><br><span class=\"line\">     url = <span class=\"keyword\">string</span>.Format(url, date, <span class=\"keyword\">from</span>, to, id);</span><br><span class=\"line\"></span><br><span class=\"line\">     request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">     request.Method = <span class=\"string\">\"GET\"</span>;</span><br><span class=\"line\">     request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">     request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"keyword\">string</span> str = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">     <span class=\"keyword\">try</span></span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">         &#123;</span><br><span class=\"line\">             StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"UTF-8\"</span>));</span><br><span class=\"line\">             str = sr.ReadToEnd();</span><br><span class=\"line\">             sr.Close();</span><br><span class=\"line\">             response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         <span class=\"keyword\">else</span></span><br><span class=\"line\">             <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         Console.WriteLine(e.Message);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; map=<span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt;();<span class=\"comment\">//保存返回的JSON串中的车站代码与车站名之间的映</span></span><br><span class=\"line\">     ArrayList AllTicket = <span class=\"keyword\">new</span> ArrayList();<span class=\"comment\">//所有的车票信息</span></span><br><span class=\"line\"></span><br><span class=\"line\">     JObject jo = (JObject)JsonConvert.DeserializeObject(str);</span><br><span class=\"line\">     JToken record = jo[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"map\"</span>];</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> (JProperty item <span class=\"keyword\">in</span> record)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         map.Add(item.Name.ToString(), item.Value.ToString());</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     record = jo[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"result\"</span>];</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> s <span class=\"keyword\">in</span> record)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"keyword\">string</span>[] result = s.Split(<span class=\"string\">'|'</span>);</span><br><span class=\"line\">         Ticket t = <span class=\"keyword\">new</span> Ticket();</span><br><span class=\"line\">         t.TrainId = result[<span class=\"number\">3</span>];</span><br><span class=\"line\">         t.FromStation = map[result[<span class=\"number\">6</span>]];</span><br><span class=\"line\">         t.ToStation = map[result[<span class=\"number\">7</span>]];</span><br><span class=\"line\">         t.StartTime = result[<span class=\"number\">8</span>];</span><br><span class=\"line\">         t.ArriveTime = result[<span class=\"number\">9</span>];</span><br><span class=\"line\">         t.LastedTime = result[<span class=\"number\">10</span>];</span><br><span class=\"line\">         t.TicketDate = result[<span class=\"number\">13</span>];</span><br><span class=\"line\">         t.DwNum = result[<span class=\"number\">33</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">33</span>] : t.DwNum;</span><br><span class=\"line\">         t.TzNum = result[<span class=\"number\">32</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">32</span>] : t.TzNum;</span><br><span class=\"line\">         t.YdNum = result[<span class=\"number\">31</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">31</span>] : t.YdNum;</span><br><span class=\"line\">         t.EdNum = result[<span class=\"number\">30</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">30</span>] : t.EdNum;</span><br><span class=\"line\">         t.YzNum = result[<span class=\"number\">29</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">29</span>] : t.YzNum;</span><br><span class=\"line\">         t.YwNum = result[<span class=\"number\">28</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">28</span>] : t.YwNum;</span><br><span class=\"line\">         t.WzNum = result[<span class=\"number\">26</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">26</span>] : t.WzNum;</span><br><span class=\"line\">         t.RzNum = result[<span class=\"number\">24</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">24</span>] : t.RzNum;</span><br><span class=\"line\">         t.RwNum = result[<span class=\"number\">23</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">23</span>] : t.RwNum;</span><br><span class=\"line\">         t.GrwNum = result[<span class=\"number\">21</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">21</span>] : t.GrwNum;</span><br><span class=\"line\">         AllTicket.Add(t);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     Ticket[] All = <span class=\"keyword\">new</span> Ticket[AllTicket.Count];</span><br><span class=\"line\">     <span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">     <span class=\"keyword\">foreach</span> (<span class=\"keyword\">object</span> t <span class=\"keyword\">in</span> AllTicket)</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         All[flag++] = t <span class=\"keyword\">as</span> Ticket;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> All;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><p><img src=\"/images/spiderticket.jpg\" alt><br><img src=\"/images/spiderticket2.jpg\" alt><br>项目地址:<a href=\"https://github.com/ZhaoQi99/EasyLife/tree/Course_Design/\" target=\"_blank\" rel=\"noopener\">EasyLife</a></p>\n<h2 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客\"></a>参考博客</h2><p><a href=\"https://blog.csdn.net/xiahn1a/article/details/42584507\" target=\"_blank\" rel=\"noopener\">C#调用12306API做余票查询</a>(该参考博客中的方法已不可用)</p>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.IO;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Net;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Xml;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">Ticket</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">StationNameXml</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> nowpath = Environment.CurrentDirectory;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (Directory.Exists(nowpath + <span class=\"string\">\"/Data\"</span>) == <span class=\"literal\">false</span>)</span><br><span class=\"line\">                Directory.CreateDirectory(nowpath + <span class=\"string\">\"/Data\"</span>);<span class=\"comment\">//创建新路径</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(nowpath + <span class=\"string\">\"/Data/StationName.xml\"</span>) == <span class=\"literal\">true</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            HttpWebRequest request;</span><br><span class=\"line\">            HttpWebResponse response;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> url = <span class=\"string\">@\"https://kyfw.12306.cn/otn/resources/js/framework/station_name.js?station_version=1.9055\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">            request.Method = <span class=\"string\">\"GET\"</span>;</span><br><span class=\"line\">            request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">            request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> str = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"UTF-8\"</span>));</span><br><span class=\"line\">                    str = sr.ReadToEnd();</span><br><span class=\"line\">                    sr.Close();</span><br><span class=\"line\">                    response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(e.Message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> pattern = <span class=\"string\">@\"@\\S&#123;2,5&#125;?[|](?&lt;Name&gt;\\S&#123;1,8&#125;?)[|](?&lt;Code&gt;\\S&#123;3,5&#125;?)[|]\"</span>;</span><br><span class=\"line\">            Regex r = <span class=\"keyword\">new</span> Regex(pattern, RegexOptions.ExplicitCapture);</span><br><span class=\"line\"></span><br><span class=\"line\">            XmlDocument xmldoc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">            XmlDeclaration xmldecl;</span><br><span class=\"line\"></span><br><span class=\"line\">            xmldecl = xmldoc.CreateXmlDeclaration(<span class=\"string\">\"1.0\"</span>, <span class=\"string\">\"UTF-8\"</span>, <span class=\"literal\">null</span>);<span class=\"comment\">//加入XML的声明段落</span></span><br><span class=\"line\">            xmldoc.AppendChild(xmldecl);</span><br><span class=\"line\"></span><br><span class=\"line\">            XmlElement root = xmldoc.CreateElement(<span class=\"string\">\"\"</span>, <span class=\"string\">\"Dict\"</span>, <span class=\"string\">\"\"</span>);<span class=\"comment\">//加入一个根元素</span></span><br><span class=\"line\">            xmldoc.AppendChild(root);</span><br><span class=\"line\"></span><br><span class=\"line\">            MatchCollection mc = r.Matches(str);</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (Match m <span class=\"keyword\">in</span> mc)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                GroupCollection <span class=\"keyword\">group</span> = m.Groups;</span><br><span class=\"line\">                XmlNode node = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Pair\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                XmlNode temp = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Station\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">                temp.InnerText = <span class=\"keyword\">group</span>[<span class=\"string\">\"Name\"</span>].Value;</span><br><span class=\"line\">                node.AppendChild(temp);</span><br><span class=\"line\"></span><br><span class=\"line\">                XmlNode temp2 = xmldoc.CreateNode(XmlNodeType.Element, <span class=\"string\">\"Code\"</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">                temp2.InnerText = <span class=\"keyword\">group</span>[<span class=\"string\">\"Code\"</span>].Value;</span><br><span class=\"line\">                node.AppendChild(temp2);</span><br><span class=\"line\"></span><br><span class=\"line\">                root.AppendChild(node);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            xmldoc.Save(nowpath + <span class=\"string\">\"/Data/\"</span> + <span class=\"string\">\"StationName.xml\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">string</span> <span class=\"title\">StationCode</span>(<span class=\"params\"><span class=\"keyword\">string</span> StationName</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            XmlDocument doc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">            doc.Load(Environment.CurrentDirectory + <span class=\"string\">\"/Data/StationName.xml\"</span>);</span><br><span class=\"line\">            XmlNodeList data = doc.DocumentElement.ChildNodes;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (XmlNode node <span class=\"keyword\">in</span> data)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                XmlElement xe = (XmlElement)node;</span><br><span class=\"line\">                XmlNodeList xnl0 = xe.ChildNodes;</span><br><span class=\"line\">                <span class=\"keyword\">string</span> s = xnl0.Item(<span class=\"number\">0</span>).InnerText;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (s == StationName)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> xnl0.Item(<span class=\"number\">1</span>).InnerText;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Ticket[] <span class=\"title\">SpiderTicket</span>(<span class=\"params\"><span class=\"keyword\">string</span> date, <span class=\"keyword\">string</span> <span class=\"keyword\">from</span>, <span class=\"keyword\">string</span> to, <span class=\"keyword\">string</span> id</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            HttpWebRequest request;</span><br><span class=\"line\">            HttpWebResponse response;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> url = <span class=\"string\">\"https://kyfw.12306.cn/otn/leftTicket/query?leftTicketDTO.train_date=&#123;0&#125;&amp;leftTicketDTO.from_station=&#123;1&#125;&amp;leftTicketDTO.to_station=&#123;2&#125;&amp;purpose_codes=&#123;3&#125;\"</span>;</span><br><span class=\"line\">            url = <span class=\"keyword\">string</span>.Format(url, date, <span class=\"keyword\">from</span>, to, id);</span><br><span class=\"line\"></span><br><span class=\"line\">            request = (HttpWebRequest)WebRequest.Create(url);</span><br><span class=\"line\">            request.Method = <span class=\"string\">\"GET\"</span>;</span><br><span class=\"line\">            request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class=\"line\">            request.UserAgent = <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">string</span> str = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                response = (HttpWebResponse)request.GetResponse();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (response.StatusCode == HttpStatusCode.OK)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    StreamReader sr = <span class=\"keyword\">new</span> StreamReader(response.GetResponseStream(), Encoding.GetEncoding(<span class=\"string\">\"UTF-8\"</span>));</span><br><span class=\"line\">                    str = sr.ReadToEnd();</span><br><span class=\"line\">                    sr.Close();</span><br><span class=\"line\">                    response.Close();<span class=\"comment\">//关闭response响应流</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception e)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(e.Message);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; map=<span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt;();<span class=\"comment\">//保存返回的JSON串中的车站代码与车站名之间的映</span></span><br><span class=\"line\">            ArrayList AllTicket = <span class=\"keyword\">new</span> ArrayList();<span class=\"comment\">//所有的车票信息</span></span><br><span class=\"line\"></span><br><span class=\"line\">            JObject jo = (JObject)JsonConvert.DeserializeObject(str);</span><br><span class=\"line\">            JToken record = jo[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"map\"</span>];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (JProperty item <span class=\"keyword\">in</span> record)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                map.Add(item.Name.ToString(), item.Value.ToString());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            record = jo[<span class=\"string\">\"data\"</span>][<span class=\"string\">\"result\"</span>];</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">string</span> s <span class=\"keyword\">in</span> record)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">string</span>[] result = s.Split(<span class=\"string\">'|'</span>);</span><br><span class=\"line\">                Ticket t = <span class=\"keyword\">new</span> Ticket();</span><br><span class=\"line\">                t.TrainId = result[<span class=\"number\">3</span>];</span><br><span class=\"line\">                t.FromStation = map[result[<span class=\"number\">6</span>]];</span><br><span class=\"line\">                t.ToStation = map[result[<span class=\"number\">7</span>]];</span><br><span class=\"line\">                t.StartTime = result[<span class=\"number\">8</span>];</span><br><span class=\"line\">                t.ArriveTime = result[<span class=\"number\">9</span>];</span><br><span class=\"line\">                t.LastedTime = result[<span class=\"number\">10</span>];</span><br><span class=\"line\">                t.TicketDate = result[<span class=\"number\">13</span>];</span><br><span class=\"line\">                t.DwNum = result[<span class=\"number\">33</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">33</span>] : t.DwNum;</span><br><span class=\"line\">                t.TzNum = result[<span class=\"number\">32</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">32</span>] : t.TzNum;</span><br><span class=\"line\">                t.YdNum = result[<span class=\"number\">31</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">31</span>] : t.YdNum;</span><br><span class=\"line\">                t.EdNum = result[<span class=\"number\">30</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">30</span>] : t.EdNum;</span><br><span class=\"line\">                t.YzNum = result[<span class=\"number\">29</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">29</span>] : t.YzNum;</span><br><span class=\"line\">                t.YwNum = result[<span class=\"number\">28</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">28</span>] : t.YwNum;</span><br><span class=\"line\">                t.WzNum = result[<span class=\"number\">26</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">26</span>] : t.WzNum;</span><br><span class=\"line\">                t.RzNum = result[<span class=\"number\">24</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">24</span>] : t.RzNum;</span><br><span class=\"line\">                t.RwNum = result[<span class=\"number\">23</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">23</span>] : t.RwNum;</span><br><span class=\"line\">                t.GrwNum = result[<span class=\"number\">21</span>] != <span class=\"string\">\"\"</span> ? result[<span class=\"number\">21</span>] : t.GrwNum;</span><br><span class=\"line\">                AllTicket.Add(t);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Ticket[] All = <span class=\"keyword\">new</span> Ticket[AllTicket.Count];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">object</span> t <span class=\"keyword\">in</span> AllTicket)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                All[flag++] = t <span class=\"keyword\">as</span> Ticket;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> All;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            StationNameXml();</span><br><span class=\"line\">            <span class=\"keyword\">string</span> <span class=\"keyword\">from</span> = <span class=\"string\">\"上海\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> to = <span class=\"string\">\"北京\"</span>;</span><br><span class=\"line\">            Ticket[] All=<span class=\"keyword\">new</span> Ticket[<span class=\"number\">50</span>];</span><br><span class=\"line\">            All=SpiderTicket(DateTime.Now.ToString(<span class=\"string\">\"yyyy-MM-dd\"</span>), StationCode(<span class=\"keyword\">from</span>), StationCode(to), <span class=\"string\">\"ADULT\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;All.Length;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt; map = <span class=\"keyword\">new</span> Dictionary&lt;<span class=\"keyword\">string</span>, <span class=\"keyword\">string</span>&gt;();</span><br><span class=\"line\">                map = All[i].getMap();</span><br><span class=\"line\">                <span class=\"keyword\">foreach</span> (<span class=\"keyword\">object</span> j <span class=\"keyword\">in</span> map.Keys)</span><br><span class=\"line\">                    Console.Write(j.ToString()+<span class=\"string\">\":\"</span>+map[j.ToString()].ToString()+<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">                Console.WriteLine();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            Console.Read();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/trainticket1.jpg","popularPost_tmp_gaData":{"updated":"Thu Mar 28 2019 18:45:16 GMT+0800 (GMT+08:00)","title":"使用c#中的HttpWebRequest实现12306余票查询","path":"1797370495.html","eyeCatchImage":"/images/trainticket1.jpg","excerpt":null,"date":"2018-06-18T18:41:13.000Z","pv":0,"totalPV":0,"categories":"C#","tags":["C#",".NET"],"internalLinks":[],"keywords":[],"keywordsLength":0}}],"PostAsset":[],"PostCategory":[{"post_id":"cju1bsw7f0005kchitd761nz5","category_id":"cju1bsw7m0009kchivg3ixz97","_id":"cju1bsw80000nkchirxtmi6kh"},{"post_id":"cju1bsw7k0007kchiewbq2fxg","category_id":"cju1bsw7t000gkchiq610g787","_id":"cju1bsw8a000tkchitqic1zxl"},{"post_id":"cju1bsw7p000bkchit9dzrbyc","category_id":"cju1bsw81000pkchip1l11jv1","_id":"cju1bsw8f0011kchisomp37ln"},{"post_id":"cju1bsw7r000dkchihornbefo","category_id":"cju1bsw81000pkchip1l11jv1","_id":"cju1bsw8j0015kchibrrpmgb5"},{"post_id":"cju1bsw7s000fkchi8jhve0a2","category_id":"cju1bsw8f0010kchi8lvk8yw0","_id":"cju1bsw8n001ckchijrvdsrre"},{"post_id":"cju1bsw8h0014kchi2o7s84gr","category_id":"cju1bsw81000pkchip1l11jv1","_id":"cju1bsw8p001gkchi2b2cflyn"},{"post_id":"cju1bsw7x000kkchi4pgh6xw0","category_id":"cju1bsw8f0010kchi8lvk8yw0","_id":"cju1bsw8r001ikchigh0kmvcx"},{"post_id":"cju1bsw7z000mkchinny0fwu3","category_id":"cju1bsw8n001bkchi1ea34kxn","_id":"cju1bsw8w001qkchipvisdxq7"},{"post_id":"cju1bsw82000rkchif4yspxig","category_id":"cju1bsw8s001kkchifnpsm950","_id":"cju1bsw8z001vkchin3maowds"},{"post_id":"cju1bsw88000skchir9y82g4h","category_id":"cju1bsw8w001rkchix9bu38tw","_id":"cju1bsw940021kchidc4tcy1z"},{"post_id":"cju1bsw8c000wkchiakv529a2","category_id":"cju1bsw8z001wkchi8q9d73lh","_id":"cju1bsw960026kchi32hhm3u4"},{"post_id":"cju1bsw8d000ykchijdqee6dq","category_id":"cju1bsw8z001wkchi8q9d73lh","_id":"cju1bsw970029kchiv45yya9y"},{"post_id":"cju1bsw8g0013kchibkeb2fod","category_id":"cju1bsw950025kchic1odk4cd","_id":"cju1bsw9a002ekchir1gsg57i"},{"post_id":"cju1bsw8j0017kchiwzbnc2en","category_id":"cju1bsw8z001wkchi8q9d73lh","_id":"cju1bsw9b002hkchin1wv19qh"},{"post_id":"cju1bsw8m001akchifnla2p2t","category_id":"cju1bsw8z001wkchi8q9d73lh","_id":"cju1bsw9d002lkchix5dix6hi"},{"post_id":"cju1bsw8o001ekchi72gzb8ml","category_id":"cju1bsw950025kchic1odk4cd","_id":"cju1bsw9f002pkchiftpf697t"},{"post_id":"cju1bsw8q001hkchi8k8k8wey","category_id":"cju1bsw950025kchic1odk4cd","_id":"cju1bsw9g002tkchiut02g37s"},{"post_id":"cju1bsw8r001jkchiasl3l9f7","category_id":"cju1bsw950025kchic1odk4cd","_id":"cju1bsw9i002ykchipc4m0mgh"},{"post_id":"cju1bsw8t001nkchij3ebjwpp","category_id":"cju1bsw950025kchic1odk4cd","_id":"cju1bsw9j0031kchidh92ydz2"},{"post_id":"cju1bsw8v001pkchiytrtv8bk","category_id":"cju1bsw9i002xkchiwx3hchwy","_id":"cju1bsw9l0036kchi07ockeqh"},{"post_id":"cju1bsw8x001tkchigsv20k59","category_id":"cju1bsw9i002xkchiwx3hchwy","_id":"cju1bsw9n003akchiqkzg29bo"},{"post_id":"cju1bsw8y001ukchiqfu4113s","category_id":"cju1bsw9i002xkchiwx3hchwy","_id":"cju1bsw9p003dkchiywgznprf"},{"post_id":"cju1bsw90001ykchia8pv6i5l","category_id":"cju1bsw950025kchic1odk4cd","_id":"cju1bsw9p003fkchiznj8lal3"},{"post_id":"cju1bswgn0043kchietsdczh0","category_id":"cju1bswgp0044kchiiibd0yy6","_id":"cju1bswgs0047kchita0vh1em"},{"post_id":"cju1bswiw004akchixamog769","category_id":"cju1bsw81000pkchip1l11jv1","_id":"cju1bswj0004fkchi8e5gvabx"}],"PostTag":[{"post_id":"cju1bsw7f0005kchitd761nz5","tag_id":"cju1bsw7o000akchiazsways2","_id":"cju1bsw7w000jkchi8i0omwcp"},{"post_id":"cju1bsw7k0007kchiewbq2fxg","tag_id":"cju1bsw7u000hkchiy53j9db9","_id":"cju1bsw8d000xkchis4eol1ip"},{"post_id":"cju1bsw7k0007kchiewbq2fxg","tag_id":"cju1bsw82000qkchij2d0s9f6","_id":"cju1bsw8e000zkchinwlot3ji"},{"post_id":"cju1bsw7p000bkchit9dzrbyc","tag_id":"cju1bsw8a000vkchitzmem52d","_id":"cju1bsw8l0019kchiuu4fi9k1"},{"post_id":"cju1bsw7p000bkchit9dzrbyc","tag_id":"cju1bsw8f0012kchiwnac1ceu","_id":"cju1bsw8n001dkchi9kpy993v"},{"post_id":"cju1bsw7r000dkchihornbefo","tag_id":"cju1bsw8a000vkchitzmem52d","_id":"cju1bsw8t001mkchil63xmuku"},{"post_id":"cju1bsw7r000dkchihornbefo","tag_id":"cju1bsw8f0012kchiwnac1ceu","_id":"cju1bsw8v001okchiw4nytc8x"},{"post_id":"cju1bsw7s000fkchi8jhve0a2","tag_id":"cju1bsw8t001lkchidtm9itlh","_id":"cju1bsw91001zkchi3llpovd1"},{"post_id":"cju1bsw7s000fkchi8jhve0a2","tag_id":"cju1bsw8w001skchifr1zo6k9","_id":"cju1bsw930020kchi9u1jf70a"},{"post_id":"cju1bsw7x000kkchi4pgh6xw0","tag_id":"cju1bsw8t001lkchidtm9itlh","_id":"cju1bsw970027kchigiqdu5gg"},{"post_id":"cju1bsw7x000kkchi4pgh6xw0","tag_id":"cju1bsw8w001skchifr1zo6k9","_id":"cju1bsw970028kchiz750c8vs"},{"post_id":"cju1bsw7z000mkchinny0fwu3","tag_id":"cju1bsw950024kchi9kek51pa","_id":"cju1bsw99002ckchi0q4un1eo"},{"post_id":"cju1bsw82000rkchif4yspxig","tag_id":"cju1bsw98002akchid7eequox","_id":"cju1bsw9c002jkchiuqtdpgln"},{"post_id":"cju1bsw82000rkchif4yspxig","tag_id":"cju1bsw9a002fkchii9zmg1hw","_id":"cju1bsw9d002mkchi3hbg4x6l"},{"post_id":"cju1bsw88000skchir9y82g4h","tag_id":"cju1bsw9c002ikchi2mwfa7ls","_id":"cju1bsw9g002rkchi2l1d7hrm"},{"post_id":"cju1bsw88000skchir9y82g4h","tag_id":"cju1bsw9d002nkchigjm7t01d","_id":"cju1bsw9h002ukchi2a4oz4kk"},{"post_id":"cju1bsw8c000wkchiakv529a2","tag_id":"cju1bsw9c002ikchi2mwfa7ls","_id":"cju1bsw9i002wkchiefrqint6"},{"post_id":"cju1bsw8d000ykchijdqee6dq","tag_id":"cju1bsw9c002ikchi2mwfa7ls","_id":"cju1bsw9j0030kchi462xnp9q"},{"post_id":"cju1bsw8g0013kchibkeb2fod","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bsw9l0034kchisws3xboe"},{"post_id":"cju1bsw8h0014kchi2o7s84gr","tag_id":"cju1bsw8a000vkchitzmem52d","_id":"cju1bsw9m0038kchiav221607"},{"post_id":"cju1bsw8h0014kchi2o7s84gr","tag_id":"cju1bsw9k0033kchi51b8jvww","_id":"cju1bsw9o003bkchic9ixezl4"},{"post_id":"cju1bsw8j0017kchiwzbnc2en","tag_id":"cju1bsw9c002ikchi2mwfa7ls","_id":"cju1bsw9r003ikchiicjbkyd5"},{"post_id":"cju1bsw8j0017kchiwzbnc2en","tag_id":"cju1bsw9k0033kchi51b8jvww","_id":"cju1bsw9r003jkchizvrrhro4"},{"post_id":"cju1bsw8j0017kchiwzbnc2en","tag_id":"cju1bsw9p003ekchitu86afmf","_id":"cju1bsw9s003lkchipf91n5z1"},{"post_id":"cju1bsw8j0017kchiwzbnc2en","tag_id":"cju1bsw9q003gkchijflky7fe","_id":"cju1bsw9t003mkchi2y274xjs"},{"post_id":"cju1bsw8m001akchifnla2p2t","tag_id":"cju1bsw9c002ikchi2mwfa7ls","_id":"cju1bsw9v003okchiaog25ite"},{"post_id":"cju1bsw8o001ekchi72gzb8ml","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bsw9v003pkchi9vu55q7s"},{"post_id":"cju1bsw8q001hkchi8k8k8wey","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bsw9w003rkchivho585p8"},{"post_id":"cju1bsw8r001jkchiasl3l9f7","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bsw9x003tkchir7g7j6t4"},{"post_id":"cju1bsw8t001nkchij3ebjwpp","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bsw9y003vkchi1geekma4"},{"post_id":"cju1bsw8v001pkchiytrtv8bk","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bsw9z003xkchimrgtm005"},{"post_id":"cju1bsw8x001tkchigsv20k59","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bswa0003zkchievodc6n9"},{"post_id":"cju1bsw8y001ukchiqfu4113s","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bswa10041kchi4vg6pti6"},{"post_id":"cju1bsw90001ykchia8pv6i5l","tag_id":"cju1bsw9i002zkchioxhobixv","_id":"cju1bswa10042kchijc69ie93"},{"post_id":"cju1bswgn0043kchietsdczh0","tag_id":"cju1bswgq0045kchi1bc3do65","_id":"cju1bswgs0048kchinz21hvtx"},{"post_id":"cju1bswgn0043kchietsdczh0","tag_id":"cju1bswgr0046kchi42hkouot","_id":"cju1bswgt0049kchi058kq84h"},{"post_id":"cju1bswiw004akchixamog769","tag_id":"cju1bsw8a000vkchitzmem52d","_id":"cju1bswiz004dkchic8shynev"},{"post_id":"cju1bswiw004akchixamog769","tag_id":"cju1bsw8f0012kchiwnac1ceu","_id":"cju1bswj0004ekchiojqrxdk7"}],"Tag":[{"name":"数据结构","_id":"cju1bsw7o000akchiazsways2"},{"name":"百度之星","_id":"cju1bsw7u000hkchiy53j9db9"},{"name":"完全背包","_id":"cju1bsw82000qkchij2d0s9f6"},{"name":"C#","_id":"cju1bsw8a000vkchitzmem52d"},{"name":".NET","_id":"cju1bsw8f0012kchiwnac1ceu"},{"name":"Hexo","_id":"cju1bsw8t001lkchidtm9itlh"},{"name":"Github","_id":"cju1bsw8w001skchifr1zo6k9"},{"name":"CCCC天梯赛","_id":"cju1bsw950024kchi9kek51pa"},{"name":"Ubuntu","_id":"cju1bsw98002akchid7eequox"},{"name":"Linux","_id":"cju1bsw9a002fkchii9zmg1hw"},{"name":"Python","_id":"cju1bsw9c002ikchi2mwfa7ls"},{"name":"lambda","_id":"cju1bsw9d002nkchigjm7t01d"},{"name":"Java","_id":"cju1bsw9i002zkchioxhobixv"},{"name":"爬虫","_id":"cju1bsw9k0033kchi51b8jvww"},{"name":"Twilio","_id":"cju1bsw9p003ekchitu86afmf"},{"name":"正则表达式","_id":"cju1bsw9q003gkchijflky7fe"},{"name":"DFS","_id":"cju1bswgq0045kchi1bc3do65"},{"name":"操作系统","_id":"cju1bswgr0046kchi42hkouot"}]}}